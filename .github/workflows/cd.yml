on:
  workflow_dispatch:
    inputs:
      version:
        required: true

jobs:
  qa1:
    uses: ./.github/workflows/ci.yml
  qa2:
    uses: ./.github/workflows/ci.installer.yml
  qa3:
    uses: ./.github/workflows/ci.action.yml

  put:
    permissions:
      contents: write
      deployments: write
    needs: [qa1, qa2, qa3]
    runs-on: ubuntu-latest
    steps:
      - name: Create Deployment
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          env: aws

      - uses: actions/checkout@v3

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - run:
          aws s3 cp
            ./installer.sh s3://www.tea.xyz/pour.sh
            --metadata-directive REPLACE
            --cache-control no-cache,must-revalidate
      - run:
          aws cloudfront create-invalidation
            --distribution-id ${{ secrets.AWS_CF_DISTRIBUTION_ID }}
            --paths / /pour.sh

      - run: |
          git tag v${{ github.event.inputs.version }}
          git push origin v${{ github.event.inputs.version }}

      - uses: softprops/action-gh-release@v1
        with:
          files: ./installer.sh
          tag_name: v${{ github.event.inputs.version }}
          fail_on_unmatched_files: true

      - uses: fischerscode/tagger@v0
        with:
          prefix: v
          tag: v${{ github.event.inputs.version }}

      - name: Seal Deployment
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          env: aws
          step: finish
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
