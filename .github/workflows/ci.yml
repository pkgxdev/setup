on:
  pull_request:
    paths:
      - action.yml
      - install.sh
      - .github/workflows/ci.yml
      - action.js
  workflow_call:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  transitory:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - macos-latest
        - ubuntu-latest
        VERBOSE:
        - 1
        - ~
    steps:
      - uses: actions/checkout@v3
      - run: echo foo > foo
      - run: ./install.sh cat ./foo
        env:
          VERBOSE: ${{ matrix.VERBOSE }}
          YES: 1
  direct:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - macos-latest
        - ubuntu-latest
        VERBOSE:
        - 1
        - ~
    steps:
      - uses: actions/checkout@v3
      - run: ./install.sh
        env:
          VERBOSE: ${{ matrix.VERBOSE }}
          YES: 1
      - run: tea --env --dump
      - run: tea test
      - run: which tea
      - run: find "$(tea --silent --prefix)"/tea.xyz
      - run: find /opt/tea.xyz -name v0.? -o -name v0.?? -mindepth 1 -maxdepth 1 -print0 | xargs -0 test -L
      - run: test -L "$(tea --silent --prefix)"/tea.xyz/v0

  gha:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
        prefix:
          - ~
          - /opt
        container:
          - ~
        include:
        - os: ubuntu-latest
          container: debian:buster-slim
          srcroot: .
        - os: ubuntu-latest
          container: debian:buster-slim
          srcroot: ~
    container: ${{ matrix.container }}
    steps:
      - uses: actions/checkout@v3

      # required for somethings
      - run: |
          apt-get update
          apt-get --yes install libc-dev libstdc++-8-dev libgcc-8-dev
        if: ${{ matrix.container != '' }}

      - uses: ./
        id: tea
        with:
          prefix: ${{ matrix.prefix }}
          target: test
          srcroot: ${{ matrix.srcroot || github.workspace }}

      - run: test -n "$VERSION"
      - run: test -n "${{ steps.tea.outputs.version }}"
      - run: test v$VERSION = v${{ steps.tea.outputs.version }}
      - run: tea --env --dump
      - run: which tea

  multiple-apply:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./
      - run: tea --version
      - uses: ./
      - run: tea --version

  # tests that we don’t require a “srcroot”
  emptier:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: sudo rm -rf .git README.md
      - uses: ./

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ludeeus/action-shellcheck@1.1.0
        with:
          severity: warning
        env:
          SHELLCHECK_OPTS: --shell dash

  check-external-gum:
    runs-on: ubuntu-latest
    steps:
      - uses: Homebrew/actions/setup-homebrew@master
      - run: brew install gum
      - uses: actions/checkout@v3
      - uses: ./

  specific-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        with:
          version: 0.13.8
      - run:
          test "$(tea --version)" = "tea 0.13.8"

  sudo-not-required:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - run: sudo apt-get remove sudo
        - run: ./install.sh

  sudo-required:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - run: sudo chmod go-w /usr/local/bin
        # ^^ we run as `runner` but this dir has 999 perms
        - run: ./install.sh

  no-usr-local:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - run: sudo rm -rf /usr/local # this is fine, right?
        - run: sudo chmod 777 /usr    # and this
        - run: ./install.sh

  installs-if-gitea-found:
    runs-on: ubuntu-latest
    steps:
      - name: install gitea
        run: |
          sudo curl -sL -o /etc/apt/trusted.gpg.d/morph027-gitea.asc https://packaging.gitlab.io/gitea/gpg.key
          echo "deb https://packaging.gitlab.io/gitea gitea main" | sudo tee /etc/apt/sources.list.d/morph027-gitea.list
          sudo apt-get update
          sudo apt-get install gitea morph027-keyring
          sudo mv /usr/bin/gitea /usr/bin/tea
        # ^^ lol actually pretty much the only time `gitea` installs as `tea` is via `brew`
      - name: test gitea is there
        run: |
          dpkg -L gitea
          which tea
          tea --help
      - uses: actions/checkout@v3
      - run: ./install.sh
      - run: test $(~/.tea/tea.xyz/v0/bin/tea --prefix) = $HOME/.tea
