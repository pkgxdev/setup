/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 5241:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.issue = exports.issueCommand = void 0;
const os = __importStar(__nccwpck_require__(2037));
const utils_1 = __nccwpck_require__(5278);
/**
 * Commands
 *
 * Command Format:
 *   ::name key=value,key=value::message
 *
 * Examples:
 *   ::warning::This is the message
 *   ::set-env name=MY_VAR::some value
 */
function issueCommand(command, properties, message) {
    const cmd = new Command(command, properties, message);
    process.stdout.write(cmd.toString() + os.EOL);
}
exports.issueCommand = issueCommand;
function issue(name, message = '') {
    issueCommand(name, {}, message);
}
exports.issue = issue;
const CMD_STRING = '::';
class Command {
    constructor(command, properties, message) {
        if (!command) {
            command = 'missing.command';
        }
        this.command = command;
        this.properties = properties;
        this.message = message;
    }
    toString() {
        let cmdStr = CMD_STRING + this.command;
        if (this.properties && Object.keys(this.properties).length > 0) {
            cmdStr += ' ';
            let first = true;
            for (const key in this.properties) {
                if (this.properties.hasOwnProperty(key)) {
                    const val = this.properties[key];
                    if (val) {
                        if (first) {
                            first = false;
                        }
                        else {
                            cmdStr += ',';
                        }
                        cmdStr += `${key}=${escapeProperty(val)}`;
                    }
                }
            }
        }
        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;
        return cmdStr;
    }
}
function escapeData(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A');
}
function escapeProperty(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A')
        .replace(/:/g, '%3A')
        .replace(/,/g, '%2C');
}
//# sourceMappingURL=command.js.map

/***/ }),

/***/ 2186:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getIDToken = exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;
const command_1 = __nccwpck_require__(5241);
const file_command_1 = __nccwpck_require__(185);
const utils_1 = __nccwpck_require__(5278);
const os = __importStar(__nccwpck_require__(2037));
const path = __importStar(__nccwpck_require__(1017));
const oidc_utils_1 = __nccwpck_require__(8041);
/**
 * The code to exit an action
 */
var ExitCode;
(function (ExitCode) {
    /**
     * A code indicating that the action was successful
     */
    ExitCode[ExitCode["Success"] = 0] = "Success";
    /**
     * A code indicating that the action was a failure
     */
    ExitCode[ExitCode["Failure"] = 1] = "Failure";
})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));
//-----------------------------------------------------------------------
// Variables
//-----------------------------------------------------------------------
/**
 * Sets env variable for this action and future actions in the job
 * @param name the name of the variable to set
 * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function exportVariable(name, val) {
    const convertedVal = utils_1.toCommandValue(val);
    process.env[name] = convertedVal;
    const filePath = process.env['GITHUB_ENV'] || '';
    if (filePath) {
        return file_command_1.issueFileCommand('ENV', file_command_1.prepareKeyValueMessage(name, val));
    }
    command_1.issueCommand('set-env', { name }, convertedVal);
}
exports.exportVariable = exportVariable;
/**
 * Registers a secret which will get masked from logs
 * @param secret value of the secret
 */
function setSecret(secret) {
    command_1.issueCommand('add-mask', {}, secret);
}
exports.setSecret = setSecret;
/**
 * Prepends inputPath to the PATH (for this action and future actions)
 * @param inputPath
 */
function addPath(inputPath) {
    const filePath = process.env['GITHUB_PATH'] || '';
    if (filePath) {
        file_command_1.issueFileCommand('PATH', inputPath);
    }
    else {
        command_1.issueCommand('add-path', {}, inputPath);
    }
    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;
}
exports.addPath = addPath;
/**
 * Gets the value of an input.
 * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.
 * Returns an empty string if the value is not defined.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string
 */
function getInput(name, options) {
    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';
    if (options && options.required && !val) {
        throw new Error(`Input required and not supplied: ${name}`);
    }
    if (options && options.trimWhitespace === false) {
        return val;
    }
    return val.trim();
}
exports.getInput = getInput;
/**
 * Gets the values of an multiline input.  Each value is also trimmed.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string[]
 *
 */
function getMultilineInput(name, options) {
    const inputs = getInput(name, options)
        .split('\n')
        .filter(x => x !== '');
    if (options && options.trimWhitespace === false) {
        return inputs;
    }
    return inputs.map(input => input.trim());
}
exports.getMultilineInput = getMultilineInput;
/**
 * Gets the input value of the boolean type in the YAML 1.2 "core schema" specification.
 * Support boolean input list: `true | True | TRUE | false | False | FALSE` .
 * The return value is also in boolean type.
 * ref: https://yaml.org/spec/1.2/spec.html#id2804923
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   boolean
 */
function getBooleanInput(name, options) {
    const trueValue = ['true', 'True', 'TRUE'];
    const falseValue = ['false', 'False', 'FALSE'];
    const val = getInput(name, options);
    if (trueValue.includes(val))
        return true;
    if (falseValue.includes(val))
        return false;
    throw new TypeError(`Input does not meet YAML 1.2 "Core Schema" specification: ${name}\n` +
        `Support boolean input list: \`true | True | TRUE | false | False | FALSE\``);
}
exports.getBooleanInput = getBooleanInput;
/**
 * Sets the value of an output.
 *
 * @param     name     name of the output to set
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function setOutput(name, value) {
    const filePath = process.env['GITHUB_OUTPUT'] || '';
    if (filePath) {
        return file_command_1.issueFileCommand('OUTPUT', file_command_1.prepareKeyValueMessage(name, value));
    }
    process.stdout.write(os.EOL);
    command_1.issueCommand('set-output', { name }, utils_1.toCommandValue(value));
}
exports.setOutput = setOutput;
/**
 * Enables or disables the echoing of commands into stdout for the rest of the step.
 * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.
 *
 */
function setCommandEcho(enabled) {
    command_1.issue('echo', enabled ? 'on' : 'off');
}
exports.setCommandEcho = setCommandEcho;
//-----------------------------------------------------------------------
// Results
//-----------------------------------------------------------------------
/**
 * Sets the action status to failed.
 * When the action exits it will be with an exit code of 1
 * @param message add error issue message
 */
function setFailed(message) {
    process.exitCode = ExitCode.Failure;
    error(message);
}
exports.setFailed = setFailed;
//-----------------------------------------------------------------------
// Logging Commands
//-----------------------------------------------------------------------
/**
 * Gets whether Actions Step Debug is on or not
 */
function isDebug() {
    return process.env['RUNNER_DEBUG'] === '1';
}
exports.isDebug = isDebug;
/**
 * Writes debug message to user log
 * @param message debug message
 */
function debug(message) {
    command_1.issueCommand('debug', {}, message);
}
exports.debug = debug;
/**
 * Adds an error issue
 * @param message error issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function error(message, properties = {}) {
    command_1.issueCommand('error', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.error = error;
/**
 * Adds a warning issue
 * @param message warning issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function warning(message, properties = {}) {
    command_1.issueCommand('warning', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.warning = warning;
/**
 * Adds a notice issue
 * @param message notice issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function notice(message, properties = {}) {
    command_1.issueCommand('notice', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.notice = notice;
/**
 * Writes info to log with console.log.
 * @param message info message
 */
function info(message) {
    process.stdout.write(message + os.EOL);
}
exports.info = info;
/**
 * Begin an output group.
 *
 * Output until the next `groupEnd` will be foldable in this group
 *
 * @param name The name of the output group
 */
function startGroup(name) {
    command_1.issue('group', name);
}
exports.startGroup = startGroup;
/**
 * End an output group.
 */
function endGroup() {
    command_1.issue('endgroup');
}
exports.endGroup = endGroup;
/**
 * Wrap an asynchronous function call in a group.
 *
 * Returns the same type as the function itself.
 *
 * @param name The name of the group
 * @param fn The function to wrap in the group
 */
function group(name, fn) {
    return __awaiter(this, void 0, void 0, function* () {
        startGroup(name);
        let result;
        try {
            result = yield fn();
        }
        finally {
            endGroup();
        }
        return result;
    });
}
exports.group = group;
//-----------------------------------------------------------------------
// Wrapper action state
//-----------------------------------------------------------------------
/**
 * Saves state for current action, the state can only be retrieved by this action's post job execution.
 *
 * @param     name     name of the state to store
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function saveState(name, value) {
    const filePath = process.env['GITHUB_STATE'] || '';
    if (filePath) {
        return file_command_1.issueFileCommand('STATE', file_command_1.prepareKeyValueMessage(name, value));
    }
    command_1.issueCommand('save-state', { name }, utils_1.toCommandValue(value));
}
exports.saveState = saveState;
/**
 * Gets the value of an state set by this action's main execution.
 *
 * @param     name     name of the state to get
 * @returns   string
 */
function getState(name) {
    return process.env[`STATE_${name}`] || '';
}
exports.getState = getState;
function getIDToken(aud) {
    return __awaiter(this, void 0, void 0, function* () {
        return yield oidc_utils_1.OidcClient.getIDToken(aud);
    });
}
exports.getIDToken = getIDToken;
/**
 * Summary exports
 */
var summary_1 = __nccwpck_require__(1327);
Object.defineProperty(exports, "summary", ({ enumerable: true, get: function () { return summary_1.summary; } }));
/**
 * @deprecated use core.summary
 */
var summary_2 = __nccwpck_require__(1327);
Object.defineProperty(exports, "markdownSummary", ({ enumerable: true, get: function () { return summary_2.markdownSummary; } }));
/**
 * Path exports
 */
var path_utils_1 = __nccwpck_require__(2981);
Object.defineProperty(exports, "toPosixPath", ({ enumerable: true, get: function () { return path_utils_1.toPosixPath; } }));
Object.defineProperty(exports, "toWin32Path", ({ enumerable: true, get: function () { return path_utils_1.toWin32Path; } }));
Object.defineProperty(exports, "toPlatformPath", ({ enumerable: true, get: function () { return path_utils_1.toPlatformPath; } }));
//# sourceMappingURL=core.js.map

/***/ }),

/***/ 185:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

// For internal use, subject to change.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.prepareKeyValueMessage = exports.issueFileCommand = void 0;
// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
const fs = __importStar(__nccwpck_require__(7147));
const os = __importStar(__nccwpck_require__(2037));
const uuid_1 = __nccwpck_require__(5840);
const utils_1 = __nccwpck_require__(5278);
function issueFileCommand(command, message) {
    const filePath = process.env[`GITHUB_${command}`];
    if (!filePath) {
        throw new Error(`Unable to find environment variable for file command ${command}`);
    }
    if (!fs.existsSync(filePath)) {
        throw new Error(`Missing file at path: ${filePath}`);
    }
    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {
        encoding: 'utf8'
    });
}
exports.issueFileCommand = issueFileCommand;
function prepareKeyValueMessage(key, value) {
    const delimiter = `ghadelimiter_${uuid_1.v4()}`;
    const convertedValue = utils_1.toCommandValue(value);
    // These should realistically never happen, but just in case someone finds a
    // way to exploit uuid generation let's not allow keys or values that contain
    // the delimiter.
    if (key.includes(delimiter)) {
        throw new Error(`Unexpected input: name should not contain the delimiter "${delimiter}"`);
    }
    if (convertedValue.includes(delimiter)) {
        throw new Error(`Unexpected input: value should not contain the delimiter "${delimiter}"`);
    }
    return `${key}<<${delimiter}${os.EOL}${convertedValue}${os.EOL}${delimiter}`;
}
exports.prepareKeyValueMessage = prepareKeyValueMessage;
//# sourceMappingURL=file-command.js.map

/***/ }),

/***/ 8041:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OidcClient = void 0;
const http_client_1 = __nccwpck_require__(6255);
const auth_1 = __nccwpck_require__(5526);
const core_1 = __nccwpck_require__(2186);
class OidcClient {
    static createHttpClient(allowRetry = true, maxRetry = 10) {
        const requestOptions = {
            allowRetries: allowRetry,
            maxRetries: maxRetry
        };
        return new http_client_1.HttpClient('actions/oidc-client', [new auth_1.BearerCredentialHandler(OidcClient.getRequestToken())], requestOptions);
    }
    static getRequestToken() {
        const token = process.env['ACTIONS_ID_TOKEN_REQUEST_TOKEN'];
        if (!token) {
            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable');
        }
        return token;
    }
    static getIDTokenUrl() {
        const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL'];
        if (!runtimeUrl) {
            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable');
        }
        return runtimeUrl;
    }
    static getCall(id_token_url) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const httpclient = OidcClient.createHttpClient();
            const res = yield httpclient
                .getJson(id_token_url)
                .catch(error => {
                throw new Error(`Failed to get ID Token. \n 
        Error Code : ${error.statusCode}\n 
        Error Message: ${error.message}`);
            });
            const id_token = (_a = res.result) === null || _a === void 0 ? void 0 : _a.value;
            if (!id_token) {
                throw new Error('Response json body do not have ID Token field');
            }
            return id_token;
        });
    }
    static getIDToken(audience) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                // New ID Token is requested from action service
                let id_token_url = OidcClient.getIDTokenUrl();
                if (audience) {
                    const encodedAudience = encodeURIComponent(audience);
                    id_token_url = `${id_token_url}&audience=${encodedAudience}`;
                }
                core_1.debug(`ID token url is ${id_token_url}`);
                const id_token = yield OidcClient.getCall(id_token_url);
                core_1.setSecret(id_token);
                return id_token;
            }
            catch (error) {
                throw new Error(`Error message: ${error.message}`);
            }
        });
    }
}
exports.OidcClient = OidcClient;
//# sourceMappingURL=oidc-utils.js.map

/***/ }),

/***/ 2981:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toPlatformPath = exports.toWin32Path = exports.toPosixPath = void 0;
const path = __importStar(__nccwpck_require__(1017));
/**
 * toPosixPath converts the given path to the posix form. On Windows, \\ will be
 * replaced with /.
 *
 * @param pth. Path to transform.
 * @return string Posix path.
 */
function toPosixPath(pth) {
    return pth.replace(/[\\]/g, '/');
}
exports.toPosixPath = toPosixPath;
/**
 * toWin32Path converts the given path to the win32 form. On Linux, / will be
 * replaced with \\.
 *
 * @param pth. Path to transform.
 * @return string Win32 path.
 */
function toWin32Path(pth) {
    return pth.replace(/[/]/g, '\\');
}
exports.toWin32Path = toWin32Path;
/**
 * toPlatformPath converts the given path to a platform-specific path. It does
 * this by replacing instances of / and \ with the platform-specific path
 * separator.
 *
 * @param pth The path to platformize.
 * @return string The platform-specific path.
 */
function toPlatformPath(pth) {
    return pth.replace(/[/\\]/g, path.sep);
}
exports.toPlatformPath = toPlatformPath;
//# sourceMappingURL=path-utils.js.map

/***/ }),

/***/ 1327:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.summary = exports.markdownSummary = exports.SUMMARY_DOCS_URL = exports.SUMMARY_ENV_VAR = void 0;
const os_1 = __nccwpck_require__(2037);
const fs_1 = __nccwpck_require__(7147);
const { access, appendFile, writeFile } = fs_1.promises;
exports.SUMMARY_ENV_VAR = 'GITHUB_STEP_SUMMARY';
exports.SUMMARY_DOCS_URL = 'https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary';
class Summary {
    constructor() {
        this._buffer = '';
    }
    /**
     * Finds the summary file path from the environment, rejects if env var is not found or file does not exist
     * Also checks r/w permissions.
     *
     * @returns step summary file path
     */
    filePath() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this._filePath) {
                return this._filePath;
            }
            const pathFromEnv = process.env[exports.SUMMARY_ENV_VAR];
            if (!pathFromEnv) {
                throw new Error(`Unable to find environment variable for $${exports.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`);
            }
            try {
                yield access(pathFromEnv, fs_1.constants.R_OK | fs_1.constants.W_OK);
            }
            catch (_a) {
                throw new Error(`Unable to access summary file: '${pathFromEnv}'. Check if the file has correct read/write permissions.`);
            }
            this._filePath = pathFromEnv;
            return this._filePath;
        });
    }
    /**
     * Wraps content in an HTML tag, adding any HTML attributes
     *
     * @param {string} tag HTML tag to wrap
     * @param {string | null} content content within the tag
     * @param {[attribute: string]: string} attrs key-value list of HTML attributes to add
     *
     * @returns {string} content wrapped in HTML element
     */
    wrap(tag, content, attrs = {}) {
        const htmlAttrs = Object.entries(attrs)
            .map(([key, value]) => ` ${key}="${value}"`)
            .join('');
        if (!content) {
            return `<${tag}${htmlAttrs}>`;
        }
        return `<${tag}${htmlAttrs}>${content}</${tag}>`;
    }
    /**
     * Writes text in the buffer to the summary buffer file and empties buffer. Will append by default.
     *
     * @param {SummaryWriteOptions} [options] (optional) options for write operation
     *
     * @returns {Promise<Summary>} summary instance
     */
    write(options) {
        return __awaiter(this, void 0, void 0, function* () {
            const overwrite = !!(options === null || options === void 0 ? void 0 : options.overwrite);
            const filePath = yield this.filePath();
            const writeFunc = overwrite ? writeFile : appendFile;
            yield writeFunc(filePath, this._buffer, { encoding: 'utf8' });
            return this.emptyBuffer();
        });
    }
    /**
     * Clears the summary buffer and wipes the summary file
     *
     * @returns {Summary} summary instance
     */
    clear() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.emptyBuffer().write({ overwrite: true });
        });
    }
    /**
     * Returns the current summary buffer as a string
     *
     * @returns {string} string of summary buffer
     */
    stringify() {
        return this._buffer;
    }
    /**
     * If the summary buffer is empty
     *
     * @returns {boolen} true if the buffer is empty
     */
    isEmptyBuffer() {
        return this._buffer.length === 0;
    }
    /**
     * Resets the summary buffer without writing to summary file
     *
     * @returns {Summary} summary instance
     */
    emptyBuffer() {
        this._buffer = '';
        return this;
    }
    /**
     * Adds raw text to the summary buffer
     *
     * @param {string} text content to add
     * @param {boolean} [addEOL=false] (optional) append an EOL to the raw text (default: false)
     *
     * @returns {Summary} summary instance
     */
    addRaw(text, addEOL = false) {
        this._buffer += text;
        return addEOL ? this.addEOL() : this;
    }
    /**
     * Adds the operating system-specific end-of-line marker to the buffer
     *
     * @returns {Summary} summary instance
     */
    addEOL() {
        return this.addRaw(os_1.EOL);
    }
    /**
     * Adds an HTML codeblock to the summary buffer
     *
     * @param {string} code content to render within fenced code block
     * @param {string} lang (optional) language to syntax highlight code
     *
     * @returns {Summary} summary instance
     */
    addCodeBlock(code, lang) {
        const attrs = Object.assign({}, (lang && { lang }));
        const element = this.wrap('pre', this.wrap('code', code), attrs);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML list to the summary buffer
     *
     * @param {string[]} items list of items to render
     * @param {boolean} [ordered=false] (optional) if the rendered list should be ordered or not (default: false)
     *
     * @returns {Summary} summary instance
     */
    addList(items, ordered = false) {
        const tag = ordered ? 'ol' : 'ul';
        const listItems = items.map(item => this.wrap('li', item)).join('');
        const element = this.wrap(tag, listItems);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML table to the summary buffer
     *
     * @param {SummaryTableCell[]} rows table rows
     *
     * @returns {Summary} summary instance
     */
    addTable(rows) {
        const tableBody = rows
            .map(row => {
            const cells = row
                .map(cell => {
                if (typeof cell === 'string') {
                    return this.wrap('td', cell);
                }
                const { header, data, colspan, rowspan } = cell;
                const tag = header ? 'th' : 'td';
                const attrs = Object.assign(Object.assign({}, (colspan && { colspan })), (rowspan && { rowspan }));
                return this.wrap(tag, data, attrs);
            })
                .join('');
            return this.wrap('tr', cells);
        })
            .join('');
        const element = this.wrap('table', tableBody);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds a collapsable HTML details element to the summary buffer
     *
     * @param {string} label text for the closed state
     * @param {string} content collapsable content
     *
     * @returns {Summary} summary instance
     */
    addDetails(label, content) {
        const element = this.wrap('details', this.wrap('summary', label) + content);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML image tag to the summary buffer
     *
     * @param {string} src path to the image you to embed
     * @param {string} alt text description of the image
     * @param {SummaryImageOptions} options (optional) addition image attributes
     *
     * @returns {Summary} summary instance
     */
    addImage(src, alt, options) {
        const { width, height } = options || {};
        const attrs = Object.assign(Object.assign({}, (width && { width })), (height && { height }));
        const element = this.wrap('img', null, Object.assign({ src, alt }, attrs));
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML section heading element
     *
     * @param {string} text heading text
     * @param {number | string} [level=1] (optional) the heading level, default: 1
     *
     * @returns {Summary} summary instance
     */
    addHeading(text, level) {
        const tag = `h${level}`;
        const allowedTag = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].includes(tag)
            ? tag
            : 'h1';
        const element = this.wrap(allowedTag, text);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML thematic break (<hr>) to the summary buffer
     *
     * @returns {Summary} summary instance
     */
    addSeparator() {
        const element = this.wrap('hr', null);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML line break (<br>) to the summary buffer
     *
     * @returns {Summary} summary instance
     */
    addBreak() {
        const element = this.wrap('br', null);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML blockquote to the summary buffer
     *
     * @param {string} text quote text
     * @param {string} cite (optional) citation url
     *
     * @returns {Summary} summary instance
     */
    addQuote(text, cite) {
        const attrs = Object.assign({}, (cite && { cite }));
        const element = this.wrap('blockquote', text, attrs);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML anchor tag to the summary buffer
     *
     * @param {string} text link text/content
     * @param {string} href hyperlink
     *
     * @returns {Summary} summary instance
     */
    addLink(text, href) {
        const element = this.wrap('a', text, { href });
        return this.addRaw(element).addEOL();
    }
}
const _summary = new Summary();
/**
 * @deprecated use `core.summary`
 */
exports.markdownSummary = _summary;
exports.summary = _summary;
//# sourceMappingURL=summary.js.map

/***/ }),

/***/ 5278:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toCommandProperties = exports.toCommandValue = void 0;
/**
 * Sanitizes an input into a string so it can be passed into issueCommand safely
 * @param input input to sanitize into a string
 */
function toCommandValue(input) {
    if (input === null || input === undefined) {
        return '';
    }
    else if (typeof input === 'string' || input instanceof String) {
        return input;
    }
    return JSON.stringify(input);
}
exports.toCommandValue = toCommandValue;
/**
 *
 * @param annotationProperties
 * @returns The command properties to send with the actual annotation command
 * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646
 */
function toCommandProperties(annotationProperties) {
    if (!Object.keys(annotationProperties).length) {
        return {};
    }
    return {
        title: annotationProperties.title,
        file: annotationProperties.file,
        line: annotationProperties.startLine,
        endLine: annotationProperties.endLine,
        col: annotationProperties.startColumn,
        endColumn: annotationProperties.endColumn
    };
}
exports.toCommandProperties = toCommandProperties;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ 1514:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getExecOutput = exports.exec = void 0;
const string_decoder_1 = __nccwpck_require__(1576);
const tr = __importStar(__nccwpck_require__(8159));
/**
 * Exec a command.
 * Output will be streamed to the live console.
 * Returns promise with return code
 *
 * @param     commandLine        command to execute (can include additional args). Must be correctly escaped.
 * @param     args               optional arguments for tool. Escaping is handled by the lib.
 * @param     options            optional exec options.  See ExecOptions
 * @returns   Promise<number>    exit code
 */
function exec(commandLine, args, options) {
    return __awaiter(this, void 0, void 0, function* () {
        const commandArgs = tr.argStringToArray(commandLine);
        if (commandArgs.length === 0) {
            throw new Error(`Parameter 'commandLine' cannot be null or empty.`);
        }
        // Path to tool to execute should be first arg
        const toolPath = commandArgs[0];
        args = commandArgs.slice(1).concat(args || []);
        const runner = new tr.ToolRunner(toolPath, args, options);
        return runner.exec();
    });
}
exports.exec = exec;
/**
 * Exec a command and get the output.
 * Output will be streamed to the live console.
 * Returns promise with the exit code and collected stdout and stderr
 *
 * @param     commandLine           command to execute (can include additional args). Must be correctly escaped.
 * @param     args                  optional arguments for tool. Escaping is handled by the lib.
 * @param     options               optional exec options.  See ExecOptions
 * @returns   Promise<ExecOutput>   exit code, stdout, and stderr
 */
function getExecOutput(commandLine, args, options) {
    var _a, _b;
    return __awaiter(this, void 0, void 0, function* () {
        let stdout = '';
        let stderr = '';
        //Using string decoder covers the case where a mult-byte character is split
        const stdoutDecoder = new string_decoder_1.StringDecoder('utf8');
        const stderrDecoder = new string_decoder_1.StringDecoder('utf8');
        const originalStdoutListener = (_a = options === null || options === void 0 ? void 0 : options.listeners) === null || _a === void 0 ? void 0 : _a.stdout;
        const originalStdErrListener = (_b = options === null || options === void 0 ? void 0 : options.listeners) === null || _b === void 0 ? void 0 : _b.stderr;
        const stdErrListener = (data) => {
            stderr += stderrDecoder.write(data);
            if (originalStdErrListener) {
                originalStdErrListener(data);
            }
        };
        const stdOutListener = (data) => {
            stdout += stdoutDecoder.write(data);
            if (originalStdoutListener) {
                originalStdoutListener(data);
            }
        };
        const listeners = Object.assign(Object.assign({}, options === null || options === void 0 ? void 0 : options.listeners), { stdout: stdOutListener, stderr: stdErrListener });
        const exitCode = yield exec(commandLine, args, Object.assign(Object.assign({}, options), { listeners }));
        //flush any remaining characters
        stdout += stdoutDecoder.end();
        stderr += stderrDecoder.end();
        return {
            exitCode,
            stdout,
            stderr
        };
    });
}
exports.getExecOutput = getExecOutput;
//# sourceMappingURL=exec.js.map

/***/ }),

/***/ 8159:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.argStringToArray = exports.ToolRunner = void 0;
const os = __importStar(__nccwpck_require__(2037));
const events = __importStar(__nccwpck_require__(2361));
const child = __importStar(__nccwpck_require__(2081));
const path = __importStar(__nccwpck_require__(1017));
const io = __importStar(__nccwpck_require__(7351));
const ioUtil = __importStar(__nccwpck_require__(1962));
const timers_1 = __nccwpck_require__(4784);
/* eslint-disable @typescript-eslint/unbound-method */
const IS_WINDOWS = process.platform === 'win32';
/*
 * Class for running command line tools. Handles quoting and arg parsing in a platform agnostic way.
 */
class ToolRunner extends events.EventEmitter {
    constructor(toolPath, args, options) {
        super();
        if (!toolPath) {
            throw new Error("Parameter 'toolPath' cannot be null or empty.");
        }
        this.toolPath = toolPath;
        this.args = args || [];
        this.options = options || {};
    }
    _debug(message) {
        if (this.options.listeners && this.options.listeners.debug) {
            this.options.listeners.debug(message);
        }
    }
    _getCommandString(options, noPrefix) {
        const toolPath = this._getSpawnFileName();
        const args = this._getSpawnArgs(options);
        let cmd = noPrefix ? '' : '[command]'; // omit prefix when piped to a second tool
        if (IS_WINDOWS) {
            // Windows + cmd file
            if (this._isCmdFile()) {
                cmd += toolPath;
                for (const a of args) {
                    cmd += ` ${a}`;
                }
            }
            // Windows + verbatim
            else if (options.windowsVerbatimArguments) {
                cmd += `"${toolPath}"`;
                for (const a of args) {
                    cmd += ` ${a}`;
                }
            }
            // Windows (regular)
            else {
                cmd += this._windowsQuoteCmdArg(toolPath);
                for (const a of args) {
                    cmd += ` ${this._windowsQuoteCmdArg(a)}`;
                }
            }
        }
        else {
            // OSX/Linux - this can likely be improved with some form of quoting.
            // creating processes on Unix is fundamentally different than Windows.
            // on Unix, execvp() takes an arg array.
            cmd += toolPath;
            for (const a of args) {
                cmd += ` ${a}`;
            }
        }
        return cmd;
    }
    _processLineBuffer(data, strBuffer, onLine) {
        try {
            let s = strBuffer + data.toString();
            let n = s.indexOf(os.EOL);
            while (n > -1) {
                const line = s.substring(0, n);
                onLine(line);
                // the rest of the string ...
                s = s.substring(n + os.EOL.length);
                n = s.indexOf(os.EOL);
            }
            return s;
        }
        catch (err) {
            // streaming lines to console is best effort.  Don't fail a build.
            this._debug(`error processing line. Failed with error ${err}`);
            return '';
        }
    }
    _getSpawnFileName() {
        if (IS_WINDOWS) {
            if (this._isCmdFile()) {
                return process.env['COMSPEC'] || 'cmd.exe';
            }
        }
        return this.toolPath;
    }
    _getSpawnArgs(options) {
        if (IS_WINDOWS) {
            if (this._isCmdFile()) {
                let argline = `/D /S /C "${this._windowsQuoteCmdArg(this.toolPath)}`;
                for (const a of this.args) {
                    argline += ' ';
                    argline += options.windowsVerbatimArguments
                        ? a
                        : this._windowsQuoteCmdArg(a);
                }
                argline += '"';
                return [argline];
            }
        }
        return this.args;
    }
    _endsWith(str, end) {
        return str.endsWith(end);
    }
    _isCmdFile() {
        const upperToolPath = this.toolPath.toUpperCase();
        return (this._endsWith(upperToolPath, '.CMD') ||
            this._endsWith(upperToolPath, '.BAT'));
    }
    _windowsQuoteCmdArg(arg) {
        // for .exe, apply the normal quoting rules that libuv applies
        if (!this._isCmdFile()) {
            return this._uvQuoteCmdArg(arg);
        }
        // otherwise apply quoting rules specific to the cmd.exe command line parser.
        // the libuv rules are generic and are not designed specifically for cmd.exe
        // command line parser.
        //
        // for a detailed description of the cmd.exe command line parser, refer to
        // http://stackoverflow.com/questions/4094699/how-does-the-windows-command-interpreter-cmd-exe-parse-scripts/7970912#7970912
        // need quotes for empty arg
        if (!arg) {
            return '""';
        }
        // determine whether the arg needs to be quoted
        const cmdSpecialChars = [
            ' ',
            '\t',
            '&',
            '(',
            ')',
            '[',
            ']',
            '{',
            '}',
            '^',
            '=',
            ';',
            '!',
            "'",
            '+',
            ',',
            '`',
            '~',
            '|',
            '<',
            '>',
            '"'
        ];
        let needsQuotes = false;
        for (const char of arg) {
            if (cmdSpecialChars.some(x => x === char)) {
                needsQuotes = true;
                break;
            }
        }
        // short-circuit if quotes not needed
        if (!needsQuotes) {
            return arg;
        }
        // the following quoting rules are very similar to the rules that by libuv applies.
        //
        // 1) wrap the string in quotes
        //
        // 2) double-up quotes - i.e. " => ""
        //
        //    this is different from the libuv quoting rules. libuv replaces " with \", which unfortunately
        //    doesn't work well with a cmd.exe command line.
        //
        //    note, replacing " with "" also works well if the arg is passed to a downstream .NET console app.
        //    for example, the command line:
        //          foo.exe "myarg:""my val"""
        //    is parsed by a .NET console app into an arg array:
        //          [ "myarg:\"my val\"" ]
        //    which is the same end result when applying libuv quoting rules. although the actual
        //    command line from libuv quoting rules would look like:
        //          foo.exe "myarg:\"my val\""
        //
        // 3) double-up slashes that precede a quote,
        //    e.g.  hello \world    => "hello \world"
        //          hello\"world    => "hello\\""world"
        //          hello\\"world   => "hello\\\\""world"
        //          hello world\    => "hello world\\"
        //
        //    technically this is not required for a cmd.exe command line, or the batch argument parser.
        //    the reasons for including this as a .cmd quoting rule are:
        //
        //    a) this is optimized for the scenario where the argument is passed from the .cmd file to an
        //       external program. many programs (e.g. .NET console apps) rely on the slash-doubling rule.
        //
        //    b) it's what we've been doing previously (by deferring to node default behavior) and we
        //       haven't heard any complaints about that aspect.
        //
        // note, a weakness of the quoting rules chosen here, is that % is not escaped. in fact, % cannot be
        // escaped when used on the command line directly - even though within a .cmd file % can be escaped
        // by using %%.
        //
        // the saving grace is, on the command line, %var% is left as-is if var is not defined. this contrasts
        // the line parsing rules within a .cmd file, where if var is not defined it is replaced with nothing.
        //
        // one option that was explored was replacing % with ^% - i.e. %var% => ^%var^%. this hack would
        // often work, since it is unlikely that var^ would exist, and the ^ character is removed when the
        // variable is used. the problem, however, is that ^ is not removed when %* is used to pass the args
        // to an external program.
        //
        // an unexplored potential solution for the % escaping problem, is to create a wrapper .cmd file.
        // % can be escaped within a .cmd file.
        let reverse = '"';
        let quoteHit = true;
        for (let i = arg.length; i > 0; i--) {
            // walk the string in reverse
            reverse += arg[i - 1];
            if (quoteHit && arg[i - 1] === '\\') {
                reverse += '\\'; // double the slash
            }
            else if (arg[i - 1] === '"') {
                quoteHit = true;
                reverse += '"'; // double the quote
            }
            else {
                quoteHit = false;
            }
        }
        reverse += '"';
        return reverse
            .split('')
            .reverse()
            .join('');
    }
    _uvQuoteCmdArg(arg) {
        // Tool runner wraps child_process.spawn() and needs to apply the same quoting as
        // Node in certain cases where the undocumented spawn option windowsVerbatimArguments
        // is used.
        //
        // Since this function is a port of quote_cmd_arg from Node 4.x (technically, lib UV,
        // see https://github.com/nodejs/node/blob/v4.x/deps/uv/src/win/process.c for details),
        // pasting copyright notice from Node within this function:
        //
        //      Copyright Joyent, Inc. and other Node contributors. All rights reserved.
        //
        //      Permission is hereby granted, free of charge, to any person obtaining a copy
        //      of this software and associated documentation files (the "Software"), to
        //      deal in the Software without restriction, including without limitation the
        //      rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
        //      sell copies of the Software, and to permit persons to whom the Software is
        //      furnished to do so, subject to the following conditions:
        //
        //      The above copyright notice and this permission notice shall be included in
        //      all copies or substantial portions of the Software.
        //
        //      THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        //      IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        //      FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        //      AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        //      LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
        //      FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
        //      IN THE SOFTWARE.
        if (!arg) {
            // Need double quotation for empty argument
            return '""';
        }
        if (!arg.includes(' ') && !arg.includes('\t') && !arg.includes('"')) {
            // No quotation needed
            return arg;
        }
        if (!arg.includes('"') && !arg.includes('\\')) {
            // No embedded double quotes or backslashes, so I can just wrap
            // quote marks around the whole thing.
            return `"${arg}"`;
        }
        // Expected input/output:
        //   input : hello"world
        //   output: "hello\"world"
        //   input : hello""world
        //   output: "hello\"\"world"
        //   input : hello\world
        //   output: hello\world
        //   input : hello\\world
        //   output: hello\\world
        //   input : hello\"world
        //   output: "hello\\\"world"
        //   input : hello\\"world
        //   output: "hello\\\\\"world"
        //   input : hello world\
        //   output: "hello world\\" - note the comment in libuv actually reads "hello world\"
        //                             but it appears the comment is wrong, it should be "hello world\\"
        let reverse = '"';
        let quoteHit = true;
        for (let i = arg.length; i > 0; i--) {
            // walk the string in reverse
            reverse += arg[i - 1];
            if (quoteHit && arg[i - 1] === '\\') {
                reverse += '\\';
            }
            else if (arg[i - 1] === '"') {
                quoteHit = true;
                reverse += '\\';
            }
            else {
                quoteHit = false;
            }
        }
        reverse += '"';
        return reverse
            .split('')
            .reverse()
            .join('');
    }
    _cloneExecOptions(options) {
        options = options || {};
        const result = {
            cwd: options.cwd || process.cwd(),
            env: options.env || process.env,
            silent: options.silent || false,
            windowsVerbatimArguments: options.windowsVerbatimArguments || false,
            failOnStdErr: options.failOnStdErr || false,
            ignoreReturnCode: options.ignoreReturnCode || false,
            delay: options.delay || 10000
        };
        result.outStream = options.outStream || process.stdout;
        result.errStream = options.errStream || process.stderr;
        return result;
    }
    _getSpawnOptions(options, toolPath) {
        options = options || {};
        const result = {};
        result.cwd = options.cwd;
        result.env = options.env;
        result['windowsVerbatimArguments'] =
            options.windowsVerbatimArguments || this._isCmdFile();
        if (options.windowsVerbatimArguments) {
            result.argv0 = `"${toolPath}"`;
        }
        return result;
    }
    /**
     * Exec a tool.
     * Output will be streamed to the live console.
     * Returns promise with return code
     *
     * @param     tool     path to tool to exec
     * @param     options  optional exec options.  See ExecOptions
     * @returns   number
     */
    exec() {
        return __awaiter(this, void 0, void 0, function* () {
            // root the tool path if it is unrooted and contains relative pathing
            if (!ioUtil.isRooted(this.toolPath) &&
                (this.toolPath.includes('/') ||
                    (IS_WINDOWS && this.toolPath.includes('\\')))) {
                // prefer options.cwd if it is specified, however options.cwd may also need to be rooted
                this.toolPath = path.resolve(process.cwd(), this.options.cwd || process.cwd(), this.toolPath);
            }
            // if the tool is only a file name, then resolve it from the PATH
            // otherwise verify it exists (add extension on Windows if necessary)
            this.toolPath = yield io.which(this.toolPath, true);
            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
                this._debug(`exec tool: ${this.toolPath}`);
                this._debug('arguments:');
                for (const arg of this.args) {
                    this._debug(`   ${arg}`);
                }
                const optionsNonNull = this._cloneExecOptions(this.options);
                if (!optionsNonNull.silent && optionsNonNull.outStream) {
                    optionsNonNull.outStream.write(this._getCommandString(optionsNonNull) + os.EOL);
                }
                const state = new ExecState(optionsNonNull, this.toolPath);
                state.on('debug', (message) => {
                    this._debug(message);
                });
                if (this.options.cwd && !(yield ioUtil.exists(this.options.cwd))) {
                    return reject(new Error(`The cwd: ${this.options.cwd} does not exist!`));
                }
                const fileName = this._getSpawnFileName();
                const cp = child.spawn(fileName, this._getSpawnArgs(optionsNonNull), this._getSpawnOptions(this.options, fileName));
                let stdbuffer = '';
                if (cp.stdout) {
                    cp.stdout.on('data', (data) => {
                        if (this.options.listeners && this.options.listeners.stdout) {
                            this.options.listeners.stdout(data);
                        }
                        if (!optionsNonNull.silent && optionsNonNull.outStream) {
                            optionsNonNull.outStream.write(data);
                        }
                        stdbuffer = this._processLineBuffer(data, stdbuffer, (line) => {
                            if (this.options.listeners && this.options.listeners.stdline) {
                                this.options.listeners.stdline(line);
                            }
                        });
                    });
                }
                let errbuffer = '';
                if (cp.stderr) {
                    cp.stderr.on('data', (data) => {
                        state.processStderr = true;
                        if (this.options.listeners && this.options.listeners.stderr) {
                            this.options.listeners.stderr(data);
                        }
                        if (!optionsNonNull.silent &&
                            optionsNonNull.errStream &&
                            optionsNonNull.outStream) {
                            const s = optionsNonNull.failOnStdErr
                                ? optionsNonNull.errStream
                                : optionsNonNull.outStream;
                            s.write(data);
                        }
                        errbuffer = this._processLineBuffer(data, errbuffer, (line) => {
                            if (this.options.listeners && this.options.listeners.errline) {
                                this.options.listeners.errline(line);
                            }
                        });
                    });
                }
                cp.on('error', (err) => {
                    state.processError = err.message;
                    state.processExited = true;
                    state.processClosed = true;
                    state.CheckComplete();
                });
                cp.on('exit', (code) => {
                    state.processExitCode = code;
                    state.processExited = true;
                    this._debug(`Exit code ${code} received from tool '${this.toolPath}'`);
                    state.CheckComplete();
                });
                cp.on('close', (code) => {
                    state.processExitCode = code;
                    state.processExited = true;
                    state.processClosed = true;
                    this._debug(`STDIO streams have closed for tool '${this.toolPath}'`);
                    state.CheckComplete();
                });
                state.on('done', (error, exitCode) => {
                    if (stdbuffer.length > 0) {
                        this.emit('stdline', stdbuffer);
                    }
                    if (errbuffer.length > 0) {
                        this.emit('errline', errbuffer);
                    }
                    cp.removeAllListeners();
                    if (error) {
                        reject(error);
                    }
                    else {
                        resolve(exitCode);
                    }
                });
                if (this.options.input) {
                    if (!cp.stdin) {
                        throw new Error('child process missing stdin');
                    }
                    cp.stdin.end(this.options.input);
                }
            }));
        });
    }
}
exports.ToolRunner = ToolRunner;
/**
 * Convert an arg string to an array of args. Handles escaping
 *
 * @param    argString   string of arguments
 * @returns  string[]    array of arguments
 */
function argStringToArray(argString) {
    const args = [];
    let inQuotes = false;
    let escaped = false;
    let arg = '';
    function append(c) {
        // we only escape double quotes.
        if (escaped && c !== '"') {
            arg += '\\';
        }
        arg += c;
        escaped = false;
    }
    for (let i = 0; i < argString.length; i++) {
        const c = argString.charAt(i);
        if (c === '"') {
            if (!escaped) {
                inQuotes = !inQuotes;
            }
            else {
                append(c);
            }
            continue;
        }
        if (c === '\\' && escaped) {
            append(c);
            continue;
        }
        if (c === '\\' && inQuotes) {
            escaped = true;
            continue;
        }
        if (c === ' ' && !inQuotes) {
            if (arg.length > 0) {
                args.push(arg);
                arg = '';
            }
            continue;
        }
        append(c);
    }
    if (arg.length > 0) {
        args.push(arg.trim());
    }
    return args;
}
exports.argStringToArray = argStringToArray;
class ExecState extends events.EventEmitter {
    constructor(options, toolPath) {
        super();
        this.processClosed = false; // tracks whether the process has exited and stdio is closed
        this.processError = '';
        this.processExitCode = 0;
        this.processExited = false; // tracks whether the process has exited
        this.processStderr = false; // tracks whether stderr was written to
        this.delay = 10000; // 10 seconds
        this.done = false;
        this.timeout = null;
        if (!toolPath) {
            throw new Error('toolPath must not be empty');
        }
        this.options = options;
        this.toolPath = toolPath;
        if (options.delay) {
            this.delay = options.delay;
        }
    }
    CheckComplete() {
        if (this.done) {
            return;
        }
        if (this.processClosed) {
            this._setResult();
        }
        else if (this.processExited) {
            this.timeout = timers_1.setTimeout(ExecState.HandleTimeout, this.delay, this);
        }
    }
    _debug(message) {
        this.emit('debug', message);
    }
    _setResult() {
        // determine whether there is an error
        let error;
        if (this.processExited) {
            if (this.processError) {
                error = new Error(`There was an error when attempting to execute the process '${this.toolPath}'. This may indicate the process failed to start. Error: ${this.processError}`);
            }
            else if (this.processExitCode !== 0 && !this.options.ignoreReturnCode) {
                error = new Error(`The process '${this.toolPath}' failed with exit code ${this.processExitCode}`);
            }
            else if (this.processStderr && this.options.failOnStdErr) {
                error = new Error(`The process '${this.toolPath}' failed because one or more lines were written to the STDERR stream`);
            }
        }
        // clear the timeout
        if (this.timeout) {
            clearTimeout(this.timeout);
            this.timeout = null;
        }
        this.done = true;
        this.emit('done', error, this.processExitCode);
    }
    static HandleTimeout(state) {
        if (state.done) {
            return;
        }
        if (!state.processClosed && state.processExited) {
            const message = `The STDIO streams did not close within ${state.delay /
                1000} seconds of the exit event from process '${state.toolPath}'. This may indicate a child process inherited the STDIO streams and has not yet exited.`;
            state._debug(message);
        }
        state._setResult();
    }
}
//# sourceMappingURL=toolrunner.js.map

/***/ }),

/***/ 5526:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PersonalAccessTokenCredentialHandler = exports.BearerCredentialHandler = exports.BasicCredentialHandler = void 0;
class BasicCredentialHandler {
    constructor(username, password) {
        this.username = username;
        this.password = password;
    }
    prepareRequest(options) {
        if (!options.headers) {
            throw Error('The request has no headers');
        }
        options.headers['Authorization'] = `Basic ${Buffer.from(`${this.username}:${this.password}`).toString('base64')}`;
    }
    // This handler cannot handle 401
    canHandleAuthentication() {
        return false;
    }
    handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error('not implemented');
        });
    }
}
exports.BasicCredentialHandler = BasicCredentialHandler;
class BearerCredentialHandler {
    constructor(token) {
        this.token = token;
    }
    // currently implements pre-authorization
    // TODO: support preAuth = false where it hooks on 401
    prepareRequest(options) {
        if (!options.headers) {
            throw Error('The request has no headers');
        }
        options.headers['Authorization'] = `Bearer ${this.token}`;
    }
    // This handler cannot handle 401
    canHandleAuthentication() {
        return false;
    }
    handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error('not implemented');
        });
    }
}
exports.BearerCredentialHandler = BearerCredentialHandler;
class PersonalAccessTokenCredentialHandler {
    constructor(token) {
        this.token = token;
    }
    // currently implements pre-authorization
    // TODO: support preAuth = false where it hooks on 401
    prepareRequest(options) {
        if (!options.headers) {
            throw Error('The request has no headers');
        }
        options.headers['Authorization'] = `Basic ${Buffer.from(`PAT:${this.token}`).toString('base64')}`;
    }
    // This handler cannot handle 401
    canHandleAuthentication() {
        return false;
    }
    handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error('not implemented');
        });
    }
}
exports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;
//# sourceMappingURL=auth.js.map

/***/ }),

/***/ 6255:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

/* eslint-disable @typescript-eslint/no-explicit-any */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HttpClient = exports.isHttps = exports.HttpClientResponse = exports.HttpClientError = exports.getProxyUrl = exports.MediaTypes = exports.Headers = exports.HttpCodes = void 0;
const http = __importStar(__nccwpck_require__(3685));
const https = __importStar(__nccwpck_require__(5687));
const pm = __importStar(__nccwpck_require__(9835));
const tunnel = __importStar(__nccwpck_require__(4294));
var HttpCodes;
(function (HttpCodes) {
    HttpCodes[HttpCodes["OK"] = 200] = "OK";
    HttpCodes[HttpCodes["MultipleChoices"] = 300] = "MultipleChoices";
    HttpCodes[HttpCodes["MovedPermanently"] = 301] = "MovedPermanently";
    HttpCodes[HttpCodes["ResourceMoved"] = 302] = "ResourceMoved";
    HttpCodes[HttpCodes["SeeOther"] = 303] = "SeeOther";
    HttpCodes[HttpCodes["NotModified"] = 304] = "NotModified";
    HttpCodes[HttpCodes["UseProxy"] = 305] = "UseProxy";
    HttpCodes[HttpCodes["SwitchProxy"] = 306] = "SwitchProxy";
    HttpCodes[HttpCodes["TemporaryRedirect"] = 307] = "TemporaryRedirect";
    HttpCodes[HttpCodes["PermanentRedirect"] = 308] = "PermanentRedirect";
    HttpCodes[HttpCodes["BadRequest"] = 400] = "BadRequest";
    HttpCodes[HttpCodes["Unauthorized"] = 401] = "Unauthorized";
    HttpCodes[HttpCodes["PaymentRequired"] = 402] = "PaymentRequired";
    HttpCodes[HttpCodes["Forbidden"] = 403] = "Forbidden";
    HttpCodes[HttpCodes["NotFound"] = 404] = "NotFound";
    HttpCodes[HttpCodes["MethodNotAllowed"] = 405] = "MethodNotAllowed";
    HttpCodes[HttpCodes["NotAcceptable"] = 406] = "NotAcceptable";
    HttpCodes[HttpCodes["ProxyAuthenticationRequired"] = 407] = "ProxyAuthenticationRequired";
    HttpCodes[HttpCodes["RequestTimeout"] = 408] = "RequestTimeout";
    HttpCodes[HttpCodes["Conflict"] = 409] = "Conflict";
    HttpCodes[HttpCodes["Gone"] = 410] = "Gone";
    HttpCodes[HttpCodes["TooManyRequests"] = 429] = "TooManyRequests";
    HttpCodes[HttpCodes["InternalServerError"] = 500] = "InternalServerError";
    HttpCodes[HttpCodes["NotImplemented"] = 501] = "NotImplemented";
    HttpCodes[HttpCodes["BadGateway"] = 502] = "BadGateway";
    HttpCodes[HttpCodes["ServiceUnavailable"] = 503] = "ServiceUnavailable";
    HttpCodes[HttpCodes["GatewayTimeout"] = 504] = "GatewayTimeout";
})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));
var Headers;
(function (Headers) {
    Headers["Accept"] = "accept";
    Headers["ContentType"] = "content-type";
})(Headers = exports.Headers || (exports.Headers = {}));
var MediaTypes;
(function (MediaTypes) {
    MediaTypes["ApplicationJson"] = "application/json";
})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));
/**
 * Returns the proxy URL, depending upon the supplied url and proxy environment variables.
 * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
 */
function getProxyUrl(serverUrl) {
    const proxyUrl = pm.getProxyUrl(new URL(serverUrl));
    return proxyUrl ? proxyUrl.href : '';
}
exports.getProxyUrl = getProxyUrl;
const HttpRedirectCodes = [
    HttpCodes.MovedPermanently,
    HttpCodes.ResourceMoved,
    HttpCodes.SeeOther,
    HttpCodes.TemporaryRedirect,
    HttpCodes.PermanentRedirect
];
const HttpResponseRetryCodes = [
    HttpCodes.BadGateway,
    HttpCodes.ServiceUnavailable,
    HttpCodes.GatewayTimeout
];
const RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];
const ExponentialBackoffCeiling = 10;
const ExponentialBackoffTimeSlice = 5;
class HttpClientError extends Error {
    constructor(message, statusCode) {
        super(message);
        this.name = 'HttpClientError';
        this.statusCode = statusCode;
        Object.setPrototypeOf(this, HttpClientError.prototype);
    }
}
exports.HttpClientError = HttpClientError;
class HttpClientResponse {
    constructor(message) {
        this.message = message;
    }
    readBody() {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {
                let output = Buffer.alloc(0);
                this.message.on('data', (chunk) => {
                    output = Buffer.concat([output, chunk]);
                });
                this.message.on('end', () => {
                    resolve(output.toString());
                });
            }));
        });
    }
}
exports.HttpClientResponse = HttpClientResponse;
function isHttps(requestUrl) {
    const parsedUrl = new URL(requestUrl);
    return parsedUrl.protocol === 'https:';
}
exports.isHttps = isHttps;
class HttpClient {
    constructor(userAgent, handlers, requestOptions) {
        this._ignoreSslError = false;
        this._allowRedirects = true;
        this._allowRedirectDowngrade = false;
        this._maxRedirects = 50;
        this._allowRetries = false;
        this._maxRetries = 1;
        this._keepAlive = false;
        this._disposed = false;
        this.userAgent = userAgent;
        this.handlers = handlers || [];
        this.requestOptions = requestOptions;
        if (requestOptions) {
            if (requestOptions.ignoreSslError != null) {
                this._ignoreSslError = requestOptions.ignoreSslError;
            }
            this._socketTimeout = requestOptions.socketTimeout;
            if (requestOptions.allowRedirects != null) {
                this._allowRedirects = requestOptions.allowRedirects;
            }
            if (requestOptions.allowRedirectDowngrade != null) {
                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;
            }
            if (requestOptions.maxRedirects != null) {
                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);
            }
            if (requestOptions.keepAlive != null) {
                this._keepAlive = requestOptions.keepAlive;
            }
            if (requestOptions.allowRetries != null) {
                this._allowRetries = requestOptions.allowRetries;
            }
            if (requestOptions.maxRetries != null) {
                this._maxRetries = requestOptions.maxRetries;
            }
        }
    }
    options(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});
        });
    }
    get(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('GET', requestUrl, null, additionalHeaders || {});
        });
    }
    del(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('DELETE', requestUrl, null, additionalHeaders || {});
        });
    }
    post(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('POST', requestUrl, data, additionalHeaders || {});
        });
    }
    patch(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('PATCH', requestUrl, data, additionalHeaders || {});
        });
    }
    put(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('PUT', requestUrl, data, additionalHeaders || {});
        });
    }
    head(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('HEAD', requestUrl, null, additionalHeaders || {});
        });
    }
    sendStream(verb, requestUrl, stream, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request(verb, requestUrl, stream, additionalHeaders);
        });
    }
    /**
     * Gets a typed object from an endpoint
     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise
     */
    getJson(requestUrl, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            const res = yield this.get(requestUrl, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    postJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = JSON.stringify(obj, null, 2);
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
            const res = yield this.post(requestUrl, data, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    putJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = JSON.stringify(obj, null, 2);
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
            const res = yield this.put(requestUrl, data, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    patchJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = JSON.stringify(obj, null, 2);
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
            const res = yield this.patch(requestUrl, data, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    /**
     * Makes a raw http request.
     * All other methods such as get, post, patch, and request ultimately call this.
     * Prefer get, del, post and patch
     */
    request(verb, requestUrl, data, headers) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this._disposed) {
                throw new Error('Client has already been disposed.');
            }
            const parsedUrl = new URL(requestUrl);
            let info = this._prepareRequest(verb, parsedUrl, headers);
            // Only perform retries on reads since writes may not be idempotent.
            const maxTries = this._allowRetries && RetryableHttpVerbs.includes(verb)
                ? this._maxRetries + 1
                : 1;
            let numTries = 0;
            let response;
            do {
                response = yield this.requestRaw(info, data);
                // Check if it's an authentication challenge
                if (response &&
                    response.message &&
                    response.message.statusCode === HttpCodes.Unauthorized) {
                    let authenticationHandler;
                    for (const handler of this.handlers) {
                        if (handler.canHandleAuthentication(response)) {
                            authenticationHandler = handler;
                            break;
                        }
                    }
                    if (authenticationHandler) {
                        return authenticationHandler.handleAuthentication(this, info, data);
                    }
                    else {
                        // We have received an unauthorized response but have no handlers to handle it.
                        // Let the response return to the caller.
                        return response;
                    }
                }
                let redirectsRemaining = this._maxRedirects;
                while (response.message.statusCode &&
                    HttpRedirectCodes.includes(response.message.statusCode) &&
                    this._allowRedirects &&
                    redirectsRemaining > 0) {
                    const redirectUrl = response.message.headers['location'];
                    if (!redirectUrl) {
                        // if there's no location to redirect to, we won't
                        break;
                    }
                    const parsedRedirectUrl = new URL(redirectUrl);
                    if (parsedUrl.protocol === 'https:' &&
                        parsedUrl.protocol !== parsedRedirectUrl.protocol &&
                        !this._allowRedirectDowngrade) {
                        throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');
                    }
                    // we need to finish reading the response before reassigning response
                    // which will leak the open socket.
                    yield response.readBody();
                    // strip authorization header if redirected to a different hostname
                    if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {
                        for (const header in headers) {
                            // header names are case insensitive
                            if (header.toLowerCase() === 'authorization') {
                                delete headers[header];
                            }
                        }
                    }
                    // let's make the request with the new redirectUrl
                    info = this._prepareRequest(verb, parsedRedirectUrl, headers);
                    response = yield this.requestRaw(info, data);
                    redirectsRemaining--;
                }
                if (!response.message.statusCode ||
                    !HttpResponseRetryCodes.includes(response.message.statusCode)) {
                    // If not a retry code, return immediately instead of retrying
                    return response;
                }
                numTries += 1;
                if (numTries < maxTries) {
                    yield response.readBody();
                    yield this._performExponentialBackoff(numTries);
                }
            } while (numTries < maxTries);
            return response;
        });
    }
    /**
     * Needs to be called if keepAlive is set to true in request options.
     */
    dispose() {
        if (this._agent) {
            this._agent.destroy();
        }
        this._disposed = true;
    }
    /**
     * Raw request.
     * @param info
     * @param data
     */
    requestRaw(info, data) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                function callbackForResult(err, res) {
                    if (err) {
                        reject(err);
                    }
                    else if (!res) {
                        // If `err` is not passed, then `res` must be passed.
                        reject(new Error('Unknown error'));
                    }
                    else {
                        resolve(res);
                    }
                }
                this.requestRawWithCallback(info, data, callbackForResult);
            });
        });
    }
    /**
     * Raw request with callback.
     * @param info
     * @param data
     * @param onResult
     */
    requestRawWithCallback(info, data, onResult) {
        if (typeof data === 'string') {
            if (!info.options.headers) {
                info.options.headers = {};
            }
            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');
        }
        let callbackCalled = false;
        function handleResult(err, res) {
            if (!callbackCalled) {
                callbackCalled = true;
                onResult(err, res);
            }
        }
        const req = info.httpModule.request(info.options, (msg) => {
            const res = new HttpClientResponse(msg);
            handleResult(undefined, res);
        });
        let socket;
        req.on('socket', sock => {
            socket = sock;
        });
        // If we ever get disconnected, we want the socket to timeout eventually
        req.setTimeout(this._socketTimeout || 3 * 60000, () => {
            if (socket) {
                socket.end();
            }
            handleResult(new Error(`Request timeout: ${info.options.path}`));
        });
        req.on('error', function (err) {
            // err has statusCode property
            // res should have headers
            handleResult(err);
        });
        if (data && typeof data === 'string') {
            req.write(data, 'utf8');
        }
        if (data && typeof data !== 'string') {
            data.on('close', function () {
                req.end();
            });
            data.pipe(req);
        }
        else {
            req.end();
        }
    }
    /**
     * Gets an http agent. This function is useful when you need an http agent that handles
     * routing through a proxy server - depending upon the url and proxy environment variables.
     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
     */
    getAgent(serverUrl) {
        const parsedUrl = new URL(serverUrl);
        return this._getAgent(parsedUrl);
    }
    _prepareRequest(method, requestUrl, headers) {
        const info = {};
        info.parsedUrl = requestUrl;
        const usingSsl = info.parsedUrl.protocol === 'https:';
        info.httpModule = usingSsl ? https : http;
        const defaultPort = usingSsl ? 443 : 80;
        info.options = {};
        info.options.host = info.parsedUrl.hostname;
        info.options.port = info.parsedUrl.port
            ? parseInt(info.parsedUrl.port)
            : defaultPort;
        info.options.path =
            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');
        info.options.method = method;
        info.options.headers = this._mergeHeaders(headers);
        if (this.userAgent != null) {
            info.options.headers['user-agent'] = this.userAgent;
        }
        info.options.agent = this._getAgent(info.parsedUrl);
        // gives handlers an opportunity to participate
        if (this.handlers) {
            for (const handler of this.handlers) {
                handler.prepareRequest(info.options);
            }
        }
        return info;
    }
    _mergeHeaders(headers) {
        if (this.requestOptions && this.requestOptions.headers) {
            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers || {}));
        }
        return lowercaseKeys(headers || {});
    }
    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {
        let clientHeader;
        if (this.requestOptions && this.requestOptions.headers) {
            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];
        }
        return additionalHeaders[header] || clientHeader || _default;
    }
    _getAgent(parsedUrl) {
        let agent;
        const proxyUrl = pm.getProxyUrl(parsedUrl);
        const useProxy = proxyUrl && proxyUrl.hostname;
        if (this._keepAlive && useProxy) {
            agent = this._proxyAgent;
        }
        if (this._keepAlive && !useProxy) {
            agent = this._agent;
        }
        // if agent is already assigned use that agent.
        if (agent) {
            return agent;
        }
        const usingSsl = parsedUrl.protocol === 'https:';
        let maxSockets = 100;
        if (this.requestOptions) {
            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;
        }
        // This is `useProxy` again, but we need to check `proxyURl` directly for TypeScripts's flow analysis.
        if (proxyUrl && proxyUrl.hostname) {
            const agentOptions = {
                maxSockets,
                keepAlive: this._keepAlive,
                proxy: Object.assign(Object.assign({}, ((proxyUrl.username || proxyUrl.password) && {
                    proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`
                })), { host: proxyUrl.hostname, port: proxyUrl.port })
            };
            let tunnelAgent;
            const overHttps = proxyUrl.protocol === 'https:';
            if (usingSsl) {
                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;
            }
            else {
                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;
            }
            agent = tunnelAgent(agentOptions);
            this._proxyAgent = agent;
        }
        // if reusing agent across request and tunneling agent isn't assigned create a new agent
        if (this._keepAlive && !agent) {
            const options = { keepAlive: this._keepAlive, maxSockets };
            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);
            this._agent = agent;
        }
        // if not using private agent and tunnel agent isn't setup then use global agent
        if (!agent) {
            agent = usingSsl ? https.globalAgent : http.globalAgent;
        }
        if (usingSsl && this._ignoreSslError) {
            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process
            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options
            // we have to cast it to any and change it directly
            agent.options = Object.assign(agent.options || {}, {
                rejectUnauthorized: false
            });
        }
        return agent;
    }
    _performExponentialBackoff(retryNumber) {
        return __awaiter(this, void 0, void 0, function* () {
            retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);
            const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);
            return new Promise(resolve => setTimeout(() => resolve(), ms));
        });
    }
    _processResponse(res, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
                const statusCode = res.message.statusCode || 0;
                const response = {
                    statusCode,
                    result: null,
                    headers: {}
                };
                // not found leads to null obj returned
                if (statusCode === HttpCodes.NotFound) {
                    resolve(response);
                }
                // get the result from the body
                function dateTimeDeserializer(key, value) {
                    if (typeof value === 'string') {
                        const a = new Date(value);
                        if (!isNaN(a.valueOf())) {
                            return a;
                        }
                    }
                    return value;
                }
                let obj;
                let contents;
                try {
                    contents = yield res.readBody();
                    if (contents && contents.length > 0) {
                        if (options && options.deserializeDates) {
                            obj = JSON.parse(contents, dateTimeDeserializer);
                        }
                        else {
                            obj = JSON.parse(contents);
                        }
                        response.result = obj;
                    }
                    response.headers = res.message.headers;
                }
                catch (err) {
                    // Invalid resource (contents not json);  leaving result obj null
                }
                // note that 3xx redirects are handled by the http layer.
                if (statusCode > 299) {
                    let msg;
                    // if exception/error in body, attempt to get better error
                    if (obj && obj.message) {
                        msg = obj.message;
                    }
                    else if (contents && contents.length > 0) {
                        // it may be the case that the exception is in the body message as string
                        msg = contents;
                    }
                    else {
                        msg = `Failed request: (${statusCode})`;
                    }
                    const err = new HttpClientError(msg, statusCode);
                    err.result = response.result;
                    reject(err);
                }
                else {
                    resolve(response);
                }
            }));
        });
    }
}
exports.HttpClient = HttpClient;
const lowercaseKeys = (obj) => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 9835:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkBypass = exports.getProxyUrl = void 0;
function getProxyUrl(reqUrl) {
    const usingSsl = reqUrl.protocol === 'https:';
    if (checkBypass(reqUrl)) {
        return undefined;
    }
    const proxyVar = (() => {
        if (usingSsl) {
            return process.env['https_proxy'] || process.env['HTTPS_PROXY'];
        }
        else {
            return process.env['http_proxy'] || process.env['HTTP_PROXY'];
        }
    })();
    if (proxyVar) {
        return new URL(proxyVar);
    }
    else {
        return undefined;
    }
}
exports.getProxyUrl = getProxyUrl;
function checkBypass(reqUrl) {
    if (!reqUrl.hostname) {
        return false;
    }
    const reqHost = reqUrl.hostname;
    if (isLoopbackAddress(reqHost)) {
        return true;
    }
    const noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';
    if (!noProxy) {
        return false;
    }
    // Determine the request port
    let reqPort;
    if (reqUrl.port) {
        reqPort = Number(reqUrl.port);
    }
    else if (reqUrl.protocol === 'http:') {
        reqPort = 80;
    }
    else if (reqUrl.protocol === 'https:') {
        reqPort = 443;
    }
    // Format the request hostname and hostname with port
    const upperReqHosts = [reqUrl.hostname.toUpperCase()];
    if (typeof reqPort === 'number') {
        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);
    }
    // Compare request host against noproxy
    for (const upperNoProxyItem of noProxy
        .split(',')
        .map(x => x.trim().toUpperCase())
        .filter(x => x)) {
        if (upperNoProxyItem === '*' ||
            upperReqHosts.some(x => x === upperNoProxyItem ||
                x.endsWith(`.${upperNoProxyItem}`) ||
                (upperNoProxyItem.startsWith('.') &&
                    x.endsWith(`${upperNoProxyItem}`)))) {
            return true;
        }
    }
    return false;
}
exports.checkBypass = checkBypass;
function isLoopbackAddress(host) {
    const hostLower = host.toLowerCase();
    return (hostLower === 'localhost' ||
        hostLower.startsWith('127.') ||
        hostLower.startsWith('[::1]') ||
        hostLower.startsWith('[0:0:0:0:0:0:0:1]'));
}
//# sourceMappingURL=proxy.js.map

/***/ }),

/***/ 1962:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getCmdPath = exports.tryGetExecutablePath = exports.isRooted = exports.isDirectory = exports.exists = exports.READONLY = exports.UV_FS_O_EXLOCK = exports.IS_WINDOWS = exports.unlink = exports.symlink = exports.stat = exports.rmdir = exports.rm = exports.rename = exports.readlink = exports.readdir = exports.open = exports.mkdir = exports.lstat = exports.copyFile = exports.chmod = void 0;
const fs = __importStar(__nccwpck_require__(7147));
const path = __importStar(__nccwpck_require__(1017));
_a = fs.promises
// export const {open} = 'fs'
, exports.chmod = _a.chmod, exports.copyFile = _a.copyFile, exports.lstat = _a.lstat, exports.mkdir = _a.mkdir, exports.open = _a.open, exports.readdir = _a.readdir, exports.readlink = _a.readlink, exports.rename = _a.rename, exports.rm = _a.rm, exports.rmdir = _a.rmdir, exports.stat = _a.stat, exports.symlink = _a.symlink, exports.unlink = _a.unlink;
// export const {open} = 'fs'
exports.IS_WINDOWS = process.platform === 'win32';
// See https://github.com/nodejs/node/blob/d0153aee367422d0858105abec186da4dff0a0c5/deps/uv/include/uv/win.h#L691
exports.UV_FS_O_EXLOCK = 0x10000000;
exports.READONLY = fs.constants.O_RDONLY;
function exists(fsPath) {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            yield exports.stat(fsPath);
        }
        catch (err) {
            if (err.code === 'ENOENT') {
                return false;
            }
            throw err;
        }
        return true;
    });
}
exports.exists = exists;
function isDirectory(fsPath, useStat = false) {
    return __awaiter(this, void 0, void 0, function* () {
        const stats = useStat ? yield exports.stat(fsPath) : yield exports.lstat(fsPath);
        return stats.isDirectory();
    });
}
exports.isDirectory = isDirectory;
/**
 * On OSX/Linux, true if path starts with '/'. On Windows, true for paths like:
 * \, \hello, \\hello\share, C:, and C:\hello (and corresponding alternate separator cases).
 */
function isRooted(p) {
    p = normalizeSeparators(p);
    if (!p) {
        throw new Error('isRooted() parameter "p" cannot be empty');
    }
    if (exports.IS_WINDOWS) {
        return (p.startsWith('\\') || /^[A-Z]:/i.test(p) // e.g. \ or \hello or \\hello
        ); // e.g. C: or C:\hello
    }
    return p.startsWith('/');
}
exports.isRooted = isRooted;
/**
 * Best effort attempt to determine whether a file exists and is executable.
 * @param filePath    file path to check
 * @param extensions  additional file extensions to try
 * @return if file exists and is executable, returns the file path. otherwise empty string.
 */
function tryGetExecutablePath(filePath, extensions) {
    return __awaiter(this, void 0, void 0, function* () {
        let stats = undefined;
        try {
            // test file exists
            stats = yield exports.stat(filePath);
        }
        catch (err) {
            if (err.code !== 'ENOENT') {
                // eslint-disable-next-line no-console
                console.log(`Unexpected error attempting to determine if executable file exists '${filePath}': ${err}`);
            }
        }
        if (stats && stats.isFile()) {
            if (exports.IS_WINDOWS) {
                // on Windows, test for valid extension
                const upperExt = path.extname(filePath).toUpperCase();
                if (extensions.some(validExt => validExt.toUpperCase() === upperExt)) {
                    return filePath;
                }
            }
            else {
                if (isUnixExecutable(stats)) {
                    return filePath;
                }
            }
        }
        // try each extension
        const originalFilePath = filePath;
        for (const extension of extensions) {
            filePath = originalFilePath + extension;
            stats = undefined;
            try {
                stats = yield exports.stat(filePath);
            }
            catch (err) {
                if (err.code !== 'ENOENT') {
                    // eslint-disable-next-line no-console
                    console.log(`Unexpected error attempting to determine if executable file exists '${filePath}': ${err}`);
                }
            }
            if (stats && stats.isFile()) {
                if (exports.IS_WINDOWS) {
                    // preserve the case of the actual file (since an extension was appended)
                    try {
                        const directory = path.dirname(filePath);
                        const upperName = path.basename(filePath).toUpperCase();
                        for (const actualName of yield exports.readdir(directory)) {
                            if (upperName === actualName.toUpperCase()) {
                                filePath = path.join(directory, actualName);
                                break;
                            }
                        }
                    }
                    catch (err) {
                        // eslint-disable-next-line no-console
                        console.log(`Unexpected error attempting to determine the actual case of the file '${filePath}': ${err}`);
                    }
                    return filePath;
                }
                else {
                    if (isUnixExecutable(stats)) {
                        return filePath;
                    }
                }
            }
        }
        return '';
    });
}
exports.tryGetExecutablePath = tryGetExecutablePath;
function normalizeSeparators(p) {
    p = p || '';
    if (exports.IS_WINDOWS) {
        // convert slashes on Windows
        p = p.replace(/\//g, '\\');
        // remove redundant slashes
        return p.replace(/\\\\+/g, '\\');
    }
    // remove redundant slashes
    return p.replace(/\/\/+/g, '/');
}
// on Mac/Linux, test the execute bit
//     R   W  X  R  W X R W X
//   256 128 64 32 16 8 4 2 1
function isUnixExecutable(stats) {
    return ((stats.mode & 1) > 0 ||
        ((stats.mode & 8) > 0 && stats.gid === process.getgid()) ||
        ((stats.mode & 64) > 0 && stats.uid === process.getuid()));
}
// Get the path of cmd.exe in windows
function getCmdPath() {
    var _a;
    return (_a = process.env['COMSPEC']) !== null && _a !== void 0 ? _a : `cmd.exe`;
}
exports.getCmdPath = getCmdPath;
//# sourceMappingURL=io-util.js.map

/***/ }),

/***/ 7351:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.findInPath = exports.which = exports.mkdirP = exports.rmRF = exports.mv = exports.cp = void 0;
const assert_1 = __nccwpck_require__(9491);
const path = __importStar(__nccwpck_require__(1017));
const ioUtil = __importStar(__nccwpck_require__(1962));
/**
 * Copies a file or folder.
 * Based off of shelljs - https://github.com/shelljs/shelljs/blob/9237f66c52e5daa40458f94f9565e18e8132f5a6/src/cp.js
 *
 * @param     source    source path
 * @param     dest      destination path
 * @param     options   optional. See CopyOptions.
 */
function cp(source, dest, options = {}) {
    return __awaiter(this, void 0, void 0, function* () {
        const { force, recursive, copySourceDirectory } = readCopyOptions(options);
        const destStat = (yield ioUtil.exists(dest)) ? yield ioUtil.stat(dest) : null;
        // Dest is an existing file, but not forcing
        if (destStat && destStat.isFile() && !force) {
            return;
        }
        // If dest is an existing directory, should copy inside.
        const newDest = destStat && destStat.isDirectory() && copySourceDirectory
            ? path.join(dest, path.basename(source))
            : dest;
        if (!(yield ioUtil.exists(source))) {
            throw new Error(`no such file or directory: ${source}`);
        }
        const sourceStat = yield ioUtil.stat(source);
        if (sourceStat.isDirectory()) {
            if (!recursive) {
                throw new Error(`Failed to copy. ${source} is a directory, but tried to copy without recursive flag.`);
            }
            else {
                yield cpDirRecursive(source, newDest, 0, force);
            }
        }
        else {
            if (path.relative(source, newDest) === '') {
                // a file cannot be copied to itself
                throw new Error(`'${newDest}' and '${source}' are the same file`);
            }
            yield copyFile(source, newDest, force);
        }
    });
}
exports.cp = cp;
/**
 * Moves a path.
 *
 * @param     source    source path
 * @param     dest      destination path
 * @param     options   optional. See MoveOptions.
 */
function mv(source, dest, options = {}) {
    return __awaiter(this, void 0, void 0, function* () {
        if (yield ioUtil.exists(dest)) {
            let destExists = true;
            if (yield ioUtil.isDirectory(dest)) {
                // If dest is directory copy src into dest
                dest = path.join(dest, path.basename(source));
                destExists = yield ioUtil.exists(dest);
            }
            if (destExists) {
                if (options.force == null || options.force) {
                    yield rmRF(dest);
                }
                else {
                    throw new Error('Destination already exists');
                }
            }
        }
        yield mkdirP(path.dirname(dest));
        yield ioUtil.rename(source, dest);
    });
}
exports.mv = mv;
/**
 * Remove a path recursively with force
 *
 * @param inputPath path to remove
 */
function rmRF(inputPath) {
    return __awaiter(this, void 0, void 0, function* () {
        if (ioUtil.IS_WINDOWS) {
            // Check for invalid characters
            // https://docs.microsoft.com/en-us/windows/win32/fileio/naming-a-file
            if (/[*"<>|]/.test(inputPath)) {
                throw new Error('File path must not contain `*`, `"`, `<`, `>` or `|` on Windows');
            }
        }
        try {
            // note if path does not exist, error is silent
            yield ioUtil.rm(inputPath, {
                force: true,
                maxRetries: 3,
                recursive: true,
                retryDelay: 300
            });
        }
        catch (err) {
            throw new Error(`File was unable to be removed ${err}`);
        }
    });
}
exports.rmRF = rmRF;
/**
 * Make a directory.  Creates the full path with folders in between
 * Will throw if it fails
 *
 * @param   fsPath        path to create
 * @returns Promise<void>
 */
function mkdirP(fsPath) {
    return __awaiter(this, void 0, void 0, function* () {
        assert_1.ok(fsPath, 'a path argument must be provided');
        yield ioUtil.mkdir(fsPath, { recursive: true });
    });
}
exports.mkdirP = mkdirP;
/**
 * Returns path of a tool had the tool actually been invoked.  Resolves via paths.
 * If you check and the tool does not exist, it will throw.
 *
 * @param     tool              name of the tool
 * @param     check             whether to check if tool exists
 * @returns   Promise<string>   path to tool
 */
function which(tool, check) {
    return __awaiter(this, void 0, void 0, function* () {
        if (!tool) {
            throw new Error("parameter 'tool' is required");
        }
        // recursive when check=true
        if (check) {
            const result = yield which(tool, false);
            if (!result) {
                if (ioUtil.IS_WINDOWS) {
                    throw new Error(`Unable to locate executable file: ${tool}. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also verify the file has a valid extension for an executable file.`);
                }
                else {
                    throw new Error(`Unable to locate executable file: ${tool}. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.`);
                }
            }
            return result;
        }
        const matches = yield findInPath(tool);
        if (matches && matches.length > 0) {
            return matches[0];
        }
        return '';
    });
}
exports.which = which;
/**
 * Returns a list of all occurrences of the given tool on the system path.
 *
 * @returns   Promise<string[]>  the paths of the tool
 */
function findInPath(tool) {
    return __awaiter(this, void 0, void 0, function* () {
        if (!tool) {
            throw new Error("parameter 'tool' is required");
        }
        // build the list of extensions to try
        const extensions = [];
        if (ioUtil.IS_WINDOWS && process.env['PATHEXT']) {
            for (const extension of process.env['PATHEXT'].split(path.delimiter)) {
                if (extension) {
                    extensions.push(extension);
                }
            }
        }
        // if it's rooted, return it if exists. otherwise return empty.
        if (ioUtil.isRooted(tool)) {
            const filePath = yield ioUtil.tryGetExecutablePath(tool, extensions);
            if (filePath) {
                return [filePath];
            }
            return [];
        }
        // if any path separators, return empty
        if (tool.includes(path.sep)) {
            return [];
        }
        // build the list of directories
        //
        // Note, technically "where" checks the current directory on Windows. From a toolkit perspective,
        // it feels like we should not do this. Checking the current directory seems like more of a use
        // case of a shell, and the which() function exposed by the toolkit should strive for consistency
        // across platforms.
        const directories = [];
        if (process.env.PATH) {
            for (const p of process.env.PATH.split(path.delimiter)) {
                if (p) {
                    directories.push(p);
                }
            }
        }
        // find all matches
        const matches = [];
        for (const directory of directories) {
            const filePath = yield ioUtil.tryGetExecutablePath(path.join(directory, tool), extensions);
            if (filePath) {
                matches.push(filePath);
            }
        }
        return matches;
    });
}
exports.findInPath = findInPath;
function readCopyOptions(options) {
    const force = options.force == null ? true : options.force;
    const recursive = Boolean(options.recursive);
    const copySourceDirectory = options.copySourceDirectory == null
        ? true
        : Boolean(options.copySourceDirectory);
    return { force, recursive, copySourceDirectory };
}
function cpDirRecursive(sourceDir, destDir, currentDepth, force) {
    return __awaiter(this, void 0, void 0, function* () {
        // Ensure there is not a run away recursive copy
        if (currentDepth >= 255)
            return;
        currentDepth++;
        yield mkdirP(destDir);
        const files = yield ioUtil.readdir(sourceDir);
        for (const fileName of files) {
            const srcFile = `${sourceDir}/${fileName}`;
            const destFile = `${destDir}/${fileName}`;
            const srcFileStat = yield ioUtil.lstat(srcFile);
            if (srcFileStat.isDirectory()) {
                // Recurse
                yield cpDirRecursive(srcFile, destFile, currentDepth, force);
            }
            else {
                yield copyFile(srcFile, destFile, force);
            }
        }
        // Change the mode for the newly created directory
        yield ioUtil.chmod(destDir, (yield ioUtil.stat(sourceDir)).mode);
    });
}
// Buffered file copy
function copyFile(srcFile, destFile, force) {
    return __awaiter(this, void 0, void 0, function* () {
        if ((yield ioUtil.lstat(srcFile)).isSymbolicLink()) {
            // unlink/re-link it
            try {
                yield ioUtil.lstat(destFile);
                yield ioUtil.unlink(destFile);
            }
            catch (e) {
                // Try to override file permission
                if (e.code === 'EPERM') {
                    yield ioUtil.chmod(destFile, '0666');
                    yield ioUtil.unlink(destFile);
                }
                // other errors = it doesn't exist, no work to do
            }
            // Copy over symlink
            const symlinkFull = yield ioUtil.readlink(srcFile);
            yield ioUtil.symlink(symlinkFull, destFile, ioUtil.IS_WINDOWS ? 'junction' : null);
        }
        else if (!(yield ioUtil.exists(destFile)) || force) {
            yield ioUtil.copyFile(srcFile, destFile);
        }
    });
}
//# sourceMappingURL=io.js.map

/***/ }),

/***/ 293:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// deno-lint-ignore-file
// deno-fmt-ignore-file
// DO NOT EDIT - This file is automatically maintained by `npm run generate-crypto-types`
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 7229:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

// Copyright 2018-2022 the Deno authors. All rights reserved. MIT license.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.crypto = void 0;
const crypto_1 = __nccwpck_require__(6113);
// At the time of writing this, DefinitelyTyped is missing types for webcrypto for Node.
// The workaround is to just use the types from lib.dom.ts and hope people are
// running unit tests in order to find any issues.
const crypto = crypto_1.webcrypto;
exports.crypto = crypto;
__exportStar(__nccwpck_require__(293), exports);


/***/ }),

/***/ 8348:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.testDefinitions = void 0;
/** Reference to the array that `Deno.test` calls insert their definition into. */
exports.testDefinitions = [];


/***/ }),

/***/ 9766:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.testDefinitions = exports.Deno = void 0;
exports.Deno = __nccwpck_require__(4618);
__exportStar(__nccwpck_require__(4618), exports);
var definitions_js_1 = __nccwpck_require__(8348);
Object.defineProperty(exports, "testDefinitions", ({ enumerable: true, get: function () { return definitions_js_1.testDefinitions; } }));


/***/ }),

/***/ 4618:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.test = void 0;
const definitions_js_1 = __nccwpck_require__(8348);
const test = function test() {
    var _a, _b;
    let testDef;
    const firstArg = arguments[0];
    const secondArg = arguments[1];
    const thirdArg = arguments[2];
    if (typeof firstArg === "string") {
        if (typeof secondArg === "object") {
            if (typeof thirdArg === "function") {
                if (secondArg.fn != null) {
                    throw new TypeError("Unexpected 'fn' field in options, test function is already provided as the third argument.");
                }
            }
            if (secondArg.name != null) {
                throw new TypeError("Unexpected 'name' field in options, test name is already provided as the first argument.");
            }
            // name, options, fn
            testDef = { name: firstArg, fn: thirdArg, ...secondArg };
        }
        else {
            // name, fn
            testDef = { name: firstArg, fn: secondArg };
        }
    }
    else if (firstArg instanceof Function) {
        // function only
        if (firstArg.name.length === 0) {
            throw new TypeError("The test function must have a name");
        }
        testDef = { fn: firstArg, name: firstArg.name };
        if (secondArg != null) {
            throw new TypeError("Unexpected second argument to Deno.test()");
        }
    }
    else if (typeof firstArg === "object") {
        testDef = { ...firstArg };
        if (typeof secondArg === "function") {
            // options, fn
            testDef.fn = secondArg;
            if (firstArg.fn != null) {
                throw new TypeError("Unexpected 'fn' field in options, test function is already provided as the second argument.");
            }
            if (testDef.name == null) {
                if (secondArg.name.length === 0) {
                    throw new TypeError("The test function must have a name");
                }
                // options without name, fn
                testDef.name = secondArg.name;
            }
        }
        else {
            if (typeof firstArg.fn !== "function") {
                throw new TypeError("Expected 'fn' field in the first argument to be a test function.");
            }
        }
    }
    else {
        throw new TypeError("Unknown test overload");
    }
    if (typeof testDef.fn !== "function") {
        throw new TypeError("Missing test function");
    }
    if (((_b = (_a = testDef.name) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) === 0) {
        throw new TypeError("The test name can't be empty");
    }
    definitions_js_1.testDefinitions.push(testDef);
};
exports.test = test;


/***/ }),

/***/ 2854:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__nccwpck_require__(3367), exports);
__exportStar(__nccwpck_require__(3032), exports);


/***/ }),

/***/ 9395:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../stable/lib.deno.d.ts" />
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _Conn_socket;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TlsConn = exports.Conn = void 0;
const net_1 = __nccwpck_require__(1808);
const FsFile_js_1 = __nccwpck_require__(1631);
class Conn extends FsFile_js_1.FsFile {
    constructor(rid, localAddr, remoteAddr, socket) {
        super(rid);
        this.rid = rid;
        this.localAddr = localAddr;
        this.remoteAddr = remoteAddr;
        _Conn_socket.set(this, void 0);
        __classPrivateFieldSet(this, _Conn_socket, socket || new net_1.Socket({ fd: rid }), "f");
    }
    async closeWrite() {
        await new Promise((resolve) => __classPrivateFieldGet(this, _Conn_socket, "f").end(resolve));
    }
    setNoDelay(enable) {
        __classPrivateFieldGet(this, _Conn_socket, "f").setNoDelay(enable);
    }
    setKeepAlive(enable) {
        __classPrivateFieldGet(this, _Conn_socket, "f").setKeepAlive(enable);
    }
    ref() {
        __classPrivateFieldGet(this, _Conn_socket, "f").ref();
    }
    unref() {
        __classPrivateFieldGet(this, _Conn_socket, "f").unref();
    }
}
exports.Conn = Conn;
_Conn_socket = new WeakMap();
class TlsConn extends Conn {
    handshake() {
        console.warn("@deno/shim-deno: Handshake is not supported.");
        return Promise.resolve({
            alpnProtocol: null,
        });
    }
}
exports.TlsConn = TlsConn;


/***/ }),

/***/ 6068:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../stable/lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _Listener_listener;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Listener = void 0;
const close_js_1 = __nccwpck_require__(4781);
const errors = __importStar(__nccwpck_require__(2826));
class Listener {
    constructor(rid, addr, listener) {
        this.rid = rid;
        this.addr = addr;
        _Listener_listener.set(this, void 0);
        __classPrivateFieldSet(this, _Listener_listener, listener, "f");
    }
    async accept() {
        if (!__classPrivateFieldGet(this, _Listener_listener, "f")) {
            throw new errors.BadResource("Listener not initialised");
        }
        const result = await __classPrivateFieldGet(this, _Listener_listener, "f").next();
        if (result.done) {
            throw new errors.BadResource("Server not listening");
        }
        return result.value;
    }
    async next() {
        let conn;
        try {
            conn = await this.accept();
        }
        catch (error) {
            if (error instanceof errors.BadResource) {
                return { value: undefined, done: true };
            }
            throw error;
        }
        return { value: conn, done: false };
    }
    return(value) {
        this.close();
        return Promise.resolve({ value, done: true });
    }
    close() {
        (0, close_js_1.close)(this.rid);
    }
    ref() {
        throw new Error("Not implemented");
    }
    unref() {
        throw new Error("Not implemented");
    }
    [(_Listener_listener = new WeakMap(), Symbol.asyncIterator)]() {
        return this;
    }
}
exports.Listener = Listener;


/***/ }),

/***/ 1027:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DEFAULT_BUFFER_SIZE = void 0;
exports.DEFAULT_BUFFER_SIZE = 32 * 1024;


/***/ }),

/***/ 937:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const errors = __importStar(__nccwpck_require__(2826));
const mapper = (Ctor) => (err) => Object.assign(new Ctor(err.message), {
    stack: err.stack,
});
const map = {
    EEXIST: mapper(errors.AlreadyExists),
    ENOENT: mapper(errors.NotFound),
};
const isNodeErr = (e) => {
    return e instanceof Error && "code" in e;
};
function mapError(e) {
    var _a;
    if (!isNodeErr(e))
        return e;
    return ((_a = map[e.code]) === null || _a === void 0 ? void 0 : _a.call(map, e)) || e;
}
exports["default"] = mapError;


/***/ }),

/***/ 8423:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

// getAccessFlag and getCreationFlag adapted from the original in Rust's std::fs
// <source path="https://github.com/rust-lang/rust/blob/304441960e7058fe97f09ef00b20739b4dc56d11/library/std/src/sys/unix/fs.rs#L694-L728" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getFsFlag = exports.getCreationFlag = exports.getAccessFlag = void 0;
const errors = __importStar(__nccwpck_require__(2826));
const fs_1 = __nccwpck_require__(7147);
const os_1 = __importDefault(__nccwpck_require__(2037));
const { O_APPEND, O_CREAT, O_EXCL, O_RDONLY, O_RDWR, O_TRUNC, O_WRONLY } = fs_1.constants;
function getAccessFlag(opts) {
    if (opts.read && !opts.write && !opts.append)
        return O_RDONLY;
    if (!opts.read && opts.write && !opts.append)
        return O_WRONLY;
    if (opts.read && opts.write && !opts.append)
        return O_RDWR;
    if (!opts.read && opts.append)
        return O_WRONLY | O_APPEND;
    if (opts.read && opts.append)
        return O_RDWR | O_APPEND;
    if (!opts.read && !opts.write && !opts.append) {
        throw new errors.BadResource("EINVAL: One of 'read', 'write', 'append' is required to open file.");
    }
    throw new errors.BadResource("EINVAL: Invalid fs flags.");
}
exports.getAccessFlag = getAccessFlag;
function getCreationFlag(opts) {
    if (!opts.write && !opts.append) {
        if (opts.truncate || opts.create || opts.createNew) {
            throw new errors.BadResource("EINVAL: One of 'write', 'append' is required to 'truncate', 'create' or 'createNew' file.");
        }
    }
    if (opts.append) {
        if (opts.truncate && !opts.createNew) {
            throw new errors.BadResource("EINVAL: unexpected 'truncate': true and 'createNew': false when 'append' is true.");
        }
    }
    if (!opts.create && !opts.truncate && !opts.createNew)
        return 0;
    if (opts.create && !opts.truncate && !opts.createNew)
        return O_CREAT;
    if (!opts.create && opts.truncate && !opts.createNew) {
        if (os_1.default.platform() === "win32") {
            // for some reason only providing O_TRUNC on windows will
            // throw a "EINVAL: invalid argument", so to work around this
            // we relax the restriction here to also create the file if it
            // doesn't exist
            return O_CREAT | O_TRUNC;
        }
        else {
            return O_TRUNC;
        }
    }
    if (opts.create && opts.truncate && !opts.createNew) {
        return O_CREAT | O_TRUNC;
    }
    if (opts.createNew)
        return O_CREAT | O_EXCL;
    throw new errors.BadResource("EINVAL: Invalid fs flags.");
}
exports.getCreationFlag = getCreationFlag;
function getFsFlag(flags) {
    return getAccessFlag(flags) | getCreationFlag(flags);
}
exports.getFsFlag = getFsFlag;


/***/ }),

/***/ 2341:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.merge = exports.mapAsync = exports.map = void 0;
function* map(iter, f) {
    for (const i of iter) {
        yield f(i);
    }
}
exports.map = map;
async function* mapAsync(iter, f) {
    for await (const i of iter) {
        yield f(i);
    }
}
exports.mapAsync = mapAsync;
async function* merge(iterables) {
    const racers = new Map(map(map(iterables, (iter) => iter[Symbol.asyncIterator]()), (iter) => [iter, iter.next()]));
    while (racers.size > 0) {
        const winner = await Promise.race(map(racers.entries(), ([iter, prom]) => prom.then((result) => ({ result, iter }))));
        if (winner.result.done) {
            racers.delete(winner.iter);
        }
        else {
            yield await winner.result.value;
            racers.set(winner.iter, winner.iter.next());
        }
    }
}
exports.merge = merge;


/***/ }),

/***/ 4970:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.randomId = void 0;
const randomId = () => {
    const n = (Math.random() * 0xfffff * 1000000).toString(16);
    return "" + n.slice(0, 6);
};
exports.randomId = randomId;


/***/ }),

/***/ 5040:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/// <reference path="../stable/lib.deno.d.ts" />
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _BufferStreamReader_instances, _BufferStreamReader_stream, _BufferStreamReader_error, _BufferStreamReader_ended, _BufferStreamReader_pendingActions, _BufferStreamReader_runPendingActions, _StreamWriter_stream;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StreamWriter = exports.BufferStreamReader = void 0;
class BufferStreamReader {
    constructor(stream) {
        _BufferStreamReader_instances.add(this);
        _BufferStreamReader_stream.set(this, void 0);
        _BufferStreamReader_error.set(this, void 0);
        _BufferStreamReader_ended.set(this, false);
        _BufferStreamReader_pendingActions.set(this, []);
        __classPrivateFieldSet(this, _BufferStreamReader_stream, stream, "f");
        __classPrivateFieldGet(this, _BufferStreamReader_stream, "f").pause();
        __classPrivateFieldGet(this, _BufferStreamReader_stream, "f").on("error", (error) => {
            __classPrivateFieldSet(this, _BufferStreamReader_error, error, "f");
            __classPrivateFieldGet(this, _BufferStreamReader_instances, "m", _BufferStreamReader_runPendingActions).call(this);
        });
        __classPrivateFieldGet(this, _BufferStreamReader_stream, "f").on("readable", () => {
            __classPrivateFieldGet(this, _BufferStreamReader_instances, "m", _BufferStreamReader_runPendingActions).call(this);
        });
        __classPrivateFieldGet(this, _BufferStreamReader_stream, "f").on("end", () => {
            __classPrivateFieldSet(this, _BufferStreamReader_ended, true, "f");
            __classPrivateFieldGet(this, _BufferStreamReader_instances, "m", _BufferStreamReader_runPendingActions).call(this);
        });
    }
    readAll() {
        return new Promise((resolve, reject) => {
            const chunks = [];
            const action = () => {
                if (__classPrivateFieldGet(this, _BufferStreamReader_error, "f")) {
                    reject(__classPrivateFieldGet(this, _BufferStreamReader_error, "f"));
                    return;
                }
                const buffer = __classPrivateFieldGet(this, _BufferStreamReader_stream, "f").read();
                if (buffer != null) {
                    chunks.push(buffer);
                    __classPrivateFieldGet(this, _BufferStreamReader_pendingActions, "f").push(action);
                }
                else if (__classPrivateFieldGet(this, _BufferStreamReader_ended, "f")) {
                    const result = Buffer.concat(chunks);
                    resolve(result);
                }
                else {
                    __classPrivateFieldGet(this, _BufferStreamReader_pendingActions, "f").push(action);
                }
            };
            action();
        });
    }
    read(p) {
        return new Promise((resolve, reject) => {
            const action = () => {
                if (__classPrivateFieldGet(this, _BufferStreamReader_error, "f")) {
                    reject(__classPrivateFieldGet(this, _BufferStreamReader_error, "f"));
                    return;
                }
                const readBuffer = __classPrivateFieldGet(this, _BufferStreamReader_stream, "f").read(p.byteLength);
                if (readBuffer && readBuffer.byteLength > 0) {
                    readBuffer.copy(p, 0, 0, readBuffer.byteLength);
                    resolve(readBuffer.byteLength);
                    return;
                }
                if (__classPrivateFieldGet(this, _BufferStreamReader_ended, "f")) {
                    resolve(null);
                }
                else {
                    __classPrivateFieldGet(this, _BufferStreamReader_pendingActions, "f").push(action);
                }
            };
            action();
        });
    }
}
exports.BufferStreamReader = BufferStreamReader;
_BufferStreamReader_stream = new WeakMap(), _BufferStreamReader_error = new WeakMap(), _BufferStreamReader_ended = new WeakMap(), _BufferStreamReader_pendingActions = new WeakMap(), _BufferStreamReader_instances = new WeakSet(), _BufferStreamReader_runPendingActions = function _BufferStreamReader_runPendingActions() {
    const errors = [];
    for (const action of __classPrivateFieldGet(this, _BufferStreamReader_pendingActions, "f").splice(0)) {
        try {
            action();
        }
        catch (err) {
            errors.push(err);
        }
    }
    if (errors.length > 0) {
        throw (errors.length > 1 ? new AggregateError(errors) : errors[0]);
    }
};
class StreamWriter {
    constructor(stream) {
        _StreamWriter_stream.set(this, void 0);
        __classPrivateFieldSet(this, _StreamWriter_stream, stream, "f");
    }
    write(p) {
        return new Promise((resolve, reject) => {
            __classPrivateFieldGet(this, _StreamWriter_stream, "f").write(p, (err) => {
                if (err) {
                    reject(err);
                }
                else {
                    resolve(p.byteLength);
                }
            });
        });
    }
}
exports.StreamWriter = StreamWriter;
_StreamWriter_stream = new WeakMap();


/***/ }),

/***/ 717:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.typescript = exports.deno = void 0;
exports.deno = "1.33.3";
exports.typescript = "5.0.4";


/***/ }),

/***/ 9136:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PermissionStatus = exports.Permissions = exports.FsFile = exports.File = void 0;
var FsFile_js_1 = __nccwpck_require__(1631);
Object.defineProperty(exports, "File", ({ enumerable: true, get: function () { return FsFile_js_1.File; } }));
Object.defineProperty(exports, "FsFile", ({ enumerable: true, get: function () { return FsFile_js_1.FsFile; } }));
var Permissions_js_1 = __nccwpck_require__(711);
Object.defineProperty(exports, "Permissions", ({ enumerable: true, get: function () { return Permissions_js_1.Permissions; } }));
var PermissionStatus_js_1 = __nccwpck_require__(751);
Object.defineProperty(exports, "PermissionStatus", ({ enumerable: true, get: function () { return PermissionStatus_js_1.PermissionStatus; } }));


/***/ }),

/***/ 1631:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.File = exports.FsFile = void 0;
const fs = __importStar(__nccwpck_require__(7147));
const fstat_js_1 = __nccwpck_require__(4667);
const fstatSync_js_1 = __nccwpck_require__(301);
const ftruncate_js_1 = __nccwpck_require__(6203);
const ftruncateSync_js_1 = __nccwpck_require__(5758);
const read_js_1 = __nccwpck_require__(7653);
const readSync_js_1 = __nccwpck_require__(7537);
const write_js_1 = __nccwpck_require__(3178);
const writeSync_js_1 = __nccwpck_require__(8331);
class FsFile {
    constructor(rid) {
        this.rid = rid;
    }
    async write(p) {
        return await (0, write_js_1.write)(this.rid, p);
    }
    writeSync(p) {
        return (0, writeSync_js_1.writeSync)(this.rid, p);
    }
    async truncate(len) {
        await (0, ftruncate_js_1.ftruncate)(this.rid, len);
    }
    truncateSync(len) {
        return (0, ftruncateSync_js_1.ftruncateSync)(this.rid, len);
    }
    read(p) {
        return (0, read_js_1.read)(this.rid, p);
    }
    readSync(p) {
        return (0, readSync_js_1.readSync)(this.rid, p);
    }
    seek(_offset, _whence) {
        throw new Error("Method not implemented.");
    }
    seekSync(_offset, _whence) {
        throw new Error("Method not implemented.");
    }
    async stat() {
        return await (0, fstat_js_1.fstat)(this.rid);
    }
    statSync() {
        return (0, fstatSync_js_1.fstatSync)(this.rid);
    }
    close() {
        fs.closeSync(this.rid);
    }
    get readable() {
        throw new Error("Not implemented.");
    }
    get writable() {
        throw new Error("Not implemented.");
    }
}
exports.FsFile = FsFile;
const File = FsFile;
exports.File = File;


/***/ }),

/***/ 751:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
var _a, _b;
var _c;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PermissionStatus = void 0;
// The listeners don't actually matter because the state of these permissions
// is constant and mocked as Node.js has all doors open.
(_a = (_c = globalThis).EventTarget) !== null && _a !== void 0 ? _a : (_c.EventTarget = (_b = (__nccwpck_require__(2361).EventTarget)) !== null && _b !== void 0 ? _b : null);
class PermissionStatus extends EventTarget {
    /** @internal */
    constructor(state) {
        super();
        this.state = state;
        this.onchange = null;
    }
}
exports.PermissionStatus = PermissionStatus;


/***/ }),

/***/ 711:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Permissions = void 0;
const PermissionStatus_js_1 = __nccwpck_require__(751);
class Permissions {
    query(desc) {
        return Promise.resolve(this.querySync(desc));
    }
    querySync(_desc) {
        return new PermissionStatus_js_1.PermissionStatus("granted");
    }
    revoke(desc) {
        return Promise.resolve(this.revokeSync(desc));
    }
    revokeSync(_desc) {
        return new PermissionStatus_js_1.PermissionStatus("denied");
    }
    request(desc) {
        return this.query(desc);
    }
    requestSync(desc) {
        return this.querySync(desc);
    }
}
exports.Permissions = Permissions;


/***/ }),

/***/ 6914:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SeekMode = void 0;
var SeekMode_js_1 = __nccwpck_require__(874);
Object.defineProperty(exports, "SeekMode", ({ enumerable: true, get: function () { return SeekMode_js_1.SeekMode; } }));


/***/ }),

/***/ 874:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SeekMode = void 0;
var SeekMode;
(function (SeekMode) {
    SeekMode[SeekMode["Start"] = 0] = "Start";
    SeekMode[SeekMode["Current"] = 1] = "Current";
    SeekMode[SeekMode["End"] = 2] = "End";
})(SeekMode = exports.SeekMode || (exports.SeekMode = {}));


/***/ }),

/***/ 5082:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Command palette -> Organize imports
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.readDir = exports.read = exports.osUptime = exports.osRelease = exports.openSync = exports.open = exports.mkdirSync = exports.mkdir = exports.memoryUsage = exports.makeTempFileSync = exports.makeTempFile = exports.makeTempDirSync = exports.makeTempDir = exports.lstatSync = exports.lstat = exports.loadavg = exports.listenTls = exports.listen = exports.linkSync = exports.link = exports.kill = exports.inspect = exports.hostname = exports.gid = exports.ftruncateSync = exports.ftruncate = exports.fsyncSync = exports.fsync = exports.fstatSync = exports.fstat = exports.fdatasyncSync = exports.fdatasync = exports.exit = exports.execPath = exports.cwd = exports.createSync = exports.create = exports.copyFileSync = exports.copyFile = exports.copy = exports.connectTls = exports.connect = exports.close = exports.chownSync = exports.chown = exports.chmodSync = exports.chmod = exports.chdir = exports.addSignalListener = exports.isatty = void 0;
exports.args = exports.writeTextFileSync = exports.writeTextFile = exports.writeSync = exports.writeFileSync = exports.writeFile = exports.write = exports.watchFs = exports.uid = exports.truncateSync = exports.truncate = exports.test = exports.symlinkSync = exports.symlink = exports.statSync = exports.stat = exports.shutdown = exports.run = exports.Process = exports.resolveDns = exports.renameSync = exports.rename = exports.removeSync = exports.removeSignalListener = exports.remove = exports.realPathSync = exports.realPath = exports.readTextFileSync = exports.readTextFile = exports.readSync = exports.readLinkSync = exports.readLink = exports.readFileSync = exports.readFile = exports.readDirSync = void 0;
var tty_1 = __nccwpck_require__(6224);
Object.defineProperty(exports, "isatty", ({ enumerable: true, get: function () { return tty_1.isatty; } }));
var addSignalListener_js_1 = __nccwpck_require__(3048);
Object.defineProperty(exports, "addSignalListener", ({ enumerable: true, get: function () { return addSignalListener_js_1.addSignalListener; } }));
var chdir_js_1 = __nccwpck_require__(8914);
Object.defineProperty(exports, "chdir", ({ enumerable: true, get: function () { return chdir_js_1.chdir; } }));
var chmod_js_1 = __nccwpck_require__(3236);
Object.defineProperty(exports, "chmod", ({ enumerable: true, get: function () { return chmod_js_1.chmod; } }));
var chmodSync_js_1 = __nccwpck_require__(4299);
Object.defineProperty(exports, "chmodSync", ({ enumerable: true, get: function () { return chmodSync_js_1.chmodSync; } }));
var chown_js_1 = __nccwpck_require__(7306);
Object.defineProperty(exports, "chown", ({ enumerable: true, get: function () { return chown_js_1.chown; } }));
var chownSync_js_1 = __nccwpck_require__(472);
Object.defineProperty(exports, "chownSync", ({ enumerable: true, get: function () { return chownSync_js_1.chownSync; } }));
var close_js_1 = __nccwpck_require__(4781);
Object.defineProperty(exports, "close", ({ enumerable: true, get: function () { return close_js_1.close; } }));
var connect_js_1 = __nccwpck_require__(5075);
Object.defineProperty(exports, "connect", ({ enumerable: true, get: function () { return connect_js_1.connect; } }));
var connectTls_js_1 = __nccwpck_require__(237);
Object.defineProperty(exports, "connectTls", ({ enumerable: true, get: function () { return connectTls_js_1.connectTls; } }));
var copy_js_1 = __nccwpck_require__(5748);
Object.defineProperty(exports, "copy", ({ enumerable: true, get: function () { return copy_js_1.copy; } }));
var copyFile_js_1 = __nccwpck_require__(4268);
Object.defineProperty(exports, "copyFile", ({ enumerable: true, get: function () { return copyFile_js_1.copyFile; } }));
var copyFileSync_js_1 = __nccwpck_require__(6957);
Object.defineProperty(exports, "copyFileSync", ({ enumerable: true, get: function () { return copyFileSync_js_1.copyFileSync; } }));
var create_js_1 = __nccwpck_require__(7109);
Object.defineProperty(exports, "create", ({ enumerable: true, get: function () { return create_js_1.create; } }));
var createSync_js_1 = __nccwpck_require__(5736);
Object.defineProperty(exports, "createSync", ({ enumerable: true, get: function () { return createSync_js_1.createSync; } }));
var cwd_js_1 = __nccwpck_require__(8296);
Object.defineProperty(exports, "cwd", ({ enumerable: true, get: function () { return cwd_js_1.cwd; } }));
var execPath_js_1 = __nccwpck_require__(6531);
Object.defineProperty(exports, "execPath", ({ enumerable: true, get: function () { return execPath_js_1.execPath; } }));
var exit_js_1 = __nccwpck_require__(830);
Object.defineProperty(exports, "exit", ({ enumerable: true, get: function () { return exit_js_1.exit; } }));
var fdatasync_js_1 = __nccwpck_require__(6640);
Object.defineProperty(exports, "fdatasync", ({ enumerable: true, get: function () { return fdatasync_js_1.fdatasync; } }));
var fdatasyncSync_js_1 = __nccwpck_require__(5226);
Object.defineProperty(exports, "fdatasyncSync", ({ enumerable: true, get: function () { return fdatasyncSync_js_1.fdatasyncSync; } }));
var fstat_js_1 = __nccwpck_require__(4667);
Object.defineProperty(exports, "fstat", ({ enumerable: true, get: function () { return fstat_js_1.fstat; } }));
var fstatSync_js_1 = __nccwpck_require__(301);
Object.defineProperty(exports, "fstatSync", ({ enumerable: true, get: function () { return fstatSync_js_1.fstatSync; } }));
var fsync_js_1 = __nccwpck_require__(7965);
Object.defineProperty(exports, "fsync", ({ enumerable: true, get: function () { return fsync_js_1.fsync; } }));
var fsyncSync_js_1 = __nccwpck_require__(1540);
Object.defineProperty(exports, "fsyncSync", ({ enumerable: true, get: function () { return fsyncSync_js_1.fsyncSync; } }));
var ftruncate_js_1 = __nccwpck_require__(6203);
Object.defineProperty(exports, "ftruncate", ({ enumerable: true, get: function () { return ftruncate_js_1.ftruncate; } }));
var ftruncateSync_js_1 = __nccwpck_require__(5758);
Object.defineProperty(exports, "ftruncateSync", ({ enumerable: true, get: function () { return ftruncateSync_js_1.ftruncateSync; } }));
var gid_js_1 = __nccwpck_require__(9706);
Object.defineProperty(exports, "gid", ({ enumerable: true, get: function () { return gid_js_1.gid; } }));
var hostname_js_1 = __nccwpck_require__(5698);
Object.defineProperty(exports, "hostname", ({ enumerable: true, get: function () { return hostname_js_1.hostname; } }));
var inspect_js_1 = __nccwpck_require__(6559);
Object.defineProperty(exports, "inspect", ({ enumerable: true, get: function () { return inspect_js_1.inspect; } }));
var kill_js_1 = __nccwpck_require__(7009);
Object.defineProperty(exports, "kill", ({ enumerable: true, get: function () { return kill_js_1.kill; } }));
var link_js_1 = __nccwpck_require__(2767);
Object.defineProperty(exports, "link", ({ enumerable: true, get: function () { return link_js_1.link; } }));
var linkSync_js_1 = __nccwpck_require__(908);
Object.defineProperty(exports, "linkSync", ({ enumerable: true, get: function () { return linkSync_js_1.linkSync; } }));
var listen_js_1 = __nccwpck_require__(5046);
Object.defineProperty(exports, "listen", ({ enumerable: true, get: function () { return listen_js_1.listen; } }));
var listenTls_js_1 = __nccwpck_require__(6936);
Object.defineProperty(exports, "listenTls", ({ enumerable: true, get: function () { return listenTls_js_1.listenTls; } }));
var loadavg_js_1 = __nccwpck_require__(547);
Object.defineProperty(exports, "loadavg", ({ enumerable: true, get: function () { return loadavg_js_1.loadavg; } }));
var lstat_js_1 = __nccwpck_require__(2694);
Object.defineProperty(exports, "lstat", ({ enumerable: true, get: function () { return lstat_js_1.lstat; } }));
var lstatSync_js_1 = __nccwpck_require__(6916);
Object.defineProperty(exports, "lstatSync", ({ enumerable: true, get: function () { return lstatSync_js_1.lstatSync; } }));
var makeTempDir_js_1 = __nccwpck_require__(4361);
Object.defineProperty(exports, "makeTempDir", ({ enumerable: true, get: function () { return makeTempDir_js_1.makeTempDir; } }));
var makeTempDirSync_js_1 = __nccwpck_require__(7129);
Object.defineProperty(exports, "makeTempDirSync", ({ enumerable: true, get: function () { return makeTempDirSync_js_1.makeTempDirSync; } }));
var makeTempFile_js_1 = __nccwpck_require__(484);
Object.defineProperty(exports, "makeTempFile", ({ enumerable: true, get: function () { return makeTempFile_js_1.makeTempFile; } }));
var makeTempFileSync_js_1 = __nccwpck_require__(6541);
Object.defineProperty(exports, "makeTempFileSync", ({ enumerable: true, get: function () { return makeTempFileSync_js_1.makeTempFileSync; } }));
var memoryUsage_js_1 = __nccwpck_require__(9021);
Object.defineProperty(exports, "memoryUsage", ({ enumerable: true, get: function () { return memoryUsage_js_1.memoryUsage; } }));
var mkdir_js_1 = __nccwpck_require__(4987);
Object.defineProperty(exports, "mkdir", ({ enumerable: true, get: function () { return mkdir_js_1.mkdir; } }));
var mkdirSync_js_1 = __nccwpck_require__(2404);
Object.defineProperty(exports, "mkdirSync", ({ enumerable: true, get: function () { return mkdirSync_js_1.mkdirSync; } }));
var open_js_1 = __nccwpck_require__(5217);
Object.defineProperty(exports, "open", ({ enumerable: true, get: function () { return open_js_1.open; } }));
var openSync_js_1 = __nccwpck_require__(1070);
Object.defineProperty(exports, "openSync", ({ enumerable: true, get: function () { return openSync_js_1.openSync; } }));
var osRelease_js_1 = __nccwpck_require__(4381);
Object.defineProperty(exports, "osRelease", ({ enumerable: true, get: function () { return osRelease_js_1.osRelease; } }));
var osUptime_js_1 = __nccwpck_require__(8277);
Object.defineProperty(exports, "osUptime", ({ enumerable: true, get: function () { return osUptime_js_1.osUptime; } }));
var read_js_1 = __nccwpck_require__(7653);
Object.defineProperty(exports, "read", ({ enumerable: true, get: function () { return read_js_1.read; } }));
var readDir_js_1 = __nccwpck_require__(4766);
Object.defineProperty(exports, "readDir", ({ enumerable: true, get: function () { return readDir_js_1.readDir; } }));
var readDirSync_js_1 = __nccwpck_require__(1299);
Object.defineProperty(exports, "readDirSync", ({ enumerable: true, get: function () { return readDirSync_js_1.readDirSync; } }));
var readFile_js_1 = __nccwpck_require__(9838);
Object.defineProperty(exports, "readFile", ({ enumerable: true, get: function () { return readFile_js_1.readFile; } }));
var readFileSync_js_1 = __nccwpck_require__(1575);
Object.defineProperty(exports, "readFileSync", ({ enumerable: true, get: function () { return readFileSync_js_1.readFileSync; } }));
var readLink_js_1 = __nccwpck_require__(7278);
Object.defineProperty(exports, "readLink", ({ enumerable: true, get: function () { return readLink_js_1.readLink; } }));
var readLinkSync_js_1 = __nccwpck_require__(2318);
Object.defineProperty(exports, "readLinkSync", ({ enumerable: true, get: function () { return readLinkSync_js_1.readLinkSync; } }));
var readSync_js_1 = __nccwpck_require__(7537);
Object.defineProperty(exports, "readSync", ({ enumerable: true, get: function () { return readSync_js_1.readSync; } }));
var readTextFile_js_1 = __nccwpck_require__(5584);
Object.defineProperty(exports, "readTextFile", ({ enumerable: true, get: function () { return readTextFile_js_1.readTextFile; } }));
var readTextFileSync_js_1 = __nccwpck_require__(887);
Object.defineProperty(exports, "readTextFileSync", ({ enumerable: true, get: function () { return readTextFileSync_js_1.readTextFileSync; } }));
var realPath_js_1 = __nccwpck_require__(2428);
Object.defineProperty(exports, "realPath", ({ enumerable: true, get: function () { return realPath_js_1.realPath; } }));
var realPathSync_js_1 = __nccwpck_require__(8232);
Object.defineProperty(exports, "realPathSync", ({ enumerable: true, get: function () { return realPathSync_js_1.realPathSync; } }));
var remove_js_1 = __nccwpck_require__(7882);
Object.defineProperty(exports, "remove", ({ enumerable: true, get: function () { return remove_js_1.remove; } }));
var removeSignalListener_js_1 = __nccwpck_require__(8421);
Object.defineProperty(exports, "removeSignalListener", ({ enumerable: true, get: function () { return removeSignalListener_js_1.removeSignalListener; } }));
var removeSync_js_1 = __nccwpck_require__(6225);
Object.defineProperty(exports, "removeSync", ({ enumerable: true, get: function () { return removeSync_js_1.removeSync; } }));
var rename_js_1 = __nccwpck_require__(2946);
Object.defineProperty(exports, "rename", ({ enumerable: true, get: function () { return rename_js_1.rename; } }));
var renameSync_js_1 = __nccwpck_require__(9995);
Object.defineProperty(exports, "renameSync", ({ enumerable: true, get: function () { return renameSync_js_1.renameSync; } }));
var resolveDns_js_1 = __nccwpck_require__(6711);
Object.defineProperty(exports, "resolveDns", ({ enumerable: true, get: function () { return resolveDns_js_1.resolveDns; } }));
var run_js_1 = __nccwpck_require__(1158);
Object.defineProperty(exports, "Process", ({ enumerable: true, get: function () { return run_js_1.Process; } }));
Object.defineProperty(exports, "run", ({ enumerable: true, get: function () { return run_js_1.run; } }));
var shutdown_js_1 = __nccwpck_require__(5848);
Object.defineProperty(exports, "shutdown", ({ enumerable: true, get: function () { return shutdown_js_1.shutdown; } }));
var stat_js_1 = __nccwpck_require__(9006);
Object.defineProperty(exports, "stat", ({ enumerable: true, get: function () { return stat_js_1.stat; } }));
var statSync_js_1 = __nccwpck_require__(2627);
Object.defineProperty(exports, "statSync", ({ enumerable: true, get: function () { return statSync_js_1.statSync; } }));
var symlink_js_1 = __nccwpck_require__(3162);
Object.defineProperty(exports, "symlink", ({ enumerable: true, get: function () { return symlink_js_1.symlink; } }));
var symlinkSync_js_1 = __nccwpck_require__(1041);
Object.defineProperty(exports, "symlinkSync", ({ enumerable: true, get: function () { return symlinkSync_js_1.symlinkSync; } }));
var test_js_1 = __nccwpck_require__(4305);
Object.defineProperty(exports, "test", ({ enumerable: true, get: function () { return test_js_1.test; } }));
var truncate_js_1 = __nccwpck_require__(2947);
Object.defineProperty(exports, "truncate", ({ enumerable: true, get: function () { return truncate_js_1.truncate; } }));
var truncateSync_js_1 = __nccwpck_require__(721);
Object.defineProperty(exports, "truncateSync", ({ enumerable: true, get: function () { return truncateSync_js_1.truncateSync; } }));
var uid_js_1 = __nccwpck_require__(1905);
Object.defineProperty(exports, "uid", ({ enumerable: true, get: function () { return uid_js_1.uid; } }));
var watchFs_js_1 = __nccwpck_require__(1351);
Object.defineProperty(exports, "watchFs", ({ enumerable: true, get: function () { return watchFs_js_1.watchFs; } }));
var write_js_1 = __nccwpck_require__(3178);
Object.defineProperty(exports, "write", ({ enumerable: true, get: function () { return write_js_1.write; } }));
var writeFile_js_1 = __nccwpck_require__(4553);
Object.defineProperty(exports, "writeFile", ({ enumerable: true, get: function () { return writeFile_js_1.writeFile; } }));
var writeFileSync_js_1 = __nccwpck_require__(4356);
Object.defineProperty(exports, "writeFileSync", ({ enumerable: true, get: function () { return writeFileSync_js_1.writeFileSync; } }));
var writeSync_js_1 = __nccwpck_require__(8331);
Object.defineProperty(exports, "writeSync", ({ enumerable: true, get: function () { return writeSync_js_1.writeSync; } }));
var writeTextFile_js_1 = __nccwpck_require__(3238);
Object.defineProperty(exports, "writeTextFile", ({ enumerable: true, get: function () { return writeTextFile_js_1.writeTextFile; } }));
var writeTextFileSync_js_1 = __nccwpck_require__(5538);
Object.defineProperty(exports, "writeTextFileSync", ({ enumerable: true, get: function () { return writeTextFileSync_js_1.writeTextFileSync; } }));
var args_js_1 = __nccwpck_require__(3710);
Object.defineProperty(exports, "args", ({ enumerable: true, get: function () { return args_js_1.args; } }));


/***/ }),

/***/ 3048:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

/// <reference path="../lib.deno.d.ts" />
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addSignalListener = void 0;
const process_1 = __importDefault(__nccwpck_require__(7282));
function denoSignalToNodeJs(signal) {
    if (signal === "SIGEMT") {
        throw new Error("SIGEMT is not supported");
    }
    return signal;
}
const addSignalListener = (signal, handler) => {
    process_1.default.addListener(denoSignalToNodeJs(signal), handler);
};
exports.addSignalListener = addSignalListener;


/***/ }),

/***/ 8914:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.chdir = void 0;
const url_1 = __nccwpck_require__(7310);
const errorMap_js_1 = __importDefault(__nccwpck_require__(937));
const variables_js_1 = __nccwpck_require__(2565);
const chdir = function (path) {
    try {
        return process.chdir(path instanceof URL ? (0, url_1.fileURLToPath)(path) : path);
    }
    catch (error) {
        if ((error === null || error === void 0 ? void 0 : error.code) === "ENOENT") {
            throw new variables_js_1.errors.NotFound(`No such file or directory (os error 2), chdir '${path}'`);
        }
        throw (0, errorMap_js_1.default)(error);
    }
};
exports.chdir = chdir;


/***/ }),

/***/ 3236:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.chmod = void 0;
const fs = __importStar(__nccwpck_require__(3292));
exports.chmod = fs.chmod;


/***/ }),

/***/ 4299:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.chmodSync = void 0;
const fs = __importStar(__nccwpck_require__(7147));
exports.chmodSync = fs.chmodSync;


/***/ }),

/***/ 7306:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.chown = void 0;
const fs = __importStar(__nccwpck_require__(3292));
const chown = async (path, uid, gid) => await fs.chown(path, uid !== null && uid !== void 0 ? uid : -1, gid !== null && gid !== void 0 ? gid : -1);
exports.chown = chown;


/***/ }),

/***/ 472:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.chownSync = void 0;
const fs = __importStar(__nccwpck_require__(7147));
const chownSync = (path, uid, gid) => fs.chownSync(path, uid !== null && uid !== void 0 ? uid : -1, gid !== null && gid !== void 0 ? gid : -1);
exports.chownSync = chownSync;


/***/ }),

/***/ 4781:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.close = void 0;
const fs = __importStar(__nccwpck_require__(7147));
exports.close = fs.closeSync;


/***/ }),

/***/ 5075:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.connect = void 0;
const net_1 = __nccwpck_require__(1808);
const Conn_js_1 = __nccwpck_require__(9395);
const connect = function connect(options) {
    if (options.transport === "unix") {
        throw new Error("Unstable UnixConnectOptions is not implemented");
    }
    const { transport = "tcp", hostname = "127.0.0.1", port } = options;
    if (transport !== "tcp") {
        throw new Error("Deno.connect is only implemented for transport: tcp");
    }
    const socket = (0, net_1.createConnection)({ port, host: hostname });
    socket.on("error", (err) => console.error(err));
    return new Promise((resolve) => {
        socket.once("connect", () => {
            // @ts-expect-error undocumented socket._handle property
            const rid = socket._handle.fd;
            const localAddr = {
                // cannot be undefined while socket is connected
                hostname: socket.localAddress,
                port: socket.localPort,
                transport: "tcp",
            };
            const remoteAddr = {
                // cannot be undefined while socket is connected
                hostname: socket.remoteAddress,
                port: socket.remotePort,
                transport: "tcp",
            };
            resolve(new Conn_js_1.Conn(rid, localAddr, remoteAddr, socket));
        });
    });
};
exports.connect = connect;


/***/ }),

/***/ 237:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.connectTls = void 0;
const tls_1 = __nccwpck_require__(4404);
const Conn_js_1 = __nccwpck_require__(9395);
const readTextFile_js_1 = __nccwpck_require__(5584);
const connectTls = async function connectTls({ port, hostname = "127.0.0.1", certFile }) {
    const cert = certFile && await (0, readTextFile_js_1.readTextFile)(certFile);
    const socket = (0, tls_1.connect)({ port, host: hostname, cert });
    return new Promise((resolve) => {
        socket.on("connect", () => {
            // @ts-expect-error undocumented socket._handle property
            const rid = socket._handle.fd;
            const localAddr = {
                // cannot be undefined while socket is connected
                hostname: socket.localAddress,
                port: socket.localPort,
                transport: "tcp",
            };
            const remoteAddr = {
                // cannot be undefined while socket is connected
                hostname: socket.remoteAddress,
                port: socket.remotePort,
                transport: "tcp",
            };
            resolve(new Conn_js_1.TlsConn(rid, localAddr, remoteAddr, socket));
        });
    });
};
exports.connectTls = connectTls;


/***/ }),

/***/ 5748:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.copy = void 0;
const consts_js_1 = __nccwpck_require__(1027);
const copy = async function copy(src, dst, options) {
    var _a;
    let n = 0;
    const bufSize = (_a = options === null || options === void 0 ? void 0 : options.bufSize) !== null && _a !== void 0 ? _a : consts_js_1.DEFAULT_BUFFER_SIZE;
    const b = new Uint8Array(bufSize);
    let gotEOF = false;
    while (gotEOF === false) {
        const result = await src.read(b);
        if (result === null) {
            gotEOF = true;
        }
        else {
            let nwritten = 0;
            while (nwritten < result) {
                nwritten += await dst.write(b.subarray(nwritten, result));
            }
            n += nwritten;
        }
    }
    return n;
};
exports.copy = copy;


/***/ }),

/***/ 4268:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.copyFile = void 0;
const fs = __importStar(__nccwpck_require__(3292));
const errorMap_js_1 = __importDefault(__nccwpck_require__(937));
const errors = __importStar(__nccwpck_require__(2826));
const copyFile = async (src, dest) => {
    try {
        await fs.copyFile(src, dest);
    }
    catch (error) {
        if ((error === null || error === void 0 ? void 0 : error.code) === "ENOENT") {
            throw new errors.NotFound(`File not found, copy '${src}' -> '${dest}'`);
        }
        throw (0, errorMap_js_1.default)(error);
    }
};
exports.copyFile = copyFile;


/***/ }),

/***/ 6957:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.copyFileSync = void 0;
const fs = __importStar(__nccwpck_require__(7147));
const errorMap_js_1 = __importDefault(__nccwpck_require__(937));
const errors = __importStar(__nccwpck_require__(2826));
const copyFileSync = (src, dest) => {
    try {
        fs.copyFileSync(src, dest);
    }
    catch (error) {
        if ((error === null || error === void 0 ? void 0 : error.code) === "ENOENT") {
            throw new errors.NotFound(`File not found, copy '${src}' -> '${dest}'`);
        }
        throw (0, errorMap_js_1.default)(error);
    }
};
exports.copyFileSync = copyFileSync;


/***/ }),

/***/ 7109:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.create = void 0;
const open_js_1 = __nccwpck_require__(5217);
const create = async function create(path) {
    return await (0, open_js_1.open)(path, { write: true, create: true, truncate: true });
};
exports.create = create;


/***/ }),

/***/ 5736:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createSync = void 0;
const openSync_js_1 = __nccwpck_require__(1070);
const createSync = function createSync(path) {
    return (0, openSync_js_1.openSync)(path, {
        create: true,
        truncate: true,
        read: true,
        write: true,
    });
};
exports.createSync = createSync;


/***/ }),

/***/ 8296:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.cwd = void 0;
exports.cwd = process.cwd;


/***/ }),

/***/ 6531:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.execPath = void 0;
const which_1 = __importDefault(__nccwpck_require__(4207));
const execPath = () => which_1.default.sync("deno");
exports.execPath = execPath;


/***/ }),

/***/ 830:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.exit = void 0;
const exit = function exit(code) {
    return process.exit(code);
};
exports.exit = exit;


/***/ }),

/***/ 6640:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fdatasync = void 0;
const fs_1 = __nccwpck_require__(7147);
const util_1 = __nccwpck_require__(3837);
const _fdatasync = (0, util_1.promisify)(fs_1.fdatasync);
exports.fdatasync = _fdatasync;


/***/ }),

/***/ 5226:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fdatasyncSync = void 0;
const fs_1 = __nccwpck_require__(7147);
exports.fdatasyncSync = fs_1.fdatasyncSync;


/***/ }),

/***/ 4667:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fstat = void 0;
const fs = __importStar(__nccwpck_require__(7147));
const util_1 = __nccwpck_require__(3837);
const stat_js_1 = __nccwpck_require__(9006);
const nodeFstat = (0, util_1.promisify)(fs.fstat);
const fstat = async function (fd) {
    return (0, stat_js_1.denoifyFileInfo)(await nodeFstat(fd));
};
exports.fstat = fstat;


/***/ }),

/***/ 301:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fstatSync = void 0;
const fs_1 = __nccwpck_require__(7147);
const stat_js_1 = __nccwpck_require__(9006);
const fstatSync = function fstatSync(fd) {
    return (0, stat_js_1.denoifyFileInfo)((0, fs_1.fstatSync)(fd));
};
exports.fstatSync = fstatSync;


/***/ }),

/***/ 7965:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fsync = void 0;
const fs_1 = __nccwpck_require__(7147);
const util_1 = __nccwpck_require__(3837);
const fsync = function fsync(rid) {
    return (0, util_1.promisify)(fs_1.fsync)(rid);
};
exports.fsync = fsync;


/***/ }),

/***/ 1540:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fsyncSync = void 0;
const fs_1 = __nccwpck_require__(7147);
const fsyncSync = function fsyncSync(rid) {
    return (0, fs_1.fsyncSync)(rid);
};
exports.fsyncSync = fsyncSync;


/***/ }),

/***/ 6203:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ftruncate = void 0;
const fs_1 = __nccwpck_require__(7147);
const util_1 = __nccwpck_require__(3837);
const _ftruncate = (0, util_1.promisify)(fs_1.ftruncate);
exports.ftruncate = _ftruncate;


/***/ }),

/***/ 5758:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ftruncateSync = void 0;
const fs_1 = __nccwpck_require__(7147);
exports.ftruncateSync = fs_1.ftruncateSync;


/***/ }),

/***/ 9706:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

/// <reference path="../lib.deno.d.ts" />
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.gid = void 0;
const process_1 = __importDefault(__nccwpck_require__(7282));
exports.gid = process_1.default.getgid;


/***/ }),

/***/ 5698:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

/// <reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hostname = void 0;
const os = __importStar(__nccwpck_require__(2037));
const hostname = function hostname() {
    return os.hostname();
};
exports.hostname = hostname;


/***/ }),

/***/ 6559:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.inspect = void 0;
const util = __importStar(__nccwpck_require__(3837));
const inspect = (value, options = {}) => util.inspect(value, options);
exports.inspect = inspect;


/***/ }),

/***/ 7009:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

/// <reference path="../lib.deno.d.ts" />
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.kill = void 0;
const os_1 = __importDefault(__nccwpck_require__(2037));
const process_1 = __importDefault(__nccwpck_require__(7282));
const kill = function (pid, signo) {
    if (pid < 0 && os_1.default.platform() === "win32") {
        throw new TypeError("Invalid pid");
    }
    process_1.default.kill(pid, signo);
};
exports.kill = kill;


/***/ }),

/***/ 2767:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.link = void 0;
const fs = __importStar(__nccwpck_require__(3292));
exports.link = fs.link;


/***/ }),

/***/ 908:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.linkSync = void 0;
const fs = __importStar(__nccwpck_require__(7147));
exports.linkSync = fs.linkSync;


/***/ }),

/***/ 5046:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.listen = void 0;
const net_1 = __nccwpck_require__(1808);
const Conn_js_1 = __nccwpck_require__(9395);
const Listener_js_1 = __nccwpck_require__(6068);
async function* _listen(server, waitFor) {
    await waitFor;
    while (server.listening) {
        yield new Promise((resolve) => server.once("connection", (socket) => {
            socket.on("error", (err) => console.error(err));
            // @ts-expect-error undocumented socket._handle property
            const rid = socket._handle.fd;
            const localAddr = {
                // cannot be undefined while socket is connected
                hostname: socket.localAddress,
                port: socket.localPort,
                transport: "tcp",
            };
            const remoteAddr = {
                // cannot be undefined while socket is connected
                hostname: socket.remoteAddress,
                port: socket.remotePort,
                transport: "tcp",
            };
            resolve(new Conn_js_1.Conn(rid, localAddr, remoteAddr));
        }));
    }
}
const listen = function listen(options) {
    if (options.transport === "unix") {
        throw new Error("Unstable UnixListenOptions is not implemented");
    }
    const { port, hostname = "0.0.0.0", transport = "tcp" } = options;
    if (transport !== "tcp") {
        throw new Error("Deno.listen is only implemented for transport: tcp");
    }
    const server = (0, net_1.createServer)();
    const waitFor = new Promise((resolve) => 
    // server._handle.fd is assigned immediately on .listen()
    server.listen(port, hostname, resolve));
    // @ts-expect-error undocumented socket._handle property
    const listener = new Listener_js_1.Listener(server._handle.fd, {
        hostname,
        port,
        transport: "tcp",
    }, _listen(server, waitFor));
    return listener;
};
exports.listen = listen;


/***/ }),

/***/ 6936:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.listenTls = void 0;
const tls_1 = __nccwpck_require__(4404);
const Conn_js_1 = __nccwpck_require__(9395);
const Listener_js_1 = __nccwpck_require__(6068);
const readTextFileSync_js_1 = __nccwpck_require__(887);
async function* _listen(server, waitFor) {
    await waitFor;
    while (server.listening) {
        yield new Promise((resolve) => server.once("secureConnection", (socket) => {
            socket.on("error", (err) => console.error(err));
            // @ts-expect-error undocumented socket._handle property
            const rid = socket._handle.fd;
            const localAddr = {
                // cannot be undefined while socket is connected
                hostname: socket.localAddress,
                port: socket.localPort,
                transport: "tcp",
            };
            const remoteAddr = {
                // cannot be undefined while socket is connected
                hostname: socket.remoteAddress,
                port: socket.remotePort,
                transport: "tcp",
            };
            resolve(new Conn_js_1.TlsConn(rid, localAddr, remoteAddr));
        }));
    }
}
const listenTls = function listen({ port, hostname = "0.0.0.0", transport = "tcp", certFile, keyFile }) {
    if (transport !== "tcp") {
        throw new Error("Deno.listen is only implemented for transport: tcp");
    }
    const [cert, key] = [certFile, keyFile].map((f) => f == null ? undefined : (0, readTextFileSync_js_1.readTextFileSync)(f));
    const server = (0, tls_1.createServer)({ cert, key });
    const waitFor = new Promise((resolve) => 
    // server._handle.fd is assigned immediately on .listen()
    server.listen(port, hostname, resolve));
    // @ts-expect-error undocumented socket._handle property
    const listener = new Listener_js_1.Listener(server._handle.fd, {
        hostname,
        port,
        transport: "tcp",
    }, _listen(server, waitFor));
    return listener;
};
exports.listenTls = listenTls;


/***/ }),

/***/ 547:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

/// <reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.loadavg = void 0;
const os = __importStar(__nccwpck_require__(2037));
const loadavg = function loadavg() {
    return os.loadavg();
};
exports.loadavg = loadavg;


/***/ }),

/***/ 2694:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.lstat = void 0;
const fs = __importStar(__nccwpck_require__(3292));
const stat_js_1 = __nccwpck_require__(9006);
const errorMap_js_1 = __importDefault(__nccwpck_require__(937));
const lstat = async (path) => {
    try {
        return (0, stat_js_1.denoifyFileInfo)(await fs.lstat(path));
    }
    catch (e) {
        throw (0, errorMap_js_1.default)(e);
    }
};
exports.lstat = lstat;


/***/ }),

/***/ 6916:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.lstatSync = void 0;
const fs = __importStar(__nccwpck_require__(7147));
const stat_js_1 = __nccwpck_require__(9006);
const lstatSync = (path) => (0, stat_js_1.denoifyFileInfo)(fs.lstatSync(path));
exports.lstatSync = lstatSync;


/***/ }),

/***/ 4361:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.makeTempDir = void 0;
const promises_1 = __nccwpck_require__(3292);
const path_1 = __nccwpck_require__(1017);
const os_1 = __nccwpck_require__(2037);
const makeTempDir = function makeTempDir({ prefix = "" } = {}) {
    return (0, promises_1.mkdtemp)((0, path_1.join)((0, os_1.tmpdir)(), prefix || "/"));
};
exports.makeTempDir = makeTempDir;


/***/ }),

/***/ 7129:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.makeTempDirSync = void 0;
const fs_1 = __nccwpck_require__(7147);
const path_1 = __nccwpck_require__(1017);
const os_1 = __nccwpck_require__(2037);
const makeTempDirSync = function makeTempDirSync({ prefix = "" } = {}) {
    return (0, fs_1.mkdtempSync)((0, path_1.join)((0, os_1.tmpdir)(), prefix || "/"));
};
exports.makeTempDirSync = makeTempDirSync;


/***/ }),

/***/ 484:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.makeTempFile = void 0;
const os_1 = __nccwpck_require__(2037);
const path_1 = __nccwpck_require__(1017);
const random_id_js_1 = __nccwpck_require__(4970);
const writeTextFile_js_1 = __nccwpck_require__(3238);
const makeTempFile = async function makeTempFile({ prefix = "" } = {}) {
    const name = (0, path_1.join)((0, os_1.tmpdir)(), prefix, (0, random_id_js_1.randomId)());
    await (0, writeTextFile_js_1.writeTextFile)(name, "");
    return name;
};
exports.makeTempFile = makeTempFile;


/***/ }),

/***/ 6541:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.makeTempFileSync = void 0;
const os_1 = __nccwpck_require__(2037);
const path_1 = __nccwpck_require__(1017);
const random_id_js_1 = __nccwpck_require__(4970);
const writeTextFileSync_js_1 = __nccwpck_require__(5538);
const makeTempFileSync = function makeTempFileSync({ prefix = "" } = {}) {
    const name = (0, path_1.join)((0, os_1.tmpdir)(), prefix, (0, random_id_js_1.randomId)());
    (0, writeTextFileSync_js_1.writeTextFileSync)(name, "");
    return name;
};
exports.makeTempFileSync = makeTempFileSync;


/***/ }),

/***/ 9021:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.memoryUsage = void 0;
exports.memoryUsage = process.memoryUsage;


/***/ }),

/***/ 4987:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mkdir = void 0;
const promises_1 = __nccwpck_require__(3292);
const errorMap_js_1 = __importDefault(__nccwpck_require__(937));
const variables_js_1 = __nccwpck_require__(2565);
const mkdir = async function mkdir(path, options) {
    try {
        await (0, promises_1.mkdir)(path, options);
    }
    catch (error) {
        if ((error === null || error === void 0 ? void 0 : error.code) === "EEXIST") {
            throw new variables_js_1.errors.AlreadyExists(`File exists (os error 17), mkdir '${path}'`);
        }
        throw (0, errorMap_js_1.default)(error);
    }
};
exports.mkdir = mkdir;


/***/ }),

/***/ 2404:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mkdirSync = void 0;
const fs = __importStar(__nccwpck_require__(7147));
const errorMap_js_1 = __importDefault(__nccwpck_require__(937));
const variables_js_1 = __nccwpck_require__(2565);
const mkdirSync = (path, options) => {
    try {
        fs.mkdirSync(path, options);
    }
    catch (error) {
        if ((error === null || error === void 0 ? void 0 : error.code) === "EEXIST") {
            throw new variables_js_1.errors.AlreadyExists(`File exists (os error 17), mkdir '${path}'`);
        }
        throw (0, errorMap_js_1.default)(error);
    }
};
exports.mkdirSync = mkdirSync;


/***/ }),

/***/ 5217:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.open = void 0;
const fs_1 = __nccwpck_require__(7147);
const util_1 = __nccwpck_require__(3837);
const FsFile_js_1 = __nccwpck_require__(1631);
const fs_flags_js_1 = __nccwpck_require__(8423);
const errorMap_js_1 = __importDefault(__nccwpck_require__(937));
const nodeOpen = (0, util_1.promisify)(fs_1.open);
const open = async function open(path, { read, write, append, truncate, create, createNew, mode = 0o666 } = {
    read: true,
}) {
    const flagMode = (0, fs_flags_js_1.getFsFlag)({
        read,
        write,
        append,
        truncate,
        create,
        createNew,
    });
    try {
        const fd = await nodeOpen(path, flagMode, mode);
        return new FsFile_js_1.File(fd);
    }
    catch (err) {
        throw (0, errorMap_js_1.default)(err);
    }
};
exports.open = open;


/***/ }),

/***/ 1070:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.openSync = void 0;
const fs_1 = __nccwpck_require__(7147);
const FsFile_js_1 = __nccwpck_require__(1631);
const fs_flags_js_1 = __nccwpck_require__(8423);
const errorMap_js_1 = __importDefault(__nccwpck_require__(937));
const openSync = function openSync(path, { read, write, append, truncate, create, createNew, mode = 0o666 } = {
    read: true,
}) {
    const flagMode = (0, fs_flags_js_1.getFsFlag)({
        read,
        write,
        append,
        truncate,
        create,
        createNew,
    });
    try {
        const fd = (0, fs_1.openSync)(path, flagMode, mode);
        return new FsFile_js_1.File(fd);
    }
    catch (err) {
        throw (0, errorMap_js_1.default)(err);
    }
};
exports.openSync = openSync;


/***/ }),

/***/ 4381:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

/// <reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.osRelease = void 0;
const os_1 = __nccwpck_require__(2037);
const osRelease = function osRelease() {
    return (0, os_1.release)();
};
exports.osRelease = osRelease;


/***/ }),

/***/ 8277:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

/// <reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.osUptime = void 0;
const os_1 = __nccwpck_require__(2037);
const osUptime = function osUptime() {
    return (0, os_1.uptime)();
};
exports.osUptime = osUptime;


/***/ }),

/***/ 7653:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.read = void 0;
const util_1 = __nccwpck_require__(3837);
const fs_1 = __nccwpck_require__(7147);
const _read = (0, util_1.promisify)(fs_1.read);
const read = async function read(rid, buffer) {
    if (buffer == null) {
        throw new TypeError("Buffer must not be null.");
    }
    if (buffer.length === 0) {
        return 0;
    }
    const { bytesRead } = await _read(rid, buffer, 0, buffer.length, null);
    // node returns 0 on EOF, Deno expects null
    return bytesRead === 0 ? null : bytesRead;
};
exports.read = read;


/***/ }),

/***/ 4766:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.readDir = void 0;
const promises_1 = __nccwpck_require__(3292);
const errorMap_js_1 = __importDefault(__nccwpck_require__(937));
const readDir = async function* readDir(path) {
    try {
        for await (const e of await (0, promises_1.opendir)(String(path))) {
            const ent = {
                name: e.name,
                isFile: e.isFile(),
                isDirectory: e.isDirectory(),
                isSymlink: e.isSymbolicLink(),
            };
            yield ent;
        }
    }
    catch (e) {
        throw (0, errorMap_js_1.default)(e);
    }
};
exports.readDir = readDir;


/***/ }),

/***/ 1299:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.readDirSync = void 0;
const fs_1 = __nccwpck_require__(7147);
const errorMap_js_1 = __importDefault(__nccwpck_require__(937));
const readDirSync = function* readDir(path) {
    try {
        for (const e of (0, fs_1.readdirSync)(String(path), { withFileTypes: true })) {
            const ent = {
                name: e.name,
                isFile: e.isFile(),
                isDirectory: e.isDirectory(),
                isSymlink: e.isSymbolicLink(),
            };
            yield ent;
        }
    }
    catch (e) {
        throw (0, errorMap_js_1.default)(e);
    }
};
exports.readDirSync = readDirSync;


/***/ }),

/***/ 9838:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.readFile = void 0;
const promises_1 = __nccwpck_require__(3292);
const errorMap_js_1 = __importDefault(__nccwpck_require__(937));
const readFile = async function readFile(path, { signal } = {}) {
    try {
        const buf = await (0, promises_1.readFile)(path, { signal });
        return new Uint8Array(buf.buffer, buf.byteOffset, buf.length);
    }
    catch (e) {
        throw (0, errorMap_js_1.default)(e);
    }
};
exports.readFile = readFile;


/***/ }),

/***/ 1575:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.readFileSync = void 0;
const fs_1 = __nccwpck_require__(7147);
const errorMap_js_1 = __importDefault(__nccwpck_require__(937));
const readFileSync = function readFileSync(path) {
    try {
        const buf = (0, fs_1.readFileSync)(path);
        return new Uint8Array(buf.buffer, buf.byteOffset, buf.length);
    }
    catch (e) {
        throw (0, errorMap_js_1.default)(e);
    }
};
exports.readFileSync = readFileSync;


/***/ }),

/***/ 7278:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.readLink = void 0;
const fs = __importStar(__nccwpck_require__(3292));
exports.readLink = fs.readlink;


/***/ }),

/***/ 2318:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.readLinkSync = void 0;
const fs = __importStar(__nccwpck_require__(7147));
exports.readLinkSync = fs.readlinkSync;


/***/ }),

/***/ 7537:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.readSync = void 0;
const fs = __importStar(__nccwpck_require__(7147));
const readSync = (fd, buffer) => {
    const bytesRead = fs.readSync(fd, buffer);
    // node returns 0 on EOF, Deno expects null
    return bytesRead === 0 ? null : bytesRead;
};
exports.readSync = readSync;


/***/ }),

/***/ 5584:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.readTextFile = void 0;
const promises_1 = __nccwpck_require__(3292);
const errorMap_js_1 = __importDefault(__nccwpck_require__(937));
const readTextFile = async (path, { signal } = {}) => {
    try {
        return await (0, promises_1.readFile)(path, { encoding: "utf8", signal });
    }
    catch (e) {
        throw (0, errorMap_js_1.default)(e);
    }
};
exports.readTextFile = readTextFile;


/***/ }),

/***/ 887:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.readTextFileSync = void 0;
const fs = __importStar(__nccwpck_require__(7147));
const errorMap_js_1 = __importDefault(__nccwpck_require__(937));
const readTextFileSync = function (path) {
    try {
        return fs.readFileSync(path, "utf8");
    }
    catch (e) {
        throw (0, errorMap_js_1.default)(e);
    }
};
exports.readTextFileSync = readTextFileSync;


/***/ }),

/***/ 2428:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.realPath = void 0;
const fs = __importStar(__nccwpck_require__(3292));
exports.realPath = fs.realpath;


/***/ }),

/***/ 8232:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.realPathSync = void 0;
const fs = __importStar(__nccwpck_require__(7147));
exports.realPathSync = fs.realpathSync;


/***/ }),

/***/ 7882:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.remove = void 0;
const promises_1 = __nccwpck_require__(3292);
const remove = async function remove(path, options = {}) {
    const innerOptions = options.recursive
        ? { recursive: true, force: true }
        : {};
    try {
        return await (0, promises_1.rm)(path, innerOptions);
    }
    catch (err) {
        if (err.code === "ERR_FS_EISDIR") {
            return await (0, promises_1.rmdir)(path, innerOptions);
        }
        else {
            throw err;
        }
    }
};
exports.remove = remove;


/***/ }),

/***/ 8421:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

/// <reference path="../lib.deno.d.ts" />
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.removeSignalListener = void 0;
const process_1 = __importDefault(__nccwpck_require__(7282));
const removeSignalListener = (signal, handler) => {
    process_1.default.removeListener(signal, handler);
};
exports.removeSignalListener = removeSignalListener;


/***/ }),

/***/ 6225:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.removeSync = void 0;
const fs = __importStar(__nccwpck_require__(7147));
const removeSync = (path, options = {}) => {
    const innerOptions = options.recursive
        ? { recursive: true, force: true }
        : {};
    try {
        fs.rmSync(path, innerOptions);
    }
    catch (err) {
        if (err.code === "ERR_FS_EISDIR") {
            fs.rmdirSync(path, innerOptions);
        }
        else {
            throw err;
        }
    }
};
exports.removeSync = removeSync;


/***/ }),

/***/ 2946:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rename = void 0;
const promises_1 = __nccwpck_require__(3292);
const rename = function rename(oldpath, newpath) {
    return (0, promises_1.rename)(oldpath, newpath);
};
exports.rename = rename;


/***/ }),

/***/ 9995:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.renameSync = void 0;
const fs = __importStar(__nccwpck_require__(7147));
exports.renameSync = fs.renameSync;


/***/ }),

/***/ 6711:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.resolveDns = void 0;
const dns_1 = __importDefault(__nccwpck_require__(9523));
const resolveDns = function resolveDns(query, recordType, options) {
    if (options) {
        throw Error(`resolveDns option not implemnted yet`);
    }
    switch (recordType) {
        case "A":
        /* falls through */
        case "AAAA":
        case "CNAME":
        case "NS":
        case "PTR":
            return new Promise((resolve, reject) => {
                dns_1.default.resolve(query, recordType, (err, addresses) => {
                    if (err) {
                        reject(err);
                    }
                    else {
                        resolve(addresses);
                    }
                });
            });
        case "ANAME":
        case "CAA":
        case "MX":
        case "NAPTR":
        case "SOA":
        case "SRV":
        case "TXT":
        default:
            throw Error(`resolveDns type ${recordType} not implemnted yet`);
    }
};
exports.resolveDns = resolveDns;


/***/ }),

/***/ 1158:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

/// <reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _Process_process, _Process_stderr, _Process_stdout, _Process_stdin, _Process_status, _Process_receivedStatus, _ProcessReadStream_stream, _ProcessReadStream_bufferStreamReader, _ProcessReadStream_closed, _ProcessWriteStream_stream, _ProcessWriteStream_streamWriter, _ProcessWriteStream_closed;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Process = exports.run = void 0;
const child_process_1 = __importDefault(__nccwpck_require__(2081));
const fs_1 = __importDefault(__nccwpck_require__(7147));
const os_1 = __importDefault(__nccwpck_require__(2037));
const url_1 = __importDefault(__nccwpck_require__(7310));
const events_1 = __nccwpck_require__(2361);
const which_1 = __importDefault(__nccwpck_require__(4207));
const streams_js_1 = __nccwpck_require__(5040);
const errors = __importStar(__nccwpck_require__(2826));
const run = function run(options) {
    const [cmd, ...args] = options.cmd;
    if (options.cwd && !fs_1.default.existsSync(options.cwd)) {
        throw new Error("The directory name is invalid.");
    }
    // childProcess.spawn will asynchronously check if the command exists, but
    // we need to do this synchronously
    const commandName = getCmd(cmd);
    if (!which_1.default.sync(commandName, { nothrow: true })) {
        throw new errors.NotFound("The system cannot find the file specified.");
    }
    const process = child_process_1.default.spawn(commandName, args, {
        cwd: options.cwd,
        env: getEnv(options),
        uid: options.uid,
        gid: options.gid,
        shell: false,
        stdio: [
            getStdio(options.stdin, "in"),
            getStdio(options.stdout, "out"),
            getStdio(options.stderr, "out"),
        ],
    });
    return new Process(process);
};
exports.run = run;
function getStdio(value, kind) {
    if (value === "inherit" || value == null) {
        return "inherit"; // default
    }
    else if (value === "piped") {
        return "pipe";
    }
    else if (value === "null") {
        return "ignore";
    }
    else if (typeof value === "number") {
        switch (kind) {
            case "in":
                return fs_1.default.createReadStream(null, { fd: value });
            case "out":
                return fs_1.default.createWriteStream(null, { fd: value });
            default: {
                const _assertNever = kind;
                throw new Error("Unreachable.");
            }
        }
    }
    else {
        const _assertNever = value;
        throw new Error("Unknown value.");
    }
}
function getCmd(firstArg) {
    if (firstArg instanceof URL) {
        return url_1.default.fileURLToPath(firstArg);
    }
    else {
        return firstArg;
    }
}
function getEnv(options) {
    var _a;
    const env = (_a = options.env) !== null && _a !== void 0 ? _a : {};
    for (const name in process.env) {
        if (!Object.prototype.hasOwnProperty.call(env, name)) {
            if (options.clearEnv) {
                if (os_1.default.platform() === "win32") {
                    env[name] = "";
                }
                else {
                    delete env[name];
                }
            }
            else {
                env[name] = process.env[name];
            }
        }
    }
    return env;
}
class Process {
    /** @internal */
    constructor(process) {
        var _a, _b, _c;
        _Process_process.set(this, void 0);
        _Process_stderr.set(this, void 0);
        _Process_stdout.set(this, void 0);
        _Process_stdin.set(this, void 0);
        _Process_status.set(this, void 0);
        _Process_receivedStatus.set(this, false);
        __classPrivateFieldSet(this, _Process_process, process, "f");
        __classPrivateFieldSet(this, _Process_stdout, (_a = ProcessReadStream.fromNullable(__classPrivateFieldGet(this, _Process_process, "f").stdout)) !== null && _a !== void 0 ? _a : null, "f");
        __classPrivateFieldSet(this, _Process_stderr, (_b = ProcessReadStream.fromNullable(__classPrivateFieldGet(this, _Process_process, "f").stderr)) !== null && _b !== void 0 ? _b : null, "f");
        __classPrivateFieldSet(this, _Process_stdin, (_c = ProcessWriteStream.fromNullable(__classPrivateFieldGet(this, _Process_process, "f").stdin)) !== null && _c !== void 0 ? _c : null, "f");
        __classPrivateFieldSet(this, _Process_status, (0, events_1.once)(process, "exit"), "f");
    }
    get rid() {
        // todo: useful to return something?
        return NaN;
    }
    get pid() {
        // only undefined when the process doesn't spawn, in which case this
        // will never be reached
        return __classPrivateFieldGet(this, _Process_process, "f").pid;
    }
    get stdin() {
        return __classPrivateFieldGet(this, _Process_stdin, "f");
    }
    get stdout() {
        return __classPrivateFieldGet(this, _Process_stdout, "f");
    }
    get stderr() {
        return __classPrivateFieldGet(this, _Process_stderr, "f");
    }
    async status() {
        const [receivedCode, signalName] = await __classPrivateFieldGet(this, _Process_status, "f");
        // when there is a signal, the exit code is 128 + signal code
        const signal = signalName
            ? os_1.default.constants.signals[signalName]
            : receivedCode > 128
                ? receivedCode - 128
                : undefined;
        const code = receivedCode != null
            ? receivedCode
            : signal != null
                ? 128 + signal
                : undefined;
        const success = code === 0;
        __classPrivateFieldSet(this, _Process_receivedStatus, true, "f");
        return { code, signal, success };
    }
    async output() {
        if (!__classPrivateFieldGet(this, _Process_stdout, "f")) {
            throw new TypeError("stdout was not piped");
        }
        const result = await __classPrivateFieldGet(this, _Process_stdout, "f").readAll();
        __classPrivateFieldGet(this, _Process_stdout, "f").close();
        return result;
    }
    async stderrOutput() {
        if (!__classPrivateFieldGet(this, _Process_stderr, "f")) {
            throw new TypeError("stderr was not piped");
        }
        const result = await __classPrivateFieldGet(this, _Process_stderr, "f").readAll();
        __classPrivateFieldGet(this, _Process_stderr, "f").close();
        return result;
    }
    close() {
        // Deno doesn't close any stdio streams here
        __classPrivateFieldGet(this, _Process_process, "f").unref();
        __classPrivateFieldGet(this, _Process_process, "f").kill();
    }
    kill(signo = "SIGTERM") {
        if (__classPrivateFieldGet(this, _Process_receivedStatus, "f")) {
            throw new errors.NotFound("entity not found");
        }
        __classPrivateFieldGet(this, _Process_process, "f").kill(signo);
    }
}
exports.Process = Process;
_Process_process = new WeakMap(), _Process_stderr = new WeakMap(), _Process_stdout = new WeakMap(), _Process_stdin = new WeakMap(), _Process_status = new WeakMap(), _Process_receivedStatus = new WeakMap();
class ProcessReadStream {
    constructor(stream) {
        _ProcessReadStream_stream.set(this, void 0);
        _ProcessReadStream_bufferStreamReader.set(this, void 0);
        _ProcessReadStream_closed.set(this, false);
        __classPrivateFieldSet(this, _ProcessReadStream_stream, stream, "f");
        __classPrivateFieldSet(this, _ProcessReadStream_bufferStreamReader, new streams_js_1.BufferStreamReader(stream), "f");
    }
    static fromNullable(stream) {
        return stream ? new ProcessReadStream(stream) : undefined;
    }
    readAll() {
        if (__classPrivateFieldGet(this, _ProcessReadStream_closed, "f")) {
            return Promise.resolve(new Uint8Array(0));
        }
        else {
            return __classPrivateFieldGet(this, _ProcessReadStream_bufferStreamReader, "f").readAll();
        }
    }
    read(p) {
        if (__classPrivateFieldGet(this, _ProcessReadStream_closed, "f")) {
            return Promise.resolve(null);
        }
        else {
            return __classPrivateFieldGet(this, _ProcessReadStream_bufferStreamReader, "f").read(p);
        }
    }
    close() {
        __classPrivateFieldSet(this, _ProcessReadStream_closed, true, "f");
        __classPrivateFieldGet(this, _ProcessReadStream_stream, "f").destroy();
    }
    get readable() {
        throw new Error("Not implemented.");
    }
    get writable() {
        throw new Error("Not implemented.");
    }
}
_ProcessReadStream_stream = new WeakMap(), _ProcessReadStream_bufferStreamReader = new WeakMap(), _ProcessReadStream_closed = new WeakMap();
class ProcessWriteStream {
    constructor(stream) {
        _ProcessWriteStream_stream.set(this, void 0);
        _ProcessWriteStream_streamWriter.set(this, void 0);
        _ProcessWriteStream_closed.set(this, false);
        __classPrivateFieldSet(this, _ProcessWriteStream_stream, stream, "f");
        __classPrivateFieldSet(this, _ProcessWriteStream_streamWriter, new streams_js_1.StreamWriter(stream), "f");
    }
    static fromNullable(stream) {
        return stream ? new ProcessWriteStream(stream) : undefined;
    }
    write(p) {
        if (__classPrivateFieldGet(this, _ProcessWriteStream_closed, "f")) {
            return Promise.resolve(0);
        }
        else {
            return __classPrivateFieldGet(this, _ProcessWriteStream_streamWriter, "f").write(p);
        }
    }
    close() {
        __classPrivateFieldSet(this, _ProcessWriteStream_closed, true, "f");
        __classPrivateFieldGet(this, _ProcessWriteStream_stream, "f").end();
    }
}
_ProcessWriteStream_stream = new WeakMap(), _ProcessWriteStream_streamWriter = new WeakMap(), _ProcessWriteStream_closed = new WeakMap();


/***/ }),

/***/ 5848:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.shutdown = void 0;
const net_1 = __nccwpck_require__(1808);
const shutdown = async function shutdown(rid) {
    await new Promise((resolve) => new net_1.Socket({ fd: rid }).end(resolve));
};
exports.shutdown = shutdown;


/***/ }),

/***/ 9006:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stat = exports.denoifyFileInfo = void 0;
const promises_1 = __nccwpck_require__(3292);
const errorMap_js_1 = __importDefault(__nccwpck_require__(937));
function denoifyFileInfo(s) {
    return {
        atime: s.atime,
        birthtime: s.birthtime,
        blksize: s.blksize,
        blocks: s.blocks,
        dev: s.dev,
        gid: s.gid,
        ino: s.ino,
        isDirectory: s.isDirectory(),
        isFile: s.isFile(),
        isSymlink: s.isSymbolicLink(),
        mode: s.mode,
        mtime: s.mtime,
        nlink: s.nlink,
        rdev: s.rdev,
        size: s.size,
        uid: s.uid,
    };
}
exports.denoifyFileInfo = denoifyFileInfo;
const stat = async (path) => {
    try {
        return denoifyFileInfo(await (0, promises_1.stat)(path));
    }
    catch (e) {
        throw (0, errorMap_js_1.default)(e);
    }
};
exports.stat = stat;


/***/ }),

/***/ 2627:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.statSync = void 0;
const fs = __importStar(__nccwpck_require__(7147));
const stat_js_1 = __nccwpck_require__(9006);
const statSync = (path) => (0, stat_js_1.denoifyFileInfo)(fs.statSync(path));
exports.statSync = statSync;


/***/ }),

/***/ 3162:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.symlink = void 0;
const fs = __importStar(__nccwpck_require__(3292));
const symlink = async (oldpath, newpath, options) => await fs.symlink(oldpath, newpath, options === null || options === void 0 ? void 0 : options.type);
exports.symlink = symlink;


/***/ }),

/***/ 1041:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.symlinkSync = void 0;
const fs = __importStar(__nccwpck_require__(7147));
const symlinkSync = (oldpath, newpath, options) => fs.symlinkSync(oldpath, newpath, options === null || options === void 0 ? void 0 : options.type);
exports.symlinkSync = symlinkSync;


/***/ }),

/***/ 4305:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.test = void 0;
var shim_deno_test_1 = __nccwpck_require__(9766);
Object.defineProperty(exports, "test", ({ enumerable: true, get: function () { return shim_deno_test_1.test; } }));


/***/ }),

/***/ 2947:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.truncate = void 0;
const fs = __importStar(__nccwpck_require__(3292));
const errorMap_js_1 = __importDefault(__nccwpck_require__(937));
const variables_js_1 = __nccwpck_require__(2565);
const truncate = async (name, len) => {
    try {
        return await fs.truncate(name, len);
    }
    catch (error) {
        if ((error === null || error === void 0 ? void 0 : error.code) === "ENOENT") {
            throw new variables_js_1.errors.NotFound(`No such file or directory (os error 2), truncate '${name}'`);
        }
        throw (0, errorMap_js_1.default)(error);
    }
};
exports.truncate = truncate;


/***/ }),

/***/ 721:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.truncateSync = void 0;
const fs = __importStar(__nccwpck_require__(7147));
const errorMap_js_1 = __importDefault(__nccwpck_require__(937));
const variables_js_1 = __nccwpck_require__(2565);
const truncateSync = (name, len) => {
    try {
        return fs.truncateSync(name, len);
    }
    catch (error) {
        if ((error === null || error === void 0 ? void 0 : error.code) === "ENOENT") {
            throw new variables_js_1.errors.NotFound(`No such file or directory (os error 2), truncate '${name}'`);
        }
        throw (0, errorMap_js_1.default)(error);
    }
};
exports.truncateSync = truncateSync;


/***/ }),

/***/ 1905:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

/// <reference path="../lib.deno.d.ts" />
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.uid = void 0;
const process_1 = __importDefault(__nccwpck_require__(7282));
exports.uid = process_1.default.getuid;


/***/ }),

/***/ 1351:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.watchFs = void 0;
const promises_1 = __nccwpck_require__(3292);
const path_1 = __nccwpck_require__(1017);
const iterutil_js_1 = __nccwpck_require__(2341);
const watchFs = function watchFs(paths, options = { recursive: true }) {
    paths = Array.isArray(paths) ? paths : [paths];
    const ac = new AbortController();
    const { signal } = ac;
    // TODO(mkr): create valid rids for watchers
    const rid = -1;
    const masterWatcher = (0, iterutil_js_1.merge)(paths.map((path) => (0, iterutil_js_1.mapAsync)((0, promises_1.watch)(path, { recursive: options === null || options === void 0 ? void 0 : options.recursive, signal }), (info) => ({
        kind: "modify",
        paths: [(0, path_1.resolve)(path, info.filename)],
    }))));
    function close() {
        ac.abort();
    }
    return Object.assign(masterWatcher, { rid, close });
};
exports.watchFs = watchFs;


/***/ }),

/***/ 3178:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.write = void 0;
const fs = __importStar(__nccwpck_require__(7147));
const util_1 = __nccwpck_require__(3837);
const nodeWrite = (0, util_1.promisify)(fs.write);
const write = async (fd, data) => {
    const { bytesWritten } = await nodeWrite(fd, data);
    return bytesWritten;
};
exports.write = write;


/***/ }),

/***/ 4553:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.writeFile = void 0;
const fs = __importStar(__nccwpck_require__(3292));
const errorMap_js_1 = __importDefault(__nccwpck_require__(937));
const fs_flags_js_1 = __nccwpck_require__(8423);
const writeFile = async function writeFile(path, data, { append = false, create = true, createNew = false, mode, signal } = {}) {
    const truncate = create && !append;
    const flag = (0, fs_flags_js_1.getFsFlag)({ append, create, createNew, truncate, write: true });
    try {
        await fs.writeFile(path, data, { flag, signal });
        if (mode != null)
            await fs.chmod(path, mode);
    }
    catch (error) {
        throw (0, errorMap_js_1.default)(error);
    }
};
exports.writeFile = writeFile;


/***/ }),

/***/ 4356:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.writeFileSync = void 0;
const os_1 = __nccwpck_require__(2037);
const openSync_js_1 = __nccwpck_require__(1070);
const errorMap_js_1 = __importDefault(__nccwpck_require__(937));
const statSync_js_1 = __nccwpck_require__(2627);
const chmodSync_js_1 = __nccwpck_require__(4299);
const writeFileSync = function writeFileSync(path, data, options = {}) {
    try {
        if (options.create !== undefined) {
            const create = !!options.create;
            if (!create) {
                // verify that file exists
                (0, statSync_js_1.statSync)(path);
            }
        }
        const openOptions = {
            write: true,
            create: true,
            createNew: options.createNew,
            append: !!options.append,
            truncate: !options.append,
        };
        const file = (0, openSync_js_1.openSync)(path, openOptions);
        if (options.mode !== undefined &&
            options.mode !== null &&
            (0, os_1.platform)() !== "win32") {
            (0, chmodSync_js_1.chmodSync)(path, options.mode);
        }
        let nwritten = 0;
        while (nwritten < data.length) {
            nwritten += file.writeSync(data.subarray(nwritten));
        }
        file.close();
    }
    catch (e) {
        throw (0, errorMap_js_1.default)(e);
    }
};
exports.writeFileSync = writeFileSync;


/***/ }),

/***/ 8331:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.writeSync = void 0;
const fs = __importStar(__nccwpck_require__(7147));
exports.writeSync = fs.writeSync;


/***/ }),

/***/ 3238:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.writeTextFile = void 0;
const fs = __importStar(__nccwpck_require__(3292));
const errorMap_js_1 = __importDefault(__nccwpck_require__(937));
const fs_flags_js_1 = __nccwpck_require__(8423);
const writeTextFile = async function writeTextFile(path, data, { append = false, create = true, createNew = false, mode, signal } = {}) {
    const truncate = create && !append;
    const flag = (0, fs_flags_js_1.getFsFlag)({
        append,
        create,
        createNew,
        truncate,
        write: true,
    });
    try {
        await fs.writeFile(path, data, { flag, mode, signal });
        if (mode !== undefined)
            await fs.chmod(path, mode);
    }
    catch (error) {
        throw (0, errorMap_js_1.default)(error);
    }
};
exports.writeTextFile = writeTextFile;


/***/ }),

/***/ 5538:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.writeTextFileSync = void 0;
const fs = __importStar(__nccwpck_require__(7147));
const errorMap_js_1 = __importDefault(__nccwpck_require__(937));
const writeTextFileSync = (path, data, { append = false, create = true, mode } = {}) => {
    const flag = create ? (append ? "a" : "w") : "r+";
    try {
        fs.writeFileSync(path, data, { flag, mode });
        if (mode !== undefined)
            fs.chmodSync(path, mode);
    }
    catch (error) {
        throw (0, errorMap_js_1.default)(error);
    }
};
exports.writeTextFileSync = writeTextFileSync;


/***/ }),

/***/ 3367:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__nccwpck_require__(9136), exports);
__exportStar(__nccwpck_require__(6914), exports);
__exportStar(__nccwpck_require__(5082), exports);
__exportStar(__nccwpck_require__(9780), exports);
__exportStar(__nccwpck_require__(2565), exports);


/***/ }),

/***/ 9780:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
///<reference path="./lib.deno.d.ts" />


/***/ }),

/***/ 2565:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.version = exports.resources = exports.ppid = exports.pid = exports.permissions = exports.noColor = exports.metrics = exports.mainModule = exports.errors = exports.env = exports.customInspect = exports.build = void 0;
var build_js_1 = __nccwpck_require__(4102);
Object.defineProperty(exports, "build", ({ enumerable: true, get: function () { return build_js_1.build; } }));
var customInspect_js_1 = __nccwpck_require__(4535);
Object.defineProperty(exports, "customInspect", ({ enumerable: true, get: function () { return customInspect_js_1.customInspect; } }));
var env_js_1 = __nccwpck_require__(9702);
Object.defineProperty(exports, "env", ({ enumerable: true, get: function () { return env_js_1.env; } }));
exports.errors = __importStar(__nccwpck_require__(2826));
var mainModule_js_1 = __nccwpck_require__(9117);
Object.defineProperty(exports, "mainModule", ({ enumerable: true, get: function () { return mainModule_js_1.mainModule; } }));
var metrics_js_1 = __nccwpck_require__(6710);
Object.defineProperty(exports, "metrics", ({ enumerable: true, get: function () { return metrics_js_1.metrics; } }));
var noColor_js_1 = __nccwpck_require__(6612);
Object.defineProperty(exports, "noColor", ({ enumerable: true, get: function () { return noColor_js_1.noColor; } }));
var permissions_js_1 = __nccwpck_require__(170);
Object.defineProperty(exports, "permissions", ({ enumerable: true, get: function () { return permissions_js_1.permissions; } }));
var pid_js_1 = __nccwpck_require__(993);
Object.defineProperty(exports, "pid", ({ enumerable: true, get: function () { return pid_js_1.pid; } }));
var ppid_js_1 = __nccwpck_require__(9093);
Object.defineProperty(exports, "ppid", ({ enumerable: true, get: function () { return ppid_js_1.ppid; } }));
var resources_js_1 = __nccwpck_require__(277);
Object.defineProperty(exports, "resources", ({ enumerable: true, get: function () { return resources_js_1.resources; } }));
__exportStar(__nccwpck_require__(5141), exports);
var version_js_1 = __nccwpck_require__(2101);
Object.defineProperty(exports, "version", ({ enumerable: true, get: function () { return version_js_1.version; } }));


/***/ }),

/***/ 3710:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.args = void 0;
exports.args = process.argv.slice(2);


/***/ }),

/***/ 4102:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

///<reference path="../lib.deno.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.build = void 0;
const os = __importStar(__nccwpck_require__(2037));
exports.build = {
    arch: "x86_64",
    os: ((p) => p === "win32" ? "windows" : p === "darwin" ? "darwin" : "linux")(os.platform()),
    vendor: "pc",
    target: ((p) => p === "win32"
        ? "x86_64-pc-windows-msvc"
        : p === "darwin"
            ? "x86_64-apple-darwin"
            : "x86_64-unknown-linux-gnu")(os.platform()),
};


/***/ }),

/***/ 4535:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.customInspect = void 0;
exports.customInspect = Symbol.for("nodejs.util.inspect.custom");


/***/ }),

/***/ 9702:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.env = void 0;
exports.env = {
    get(key) {
        assertValidKey(key);
        return process.env[key];
    },
    set(key, value) {
        assertValidKey(key);
        assertValidValue(value);
        process.env[key] = value;
    },
    has(key) {
        assertValidKey(key);
        return key in process.env;
    },
    delete(key) {
        assertValidKey(key);
        delete process.env[key];
    },
    // @ts-expect-error https://github.com/denoland/deno/issues/10267
    toObject() {
        return { ...process.env };
    },
};
const invalidKeyChars = ["=", "\0"].map((c) => c.charCodeAt(0));
const invalidValueChar = "\0".charCodeAt(0);
function assertValidKey(key) {
    if (key.length === 0) {
        throw new TypeError("Key is an empty string.");
    }
    for (let i = 0; i < key.length; i++) {
        if (invalidKeyChars.includes(key.charCodeAt(i))) {
            const char = key.charCodeAt(i) === "\0".charCodeAt(0) ? "\\0" : key[i];
            throw new TypeError(`Key contains invalid characters: "${char}"`);
        }
    }
}
function assertValidValue(value) {
    for (let i = 0; i < value.length; i++) {
        if (value.charCodeAt(i) === invalidValueChar) {
            throw new TypeError('Value contains invalid characters: "\\0"');
        }
    }
}


/***/ }),

/***/ 2826:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WriteZero = exports.UnexpectedEof = exports.TimedOut = exports.PermissionDenied = exports.NotFound = exports.NotConnected = exports.InvalidData = exports.Interrupted = exports.Http = exports.ConnectionReset = exports.ConnectionRefused = exports.ConnectionAborted = exports.Busy = exports.BrokenPipe = exports.BadResource = exports.AlreadyExists = exports.AddrNotAvailable = exports.AddrInUse = void 0;
// please keep sorted
class AddrInUse extends Error {
}
exports.AddrInUse = AddrInUse;
class AddrNotAvailable extends Error {
}
exports.AddrNotAvailable = AddrNotAvailable;
class AlreadyExists extends Error {
}
exports.AlreadyExists = AlreadyExists;
class BadResource extends Error {
}
exports.BadResource = BadResource;
class BrokenPipe extends Error {
}
exports.BrokenPipe = BrokenPipe;
class Busy extends Error {
}
exports.Busy = Busy;
class ConnectionAborted extends Error {
}
exports.ConnectionAborted = ConnectionAborted;
class ConnectionRefused extends Error {
}
exports.ConnectionRefused = ConnectionRefused;
class ConnectionReset extends Error {
}
exports.ConnectionReset = ConnectionReset;
class Http extends Error {
}
exports.Http = Http;
class Interrupted extends Error {
}
exports.Interrupted = Interrupted;
class InvalidData extends Error {
}
exports.InvalidData = InvalidData;
class NotConnected extends Error {
}
exports.NotConnected = NotConnected;
class NotFound extends Error {
    constructor() {
        super(...arguments);
        this.code = "ENOENT";
    }
}
exports.NotFound = NotFound;
class PermissionDenied extends Error {
}
exports.PermissionDenied = PermissionDenied;
class TimedOut extends Error {
}
exports.TimedOut = TimedOut;
class UnexpectedEof extends Error {
}
exports.UnexpectedEof = UnexpectedEof;
class WriteZero extends Error {
}
exports.WriteZero = WriteZero;


/***/ }),

/***/ 9117:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

var _a, _b;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mainModule = void 0;
///<reference path="../lib.deno.d.ts" />
const path_1 = __nccwpck_require__(1017);
const url_1 = __nccwpck_require__(7310);
exports.mainModule = (0, url_1.pathToFileURL)((_b = (_a = require.main) === null || _a === void 0 ? void 0 : _a.filename) !== null && _b !== void 0 ? _b : (0, path_1.join)(__dirname, "$deno$repl.ts")).href;


/***/ }),

/***/ 6710:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.metrics = void 0;
const metrics = function metrics() {
    return {
        opsDispatched: 0,
        opsDispatchedSync: 0,
        opsDispatchedAsync: 0,
        opsDispatchedAsyncUnref: 0,
        opsCompleted: 0,
        opsCompletedSync: 0,
        opsCompletedAsync: 0,
        opsCompletedAsyncUnref: 0,
        bytesSentControl: 0,
        bytesSentData: 0,
        bytesReceived: 0,
        ops: {},
    };
};
exports.metrics = metrics;


/***/ }),

/***/ 6612:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.noColor = void 0;
exports.noColor = process.env.NO_COLOR !== undefined;


/***/ }),

/***/ 170:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.permissions = void 0;
const Permissions_js_1 = __nccwpck_require__(711);
exports.permissions = new Permissions_js_1.Permissions();


/***/ }),

/***/ 993:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.pid = void 0;
exports.pid = process.pid;


/***/ }),

/***/ 9093:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ppid = void 0;
exports.ppid = process.ppid;


/***/ }),

/***/ 277:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.resources = void 0;
const resources = function resources() {
    console.warn([
        "Deno.resources() shim returns a dummy object that does not update.",
        "If you think this is a mistake, raise an issue at https://github.com/denoland/node_deno_shims/issues",
    ].join("\n"));
    return {};
};
exports.resources = resources;


/***/ }),

/***/ 5141:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stderr = exports.stdout = exports.stdin = void 0;
const readSync_js_1 = __nccwpck_require__(7537);
const writeSync_js_1 = __nccwpck_require__(8331);
function chain(fn, cleanup) {
    let prev;
    return function _fn(...args) {
        const curr = (prev || Promise.resolve())
            .then(() => fn(...args))
            .finally(cleanup || (() => { }))
            .then((result) => {
            if (prev === curr)
                prev = undefined;
            return result;
        });
        return (prev = curr);
    };
}
exports.stdin = {
    rid: 0,
    read: chain((p) => {
        return new Promise((resolve, reject) => {
            process.stdin.resume();
            process.stdin.on("error", onerror);
            process.stdin.once("readable", () => {
                var _a;
                process.stdin.off("error", onerror);
                const data = (_a = process.stdin.read(p.length)) !== null && _a !== void 0 ? _a : process.stdin.read();
                if (data) {
                    p.set(data);
                    resolve(data.length > 0 ? data.length : null);
                }
                else {
                    resolve(null);
                }
            });
            function onerror(error) {
                reject(error);
                process.stdin.off("error", onerror);
            }
        });
    }, () => process.stdin.pause()),
    get readable() {
        throw new Error("Not implemented.");
    },
    readSync(buffer) {
        return (0, readSync_js_1.readSync)(this.rid, buffer);
    },
    close() {
        process.stdin.destroy();
    },
    setRaw(mode, options) {
        if (options === null || options === void 0 ? void 0 : options.cbreak) {
            throw new Error("The cbreak option is not implemented.");
        }
        process.stdin.setRawMode(mode);
    },
};
exports.stdout = {
    rid: 1,
    write: chain((p) => {
        return new Promise((resolve) => {
            const result = process.stdout.write(p);
            if (!result) {
                process.stdout.once("drain", () => resolve(p.length));
            }
            else {
                resolve(p.length);
            }
        });
    }),
    get writable() {
        throw new Error("Not implemented.");
    },
    writeSync(data) {
        return (0, writeSync_js_1.writeSync)(this.rid, data);
    },
    close() {
        process.stdout.destroy();
    },
};
exports.stderr = {
    rid: 2,
    write: chain((p) => {
        return new Promise((resolve) => {
            const result = process.stderr.write(p);
            if (!result) {
                process.stderr.once("drain", () => resolve(p.length));
            }
            else {
                resolve(p.length);
            }
        });
    }),
    get writable() {
        throw new Error("Not implemented.");
    },
    writeSync() {
        // Node.js doesn't support writeSync for stderr
        throw new Error("Not implemented");
    },
    close() {
        process.stderr.destroy();
    },
};


/***/ }),

/***/ 2101:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

///<reference path="../lib.deno.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.version = void 0;
const version_js_1 = __nccwpck_require__(717);
exports.version = {
    deno: version_js_1.deno,
    typescript: version_js_1.typescript,
    v8: process.versions.v8,
};


/***/ }),

/***/ 3032:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

/// <reference path="./lib.deno.unstable.d.ts" />
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.utimeSync = exports.utime = exports.futimeSync = exports.futime = void 0;
const fs_1 = __importDefault(__nccwpck_require__(7147));
const errorMap_js_1 = __importDefault(__nccwpck_require__(937));
const variables_js_1 = __nccwpck_require__(2565);
const futime = async function (rid, atime, mtime) {
    try {
        await new Promise((resolve, reject) => {
            // doesn't exist in fs.promises
            fs_1.default.futimes(rid, atime, mtime, (err) => {
                if (err) {
                    reject(err);
                }
                else {
                    resolve();
                }
            });
        });
    }
    catch (error) {
        throw (0, errorMap_js_1.default)(error);
    }
};
exports.futime = futime;
const futimeSync = function (rid, atime, mtime) {
    try {
        fs_1.default.futimesSync(rid, atime, mtime);
    }
    catch (error) {
        throw (0, errorMap_js_1.default)(error);
    }
};
exports.futimeSync = futimeSync;
const utime = async function (path, atime, mtime) {
    try {
        await fs_1.default.promises.utimes(path, atime, mtime);
    }
    catch (error) {
        if ((error === null || error === void 0 ? void 0 : error.code) === "ENOENT") {
            throw new variables_js_1.errors.NotFound(`No such file or directory (os error 2), utime '${path}'`);
        }
        throw (0, errorMap_js_1.default)(error);
    }
};
exports.utime = utime;
const utimeSync = function (path, atime, mtime) {
    try {
        fs_1.default.utimesSync(path, atime, mtime);
    }
    catch (error) {
        if ((error === null || error === void 0 ? void 0 : error.code) === "ENOENT") {
            throw new variables_js_1.errors.NotFound(`No such file or directory (os error 2), utime '${path}'`);
        }
        throw (0, errorMap_js_1.default)(error);
    }
};
exports.utimeSync = utimeSync;


/***/ }),

/***/ 4683:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Deno = void 0;
exports.Deno = __importStar(__nccwpck_require__(2854));


/***/ }),

/***/ 2856:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const WritableStream = (__nccwpck_require__(4492).Writable)
const inherits = (__nccwpck_require__(7261).inherits)

const StreamSearch = __nccwpck_require__(8534)

const PartStream = __nccwpck_require__(8710)
const HeaderParser = __nccwpck_require__(333)

const DASH = 45
const B_ONEDASH = Buffer.from('-')
const B_CRLF = Buffer.from('\r\n')
const EMPTY_FN = function () {}

function Dicer (cfg) {
  if (!(this instanceof Dicer)) { return new Dicer(cfg) }
  WritableStream.call(this, cfg)

  if (!cfg || (!cfg.headerFirst && typeof cfg.boundary !== 'string')) { throw new TypeError('Boundary required') }

  if (typeof cfg.boundary === 'string') { this.setBoundary(cfg.boundary) } else { this._bparser = undefined }

  this._headerFirst = cfg.headerFirst

  this._dashes = 0
  this._parts = 0
  this._finished = false
  this._realFinish = false
  this._isPreamble = true
  this._justMatched = false
  this._firstWrite = true
  this._inHeader = true
  this._part = undefined
  this._cb = undefined
  this._ignoreData = false
  this._partOpts = { highWaterMark: cfg.partHwm }
  this._pause = false

  const self = this
  this._hparser = new HeaderParser(cfg)
  this._hparser.on('header', function (header) {
    self._inHeader = false
    self._part.emit('header', header)
  })
}
inherits(Dicer, WritableStream)

Dicer.prototype.emit = function (ev) {
  if (ev === 'finish' && !this._realFinish) {
    if (!this._finished) {
      const self = this
      process.nextTick(function () {
        self.emit('error', new Error('Unexpected end of multipart data'))
        if (self._part && !self._ignoreData) {
          const type = (self._isPreamble ? 'Preamble' : 'Part')
          self._part.emit('error', new Error(type + ' terminated early due to unexpected end of multipart data'))
          self._part.push(null)
          process.nextTick(function () {
            self._realFinish = true
            self.emit('finish')
            self._realFinish = false
          })
          return
        }
        self._realFinish = true
        self.emit('finish')
        self._realFinish = false
      })
    }
  } else { WritableStream.prototype.emit.apply(this, arguments) }
}

Dicer.prototype._write = function (data, encoding, cb) {
  // ignore unexpected data (e.g. extra trailer data after finished)
  if (!this._hparser && !this._bparser) { return cb() }

  if (this._headerFirst && this._isPreamble) {
    if (!this._part) {
      this._part = new PartStream(this._partOpts)
      if (this._events.preamble) { this.emit('preamble', this._part) } else { this._ignore() }
    }
    const r = this._hparser.push(data)
    if (!this._inHeader && r !== undefined && r < data.length) { data = data.slice(r) } else { return cb() }
  }

  // allows for "easier" testing
  if (this._firstWrite) {
    this._bparser.push(B_CRLF)
    this._firstWrite = false
  }

  this._bparser.push(data)

  if (this._pause) { this._cb = cb } else { cb() }
}

Dicer.prototype.reset = function () {
  this._part = undefined
  this._bparser = undefined
  this._hparser = undefined
}

Dicer.prototype.setBoundary = function (boundary) {
  const self = this
  this._bparser = new StreamSearch('\r\n--' + boundary)
  this._bparser.on('info', function (isMatch, data, start, end) {
    self._oninfo(isMatch, data, start, end)
  })
}

Dicer.prototype._ignore = function () {
  if (this._part && !this._ignoreData) {
    this._ignoreData = true
    this._part.on('error', EMPTY_FN)
    // we must perform some kind of read on the stream even though we are
    // ignoring the data, otherwise node's Readable stream will not emit 'end'
    // after pushing null to the stream
    this._part.resume()
  }
}

Dicer.prototype._oninfo = function (isMatch, data, start, end) {
  let buf; const self = this; let i = 0; let r; let shouldWriteMore = true

  if (!this._part && this._justMatched && data) {
    while (this._dashes < 2 && (start + i) < end) {
      if (data[start + i] === DASH) {
        ++i
        ++this._dashes
      } else {
        if (this._dashes) { buf = B_ONEDASH }
        this._dashes = 0
        break
      }
    }
    if (this._dashes === 2) {
      if ((start + i) < end && this._events.trailer) { this.emit('trailer', data.slice(start + i, end)) }
      this.reset()
      this._finished = true
      // no more parts will be added
      if (self._parts === 0) {
        self._realFinish = true
        self.emit('finish')
        self._realFinish = false
      }
    }
    if (this._dashes) { return }
  }
  if (this._justMatched) { this._justMatched = false }
  if (!this._part) {
    this._part = new PartStream(this._partOpts)
    this._part._read = function (n) {
      self._unpause()
    }
    if (this._isPreamble && this._events.preamble) { this.emit('preamble', this._part) } else if (this._isPreamble !== true && this._events.part) { this.emit('part', this._part) } else { this._ignore() }
    if (!this._isPreamble) { this._inHeader = true }
  }
  if (data && start < end && !this._ignoreData) {
    if (this._isPreamble || !this._inHeader) {
      if (buf) { shouldWriteMore = this._part.push(buf) }
      shouldWriteMore = this._part.push(data.slice(start, end))
      if (!shouldWriteMore) { this._pause = true }
    } else if (!this._isPreamble && this._inHeader) {
      if (buf) { this._hparser.push(buf) }
      r = this._hparser.push(data.slice(start, end))
      if (!this._inHeader && r !== undefined && r < end) { this._oninfo(false, data, start + r, end) }
    }
  }
  if (isMatch) {
    this._hparser.reset()
    if (this._isPreamble) { this._isPreamble = false } else {
      if (start !== end) {
        ++this._parts
        this._part.on('end', function () {
          if (--self._parts === 0) {
            if (self._finished) {
              self._realFinish = true
              self.emit('finish')
              self._realFinish = false
            } else {
              self._unpause()
            }
          }
        })
      }
    }
    this._part.push(null)
    this._part = undefined
    this._ignoreData = false
    this._justMatched = true
    this._dashes = 0
  }
}

Dicer.prototype._unpause = function () {
  if (!this._pause) { return }

  this._pause = false
  if (this._cb) {
    const cb = this._cb
    this._cb = undefined
    cb()
  }
}

module.exports = Dicer


/***/ }),

/***/ 333:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const EventEmitter = (__nccwpck_require__(5673).EventEmitter)
const inherits = (__nccwpck_require__(7261).inherits)
const getLimit = __nccwpck_require__(9692)

const StreamSearch = __nccwpck_require__(8534)

const B_DCRLF = Buffer.from('\r\n\r\n')
const RE_CRLF = /\r\n/g
const RE_HDR = /^([^:]+):[ \t]?([\x00-\xFF]+)?$/ // eslint-disable-line no-control-regex

function HeaderParser (cfg) {
  EventEmitter.call(this)

  cfg = cfg || {}
  const self = this
  this.nread = 0
  this.maxed = false
  this.npairs = 0
  this.maxHeaderPairs = getLimit(cfg, 'maxHeaderPairs', 2000)
  this.maxHeaderSize = getLimit(cfg, 'maxHeaderSize', 80 * 1024)
  this.buffer = ''
  this.header = {}
  this.finished = false
  this.ss = new StreamSearch(B_DCRLF)
  this.ss.on('info', function (isMatch, data, start, end) {
    if (data && !self.maxed) {
      if (self.nread + end - start >= self.maxHeaderSize) {
        end = self.maxHeaderSize - self.nread + start
        self.nread = self.maxHeaderSize
        self.maxed = true
      } else { self.nread += (end - start) }

      self.buffer += data.toString('binary', start, end)
    }
    if (isMatch) { self._finish() }
  })
}
inherits(HeaderParser, EventEmitter)

HeaderParser.prototype.push = function (data) {
  const r = this.ss.push(data)
  if (this.finished) { return r }
}

HeaderParser.prototype.reset = function () {
  this.finished = false
  this.buffer = ''
  this.header = {}
  this.ss.reset()
}

HeaderParser.prototype._finish = function () {
  if (this.buffer) { this._parseHeader() }
  this.ss.matches = this.ss.maxMatches
  const header = this.header
  this.header = {}
  this.buffer = ''
  this.finished = true
  this.nread = this.npairs = 0
  this.maxed = false
  this.emit('header', header)
}

HeaderParser.prototype._parseHeader = function () {
  if (this.npairs === this.maxHeaderPairs) { return }

  const lines = this.buffer.split(RE_CRLF)
  const len = lines.length
  let m, h

  for (var i = 0; i < len; ++i) { // eslint-disable-line no-var
    if (lines[i].length === 0) { continue }
    if (lines[i][0] === '\t' || lines[i][0] === ' ') {
      // folded header content
      // RFC2822 says to just remove the CRLF and not the whitespace following
      // it, so we follow the RFC and include the leading whitespace ...
      if (h) {
        this.header[h][this.header[h].length - 1] += lines[i]
        continue
      }
    }

    const posColon = lines[i].indexOf(':')
    if (
      posColon === -1 ||
      posColon === 0
    ) {
      return
    }
    m = RE_HDR.exec(lines[i])
    h = m[1].toLowerCase()
    this.header[h] = this.header[h] || []
    this.header[h].push((m[2] || ''))
    if (++this.npairs === this.maxHeaderPairs) { break }
  }
}

module.exports = HeaderParser


/***/ }),

/***/ 8710:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const inherits = (__nccwpck_require__(7261).inherits)
const ReadableStream = (__nccwpck_require__(4492).Readable)

function PartStream (opts) {
  ReadableStream.call(this, opts)
}
inherits(PartStream, ReadableStream)

PartStream.prototype._read = function (n) {}

module.exports = PartStream


/***/ }),

/***/ 8534:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


/**
 * Copyright Brian White. All rights reserved.
 *
 * @see https://github.com/mscdex/streamsearch
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 * Based heavily on the Streaming Boyer-Moore-Horspool C++ implementation
 * by Hongli Lai at: https://github.com/FooBarWidget/boyer-moore-horspool
 */
const EventEmitter = (__nccwpck_require__(5673).EventEmitter)
const inherits = (__nccwpck_require__(7261).inherits)

function SBMH (needle) {
  if (typeof needle === 'string') {
    needle = Buffer.from(needle)
  }

  if (!Buffer.isBuffer(needle)) {
    throw new TypeError('The needle has to be a String or a Buffer.')
  }

  const needleLength = needle.length

  if (needleLength === 0) {
    throw new Error('The needle cannot be an empty String/Buffer.')
  }

  if (needleLength > 256) {
    throw new Error('The needle cannot have a length bigger than 256.')
  }

  this.maxMatches = Infinity
  this.matches = 0

  this._occ = new Array(256)
    .fill(needleLength) // Initialize occurrence table.
  this._lookbehind_size = 0
  this._needle = needle
  this._bufpos = 0

  this._lookbehind = Buffer.alloc(needleLength)

  // Populate occurrence table with analysis of the needle,
  // ignoring last letter.
  for (var i = 0; i < needleLength - 1; ++i) { // eslint-disable-line no-var
    this._occ[needle[i]] = needleLength - 1 - i
  }
}
inherits(SBMH, EventEmitter)

SBMH.prototype.reset = function () {
  this._lookbehind_size = 0
  this.matches = 0
  this._bufpos = 0
}

SBMH.prototype.push = function (chunk, pos) {
  if (!Buffer.isBuffer(chunk)) {
    chunk = Buffer.from(chunk, 'binary')
  }
  const chlen = chunk.length
  this._bufpos = pos || 0
  let r
  while (r !== chlen && this.matches < this.maxMatches) { r = this._sbmh_feed(chunk) }
  return r
}

SBMH.prototype._sbmh_feed = function (data) {
  const len = data.length
  const needle = this._needle
  const needleLength = needle.length
  const lastNeedleChar = needle[needleLength - 1]

  // Positive: points to a position in `data`
  //           pos == 3 points to data[3]
  // Negative: points to a position in the lookbehind buffer
  //           pos == -2 points to lookbehind[lookbehind_size - 2]
  let pos = -this._lookbehind_size
  let ch

  if (pos < 0) {
    // Lookbehind buffer is not empty. Perform Boyer-Moore-Horspool
    // search with character lookup code that considers both the
    // lookbehind buffer and the current round's haystack data.
    //
    // Loop until
    //   there is a match.
    // or until
    //   we've moved past the position that requires the
    //   lookbehind buffer. In this case we switch to the
    //   optimized loop.
    // or until
    //   the character to look at lies outside the haystack.
    while (pos < 0 && pos <= len - needleLength) {
      ch = this._sbmh_lookup_char(data, pos + needleLength - 1)

      if (
        ch === lastNeedleChar &&
        this._sbmh_memcmp(data, pos, needleLength - 1)
      ) {
        this._lookbehind_size = 0
        ++this.matches
        this.emit('info', true)

        return (this._bufpos = pos + needleLength)
      }
      pos += this._occ[ch]
    }

    // No match.

    if (pos < 0) {
      // There's too few data for Boyer-Moore-Horspool to run,
      // so let's use a different algorithm to skip as much as
      // we can.
      // Forward pos until
      //   the trailing part of lookbehind + data
      //   looks like the beginning of the needle
      // or until
      //   pos == 0
      while (pos < 0 && !this._sbmh_memcmp(data, pos, len - pos)) { ++pos }
    }

    if (pos >= 0) {
      // Discard lookbehind buffer.
      this.emit('info', false, this._lookbehind, 0, this._lookbehind_size)
      this._lookbehind_size = 0
    } else {
      // Cut off part of the lookbehind buffer that has
      // been processed and append the entire haystack
      // into it.
      const bytesToCutOff = this._lookbehind_size + pos
      if (bytesToCutOff > 0) {
        // The cut off data is guaranteed not to contain the needle.
        this.emit('info', false, this._lookbehind, 0, bytesToCutOff)
      }

      this._lookbehind.copy(this._lookbehind, 0, bytesToCutOff,
        this._lookbehind_size - bytesToCutOff)
      this._lookbehind_size -= bytesToCutOff

      data.copy(this._lookbehind, this._lookbehind_size)
      this._lookbehind_size += len

      this._bufpos = len
      return len
    }
  }

  pos += (pos >= 0) * this._bufpos

  // Lookbehind buffer is now empty. We only need to check if the
  // needle is in the haystack.
  if (data.indexOf(needle, pos) !== -1) {
    pos = data.indexOf(needle, pos)
    ++this.matches
    if (pos > 0) { this.emit('info', true, data, this._bufpos, pos) } else { this.emit('info', true) }

    return (this._bufpos = pos + needleLength)
  } else {
    pos = len - needleLength
  }

  // There was no match. If there's trailing haystack data that we cannot
  // match yet using the Boyer-Moore-Horspool algorithm (because the trailing
  // data is less than the needle size) then match using a modified
  // algorithm that starts matching from the beginning instead of the end.
  // Whatever trailing data is left after running this algorithm is added to
  // the lookbehind buffer.
  while (
    pos < len &&
    (
      data[pos] !== needle[0] ||
      (
        (Buffer.compare(
          data.subarray(pos, pos + len - pos),
          needle.subarray(0, len - pos)
        ) !== 0)
      )
    )
  ) {
    ++pos
  }
  if (pos < len) {
    data.copy(this._lookbehind, 0, pos, pos + (len - pos))
    this._lookbehind_size = len - pos
  }

  // Everything until pos is guaranteed not to contain needle data.
  if (pos > 0) { this.emit('info', false, data, this._bufpos, pos < len ? pos : len) }

  this._bufpos = len
  return len
}

SBMH.prototype._sbmh_lookup_char = function (data, pos) {
  return (pos < 0)
    ? this._lookbehind[this._lookbehind_size + pos]
    : data[pos]
}

SBMH.prototype._sbmh_memcmp = function (data, pos, len) {
  for (var i = 0; i < len; ++i) { // eslint-disable-line no-var
    if (this._sbmh_lookup_char(data, pos + i) !== this._needle[i]) { return false }
  }
  return true
}

module.exports = SBMH


/***/ }),

/***/ 3438:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const WritableStream = (__nccwpck_require__(4492).Writable)
const { inherits } = __nccwpck_require__(7261)
const Dicer = __nccwpck_require__(2856)

const MultipartParser = __nccwpck_require__(415)
const UrlencodedParser = __nccwpck_require__(6780)
const parseParams = __nccwpck_require__(4426)

function Busboy (opts) {
  if (!(this instanceof Busboy)) { return new Busboy(opts) }

  if (typeof opts !== 'object') {
    throw new TypeError('Busboy expected an options-Object.')
  }
  if (typeof opts.headers !== 'object') {
    throw new TypeError('Busboy expected an options-Object with headers-attribute.')
  }
  if (typeof opts.headers['content-type'] !== 'string') {
    throw new TypeError('Missing Content-Type-header.')
  }

  const {
    headers,
    ...streamOptions
  } = opts

  this.opts = {
    autoDestroy: false,
    ...streamOptions
  }
  WritableStream.call(this, this.opts)

  this._done = false
  this._parser = this.getParserByHeaders(headers)
  this._finished = false
}
inherits(Busboy, WritableStream)

Busboy.prototype.emit = function (ev) {
  if (ev === 'finish') {
    if (!this._done) {
      this._parser?.end()
      return
    } else if (this._finished) {
      return
    }
    this._finished = true
  }
  WritableStream.prototype.emit.apply(this, arguments)
}

Busboy.prototype.getParserByHeaders = function (headers) {
  const parsed = parseParams(headers['content-type'])

  const cfg = {
    defCharset: this.opts.defCharset,
    fileHwm: this.opts.fileHwm,
    headers,
    highWaterMark: this.opts.highWaterMark,
    isPartAFile: this.opts.isPartAFile,
    limits: this.opts.limits,
    parsedConType: parsed,
    preservePath: this.opts.preservePath
  }

  if (MultipartParser.detect.test(parsed[0])) {
    return new MultipartParser(this, cfg)
  }
  if (UrlencodedParser.detect.test(parsed[0])) {
    return new UrlencodedParser(this, cfg)
  }
  throw new Error('Unsupported Content-Type.')
}

Busboy.prototype._write = function (chunk, encoding, cb) {
  this._parser.write(chunk, cb)
}

module.exports = Busboy
module.exports["default"] = Busboy
module.exports.Busboy = Busboy

module.exports.Dicer = Dicer


/***/ }),

/***/ 415:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


// TODO:
//  * support 1 nested multipart level
//    (see second multipart example here:
//     http://www.w3.org/TR/html401/interact/forms.html#didx-multipartform-data)
//  * support limits.fieldNameSize
//     -- this will require modifications to utils.parseParams

const { Readable } = __nccwpck_require__(4492)
const { inherits } = __nccwpck_require__(7261)

const Dicer = __nccwpck_require__(2856)

const parseParams = __nccwpck_require__(4426)
const decodeText = __nccwpck_require__(1138)
const basename = __nccwpck_require__(496)
const getLimit = __nccwpck_require__(9692)

const RE_BOUNDARY = /^boundary$/i
const RE_FIELD = /^form-data$/i
const RE_CHARSET = /^charset$/i
const RE_FILENAME = /^filename$/i
const RE_NAME = /^name$/i

Multipart.detect = /^multipart\/form-data/i
function Multipart (boy, cfg) {
  let i
  let len
  const self = this
  let boundary
  const limits = cfg.limits
  const isPartAFile = cfg.isPartAFile || ((fieldName, contentType, fileName) => (contentType === 'application/octet-stream' || fileName !== undefined))
  const parsedConType = cfg.parsedConType || []
  const defCharset = cfg.defCharset || 'utf8'
  const preservePath = cfg.preservePath
  const fileOpts = { highWaterMark: cfg.fileHwm }

  for (i = 0, len = parsedConType.length; i < len; ++i) {
    if (Array.isArray(parsedConType[i]) &&
      RE_BOUNDARY.test(parsedConType[i][0])) {
      boundary = parsedConType[i][1]
      break
    }
  }

  function checkFinished () {
    if (nends === 0 && finished && !boy._done) {
      finished = false
      self.end()
    }
  }

  if (typeof boundary !== 'string') { throw new Error('Multipart: Boundary not found') }

  const fieldSizeLimit = getLimit(limits, 'fieldSize', 1 * 1024 * 1024)
  const fileSizeLimit = getLimit(limits, 'fileSize', Infinity)
  const filesLimit = getLimit(limits, 'files', Infinity)
  const fieldsLimit = getLimit(limits, 'fields', Infinity)
  const partsLimit = getLimit(limits, 'parts', Infinity)
  const headerPairsLimit = getLimit(limits, 'headerPairs', 2000)
  const headerSizeLimit = getLimit(limits, 'headerSize', 80 * 1024)

  let nfiles = 0
  let nfields = 0
  let nends = 0
  let curFile
  let curField
  let finished = false

  this._needDrain = false
  this._pause = false
  this._cb = undefined
  this._nparts = 0
  this._boy = boy

  const parserCfg = {
    boundary,
    maxHeaderPairs: headerPairsLimit,
    maxHeaderSize: headerSizeLimit,
    partHwm: fileOpts.highWaterMark,
    highWaterMark: cfg.highWaterMark
  }

  this.parser = new Dicer(parserCfg)
  this.parser.on('drain', function () {
    self._needDrain = false
    if (self._cb && !self._pause) {
      const cb = self._cb
      self._cb = undefined
      cb()
    }
  }).on('part', function onPart (part) {
    if (++self._nparts > partsLimit) {
      self.parser.removeListener('part', onPart)
      self.parser.on('part', skipPart)
      boy.hitPartsLimit = true
      boy.emit('partsLimit')
      return skipPart(part)
    }

    // hack because streams2 _always_ doesn't emit 'end' until nextTick, so let
    // us emit 'end' early since we know the part has ended if we are already
    // seeing the next part
    if (curField) {
      const field = curField
      field.emit('end')
      field.removeAllListeners('end')
    }

    part.on('header', function (header) {
      let contype
      let fieldname
      let parsed
      let charset
      let encoding
      let filename
      let nsize = 0

      if (header['content-type']) {
        parsed = parseParams(header['content-type'][0])
        if (parsed[0]) {
          contype = parsed[0].toLowerCase()
          for (i = 0, len = parsed.length; i < len; ++i) {
            if (RE_CHARSET.test(parsed[i][0])) {
              charset = parsed[i][1].toLowerCase()
              break
            }
          }
        }
      }

      if (contype === undefined) { contype = 'text/plain' }
      if (charset === undefined) { charset = defCharset }

      if (header['content-disposition']) {
        parsed = parseParams(header['content-disposition'][0])
        if (!RE_FIELD.test(parsed[0])) { return skipPart(part) }
        for (i = 0, len = parsed.length; i < len; ++i) {
          if (RE_NAME.test(parsed[i][0])) {
            fieldname = parsed[i][1]
          } else if (RE_FILENAME.test(parsed[i][0])) {
            filename = parsed[i][1]
            if (!preservePath) { filename = basename(filename) }
          }
        }
      } else { return skipPart(part) }

      if (header['content-transfer-encoding']) { encoding = header['content-transfer-encoding'][0].toLowerCase() } else { encoding = '7bit' }

      let onData,
        onEnd

      if (isPartAFile(fieldname, contype, filename)) {
        // file/binary field
        if (nfiles === filesLimit) {
          if (!boy.hitFilesLimit) {
            boy.hitFilesLimit = true
            boy.emit('filesLimit')
          }
          return skipPart(part)
        }

        ++nfiles

        if (!boy._events.file) {
          self.parser._ignore()
          return
        }

        ++nends
        const file = new FileStream(fileOpts)
        curFile = file
        file.on('end', function () {
          --nends
          self._pause = false
          checkFinished()
          if (self._cb && !self._needDrain) {
            const cb = self._cb
            self._cb = undefined
            cb()
          }
        })
        file._read = function (n) {
          if (!self._pause) { return }
          self._pause = false
          if (self._cb && !self._needDrain) {
            const cb = self._cb
            self._cb = undefined
            cb()
          }
        }
        boy.emit('file', fieldname, file, filename, encoding, contype)

        onData = function (data) {
          if ((nsize += data.length) > fileSizeLimit) {
            const extralen = fileSizeLimit - nsize + data.length
            if (extralen > 0) { file.push(data.slice(0, extralen)) }
            file.truncated = true
            file.bytesRead = fileSizeLimit
            part.removeAllListeners('data')
            file.emit('limit')
            return
          } else if (!file.push(data)) { self._pause = true }

          file.bytesRead = nsize
        }

        onEnd = function () {
          curFile = undefined
          file.push(null)
        }
      } else {
        // non-file field
        if (nfields === fieldsLimit) {
          if (!boy.hitFieldsLimit) {
            boy.hitFieldsLimit = true
            boy.emit('fieldsLimit')
          }
          return skipPart(part)
        }

        ++nfields
        ++nends
        let buffer = ''
        let truncated = false
        curField = part

        onData = function (data) {
          if ((nsize += data.length) > fieldSizeLimit) {
            const extralen = (fieldSizeLimit - (nsize - data.length))
            buffer += data.toString('binary', 0, extralen)
            truncated = true
            part.removeAllListeners('data')
          } else { buffer += data.toString('binary') }
        }

        onEnd = function () {
          curField = undefined
          if (buffer.length) { buffer = decodeText(buffer, 'binary', charset) }
          boy.emit('field', fieldname, buffer, false, truncated, encoding, contype)
          --nends
          checkFinished()
        }
      }

      /* As of node@2efe4ab761666 (v0.10.29+/v0.11.14+), busboy had become
         broken. Streams2/streams3 is a huge black box of confusion, but
         somehow overriding the sync state seems to fix things again (and still
         seems to work for previous node versions).
      */
      part._readableState.sync = false

      part.on('data', onData)
      part.on('end', onEnd)
    }).on('error', function (err) {
      if (curFile) { curFile.emit('error', err) }
    })
  }).on('error', function (err) {
    boy.emit('error', err)
  }).on('finish', function () {
    finished = true
    checkFinished()
  })
}

Multipart.prototype.write = function (chunk, cb) {
  const r = this.parser.write(chunk)
  if (r && !this._pause) {
    cb()
  } else {
    this._needDrain = !r
    this._cb = cb
  }
}

Multipart.prototype.end = function () {
  const self = this

  if (self.parser.writable) {
    self.parser.end()
  } else if (!self._boy._done) {
    process.nextTick(function () {
      self._boy._done = true
      self._boy.emit('finish')
    })
  }
}

function skipPart (part) {
  part.resume()
}

function FileStream (opts) {
  Readable.call(this, opts)

  this.bytesRead = 0

  this.truncated = false
}

inherits(FileStream, Readable)

FileStream.prototype._read = function (n) {}

module.exports = Multipart


/***/ }),

/***/ 6780:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const Decoder = __nccwpck_require__(9730)
const decodeText = __nccwpck_require__(1138)
const getLimit = __nccwpck_require__(9692)

const RE_CHARSET = /^charset$/i

UrlEncoded.detect = /^application\/x-www-form-urlencoded/i
function UrlEncoded (boy, cfg) {
  const limits = cfg.limits
  const parsedConType = cfg.parsedConType
  this.boy = boy

  this.fieldSizeLimit = getLimit(limits, 'fieldSize', 1 * 1024 * 1024)
  this.fieldNameSizeLimit = getLimit(limits, 'fieldNameSize', 100)
  this.fieldsLimit = getLimit(limits, 'fields', Infinity)

  let charset
  for (var i = 0, len = parsedConType.length; i < len; ++i) { // eslint-disable-line no-var
    if (Array.isArray(parsedConType[i]) &&
        RE_CHARSET.test(parsedConType[i][0])) {
      charset = parsedConType[i][1].toLowerCase()
      break
    }
  }

  if (charset === undefined) { charset = cfg.defCharset || 'utf8' }

  this.decoder = new Decoder()
  this.charset = charset
  this._fields = 0
  this._state = 'key'
  this._checkingBytes = true
  this._bytesKey = 0
  this._bytesVal = 0
  this._key = ''
  this._val = ''
  this._keyTrunc = false
  this._valTrunc = false
  this._hitLimit = false
}

UrlEncoded.prototype.write = function (data, cb) {
  if (this._fields === this.fieldsLimit) {
    if (!this.boy.hitFieldsLimit) {
      this.boy.hitFieldsLimit = true
      this.boy.emit('fieldsLimit')
    }
    return cb()
  }

  let idxeq; let idxamp; let i; let p = 0; const len = data.length

  while (p < len) {
    if (this._state === 'key') {
      idxeq = idxamp = undefined
      for (i = p; i < len; ++i) {
        if (!this._checkingBytes) { ++p }
        if (data[i] === 0x3D/* = */) {
          idxeq = i
          break
        } else if (data[i] === 0x26/* & */) {
          idxamp = i
          break
        }
        if (this._checkingBytes && this._bytesKey === this.fieldNameSizeLimit) {
          this._hitLimit = true
          break
        } else if (this._checkingBytes) { ++this._bytesKey }
      }

      if (idxeq !== undefined) {
        // key with assignment
        if (idxeq > p) { this._key += this.decoder.write(data.toString('binary', p, idxeq)) }
        this._state = 'val'

        this._hitLimit = false
        this._checkingBytes = true
        this._val = ''
        this._bytesVal = 0
        this._valTrunc = false
        this.decoder.reset()

        p = idxeq + 1
      } else if (idxamp !== undefined) {
        // key with no assignment
        ++this._fields
        let key; const keyTrunc = this._keyTrunc
        if (idxamp > p) { key = (this._key += this.decoder.write(data.toString('binary', p, idxamp))) } else { key = this._key }

        this._hitLimit = false
        this._checkingBytes = true
        this._key = ''
        this._bytesKey = 0
        this._keyTrunc = false
        this.decoder.reset()

        if (key.length) {
          this.boy.emit('field', decodeText(key, 'binary', this.charset),
            '',
            keyTrunc,
            false)
        }

        p = idxamp + 1
        if (this._fields === this.fieldsLimit) { return cb() }
      } else if (this._hitLimit) {
        // we may not have hit the actual limit if there are encoded bytes...
        if (i > p) { this._key += this.decoder.write(data.toString('binary', p, i)) }
        p = i
        if ((this._bytesKey = this._key.length) === this.fieldNameSizeLimit) {
          // yep, we actually did hit the limit
          this._checkingBytes = false
          this._keyTrunc = true
        }
      } else {
        if (p < len) { this._key += this.decoder.write(data.toString('binary', p)) }
        p = len
      }
    } else {
      idxamp = undefined
      for (i = p; i < len; ++i) {
        if (!this._checkingBytes) { ++p }
        if (data[i] === 0x26/* & */) {
          idxamp = i
          break
        }
        if (this._checkingBytes && this._bytesVal === this.fieldSizeLimit) {
          this._hitLimit = true
          break
        } else if (this._checkingBytes) { ++this._bytesVal }
      }

      if (idxamp !== undefined) {
        ++this._fields
        if (idxamp > p) { this._val += this.decoder.write(data.toString('binary', p, idxamp)) }
        this.boy.emit('field', decodeText(this._key, 'binary', this.charset),
          decodeText(this._val, 'binary', this.charset),
          this._keyTrunc,
          this._valTrunc)
        this._state = 'key'

        this._hitLimit = false
        this._checkingBytes = true
        this._key = ''
        this._bytesKey = 0
        this._keyTrunc = false
        this.decoder.reset()

        p = idxamp + 1
        if (this._fields === this.fieldsLimit) { return cb() }
      } else if (this._hitLimit) {
        // we may not have hit the actual limit if there are encoded bytes...
        if (i > p) { this._val += this.decoder.write(data.toString('binary', p, i)) }
        p = i
        if ((this._val === '' && this.fieldSizeLimit === 0) ||
            (this._bytesVal = this._val.length) === this.fieldSizeLimit) {
          // yep, we actually did hit the limit
          this._checkingBytes = false
          this._valTrunc = true
        }
      } else {
        if (p < len) { this._val += this.decoder.write(data.toString('binary', p)) }
        p = len
      }
    }
  }
  cb()
}

UrlEncoded.prototype.end = function () {
  if (this.boy._done) { return }

  if (this._state === 'key' && this._key.length > 0) {
    this.boy.emit('field', decodeText(this._key, 'binary', this.charset),
      '',
      this._keyTrunc,
      false)
  } else if (this._state === 'val') {
    this.boy.emit('field', decodeText(this._key, 'binary', this.charset),
      decodeText(this._val, 'binary', this.charset),
      this._keyTrunc,
      this._valTrunc)
  }
  this.boy._done = true
  this.boy.emit('finish')
}

module.exports = UrlEncoded


/***/ }),

/***/ 9730:
/***/ ((module) => {

"use strict";


const RE_PLUS = /\+/g

const HEX = [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,
  0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
]

function Decoder () {
  this.buffer = undefined
}
Decoder.prototype.write = function (str) {
  // Replace '+' with ' ' before decoding
  str = str.replace(RE_PLUS, ' ')
  let res = ''
  let i = 0; let p = 0; const len = str.length
  for (; i < len; ++i) {
    if (this.buffer !== undefined) {
      if (!HEX[str.charCodeAt(i)]) {
        res += '%' + this.buffer
        this.buffer = undefined
        --i // retry character
      } else {
        this.buffer += str[i]
        ++p
        if (this.buffer.length === 2) {
          res += String.fromCharCode(parseInt(this.buffer, 16))
          this.buffer = undefined
        }
      }
    } else if (str[i] === '%') {
      if (i > p) {
        res += str.substring(p, i)
        p = i
      }
      this.buffer = ''
      ++p
    }
  }
  if (p < len && this.buffer === undefined) { res += str.substring(p) }
  return res
}
Decoder.prototype.reset = function () {
  this.buffer = undefined
}

module.exports = Decoder


/***/ }),

/***/ 496:
/***/ ((module) => {

"use strict";


module.exports = function basename (path) {
  if (typeof path !== 'string') { return '' }
  for (var i = path.length - 1; i >= 0; --i) { // eslint-disable-line no-var
    switch (path.charCodeAt(i)) {
      case 0x2F: // '/'
      case 0x5C: // '\'
        path = path.slice(i + 1)
        return (path === '..' || path === '.' ? '' : path)
    }
  }
  return (path === '..' || path === '.' ? '' : path)
}


/***/ }),

/***/ 1138:
/***/ ((module) => {

"use strict";


// Node has always utf-8
const utf8Decoder = new TextDecoder('utf-8')
const textDecoders = new Map([
  ['utf-8', utf8Decoder],
  ['utf8', utf8Decoder]
])

function decodeText (text, textEncoding, destEncoding) {
  if (text) {
    if (textDecoders.has(destEncoding)) {
      try {
        return textDecoders.get(destEncoding).decode(Buffer.from(text, textEncoding))
      } catch (e) { }
    } else {
      try {
        textDecoders.set(destEncoding, new TextDecoder(destEncoding))
        return textDecoders.get(destEncoding).decode(Buffer.from(text, textEncoding))
      } catch (e) { }
    }
  }
  return text
}

module.exports = decodeText


/***/ }),

/***/ 9692:
/***/ ((module) => {

"use strict";


module.exports = function getLimit (limits, name, defaultLimit) {
  if (
    !limits ||
    limits[name] === undefined ||
    limits[name] === null
  ) { return defaultLimit }

  if (
    typeof limits[name] !== 'number' ||
    isNaN(limits[name])
  ) { throw new TypeError('Limit ' + name + ' is not a valid number') }

  return limits[name]
}


/***/ }),

/***/ 4426:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const decodeText = __nccwpck_require__(1138)

const RE_ENCODED = /%([a-fA-F0-9]{2})/g

function encodedReplacer (match, byte) {
  return String.fromCharCode(parseInt(byte, 16))
}

function parseParams (str) {
  const res = []
  let state = 'key'
  let charset = ''
  let inquote = false
  let escaping = false
  let p = 0
  let tmp = ''

  for (var i = 0, len = str.length; i < len; ++i) { // eslint-disable-line no-var
    const char = str[i]
    if (char === '\\' && inquote) {
      if (escaping) { escaping = false } else {
        escaping = true
        continue
      }
    } else if (char === '"') {
      if (!escaping) {
        if (inquote) {
          inquote = false
          state = 'key'
        } else { inquote = true }
        continue
      } else { escaping = false }
    } else {
      if (escaping && inquote) { tmp += '\\' }
      escaping = false
      if ((state === 'charset' || state === 'lang') && char === "'") {
        if (state === 'charset') {
          state = 'lang'
          charset = tmp.substring(1)
        } else { state = 'value' }
        tmp = ''
        continue
      } else if (state === 'key' &&
        (char === '*' || char === '=') &&
        res.length) {
        if (char === '*') { state = 'charset' } else { state = 'value' }
        res[p] = [tmp, undefined]
        tmp = ''
        continue
      } else if (!inquote && char === ';') {
        state = 'key'
        if (charset) {
          if (tmp.length) {
            tmp = decodeText(tmp.replace(RE_ENCODED, encodedReplacer),
              'binary',
              charset)
          }
          charset = ''
        } else if (tmp.length) {
          tmp = decodeText(tmp, 'binary', 'utf8')
        }
        if (res[p] === undefined) { res[p] = tmp } else { res[p][1] = tmp }
        tmp = ''
        ++p
        continue
      } else if (!inquote && (char === ' ' || char === '\t')) { continue }
    }
    tmp += char
  }
  if (charset && tmp.length) {
    tmp = decodeText(tmp.replace(RE_ENCODED, encodedReplacer),
      'binary',
      charset)
  } else if (tmp) {
    tmp = decodeText(tmp, 'binary', 'utf8')
  }

  if (res[p] === undefined) {
    if (tmp) { res[p] = tmp }
  } else { res[p][1] = tmp }

  return res
}

module.exports = parseParams


/***/ }),

/***/ 7356:
/***/ ((module) => {

"use strict";


module.exports = clone

var getPrototypeOf = Object.getPrototypeOf || function (obj) {
  return obj.__proto__
}

function clone (obj) {
  if (obj === null || typeof obj !== 'object')
    return obj

  if (obj instanceof Object)
    var copy = { __proto__: getPrototypeOf(obj) }
  else
    var copy = Object.create(null)

  Object.getOwnPropertyNames(obj).forEach(function (key) {
    Object.defineProperty(copy, key, Object.getOwnPropertyDescriptor(obj, key))
  })

  return copy
}


/***/ }),

/***/ 7758:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var fs = __nccwpck_require__(7147)
var polyfills = __nccwpck_require__(263)
var legacy = __nccwpck_require__(3086)
var clone = __nccwpck_require__(7356)

var util = __nccwpck_require__(3837)

/* istanbul ignore next - node 0.x polyfill */
var gracefulQueue
var previousSymbol

/* istanbul ignore else - node 0.x polyfill */
if (typeof Symbol === 'function' && typeof Symbol.for === 'function') {
  gracefulQueue = Symbol.for('graceful-fs.queue')
  // This is used in testing by future versions
  previousSymbol = Symbol.for('graceful-fs.previous')
} else {
  gracefulQueue = '___graceful-fs.queue'
  previousSymbol = '___graceful-fs.previous'
}

function noop () {}

function publishQueue(context, queue) {
  Object.defineProperty(context, gracefulQueue, {
    get: function() {
      return queue
    }
  })
}

var debug = noop
if (util.debuglog)
  debug = util.debuglog('gfs4')
else if (/\bgfs4\b/i.test(process.env.NODE_DEBUG || ''))
  debug = function() {
    var m = util.format.apply(util, arguments)
    m = 'GFS4: ' + m.split(/\n/).join('\nGFS4: ')
    console.error(m)
  }

// Once time initialization
if (!fs[gracefulQueue]) {
  // This queue can be shared by multiple loaded instances
  var queue = global[gracefulQueue] || []
  publishQueue(fs, queue)

  // Patch fs.close/closeSync to shared queue version, because we need
  // to retry() whenever a close happens *anywhere* in the program.
  // This is essential when multiple graceful-fs instances are
  // in play at the same time.
  fs.close = (function (fs$close) {
    function close (fd, cb) {
      return fs$close.call(fs, fd, function (err) {
        // This function uses the graceful-fs shared queue
        if (!err) {
          resetQueue()
        }

        if (typeof cb === 'function')
          cb.apply(this, arguments)
      })
    }

    Object.defineProperty(close, previousSymbol, {
      value: fs$close
    })
    return close
  })(fs.close)

  fs.closeSync = (function (fs$closeSync) {
    function closeSync (fd) {
      // This function uses the graceful-fs shared queue
      fs$closeSync.apply(fs, arguments)
      resetQueue()
    }

    Object.defineProperty(closeSync, previousSymbol, {
      value: fs$closeSync
    })
    return closeSync
  })(fs.closeSync)

  if (/\bgfs4\b/i.test(process.env.NODE_DEBUG || '')) {
    process.on('exit', function() {
      debug(fs[gracefulQueue])
      __nccwpck_require__(9491).equal(fs[gracefulQueue].length, 0)
    })
  }
}

if (!global[gracefulQueue]) {
  publishQueue(global, fs[gracefulQueue]);
}

module.exports = patch(clone(fs))
if (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !fs.__patched) {
    module.exports = patch(fs)
    fs.__patched = true;
}

function patch (fs) {
  // Everything that references the open() function needs to be in here
  polyfills(fs)
  fs.gracefulify = patch

  fs.createReadStream = createReadStream
  fs.createWriteStream = createWriteStream
  var fs$readFile = fs.readFile
  fs.readFile = readFile
  function readFile (path, options, cb) {
    if (typeof options === 'function')
      cb = options, options = null

    return go$readFile(path, options, cb)

    function go$readFile (path, options, cb, startTime) {
      return fs$readFile(path, options, function (err) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$readFile, [path, options, cb], err, startTime || Date.now(), Date.now()])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
        }
      })
    }
  }

  var fs$writeFile = fs.writeFile
  fs.writeFile = writeFile
  function writeFile (path, data, options, cb) {
    if (typeof options === 'function')
      cb = options, options = null

    return go$writeFile(path, data, options, cb)

    function go$writeFile (path, data, options, cb, startTime) {
      return fs$writeFile(path, data, options, function (err) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$writeFile, [path, data, options, cb], err, startTime || Date.now(), Date.now()])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
        }
      })
    }
  }

  var fs$appendFile = fs.appendFile
  if (fs$appendFile)
    fs.appendFile = appendFile
  function appendFile (path, data, options, cb) {
    if (typeof options === 'function')
      cb = options, options = null

    return go$appendFile(path, data, options, cb)

    function go$appendFile (path, data, options, cb, startTime) {
      return fs$appendFile(path, data, options, function (err) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$appendFile, [path, data, options, cb], err, startTime || Date.now(), Date.now()])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
        }
      })
    }
  }

  var fs$copyFile = fs.copyFile
  if (fs$copyFile)
    fs.copyFile = copyFile
  function copyFile (src, dest, flags, cb) {
    if (typeof flags === 'function') {
      cb = flags
      flags = 0
    }
    return go$copyFile(src, dest, flags, cb)

    function go$copyFile (src, dest, flags, cb, startTime) {
      return fs$copyFile(src, dest, flags, function (err) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$copyFile, [src, dest, flags, cb], err, startTime || Date.now(), Date.now()])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
        }
      })
    }
  }

  var fs$readdir = fs.readdir
  fs.readdir = readdir
  var noReaddirOptionVersions = /^v[0-5]\./
  function readdir (path, options, cb) {
    if (typeof options === 'function')
      cb = options, options = null

    var go$readdir = noReaddirOptionVersions.test(process.version)
      ? function go$readdir (path, options, cb, startTime) {
        return fs$readdir(path, fs$readdirCallback(
          path, options, cb, startTime
        ))
      }
      : function go$readdir (path, options, cb, startTime) {
        return fs$readdir(path, options, fs$readdirCallback(
          path, options, cb, startTime
        ))
      }

    return go$readdir(path, options, cb)

    function fs$readdirCallback (path, options, cb, startTime) {
      return function (err, files) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([
            go$readdir,
            [path, options, cb],
            err,
            startTime || Date.now(),
            Date.now()
          ])
        else {
          if (files && files.sort)
            files.sort()

          if (typeof cb === 'function')
            cb.call(this, err, files)
        }
      }
    }
  }

  if (process.version.substr(0, 4) === 'v0.8') {
    var legStreams = legacy(fs)
    ReadStream = legStreams.ReadStream
    WriteStream = legStreams.WriteStream
  }

  var fs$ReadStream = fs.ReadStream
  if (fs$ReadStream) {
    ReadStream.prototype = Object.create(fs$ReadStream.prototype)
    ReadStream.prototype.open = ReadStream$open
  }

  var fs$WriteStream = fs.WriteStream
  if (fs$WriteStream) {
    WriteStream.prototype = Object.create(fs$WriteStream.prototype)
    WriteStream.prototype.open = WriteStream$open
  }

  Object.defineProperty(fs, 'ReadStream', {
    get: function () {
      return ReadStream
    },
    set: function (val) {
      ReadStream = val
    },
    enumerable: true,
    configurable: true
  })
  Object.defineProperty(fs, 'WriteStream', {
    get: function () {
      return WriteStream
    },
    set: function (val) {
      WriteStream = val
    },
    enumerable: true,
    configurable: true
  })

  // legacy names
  var FileReadStream = ReadStream
  Object.defineProperty(fs, 'FileReadStream', {
    get: function () {
      return FileReadStream
    },
    set: function (val) {
      FileReadStream = val
    },
    enumerable: true,
    configurable: true
  })
  var FileWriteStream = WriteStream
  Object.defineProperty(fs, 'FileWriteStream', {
    get: function () {
      return FileWriteStream
    },
    set: function (val) {
      FileWriteStream = val
    },
    enumerable: true,
    configurable: true
  })

  function ReadStream (path, options) {
    if (this instanceof ReadStream)
      return fs$ReadStream.apply(this, arguments), this
    else
      return ReadStream.apply(Object.create(ReadStream.prototype), arguments)
  }

  function ReadStream$open () {
    var that = this
    open(that.path, that.flags, that.mode, function (err, fd) {
      if (err) {
        if (that.autoClose)
          that.destroy()

        that.emit('error', err)
      } else {
        that.fd = fd
        that.emit('open', fd)
        that.read()
      }
    })
  }

  function WriteStream (path, options) {
    if (this instanceof WriteStream)
      return fs$WriteStream.apply(this, arguments), this
    else
      return WriteStream.apply(Object.create(WriteStream.prototype), arguments)
  }

  function WriteStream$open () {
    var that = this
    open(that.path, that.flags, that.mode, function (err, fd) {
      if (err) {
        that.destroy()
        that.emit('error', err)
      } else {
        that.fd = fd
        that.emit('open', fd)
      }
    })
  }

  function createReadStream (path, options) {
    return new fs.ReadStream(path, options)
  }

  function createWriteStream (path, options) {
    return new fs.WriteStream(path, options)
  }

  var fs$open = fs.open
  fs.open = open
  function open (path, flags, mode, cb) {
    if (typeof mode === 'function')
      cb = mode, mode = null

    return go$open(path, flags, mode, cb)

    function go$open (path, flags, mode, cb, startTime) {
      return fs$open(path, flags, mode, function (err, fd) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$open, [path, flags, mode, cb], err, startTime || Date.now(), Date.now()])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
        }
      })
    }
  }

  return fs
}

function enqueue (elem) {
  debug('ENQUEUE', elem[0].name, elem[1])
  fs[gracefulQueue].push(elem)
  retry()
}

// keep track of the timeout between retry() calls
var retryTimer

// reset the startTime and lastTime to now
// this resets the start of the 60 second overall timeout as well as the
// delay between attempts so that we'll retry these jobs sooner
function resetQueue () {
  var now = Date.now()
  for (var i = 0; i < fs[gracefulQueue].length; ++i) {
    // entries that are only a length of 2 are from an older version, don't
    // bother modifying those since they'll be retried anyway.
    if (fs[gracefulQueue][i].length > 2) {
      fs[gracefulQueue][i][3] = now // startTime
      fs[gracefulQueue][i][4] = now // lastTime
    }
  }
  // call retry to make sure we're actively processing the queue
  retry()
}

function retry () {
  // clear the timer and remove it to help prevent unintended concurrency
  clearTimeout(retryTimer)
  retryTimer = undefined

  if (fs[gracefulQueue].length === 0)
    return

  var elem = fs[gracefulQueue].shift()
  var fn = elem[0]
  var args = elem[1]
  // these items may be unset if they were added by an older graceful-fs
  var err = elem[2]
  var startTime = elem[3]
  var lastTime = elem[4]

  // if we don't have a startTime we have no way of knowing if we've waited
  // long enough, so go ahead and retry this item now
  if (startTime === undefined) {
    debug('RETRY', fn.name, args)
    fn.apply(null, args)
  } else if (Date.now() - startTime >= 60000) {
    // it's been more than 60 seconds total, bail now
    debug('TIMEOUT', fn.name, args)
    var cb = args.pop()
    if (typeof cb === 'function')
      cb.call(null, err)
  } else {
    // the amount of time between the last attempt and right now
    var sinceAttempt = Date.now() - lastTime
    // the amount of time between when we first tried, and when we last tried
    // rounded up to at least 1
    var sinceStart = Math.max(lastTime - startTime, 1)
    // backoff. wait longer than the total time we've been retrying, but only
    // up to a maximum of 100ms
    var desiredDelay = Math.min(sinceStart * 1.2, 100)
    // it's been long enough since the last retry, do it again
    if (sinceAttempt >= desiredDelay) {
      debug('RETRY', fn.name, args)
      fn.apply(null, args.concat([startTime]))
    } else {
      // if we can't do this job yet, push it to the end of the queue
      // and let the next iteration check again
      fs[gracefulQueue].push(elem)
    }
  }

  // schedule our next run if one isn't already scheduled
  if (retryTimer === undefined) {
    retryTimer = setTimeout(retry, 0)
  }
}


/***/ }),

/***/ 3086:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var Stream = (__nccwpck_require__(2781).Stream)

module.exports = legacy

function legacy (fs) {
  return {
    ReadStream: ReadStream,
    WriteStream: WriteStream
  }

  function ReadStream (path, options) {
    if (!(this instanceof ReadStream)) return new ReadStream(path, options);

    Stream.call(this);

    var self = this;

    this.path = path;
    this.fd = null;
    this.readable = true;
    this.paused = false;

    this.flags = 'r';
    this.mode = 438; /*=0666*/
    this.bufferSize = 64 * 1024;

    options = options || {};

    // Mixin options into this
    var keys = Object.keys(options);
    for (var index = 0, length = keys.length; index < length; index++) {
      var key = keys[index];
      this[key] = options[key];
    }

    if (this.encoding) this.setEncoding(this.encoding);

    if (this.start !== undefined) {
      if ('number' !== typeof this.start) {
        throw TypeError('start must be a Number');
      }
      if (this.end === undefined) {
        this.end = Infinity;
      } else if ('number' !== typeof this.end) {
        throw TypeError('end must be a Number');
      }

      if (this.start > this.end) {
        throw new Error('start must be <= end');
      }

      this.pos = this.start;
    }

    if (this.fd !== null) {
      process.nextTick(function() {
        self._read();
      });
      return;
    }

    fs.open(this.path, this.flags, this.mode, function (err, fd) {
      if (err) {
        self.emit('error', err);
        self.readable = false;
        return;
      }

      self.fd = fd;
      self.emit('open', fd);
      self._read();
    })
  }

  function WriteStream (path, options) {
    if (!(this instanceof WriteStream)) return new WriteStream(path, options);

    Stream.call(this);

    this.path = path;
    this.fd = null;
    this.writable = true;

    this.flags = 'w';
    this.encoding = 'binary';
    this.mode = 438; /*=0666*/
    this.bytesWritten = 0;

    options = options || {};

    // Mixin options into this
    var keys = Object.keys(options);
    for (var index = 0, length = keys.length; index < length; index++) {
      var key = keys[index];
      this[key] = options[key];
    }

    if (this.start !== undefined) {
      if ('number' !== typeof this.start) {
        throw TypeError('start must be a Number');
      }
      if (this.start < 0) {
        throw new Error('start must be >= zero');
      }

      this.pos = this.start;
    }

    this.busy = false;
    this._queue = [];

    if (this.fd === null) {
      this._open = fs.open;
      this._queue.push([this._open, this.path, this.flags, this.mode, undefined]);
      this.flush();
    }
  }
}


/***/ }),

/***/ 263:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var constants = __nccwpck_require__(2057)

var origCwd = process.cwd
var cwd = null

var platform = process.env.GRACEFUL_FS_PLATFORM || process.platform

process.cwd = function() {
  if (!cwd)
    cwd = origCwd.call(process)
  return cwd
}
try {
  process.cwd()
} catch (er) {}

// This check is needed until node.js 12 is required
if (typeof process.chdir === 'function') {
  var chdir = process.chdir
  process.chdir = function (d) {
    cwd = null
    chdir.call(process, d)
  }
  if (Object.setPrototypeOf) Object.setPrototypeOf(process.chdir, chdir)
}

module.exports = patch

function patch (fs) {
  // (re-)implement some things that are known busted or missing.

  // lchmod, broken prior to 0.6.2
  // back-port the fix here.
  if (constants.hasOwnProperty('O_SYMLINK') &&
      process.version.match(/^v0\.6\.[0-2]|^v0\.5\./)) {
    patchLchmod(fs)
  }

  // lutimes implementation, or no-op
  if (!fs.lutimes) {
    patchLutimes(fs)
  }

  // https://github.com/isaacs/node-graceful-fs/issues/4
  // Chown should not fail on einval or eperm if non-root.
  // It should not fail on enosys ever, as this just indicates
  // that a fs doesn't support the intended operation.

  fs.chown = chownFix(fs.chown)
  fs.fchown = chownFix(fs.fchown)
  fs.lchown = chownFix(fs.lchown)

  fs.chmod = chmodFix(fs.chmod)
  fs.fchmod = chmodFix(fs.fchmod)
  fs.lchmod = chmodFix(fs.lchmod)

  fs.chownSync = chownFixSync(fs.chownSync)
  fs.fchownSync = chownFixSync(fs.fchownSync)
  fs.lchownSync = chownFixSync(fs.lchownSync)

  fs.chmodSync = chmodFixSync(fs.chmodSync)
  fs.fchmodSync = chmodFixSync(fs.fchmodSync)
  fs.lchmodSync = chmodFixSync(fs.lchmodSync)

  fs.stat = statFix(fs.stat)
  fs.fstat = statFix(fs.fstat)
  fs.lstat = statFix(fs.lstat)

  fs.statSync = statFixSync(fs.statSync)
  fs.fstatSync = statFixSync(fs.fstatSync)
  fs.lstatSync = statFixSync(fs.lstatSync)

  // if lchmod/lchown do not exist, then make them no-ops
  if (fs.chmod && !fs.lchmod) {
    fs.lchmod = function (path, mode, cb) {
      if (cb) process.nextTick(cb)
    }
    fs.lchmodSync = function () {}
  }
  if (fs.chown && !fs.lchown) {
    fs.lchown = function (path, uid, gid, cb) {
      if (cb) process.nextTick(cb)
    }
    fs.lchownSync = function () {}
  }

  // on Windows, A/V software can lock the directory, causing this
  // to fail with an EACCES or EPERM if the directory contains newly
  // created files.  Try again on failure, for up to 60 seconds.

  // Set the timeout this long because some Windows Anti-Virus, such as Parity
  // bit9, may lock files for up to a minute, causing npm package install
  // failures. Also, take care to yield the scheduler. Windows scheduling gives
  // CPU to a busy looping process, which can cause the program causing the lock
  // contention to be starved of CPU by node, so the contention doesn't resolve.
  if (platform === "win32") {
    fs.rename = typeof fs.rename !== 'function' ? fs.rename
    : (function (fs$rename) {
      function rename (from, to, cb) {
        var start = Date.now()
        var backoff = 0;
        fs$rename(from, to, function CB (er) {
          if (er
              && (er.code === "EACCES" || er.code === "EPERM" || er.code === "EBUSY")
              && Date.now() - start < 60000) {
            setTimeout(function() {
              fs.stat(to, function (stater, st) {
                if (stater && stater.code === "ENOENT")
                  fs$rename(from, to, CB);
                else
                  cb(er)
              })
            }, backoff)
            if (backoff < 100)
              backoff += 10;
            return;
          }
          if (cb) cb(er)
        })
      }
      if (Object.setPrototypeOf) Object.setPrototypeOf(rename, fs$rename)
      return rename
    })(fs.rename)
  }

  // if read() returns EAGAIN, then just try it again.
  fs.read = typeof fs.read !== 'function' ? fs.read
  : (function (fs$read) {
    function read (fd, buffer, offset, length, position, callback_) {
      var callback
      if (callback_ && typeof callback_ === 'function') {
        var eagCounter = 0
        callback = function (er, _, __) {
          if (er && er.code === 'EAGAIN' && eagCounter < 10) {
            eagCounter ++
            return fs$read.call(fs, fd, buffer, offset, length, position, callback)
          }
          callback_.apply(this, arguments)
        }
      }
      return fs$read.call(fs, fd, buffer, offset, length, position, callback)
    }

    // This ensures `util.promisify` works as it does for native `fs.read`.
    if (Object.setPrototypeOf) Object.setPrototypeOf(read, fs$read)
    return read
  })(fs.read)

  fs.readSync = typeof fs.readSync !== 'function' ? fs.readSync
  : (function (fs$readSync) { return function (fd, buffer, offset, length, position) {
    var eagCounter = 0
    while (true) {
      try {
        return fs$readSync.call(fs, fd, buffer, offset, length, position)
      } catch (er) {
        if (er.code === 'EAGAIN' && eagCounter < 10) {
          eagCounter ++
          continue
        }
        throw er
      }
    }
  }})(fs.readSync)

  function patchLchmod (fs) {
    fs.lchmod = function (path, mode, callback) {
      fs.open( path
             , constants.O_WRONLY | constants.O_SYMLINK
             , mode
             , function (err, fd) {
        if (err) {
          if (callback) callback(err)
          return
        }
        // prefer to return the chmod error, if one occurs,
        // but still try to close, and report closing errors if they occur.
        fs.fchmod(fd, mode, function (err) {
          fs.close(fd, function(err2) {
            if (callback) callback(err || err2)
          })
        })
      })
    }

    fs.lchmodSync = function (path, mode) {
      var fd = fs.openSync(path, constants.O_WRONLY | constants.O_SYMLINK, mode)

      // prefer to return the chmod error, if one occurs,
      // but still try to close, and report closing errors if they occur.
      var threw = true
      var ret
      try {
        ret = fs.fchmodSync(fd, mode)
        threw = false
      } finally {
        if (threw) {
          try {
            fs.closeSync(fd)
          } catch (er) {}
        } else {
          fs.closeSync(fd)
        }
      }
      return ret
    }
  }

  function patchLutimes (fs) {
    if (constants.hasOwnProperty("O_SYMLINK") && fs.futimes) {
      fs.lutimes = function (path, at, mt, cb) {
        fs.open(path, constants.O_SYMLINK, function (er, fd) {
          if (er) {
            if (cb) cb(er)
            return
          }
          fs.futimes(fd, at, mt, function (er) {
            fs.close(fd, function (er2) {
              if (cb) cb(er || er2)
            })
          })
        })
      }

      fs.lutimesSync = function (path, at, mt) {
        var fd = fs.openSync(path, constants.O_SYMLINK)
        var ret
        var threw = true
        try {
          ret = fs.futimesSync(fd, at, mt)
          threw = false
        } finally {
          if (threw) {
            try {
              fs.closeSync(fd)
            } catch (er) {}
          } else {
            fs.closeSync(fd)
          }
        }
        return ret
      }

    } else if (fs.futimes) {
      fs.lutimes = function (_a, _b, _c, cb) { if (cb) process.nextTick(cb) }
      fs.lutimesSync = function () {}
    }
  }

  function chmodFix (orig) {
    if (!orig) return orig
    return function (target, mode, cb) {
      return orig.call(fs, target, mode, function (er) {
        if (chownErOk(er)) er = null
        if (cb) cb.apply(this, arguments)
      })
    }
  }

  function chmodFixSync (orig) {
    if (!orig) return orig
    return function (target, mode) {
      try {
        return orig.call(fs, target, mode)
      } catch (er) {
        if (!chownErOk(er)) throw er
      }
    }
  }


  function chownFix (orig) {
    if (!orig) return orig
    return function (target, uid, gid, cb) {
      return orig.call(fs, target, uid, gid, function (er) {
        if (chownErOk(er)) er = null
        if (cb) cb.apply(this, arguments)
      })
    }
  }

  function chownFixSync (orig) {
    if (!orig) return orig
    return function (target, uid, gid) {
      try {
        return orig.call(fs, target, uid, gid)
      } catch (er) {
        if (!chownErOk(er)) throw er
      }
    }
  }

  function statFix (orig) {
    if (!orig) return orig
    // Older versions of Node erroneously returned signed integers for
    // uid + gid.
    return function (target, options, cb) {
      if (typeof options === 'function') {
        cb = options
        options = null
      }
      function callback (er, stats) {
        if (stats) {
          if (stats.uid < 0) stats.uid += 0x100000000
          if (stats.gid < 0) stats.gid += 0x100000000
        }
        if (cb) cb.apply(this, arguments)
      }
      return options ? orig.call(fs, target, options, callback)
        : orig.call(fs, target, callback)
    }
  }

  function statFixSync (orig) {
    if (!orig) return orig
    // Older versions of Node erroneously returned signed integers for
    // uid + gid.
    return function (target, options) {
      var stats = options ? orig.call(fs, target, options)
        : orig.call(fs, target)
      if (stats) {
        if (stats.uid < 0) stats.uid += 0x100000000
        if (stats.gid < 0) stats.gid += 0x100000000
      }
      return stats;
    }
  }

  // ENOSYS means that the fs doesn't support the op. Just ignore
  // that, because it doesn't matter.
  //
  // if there's no getuid, or if getuid() is something other
  // than 0, and the error is EINVAL or EPERM, then just ignore
  // it.
  //
  // This specific case is a silent failure in cp, install, tar,
  // and most other unix tools that manage permissions.
  //
  // When running as root, or if other types of errors are
  // encountered, then it's strict.
  function chownErOk (er) {
    if (!er)
      return true

    if (er.code === "ENOSYS")
      return true

    var nonroot = !process.getuid || process.getuid() !== 0
    if (nonroot) {
      if (er.code === "EINVAL" || er.code === "EPERM")
        return true
    }

    return false
  }
}


/***/ }),

/***/ 7126:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var fs = __nccwpck_require__(7147)
var core
if (process.platform === 'win32' || global.TESTING_WINDOWS) {
  core = __nccwpck_require__(2001)
} else {
  core = __nccwpck_require__(9728)
}

module.exports = isexe
isexe.sync = sync

function isexe (path, options, cb) {
  if (typeof options === 'function') {
    cb = options
    options = {}
  }

  if (!cb) {
    if (typeof Promise !== 'function') {
      throw new TypeError('callback not provided')
    }

    return new Promise(function (resolve, reject) {
      isexe(path, options || {}, function (er, is) {
        if (er) {
          reject(er)
        } else {
          resolve(is)
        }
      })
    })
  }

  core(path, options || {}, function (er, is) {
    // ignore EACCES because that just means we aren't allowed to run it
    if (er) {
      if (er.code === 'EACCES' || options && options.ignoreErrors) {
        er = null
        is = false
      }
    }
    cb(er, is)
  })
}

function sync (path, options) {
  // my kingdom for a filtered catch
  try {
    return core.sync(path, options || {})
  } catch (er) {
    if (options && options.ignoreErrors || er.code === 'EACCES') {
      return false
    } else {
      throw er
    }
  }
}


/***/ }),

/***/ 9728:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = isexe
isexe.sync = sync

var fs = __nccwpck_require__(7147)

function isexe (path, options, cb) {
  fs.stat(path, function (er, stat) {
    cb(er, er ? false : checkStat(stat, options))
  })
}

function sync (path, options) {
  return checkStat(fs.statSync(path), options)
}

function checkStat (stat, options) {
  return stat.isFile() && checkMode(stat, options)
}

function checkMode (stat, options) {
  var mod = stat.mode
  var uid = stat.uid
  var gid = stat.gid

  var myUid = options.uid !== undefined ?
    options.uid : process.getuid && process.getuid()
  var myGid = options.gid !== undefined ?
    options.gid : process.getgid && process.getgid()

  var u = parseInt('100', 8)
  var g = parseInt('010', 8)
  var o = parseInt('001', 8)
  var ug = u | g

  var ret = (mod & o) ||
    (mod & g) && gid === myGid ||
    (mod & u) && uid === myUid ||
    (mod & ug) && myUid === 0

  return ret
}


/***/ }),

/***/ 2001:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = isexe
isexe.sync = sync

var fs = __nccwpck_require__(7147)

function checkPathExt (path, options) {
  var pathext = options.pathExt !== undefined ?
    options.pathExt : process.env.PATHEXT

  if (!pathext) {
    return true
  }

  pathext = pathext.split(';')
  if (pathext.indexOf('') !== -1) {
    return true
  }
  for (var i = 0; i < pathext.length; i++) {
    var p = pathext[i].toLowerCase()
    if (p && path.substr(-p.length).toLowerCase() === p) {
      return true
    }
  }
  return false
}

function checkStat (stat, path, options) {
  if (!stat.isSymbolicLink() && !stat.isFile()) {
    return false
  }
  return checkPathExt(path, options)
}

function isexe (path, options, cb) {
  fs.stat(path, function (er, stat) {
    cb(er, er ? false : checkStat(stat, path, options))
  })
}

function sync (path, options) {
  return checkStat(fs.statSync(path), path, options)
}


/***/ }),

/***/ 8377:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";
// Copyright 2023 Niels Martignène <niels.martignene@protonmail.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the “Software”), to deal in 
// the Software without restriction, including without limitation the rights to use,
// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
// Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.



const fs = __nccwpck_require__(7147);
const os = __nccwpck_require__(2037);
const path = __nccwpck_require__(1017);
const { spawnSync } = __nccwpck_require__(2081);
const tools = __nccwpck_require__(9007);

const DefaultOptions = {
    mode: 'RelWithDebInfo'
};

function Builder(config = {}) {
    let self = this;

    let app_dir = config.app_dir;
    let project_dir = config.project_dir;
    let package_dir = null;

    if (app_dir == null)
        app_dir = __dirname.replace(/\\/g, '/') + '/..';
    if (project_dir == null)
        project_dir = process.cwd();
    app_dir = app_dir.replace(/\\/g, '/');
    project_dir = project_dir.replace(/\\/g, '/');
    package_dir = find_parent_directory(project_dir, 'package.json');

    let runtime_version = config.runtime_version;
    let arch = config.arch;
    let toolset = config.toolset || null;
    let prefer_clang = config.prefer_clang || false;
    let mode = config.mode || DefaultOptions.mode;
    let targets = config.targets || [];
    let verbose = config.verbose || false;
    let prebuild = config.prebuild || false;

    if (runtime_version == null)
        runtime_version = process.version;
    if (runtime_version.startsWith('v'))
        runtime_version = runtime_version.substr(1);
    if (arch == null)
        arch = tools.determine_arch();

    let cache_dir = get_cache_directory();
    let build_dir = config.build_dir;
    let work_dir = null;

    if (build_dir == null) {
        let pkg = read_package_json();

        if (pkg.cnoke.output != null) {
            build_dir = expand_path(pkg.cnoke.output);

            if (!tools.path_is_absolute(build_dir))
                build_dir = package_dir + '/' + build_dir;
        } else {
            build_dir = project_dir + '/build';
        }
    }
    work_dir = build_dir + `/v${runtime_version}_${arch}`;

    let cmake_bin = null;

    this.configure = async function(retry = true) {
        let args = [project_dir];

        check_cmake();
        check_compatibility();

        console.log(`>> Node: ${runtime_version}`);
        console.log(`>> Target: ${process.platform}_${arch}`);

        // Prepare build directory
        fs.mkdirSync(cache_dir, { recursive: true, mode: 0o755 });
        fs.mkdirSync(build_dir, { recursive: true, mode: 0o755 });
        fs.mkdirSync(work_dir, { recursive: true, mode: 0o755 });

        retry &= fs.existsSync(work_dir + '/CMakeCache.txt');

        // Download Node headers
        {
            let basename = `node-v${runtime_version}-headers.tar.gz`;
            let urls = [
                `https://nodejs.org/dist/v${runtime_version}/${basename}`,
                // `https://unofficial-builds.nodejs.org/download/release/v${runtime_version}/${basename}`
            ];
            let destname = `${cache_dir}/${basename}`;

            if (!fs.existsSync(destname))
                await tools.download_http(urls, destname);
            await tools.extract_targz(destname, work_dir + '/headers', 1);
        }

        // Download Node import library (Windows)
        if (process.platform === 'win32') {
            let dirname;
            switch (arch) {
                case 'ia32': { dirname = 'win-x86'; } break;
                case 'x64': { dirname = 'win-x64'; } break;
                case 'arm64': { dirname = 'win-arm64'; } break;

                default: {
                    throw new Error(`Unsupported architecture '${arch}' for Node on Windows`);
                } break;
            }

            let destname = `${cache_dir}/node_v${runtime_version}_${arch}.lib`;

            if (!fs.existsSync(destname)) {
                let urls = [
                    `https://nodejs.org/dist/v${runtime_version}/${dirname}/node.lib`,
                    // `https://unofficial-builds.nodejs.org/download/release/v${runtime_version}/${dirname}/node.lib`
                ];
                await tools.download_http(urls, destname);
            }

            fs.copyFileSync(destname, work_dir + '/node.lib');
        }

        args.push(`-DCMAKE_MODULE_PATH=${app_dir}/assets`);

        args.push(`-DNODE_JS_INCLUDE_DIRS=${work_dir}/headers/include/node`);

        // Set platform flags
        switch (process.platform) {
            case 'win32': {
                fs.copyFileSync(`${app_dir}/assets/win_delay_hook.c`, work_dir + '/win_delay_hook.c');

                args.push(`-DNODE_JS_SOURCES=${work_dir}/win_delay_hook.c`);
                args.push(`-DNODE_JS_LIBRARIES=${work_dir}/node.lib`);

                switch (arch) {
                    case 'ia32': {
                        args.push('-DNODE_JS_LINK_FLAGS=/DELAYLOAD:node.exe;/SAFESEH:NO');
                        args.push('-A', 'Win32');
                    } break;
                    case 'arm64': {
                        args.push('-DNODE_JS_LINK_FLAGS=/DELAYLOAD:node.exe;/SAFESEH:NO');
                        args.push('-A', 'ARM64');
                    } break;
                    case 'x64': {
                        args.push('-DNODE_JS_LINK_FLAGS=/DELAYLOAD:node.exe');
                        args.push('-A', 'x64');
                    } break;
                }
            } break;

            case 'darwin': {
                args.push('-DNODE_JS_LINK_FLAGS=-undefined;dynamic_lookup');

                switch (arch) {
                    case 'arm64': { args.push('-DCMAKE_OSX_ARCHITECTURES=arm64'); } break;
                    case 'x64': { args.push('-DCMAKE_OSX_ARCHITECTURES=x86_64'); } break;
                }
            } break;
        }

        if (process.platform != 'win32') {
            // Prefer Ninja if available
            if (spawnSync('ninja', ['--version']).status === 0)
                args.push('-G', 'Ninja');

            // Use CCache if available
            if (spawnSync('ccache', ['--version']).status === 0) {
                args.push('-DCMAKE_C_COMPILER_LAUNCHER=ccache');
                args.push('-DCMAKE_CXX_COMPILER_LAUNCHER=ccache');
            }
        }

        if (prefer_clang) {
            if (process.platform == 'win32') {
                args.push('-T', 'ClangCL');
            } else {
                args.push('-DCMAKE_C_COMPILER=clang');
                args.push('-DCMAKE_CXX_COMPILER=clang++');
            }
        }
        if (toolset != null)
            args.push('-T', toolset);

        args.push(`-DCMAKE_BUILD_TYPE=${mode}`);
        for (let type of ['ARCHIVE', 'RUNTIME', 'LIBRARY']) {
            for (let suffix of ['', '_DEBUG', '_RELEASE', '_RELWITHDEBINFO'])
                args.push(`-DCMAKE_${type}_OUTPUT_DIRECTORY${suffix}=${build_dir}`);
        }
        args.push('--no-warn-unused-cli');

        console.log('>> Running configuration');

        let proc = spawnSync(cmake_bin, args, { cwd: work_dir, stdio: 'inherit' });
        if (proc.status !== 0) {
            tools.unlink_recursive(work_dir);
            if (retry)
                return self.configure(false);

            throw new Error('Failed to run configure step');
        }
    };

    this.build = async function() {
        check_compatibility();

        if (prebuild) {
            let valid = await check_prebuild();
            if (valid)
                return;
        }

        check_cmake();

        if (!fs.existsSync(work_dir + '/CMakeCache.txt'))
            await self.configure();

        // In case Make gets used
        if (process.env.MAKEFLAGS == null)
            process.env.MAKEFLAGS = '-j' + os.cpus().length;

        let args = [
            '--build', work_dir,
            '--config', mode
        ];

        if (verbose)
            args.push('--verbose');
        for (let target of targets)
            args.push('--target', target);

        console.log('>> Running build');

        let proc = spawnSync(cmake_bin, args, { stdio: 'inherit' });
        if (proc.status !== 0)
            throw new Error('Failed to run build step');
    };

    async function check_prebuild() {
        let pkg = read_package_json();

        if (pkg.cnoke.prebuild != null) {
            fs.mkdirSync(build_dir, { recursive: true, mode: 0o755 });

            let url = expand_path(pkg.cnoke.prebuild);
            let basename = path.basename(url);

            try {
                let archive_filename = null;

                if (url.startsWith('file:/')) {
                    if (url.startsWith('file://localhost/')) {
                        url = url.substr(16);
                    } else {
                        let offset = 6;
                        while (offset < 9 && url[offset] == '/')
                            offset++;
                        url = url.substr(offset - 1);
                    }

                    if (process.platform == 'win32' && url.match(/^\/[a-zA-Z]+:[\\\/]/))
                        url = url.substr(1);
                }

                if (url.match(/^[a-z]+:\/\//)) {
                    archive_filename = build_dir + '/' + basename;
                    await tools.download_http(url, archive_filename);
                } else {
                    archive_filename = url;

                    if (!tools.path_is_absolute(archive_filename))
                        archive_filename = path.join(package_dir, archive_filename);

                    if (!fs.existsSync(archive_filename))
                        throw new Error('Cannot find local prebuilt archive');
                }

                console.log('>> Extracting prebuilt binaries...');
                await tools.extract_targz(archive_filename, build_dir, 1);
            } catch (err) {
                console.error('Failed to find prebuilt binary for your platform, building manually');
            }
        }

        if (pkg.cnoke.require != null) {
            let require_filename = expand_path(pkg.cnoke.require);

            if (!tools.path_is_absolute(require_filename))
                require_filename = path.join(package_dir, require_filename);

            if (fs.existsSync(require_filename)) {
                let proc = spawnSync(process.execPath, ['-e', 'require(process.argv[1])', require_filename]);
                if (proc.status === 0)
                    return true;
            }

            console.error('Failed to load prebuilt binary, rebuilding from source');
        }

        return false;
    }

    this.clean = function() {
        tools.unlink_recursive(build_dir);
    };

    function find_parent_directory(dirname, basename)
    {
        if (process.platform == 'win32')
            dirname = dirname.replace(/\\/g, '/');

        do {
            if (fs.existsSync(dirname + '/' + basename))
                return dirname;

            dirname = path.dirname(dirname);
        } while (!dirname.endsWith('/'));

        return null;
    }

    function get_cache_directory() {
        if (process.platform == 'win32') {
            let cache_dir = process.env['APPDATA'];
            if (cache_dir == null)
                throw new Error('Missing APPDATA environment variable');

            cache_dir = path.join(cache_dir, 'cnoke');
            return cache_dir;
        } else {
            let cache_dir = process.env['XDG_CACHE_HOME'];

            if (cache_dir == null) {
                let home = process.env['HOME'];
                if (home == null)
                    throw new Error('Missing HOME environment variable');

                cache_dir = path.join(home, '.cache');
            }

            cache_dir = path.join(cache_dir, 'cnoke');
            return cache_dir;
        }
    }

    function check_cmake() {
        if (cmake_bin != null)
            return;

        // Check for CMakeLists.txt
        if (!fs.existsSync(project_dir + '/CMakeLists.txt'))
            throw new Error('This directory does not appear to have a CMakeLists.txt file');

        // Check for CMake
        {
            let proc = spawnSync('cmake', ['--version']);

            if (proc.status === 0) {
                cmake_bin = 'cmake';
            } else {
                if (process.platform == 'win32') {
                    // I really don't want to depend on anything in CNoke, and Node.js does not provide
                    // anything to read from the registry. This is okay, REG.exe exists since Windows XP.
                    let proc = spawnSync('reg', ['query', 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Kitware\\CMake', '/v', 'InstallDir']);

                    if (proc.status === 0) {
                        let matches = proc.stdout.toString('utf-8').match(/InstallDir[ \t]+REG_[A-Z_]+[ \t]+(.*)+/);

                        if (matches != null) {
                            let bin = path.join(matches[1].trim(), 'bin\\cmake.exe');

                            if (fs.existsSync(bin))
                                cmake_bin = bin;
                        }
                    }
                }

                if (cmake_bin == null)
                    throw new Error('CMake does not seem to be available');
            }
        }

        console.log(`>> Using CMake binary: ${cmake_bin}`);
    }

    function check_compatibility() {
        let pkg = read_package_json();

        if (pkg.cnoke.node != null && tools.cmp_version(runtime_version, pkg.cnoke.node) < 0)
            throw new Error(`Project ${pkg.name} requires Node.js >= ${pkg.cnoke.node}`);

        if (pkg.cnoke.napi != null) {
            let major = parseInt(runtime_version, 10);
            let required = tools.get_napi_version(pkg.cnoke.napi, major);

            if (required == null)
                throw new Error(`Project ${pkg.name} does not support the Node ${major}.x branch (old or missing N-API)`);
            if (tools.cmp_version(runtime_version, required) < 0)
                throw new Error(`Project ${pkg.name} requires Node >= ${required} in the Node ${major}.x branch (with N-API >= ${pkg.engines.napi})`);
        }
    }

    function read_package_json() {
        let pkg = {};

        if (package_dir != null) {
            try {
                let json = fs.readFileSync(package_dir + '/package.json', { encoding: 'utf-8' });
                pkg = JSON.parse(json);
            } catch (err) {
                if (err.code != 'ENOENT')
                    throw err;
            }
        }

        if (pkg.cnoke == null)
            pkg.cnoke = {};

        return pkg;
    }

    function expand_path(str) {
        let ret = str.replace(/{{([a-zA-Z_][a-zA-Z_0-9]*)}}/g, (match, p1) => {
            switch (p1) {
                case 'version': {
                    let pkg = read_package_json();
                    return pkg.version || '';
                } break;
                case 'platform': return process.platform;
                case 'arch': return arch;

                default: return match;
            }
        });

        return ret;
    }
}

module.exports = {
    Builder,
    DefaultOptions
};


/***/ }),

/***/ 4498:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

// Copyright 2023 Niels Martignène <niels.martignene@protonmail.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the “Software”), to deal in 
// the Software without restriction, including without limitation the rights to use,
// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
// Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.

const builder = __nccwpck_require__(8377);
const tools = __nccwpck_require__(9007);

module.exports = {
    ...builder,
    ...tools
};


/***/ }),

/***/ 9007:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";
// Copyright 2023 Niels Martignène <niels.martignene@protonmail.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the “Software”), to deal in 
// the Software without restriction, including without limitation the rights to use,
// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
// Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.



const crypto = __nccwpck_require__(6113);
const fs = __nccwpck_require__(7147);
const http = __nccwpck_require__(5687);
const path = __nccwpck_require__(1017);
const zlib = __nccwpck_require__(9796);

async function download_http(url, dest) {
    if (Array.isArray(url)) {
        let urls = url;

        for (let url of urls) {
            try {
                await download_http(url, dest);
                return;
            } catch (err) {
                if (err.code != 404)
                    throw err;
            }
        }

        throw new Error('All URLs returned error 404');
    }

    console.log('>> Downloading ' + url);

    let [tmp_name, file] = open_temporary_stream(dest);

    try {
        await new Promise((resolve, reject) => {
            let request = http.get(url, response => {
                if (response.statusCode != 200) {
                    let err = new Error(`Download failed: ${response.statusMessage} [${response.statusCode}]`);
                    err.code = response.statusCode;

                    reject(err);

                    return;
                }

                response.pipe(file);

                file.on('finish', () => file.close(() => {
                    try {
                        fs.renameSync(file.path, dest);
                    } catch (err) {
                        if (err.code != 'EBUSY')
                            reject(err);
                    }

                    resolve();
                }));
            });

            request.on('error', reject);
            file.on('error', reject);
        });
    } catch (err) {
        file.close();

        try {
            fs.unlinkSync(tmp_name);
        } catch (err) {
            if (err.code != 'ENOENT')
                throw err;
        }

        throw err;
    }
}

function open_temporary_stream(prefix) {
    let buf = Buffer.allocUnsafe(4);

    for (;;) {
        try {
            crypto.randomFillSync(buf);

            let suffix = buf.toString('hex').padStart(8, '0');
            let filename = `${prefix}.${suffix}`;

            let file = fs.createWriteStream(filename, { flags: 'wx', mode: 0o644 });
            return [filename, file];
        } catch (err) {
            if (err.code != 'EEXIST')
                throw err;
        }
    }
}

function extract_targz(filename, dest_dir, strip = 0) {
    let reader = fs.createReadStream(filename).pipe(zlib.createGunzip());

    return new Promise((resolve, reject) => {
        let header = null;
        let extended = {};

        reader.on('readable', () => {
            try {
                for (;;) {
                    if (header == null) {
                        let buf = reader.read(512);
                        if (buf == null)
                            break;

                        // Two zeroed 512-byte blocks end the stream
                        if (!buf[0])
                            continue;

                        header = {
                            filename: buf.toString('utf-8', 0, 100).replace(/\0/g, ''),
                            mode: parseInt(buf.toString('ascii', 100, 109), 8),
                            size: parseInt(buf.toString('ascii', 124, 137), 8),
                            type: String.fromCharCode(buf[156])
                        };

                        // UStar filename prefix
                        /*if (buf.toString('ascii', 257, 263) == 'ustar\0') {
                            let prefix = buf.toString('utf-8', 345, 500).replace(/\0/g, '');
                            console.log(prefix);
                            header.filename = prefix ? (prefix + '/' + header.filename) : header.filename;
                        }*/

                        Object.assign(header, extended);
                        extended = {};

                        // Safety checks
                        header.filename = header.filename.replace(/\\/g, '/');
                        if (!header.filename.length)
                            throw new Error(`Insecure empty filename inside TAR archive`);
                        if (path_is_absolute(header.filename[0]))
                            throw new Error(`Insecure filename starting with / inside TAR archive`);
                        if (path_has_dotdot(header.filename))
                            throw new Error(`Insecure filename containing '..' inside TAR archive`);

                        for (let i = 0; i < strip; i++)
                            header.filename = header.filename.substr(header.filename.indexOf('/') + 1);
                    }

                    let aligned = Math.floor((header.size + 511) / 512) * 512;
                    let data = header.size ? reader.read(aligned) : null;
                    if (data == null) {
                        if (header.size)
                            break;
                        data = Buffer.alloc(0);
                    }
                    data = data.subarray(0, header.size);

                    if (header.type == '0' || header.type == '7') {
                        let filename = dest_dir + '/' + header.filename;
                        let dirname = path.dirname(filename);

                        fs.mkdirSync(dirname, { recursive: true, mode: 0o755 });
                        fs.writeFileSync(filename, data, { mode: header.mode });
                    } else if (header.type == '5') {
                        let filename = dest_dir + '/' + header.filename;
                        fs.mkdirSync(filename, { recursive: true, mode: header.mode });
                    } else if (header.type == 'L') { // GNU tar
                        extended.filename = data.toString('utf-8').replace(/\0/g, '');
                    } else if (header.type == 'x') { // PAX entry
                        let str = data.toString('utf-8');

                        try {
                            while (str.length) {
                                let matches = str.match(/^([0-9]+) ([a-zA-Z0-9\._]+)=(.*)\n/);

                                let skip = parseInt(matches[1], 10);
                                let key = matches[2];
                                let value = matches[3];

                                switch (key) {
                                    case 'path': { extended.filename = value; } break;
                                    case 'size': { extended.size = parseInt(value, 10); } break;
                                }

                                str = str.substr(skip).trimStart();
                            }
                        } catch (err) {
                            throw new Error('Malformed PAX entry');
                        }
                    }

                    header = null;
                }
            } catch (err) {
                reject(err);
            }
        });

        reader.on('error', reject);
        reader.on('end', resolve);
    });
}

function path_is_absolute(path) {
    if (process.platform == 'win32' && path.match(/^[a-zA-Z]:/))
        path = path.substr(2);
    return is_path_separator(path[0]);
}

function path_has_dotdot(path) {
    let start = 0;

    for (;;) {
        let offset = path.indexOf('..', start);
        if (offset < 0)
            break;
        start = offset + 2;

        if (offset && !is_path_separator(path[offset - 1]))
            continue;
        if (offset + 2 < path.length && !is_path_separator(path[offset + 2]))
            continue;

        return true;
    }

    return false;
}

function is_path_separator(c) {
    if (c == '/')
        return true;
    if (process.platform == 'win32' && c == '\\')
        return true;

    return false;
}

function determine_arch() {
    let arch = process.arch;

    if (arch == 'riscv32' || arch == 'riscv64') {
        let buf = read_file_header(process.execPath, 512);
        let header = decode_elf_header(buf);
        let float_abi = (header.e_flags & 0x6) >> 1;

        switch (float_abi) {
            case 0: { arch += 'sf'; } break;
            case 1: { arch += 'hf32'; } break;
            case 2: { arch += 'hf64'; } break;
            case 3: { arch += 'hf128'; } break;
        }
    } else if (arch == 'arm') {
        arch = 'arm32';

        let buf = read_file_header(process.execPath, 512);
        let header = decode_elf_header(buf);

        if (header.e_flags & 0x400) {
            arch += 'hf';
        } else if (header.e_flags & 0x200) {
            arch += 'sf';
        } else {
            throw new Error('Unknown ARM floating-point ABI');
        }
    }

    return arch;
}

function read_file_header(filename, read) {
    let fd = null;

    try {
        let fd = fs.openSync(filename);

        let buf = Buffer.allocUnsafe(read);
        let len = fs.readSync(fd, buf);

        return buf.subarray(0, len);
    } finally {
        if (fd != null)
            fs.closeSync(fd);
    }
}

function decode_elf_header(buf) {
    let header = {};

    if (buf.length < 16)
        throw new Error('Truncated header');
    if (buf[0] != 0x7F || buf[1] != 69 || buf[2] != 76 || buf[3] != 70)
        throw new Error('Invalid magic number');
    if (buf[6] != 1)
        throw new Error('Invalid ELF version');
    if (buf[5] != 1)
        throw new Error('Big-endian architectures are not supported');

    let machine = buf.readUInt16LE(18);

    switch (machine) {
        case 3: { header.e_machine = 'ia32'; } break;
        case 40: { header.e_machine = 'arm'; } break;
        case 62: { header.e_machine = 'amd64'; } break;
        case 183: { header.e_machine = 'arm64'; } break;
        case 243: {
            switch (buf[4]) {
                case 1: { header.e_machine = 'riscv32'; } break;
                case 2: { header.e_machine = 'riscv64'; } break;
            }
        } break;
        default: throw new Error('Unknown ELF machine type');
    }

    switch (buf[4]) {
        case 1: { // 32 bit
            buf = buf.subarray(0, 68);
            if (buf.length < 68)
                throw new Error('Truncated ELF header');

            header.ei_class = 32;
            header.e_flags = buf.readUInt32LE(36);
        } break;
        case 2: { // 64 bit
            buf = buf.subarray(0, 120);
            if (buf.length < 120)
                throw new Error('Truncated ELF header');

            header.ei_class = 64;
            header.e_flags = buf.readUInt32LE(48);
        } break;
        default: throw new Error('Invalid ELF class');
    }

    return header;
}

function unlink_recursive(path) {
    try {
        if (fs.rmSync != null) {
            fs.rmSync(path, { recursive: true, maxRetries: process.platform == 'win32' ? 3 : 0 });
        } else {
            fs.rmdirSync(path, { recursive: true, maxRetries: process.platform == 'win32' ? 3 : 0 });
        }
    } catch (err) {
        if (err.code !== 'ENOENT')
            throw err;
    }
}

function get_napi_version(napi, major) {
    if (napi > 8)
        return null;

    // https://nodejs.org/api/n-api.html#node-api-version-matrix
    const support = {
        6:  ['6.14.2', '6.14.2', '6.14.2'],
        8:  ['8.6.0',  '8.10.0', '8.11.2'],
        9:  ['9.0.0',  '9.3.0',  '9.11.0'],
        10: ['10.0.0', '10.0.0', '10.0.0', '10.16.0', '10.17.0', '10.20.0', '10.23.0'],
        11: ['11.0.0', '11.0.0', '11.0.0', '11.8.0'],
        12: ['12.0.0', '12.0.0', '12.0.0', '12.0.0',  '12.11.0', '12.17.0', '12.19.0', '12.22.0'],
        13: ['13.0.0', '13.0.0', '13.0.0', '13.0.0',  '13.0.0'],
        14: ['14.0.0', '14.0.0', '14.0.0', '14.0.0',  '14.0.0',  '14.0.0',  '14.12.0', '14.17.0'],
        15: ['15.0.0', '15.0.0', '15.0.0', '15.0.0',  '15.0.0',  '15.0.0',  '15.0.0',  '15.12.0']
    };
    const max = Math.max(...Object.keys(support).map(k => parseInt(k, 10)));

    if (major > max)
        return major + '.0.0';
    if (support[major] == null)
        return null;

    let required = support[major][napi - 1] || null;
    return required;
}

// Ignores prerelease suffixes
function cmp_version(ver1, ver2) {
    ver1 = String(ver1).replace(/-.*$/, '').split('.').reduce((acc, v, idx) => acc + parseInt(v, 10) * Math.pow(10, 2 * (5 - idx)), 0);
    ver2 = String(ver2).replace(/-.*$/, '').split('.').reduce((acc, v, idx) => acc + parseInt(v, 10) * Math.pow(10, 2 * (5 - idx)), 0);

    let cmp = Math.min(Math.max(ver1 - ver2, -1), 1);
    return cmp;
}

module.exports = {
    download_http,
    extract_targz,
    path_is_absolute,
    path_has_dotdot,
    determine_arch,
    unlink_recursive,
    get_napi_version,
    cmp_version
};


/***/ }),

/***/ 9376:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";
// Copyright 2023 Niels Martignène <niels.martignene@protonmail.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the “Software”), to deal in 
// the Software without restriction, including without limitation the rights to use,
// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
// Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.



const cnoke = __nccwpck_require__(4498);
const util = __nccwpck_require__(3837);
const fs = __nccwpck_require__(7147);
const pkg = __nccwpck_require__(5324);

if (process.versions.napi == null || process.versions.napi < pkg.cnoke.napi) {
    let major = parseInt(process.versions.node, 10);
    let required = cnoke.get_napi_version(pkg.cnoke.napi, major);

    if (required != null) {
        throw new Error(`Project ${pkg.name} requires Node >= ${required} in the Node ${major}.x branch (N-API >= ${pkg.cnoke.napi})`);
    } else {
        throw new Error(`Project ${pkg.name} does not support the Node ${major}.x branch (N-API < ${pkg.cnoke.napi})`);
    }
}

let arch = cnoke.determine_arch();
let filenames = [__dirname + `/../build/${pkg.version}/koffi_${process.platform}_${arch}/koffi.node`];

if (process.resourcesPath != null) {
    filenames.push(
        process.resourcesPath + `/koffi/${pkg.version}/koffi_${process.platform}_${arch}/koffi.node`,
        process.resourcesPath + `/build/${pkg.version}/koffi_${process.platform}_${arch}/koffi.node`
    );
}

let filename = filenames.find(filename => fs.existsSync(filename));
if (filename == null)
    throw new Error('Cannot find the native Koffi module; did you bundle it correctly?');

let native = require(filename);

module.exports = {
    ...native,

    // Deprecated functions
    handle: util.deprecate(native.opaque, 'The koffi.handle() function was deprecated in Koffi 2.1, use koffi.opaque() instead', 'KOFFI001'),
    callback: util.deprecate(native.proto, 'The koffi.callback() function was deprecated in Koffi 2.4, use koffi.proto() instead', 'KOFFI002')
};


/***/ }),

/***/ 2321:
/***/ ((module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.outdent = void 0;
// In the absence of a WeakSet or WeakMap implementation, don't break, but don't cache either.
function noop() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
}
function createWeakMap() {
    if (typeof WeakMap !== "undefined") {
        return new WeakMap();
    }
    else {
        return fakeSetOrMap();
    }
}
/**
 * Creates and returns a no-op implementation of a WeakMap / WeakSet that never stores anything.
 */
function fakeSetOrMap() {
    return {
        add: noop,
        delete: noop,
        get: noop,
        set: noop,
        has: function (k) {
            return false;
        },
    };
}
// Safe hasOwnProperty
var hop = Object.prototype.hasOwnProperty;
var has = function (obj, prop) {
    return hop.call(obj, prop);
};
// Copy all own enumerable properties from source to target
function extend(target, source) {
    for (var prop in source) {
        if (has(source, prop)) {
            target[prop] = source[prop];
        }
    }
    return target;
}
var reLeadingNewline = /^[ \t]*(?:\r\n|\r|\n)/;
var reTrailingNewline = /(?:\r\n|\r|\n)[ \t]*$/;
var reStartsWithNewlineOrIsEmpty = /^(?:[\r\n]|$)/;
var reDetectIndentation = /(?:\r\n|\r|\n)([ \t]*)(?:[^ \t\r\n]|$)/;
var reOnlyWhitespaceWithAtLeastOneNewline = /^[ \t]*[\r\n][ \t\r\n]*$/;
function _outdentArray(strings, firstInterpolatedValueSetsIndentationLevel, options) {
    // If first interpolated value is a reference to outdent,
    // determine indentation level from the indentation of the interpolated value.
    var indentationLevel = 0;
    var match = strings[0].match(reDetectIndentation);
    if (match) {
        indentationLevel = match[1].length;
    }
    var reSource = "(\\r\\n|\\r|\\n).{0," + indentationLevel + "}";
    var reMatchIndent = new RegExp(reSource, "g");
    if (firstInterpolatedValueSetsIndentationLevel) {
        strings = strings.slice(1);
    }
    var newline = options.newline, trimLeadingNewline = options.trimLeadingNewline, trimTrailingNewline = options.trimTrailingNewline;
    var normalizeNewlines = typeof newline === "string";
    var l = strings.length;
    var outdentedStrings = strings.map(function (v, i) {
        // Remove leading indentation from all lines
        v = v.replace(reMatchIndent, "$1");
        // Trim a leading newline from the first string
        if (i === 0 && trimLeadingNewline) {
            v = v.replace(reLeadingNewline, "");
        }
        // Trim a trailing newline from the last string
        if (i === l - 1 && trimTrailingNewline) {
            v = v.replace(reTrailingNewline, "");
        }
        // Normalize newlines
        if (normalizeNewlines) {
            v = v.replace(/\r\n|\n|\r/g, function (_) { return newline; });
        }
        return v;
    });
    return outdentedStrings;
}
function concatStringsAndValues(strings, values) {
    var ret = "";
    for (var i = 0, l = strings.length; i < l; i++) {
        ret += strings[i];
        if (i < l - 1) {
            ret += values[i];
        }
    }
    return ret;
}
function isTemplateStringsArray(v) {
    return has(v, "raw") && has(v, "length");
}
/**
 * It is assumed that opts will not change.  If this is a problem, clone your options object and pass the clone to
 * makeInstance
 * @param options
 * @return {outdent}
 */
function createInstance(options) {
    /** Cache of pre-processed template literal arrays */
    var arrayAutoIndentCache = createWeakMap();
    /**
       * Cache of pre-processed template literal arrays, where first interpolated value is a reference to outdent,
       * before interpolated values are injected.
       */
    var arrayFirstInterpSetsIndentCache = createWeakMap();
    function outdent(stringsOrOptions) {
        var values = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            values[_i - 1] = arguments[_i];
        }
        /* tslint:enable:no-shadowed-variable */
        if (isTemplateStringsArray(stringsOrOptions)) {
            var strings = stringsOrOptions;
            // Is first interpolated value a reference to outdent, alone on its own line, without any preceding non-whitespace?
            var firstInterpolatedValueSetsIndentationLevel = (values[0] === outdent || values[0] === defaultOutdent) &&
                reOnlyWhitespaceWithAtLeastOneNewline.test(strings[0]) &&
                reStartsWithNewlineOrIsEmpty.test(strings[1]);
            // Perform outdentation
            var cache = firstInterpolatedValueSetsIndentationLevel
                ? arrayFirstInterpSetsIndentCache
                : arrayAutoIndentCache;
            var renderedArray = cache.get(strings);
            if (!renderedArray) {
                renderedArray = _outdentArray(strings, firstInterpolatedValueSetsIndentationLevel, options);
                cache.set(strings, renderedArray);
            }
            /** If no interpolated values, skip concatenation step */
            if (values.length === 0) {
                return renderedArray[0];
            }
            /** Concatenate string literals with interpolated values */
            var rendered = concatStringsAndValues(renderedArray, firstInterpolatedValueSetsIndentationLevel ? values.slice(1) : values);
            return rendered;
        }
        else {
            // Create and return a new instance of outdent with the given options
            return createInstance(extend(extend({}, options), stringsOrOptions || {}));
        }
    }
    var fullOutdent = extend(outdent, {
        string: function (str) {
            return _outdentArray([str], false, options)[0];
        },
    });
    return fullOutdent;
}
var defaultOutdent = createInstance({
    trimLeadingNewline: true,
    trimTrailingNewline: true,
});
exports.outdent = defaultOutdent;
// Named exports.  Simple and preferred.
// import outdent from 'outdent';
exports["default"] = defaultOutdent;
if (true) {
    // In webpack harmony-modules environments, module.exports is read-only,
    // so we fail gracefully.
    try {
        module.exports = defaultOutdent;
        Object.defineProperty(defaultOutdent, "__esModule", { value: true });
        defaultOutdent.default = defaultOutdent;
        defaultOutdent.outdent = defaultOutdent;
    }
    catch (e) { }
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 4582:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const lockfile = __nccwpck_require__(9512);
const { toPromise, toSync, toSyncOptions } = __nccwpck_require__(7624);

async function lock(file, options) {
    const release = await toPromise(lockfile.lock)(file, options);

    return toPromise(release);
}

function lockSync(file, options) {
    const release = toSync(lockfile.lock)(file, toSyncOptions(options));

    return toSync(release);
}

function unlock(file, options) {
    return toPromise(lockfile.unlock)(file, options);
}

function unlockSync(file, options) {
    return toSync(lockfile.unlock)(file, toSyncOptions(options));
}

function check(file, options) {
    return toPromise(lockfile.check)(file, options);
}

function checkSync(file, options) {
    return toSync(lockfile.check)(file, toSyncOptions(options));
}

module.exports = lock;
module.exports.lock = lock;
module.exports.unlock = unlock;
module.exports.lockSync = lockSync;
module.exports.unlockSync = unlockSync;
module.exports.check = check;
module.exports.checkSync = checkSync;


/***/ }),

/***/ 7624:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(7758);

function createSyncFs(fs) {
    const methods = ['mkdir', 'realpath', 'stat', 'rmdir', 'utimes'];
    const newFs = { ...fs };

    methods.forEach((method) => {
        newFs[method] = (...args) => {
            const callback = args.pop();
            let ret;

            try {
                ret = fs[`${method}Sync`](...args);
            } catch (err) {
                return callback(err);
            }

            callback(null, ret);
        };
    });

    return newFs;
}

// ----------------------------------------------------------

function toPromise(method) {
    return (...args) => new Promise((resolve, reject) => {
        args.push((err, result) => {
            if (err) {
                reject(err);
            } else {
                resolve(result);
            }
        });

        method(...args);
    });
}

function toSync(method) {
    return (...args) => {
        let err;
        let result;

        args.push((_err, _result) => {
            err = _err;
            result = _result;
        });

        method(...args);

        if (err) {
            throw err;
        }

        return result;
    };
}

function toSyncOptions(options) {
    // Shallow clone options because we are oging to mutate them
    options = { ...options };

    // Transform fs to use the sync methods instead
    options.fs = createSyncFs(options.fs || fs);

    // Retries are not allowed because it requires the flow to be sync
    if (
        (typeof options.retries === 'number' && options.retries > 0) ||
        (options.retries && typeof options.retries.retries === 'number' && options.retries.retries > 0)
    ) {
        throw Object.assign(new Error('Cannot use retries with the sync api'), { code: 'ESYNC' });
    }

    return options;
}

module.exports = {
    toPromise,
    toSync,
    toSyncOptions,
};


/***/ }),

/***/ 9512:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const path = __nccwpck_require__(1017);
const fs = __nccwpck_require__(7758);
const retry = __nccwpck_require__(1604);
const onExit = __nccwpck_require__(4931);
const mtimePrecision = __nccwpck_require__(1666);

const locks = {};

function getLockFile(file, options) {
    return options.lockfilePath || `${file}.lock`;
}

function resolveCanonicalPath(file, options, callback) {
    if (!options.realpath) {
        return callback(null, path.resolve(file));
    }

    // Use realpath to resolve symlinks
    // It also resolves relative paths
    options.fs.realpath(file, callback);
}

function acquireLock(file, options, callback) {
    const lockfilePath = getLockFile(file, options);

    // Use mkdir to create the lockfile (atomic operation)
    options.fs.mkdir(lockfilePath, (err) => {
        if (!err) {
            // At this point, we acquired the lock!
            // Probe the mtime precision
            return mtimePrecision.probe(lockfilePath, options.fs, (err, mtime, mtimePrecision) => {
                // If it failed, try to remove the lock..
                /* istanbul ignore if */
                if (err) {
                    options.fs.rmdir(lockfilePath, () => {});

                    return callback(err);
                }

                callback(null, mtime, mtimePrecision);
            });
        }

        // If error is not EEXIST then some other error occurred while locking
        if (err.code !== 'EEXIST') {
            return callback(err);
        }

        // Otherwise, check if lock is stale by analyzing the file mtime
        if (options.stale <= 0) {
            return callback(Object.assign(new Error('Lock file is already being held'), { code: 'ELOCKED', file }));
        }

        options.fs.stat(lockfilePath, (err, stat) => {
            if (err) {
                // Retry if the lockfile has been removed (meanwhile)
                // Skip stale check to avoid recursiveness
                if (err.code === 'ENOENT') {
                    return acquireLock(file, { ...options, stale: 0 }, callback);
                }

                return callback(err);
            }

            if (!isLockStale(stat, options)) {
                return callback(Object.assign(new Error('Lock file is already being held'), { code: 'ELOCKED', file }));
            }

            // If it's stale, remove it and try again!
            // Skip stale check to avoid recursiveness
            removeLock(file, options, (err) => {
                if (err) {
                    return callback(err);
                }

                acquireLock(file, { ...options, stale: 0 }, callback);
            });
        });
    });
}

function isLockStale(stat, options) {
    return stat.mtime.getTime() < Date.now() - options.stale;
}

function removeLock(file, options, callback) {
    // Remove lockfile, ignoring ENOENT errors
    options.fs.rmdir(getLockFile(file, options), (err) => {
        if (err && err.code !== 'ENOENT') {
            return callback(err);
        }

        callback();
    });
}

function updateLock(file, options) {
    const lock = locks[file];

    // Just for safety, should never happen
    /* istanbul ignore if */
    if (lock.updateTimeout) {
        return;
    }

    lock.updateDelay = lock.updateDelay || options.update;
    lock.updateTimeout = setTimeout(() => {
        lock.updateTimeout = null;

        // Stat the file to check if mtime is still ours
        // If it is, we can still recover from a system sleep or a busy event loop
        options.fs.stat(lock.lockfilePath, (err, stat) => {
            const isOverThreshold = lock.lastUpdate + options.stale < Date.now();

            // If it failed to update the lockfile, keep trying unless
            // the lockfile was deleted or we are over the threshold
            if (err) {
                if (err.code === 'ENOENT' || isOverThreshold) {
                    return setLockAsCompromised(file, lock, Object.assign(err, { code: 'ECOMPROMISED' }));
                }

                lock.updateDelay = 1000;

                return updateLock(file, options);
            }

            const isMtimeOurs = lock.mtime.getTime() === stat.mtime.getTime();

            if (!isMtimeOurs) {
                return setLockAsCompromised(
                    file,
                    lock,
                    Object.assign(
                        new Error('Unable to update lock within the stale threshold'),
                        { code: 'ECOMPROMISED' }
                    ));
            }

            const mtime = mtimePrecision.getMtime(lock.mtimePrecision);

            options.fs.utimes(lock.lockfilePath, mtime, mtime, (err) => {
                const isOverThreshold = lock.lastUpdate + options.stale < Date.now();

                // Ignore if the lock was released
                if (lock.released) {
                    return;
                }

                // If it failed to update the lockfile, keep trying unless
                // the lockfile was deleted or we are over the threshold
                if (err) {
                    if (err.code === 'ENOENT' || isOverThreshold) {
                        return setLockAsCompromised(file, lock, Object.assign(err, { code: 'ECOMPROMISED' }));
                    }

                    lock.updateDelay = 1000;

                    return updateLock(file, options);
                }

                // All ok, keep updating..
                lock.mtime = mtime;
                lock.lastUpdate = Date.now();
                lock.updateDelay = null;
                updateLock(file, options);
            });
        });
    }, lock.updateDelay);

    // Unref the timer so that the nodejs process can exit freely
    // This is safe because all acquired locks will be automatically released
    // on process exit

    // We first check that `lock.updateTimeout.unref` exists because some users
    // may be using this module outside of NodeJS (e.g., in an electron app),
    // and in those cases `setTimeout` return an integer.
    /* istanbul ignore else */
    if (lock.updateTimeout.unref) {
        lock.updateTimeout.unref();
    }
}

function setLockAsCompromised(file, lock, err) {
    // Signal the lock has been released
    lock.released = true;

    // Cancel lock mtime update
    // Just for safety, at this point updateTimeout should be null
    /* istanbul ignore if */
    if (lock.updateTimeout) {
        clearTimeout(lock.updateTimeout);
    }

    if (locks[file] === lock) {
        delete locks[file];
    }

    lock.options.onCompromised(err);
}

// ----------------------------------------------------------

function lock(file, options, callback) {
    /* istanbul ignore next */
    options = {
        stale: 10000,
        update: null,
        realpath: true,
        retries: 0,
        fs,
        onCompromised: (err) => { throw err; },
        ...options,
    };

    options.retries = options.retries || 0;
    options.retries = typeof options.retries === 'number' ? { retries: options.retries } : options.retries;
    options.stale = Math.max(options.stale || 0, 2000);
    options.update = options.update == null ? options.stale / 2 : options.update || 0;
    options.update = Math.max(Math.min(options.update, options.stale / 2), 1000);

    // Resolve to a canonical file path
    resolveCanonicalPath(file, options, (err, file) => {
        if (err) {
            return callback(err);
        }

        // Attempt to acquire the lock
        const operation = retry.operation(options.retries);

        operation.attempt(() => {
            acquireLock(file, options, (err, mtime, mtimePrecision) => {
                if (operation.retry(err)) {
                    return;
                }

                if (err) {
                    return callback(operation.mainError());
                }

                // We now own the lock
                const lock = locks[file] = {
                    lockfilePath: getLockFile(file, options),
                    mtime,
                    mtimePrecision,
                    options,
                    lastUpdate: Date.now(),
                };

                // We must keep the lock fresh to avoid staleness
                updateLock(file, options);

                callback(null, (releasedCallback) => {
                    if (lock.released) {
                        return releasedCallback &&
                            releasedCallback(Object.assign(new Error('Lock is already released'), { code: 'ERELEASED' }));
                    }

                    // Not necessary to use realpath twice when unlocking
                    unlock(file, { ...options, realpath: false }, releasedCallback);
                });
            });
        });
    });
}

function unlock(file, options, callback) {
    options = {
        fs,
        realpath: true,
        ...options,
    };

    // Resolve to a canonical file path
    resolveCanonicalPath(file, options, (err, file) => {
        if (err) {
            return callback(err);
        }

        // Skip if the lock is not acquired
        const lock = locks[file];

        if (!lock) {
            return callback(Object.assign(new Error('Lock is not acquired/owned by you'), { code: 'ENOTACQUIRED' }));
        }

        lock.updateTimeout && clearTimeout(lock.updateTimeout); // Cancel lock mtime update
        lock.released = true; // Signal the lock has been released
        delete locks[file]; // Delete from locks

        removeLock(file, options, callback);
    });
}

function check(file, options, callback) {
    options = {
        stale: 10000,
        realpath: true,
        fs,
        ...options,
    };

    options.stale = Math.max(options.stale || 0, 2000);

    // Resolve to a canonical file path
    resolveCanonicalPath(file, options, (err, file) => {
        if (err) {
            return callback(err);
        }

        // Check if lockfile exists
        options.fs.stat(getLockFile(file, options), (err, stat) => {
            if (err) {
                // If does not exist, file is not locked. Otherwise, callback with error
                return err.code === 'ENOENT' ? callback(null, false) : callback(err);
            }

            // Otherwise, check if lock is stale by analyzing the file mtime
            return callback(null, !isLockStale(stat, options));
        });
    });
}

function getLocks() {
    return locks;
}

// Remove acquired locks on exit
/* istanbul ignore next */
onExit(() => {
    for (const file in locks) {
        const options = locks[file].options;

        try { options.fs.rmdirSync(getLockFile(file, options)); } catch (e) { /* Empty */ }
    }
});

module.exports.lock = lock;
module.exports.unlock = unlock;
module.exports.check = check;
module.exports.getLocks = getLocks;


/***/ }),

/***/ 1666:
/***/ ((module) => {

"use strict";


const cacheSymbol = Symbol();

function probe(file, fs, callback) {
    const cachedPrecision = fs[cacheSymbol];

    if (cachedPrecision) {
        return fs.stat(file, (err, stat) => {
            /* istanbul ignore if */
            if (err) {
                return callback(err);
            }

            callback(null, stat.mtime, cachedPrecision);
        });
    }

    // Set mtime by ceiling Date.now() to seconds + 5ms so that it's "not on the second"
    const mtime = new Date((Math.ceil(Date.now() / 1000) * 1000) + 5);

    fs.utimes(file, mtime, mtime, (err) => {
        /* istanbul ignore if */
        if (err) {
            return callback(err);
        }

        fs.stat(file, (err, stat) => {
            /* istanbul ignore if */
            if (err) {
                return callback(err);
            }

            const precision = stat.mtime.getTime() % 1000 === 0 ? 's' : 'ms';

            // Cache the precision in a non-enumerable way
            Object.defineProperty(fs, cacheSymbol, { value: precision });

            callback(null, stat.mtime, precision);
        });
    });
}

function getMtime(precision) {
    let now = Date.now();

    if (precision === 's') {
        now = Math.ceil(now / 1000) * 1000;
    }

    return new Date(now);
}

module.exports.probe = probe;
module.exports.getMtime = getMtime;


/***/ }),

/***/ 1604:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = __nccwpck_require__(6244);

/***/ }),

/***/ 6244:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

var RetryOperation = __nccwpck_require__(5369);

exports.operation = function(options) {
  var timeouts = exports.timeouts(options);
  return new RetryOperation(timeouts, {
      forever: options && options.forever,
      unref: options && options.unref,
      maxRetryTime: options && options.maxRetryTime
  });
};

exports.timeouts = function(options) {
  if (options instanceof Array) {
    return [].concat(options);
  }

  var opts = {
    retries: 10,
    factor: 2,
    minTimeout: 1 * 1000,
    maxTimeout: Infinity,
    randomize: false
  };
  for (var key in options) {
    opts[key] = options[key];
  }

  if (opts.minTimeout > opts.maxTimeout) {
    throw new Error('minTimeout is greater than maxTimeout');
  }

  var timeouts = [];
  for (var i = 0; i < opts.retries; i++) {
    timeouts.push(this.createTimeout(i, opts));
  }

  if (options && options.forever && !timeouts.length) {
    timeouts.push(this.createTimeout(i, opts));
  }

  // sort the array numerically ascending
  timeouts.sort(function(a,b) {
    return a - b;
  });

  return timeouts;
};

exports.createTimeout = function(attempt, opts) {
  var random = (opts.randomize)
    ? (Math.random() + 1)
    : 1;

  var timeout = Math.round(random * opts.minTimeout * Math.pow(opts.factor, attempt));
  timeout = Math.min(timeout, opts.maxTimeout);

  return timeout;
};

exports.wrap = function(obj, options, methods) {
  if (options instanceof Array) {
    methods = options;
    options = null;
  }

  if (!methods) {
    methods = [];
    for (var key in obj) {
      if (typeof obj[key] === 'function') {
        methods.push(key);
      }
    }
  }

  for (var i = 0; i < methods.length; i++) {
    var method   = methods[i];
    var original = obj[method];

    obj[method] = function retryWrapper(original) {
      var op       = exports.operation(options);
      var args     = Array.prototype.slice.call(arguments, 1);
      var callback = args.pop();

      args.push(function(err) {
        if (op.retry(err)) {
          return;
        }
        if (err) {
          arguments[0] = op.mainError();
        }
        callback.apply(this, arguments);
      });

      op.attempt(function() {
        original.apply(obj, args);
      });
    }.bind(obj, original);
    obj[method].options = options;
  }
};


/***/ }),

/***/ 5369:
/***/ ((module) => {

function RetryOperation(timeouts, options) {
  // Compatibility for the old (timeouts, retryForever) signature
  if (typeof options === 'boolean') {
    options = { forever: options };
  }

  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));
  this._timeouts = timeouts;
  this._options = options || {};
  this._maxRetryTime = options && options.maxRetryTime || Infinity;
  this._fn = null;
  this._errors = [];
  this._attempts = 1;
  this._operationTimeout = null;
  this._operationTimeoutCb = null;
  this._timeout = null;
  this._operationStart = null;

  if (this._options.forever) {
    this._cachedTimeouts = this._timeouts.slice(0);
  }
}
module.exports = RetryOperation;

RetryOperation.prototype.reset = function() {
  this._attempts = 1;
  this._timeouts = this._originalTimeouts;
}

RetryOperation.prototype.stop = function() {
  if (this._timeout) {
    clearTimeout(this._timeout);
  }

  this._timeouts       = [];
  this._cachedTimeouts = null;
};

RetryOperation.prototype.retry = function(err) {
  if (this._timeout) {
    clearTimeout(this._timeout);
  }

  if (!err) {
    return false;
  }
  var currentTime = new Date().getTime();
  if (err && currentTime - this._operationStart >= this._maxRetryTime) {
    this._errors.unshift(new Error('RetryOperation timeout occurred'));
    return false;
  }

  this._errors.push(err);

  var timeout = this._timeouts.shift();
  if (timeout === undefined) {
    if (this._cachedTimeouts) {
      // retry forever, only keep last error
      this._errors.splice(this._errors.length - 1, this._errors.length);
      this._timeouts = this._cachedTimeouts.slice(0);
      timeout = this._timeouts.shift();
    } else {
      return false;
    }
  }

  var self = this;
  var timer = setTimeout(function() {
    self._attempts++;

    if (self._operationTimeoutCb) {
      self._timeout = setTimeout(function() {
        self._operationTimeoutCb(self._attempts);
      }, self._operationTimeout);

      if (self._options.unref) {
          self._timeout.unref();
      }
    }

    self._fn(self._attempts);
  }, timeout);

  if (this._options.unref) {
      timer.unref();
  }

  return true;
};

RetryOperation.prototype.attempt = function(fn, timeoutOps) {
  this._fn = fn;

  if (timeoutOps) {
    if (timeoutOps.timeout) {
      this._operationTimeout = timeoutOps.timeout;
    }
    if (timeoutOps.cb) {
      this._operationTimeoutCb = timeoutOps.cb;
    }
  }

  var self = this;
  if (this._operationTimeoutCb) {
    this._timeout = setTimeout(function() {
      self._operationTimeoutCb();
    }, self._operationTimeout);
  }

  this._operationStart = new Date().getTime();

  this._fn(this._attempts);
};

RetryOperation.prototype.try = function(fn) {
  console.log('Using RetryOperation.try() is deprecated');
  this.attempt(fn);
};

RetryOperation.prototype.start = function(fn) {
  console.log('Using RetryOperation.start() is deprecated');
  this.attempt(fn);
};

RetryOperation.prototype.start = RetryOperation.prototype.try;

RetryOperation.prototype.errors = function() {
  return this._errors;
};

RetryOperation.prototype.attempts = function() {
  return this._attempts;
};

RetryOperation.prototype.mainError = function() {
  if (this._errors.length === 0) {
    return null;
  }

  var counts = {};
  var mainError = null;
  var mainErrorCount = 0;

  for (var i = 0; i < this._errors.length; i++) {
    var error = this._errors[i];
    var message = error.message;
    var count = (counts[message] || 0) + 1;

    counts[message] = count;

    if (count >= mainErrorCount) {
      mainError = error;
      mainErrorCount = count;
    }
  }

  return mainError;
};


/***/ }),

/***/ 4931:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

// Note: since nyc uses this module to output coverage, any lines
// that are in the direct sync flow of nyc's outputCoverage are
// ignored, since we can never get coverage for them.
// grab a reference to node's real process object right away
var process = global.process

const processOk = function (process) {
  return process &&
    typeof process === 'object' &&
    typeof process.removeListener === 'function' &&
    typeof process.emit === 'function' &&
    typeof process.reallyExit === 'function' &&
    typeof process.listeners === 'function' &&
    typeof process.kill === 'function' &&
    typeof process.pid === 'number' &&
    typeof process.on === 'function'
}

// some kind of non-node environment, just no-op
/* istanbul ignore if */
if (!processOk(process)) {
  module.exports = function () {
    return function () {}
  }
} else {
  var assert = __nccwpck_require__(9491)
  var signals = __nccwpck_require__(1439)
  var isWin = /^win/i.test(process.platform)

  var EE = __nccwpck_require__(2361)
  /* istanbul ignore if */
  if (typeof EE !== 'function') {
    EE = EE.EventEmitter
  }

  var emitter
  if (process.__signal_exit_emitter__) {
    emitter = process.__signal_exit_emitter__
  } else {
    emitter = process.__signal_exit_emitter__ = new EE()
    emitter.count = 0
    emitter.emitted = {}
  }

  // Because this emitter is a global, we have to check to see if a
  // previous version of this library failed to enable infinite listeners.
  // I know what you're about to say.  But literally everything about
  // signal-exit is a compromise with evil.  Get used to it.
  if (!emitter.infinite) {
    emitter.setMaxListeners(Infinity)
    emitter.infinite = true
  }

  module.exports = function (cb, opts) {
    /* istanbul ignore if */
    if (!processOk(global.process)) {
      return function () {}
    }
    assert.equal(typeof cb, 'function', 'a callback must be provided for exit handler')

    if (loaded === false) {
      load()
    }

    var ev = 'exit'
    if (opts && opts.alwaysLast) {
      ev = 'afterexit'
    }

    var remove = function () {
      emitter.removeListener(ev, cb)
      if (emitter.listeners('exit').length === 0 &&
          emitter.listeners('afterexit').length === 0) {
        unload()
      }
    }
    emitter.on(ev, cb)

    return remove
  }

  var unload = function unload () {
    if (!loaded || !processOk(global.process)) {
      return
    }
    loaded = false

    signals.forEach(function (sig) {
      try {
        process.removeListener(sig, sigListeners[sig])
      } catch (er) {}
    })
    process.emit = originalProcessEmit
    process.reallyExit = originalProcessReallyExit
    emitter.count -= 1
  }
  module.exports.unload = unload

  var emit = function emit (event, code, signal) {
    /* istanbul ignore if */
    if (emitter.emitted[event]) {
      return
    }
    emitter.emitted[event] = true
    emitter.emit(event, code, signal)
  }

  // { <signal>: <listener fn>, ... }
  var sigListeners = {}
  signals.forEach(function (sig) {
    sigListeners[sig] = function listener () {
      /* istanbul ignore if */
      if (!processOk(global.process)) {
        return
      }
      // If there are no other listeners, an exit is coming!
      // Simplest way: remove us and then re-send the signal.
      // We know that this will kill the process, so we can
      // safely emit now.
      var listeners = process.listeners(sig)
      if (listeners.length === emitter.count) {
        unload()
        emit('exit', null, sig)
        /* istanbul ignore next */
        emit('afterexit', null, sig)
        /* istanbul ignore next */
        if (isWin && sig === 'SIGHUP') {
          // "SIGHUP" throws an `ENOSYS` error on Windows,
          // so use a supported signal instead
          sig = 'SIGINT'
        }
        /* istanbul ignore next */
        process.kill(process.pid, sig)
      }
    }
  })

  module.exports.signals = function () {
    return signals
  }

  var loaded = false

  var load = function load () {
    if (loaded || !processOk(global.process)) {
      return
    }
    loaded = true

    // This is the number of onSignalExit's that are in play.
    // It's important so that we can count the correct number of
    // listeners on signals, and don't wait for the other one to
    // handle it instead of us.
    emitter.count += 1

    signals = signals.filter(function (sig) {
      try {
        process.on(sig, sigListeners[sig])
        return true
      } catch (er) {
        return false
      }
    })

    process.emit = processEmit
    process.reallyExit = processReallyExit
  }
  module.exports.load = load

  var originalProcessReallyExit = process.reallyExit
  var processReallyExit = function processReallyExit (code) {
    /* istanbul ignore if */
    if (!processOk(global.process)) {
      return
    }
    process.exitCode = code || /* istanbul ignore next */ 0
    emit('exit', process.exitCode, null)
    /* istanbul ignore next */
    emit('afterexit', process.exitCode, null)
    /* istanbul ignore next */
    originalProcessReallyExit.call(process, process.exitCode)
  }

  var originalProcessEmit = process.emit
  var processEmit = function processEmit (ev, arg) {
    if (ev === 'exit' && processOk(global.process)) {
      /* istanbul ignore else */
      if (arg !== undefined) {
        process.exitCode = arg
      }
      var ret = originalProcessEmit.apply(this, arguments)
      /* istanbul ignore next */
      emit('exit', process.exitCode, null)
      /* istanbul ignore next */
      emit('afterexit', process.exitCode, null)
      /* istanbul ignore next */
      return ret
    } else {
      return originalProcessEmit.apply(this, arguments)
    }
  }
}


/***/ }),

/***/ 1439:
/***/ ((module) => {

// This is not the set of all possible signals.
//
// It IS, however, the set of all signals that trigger
// an exit on either Linux or BSD systems.  Linux is a
// superset of the signal names supported on BSD, and
// the unknown signals just fail to register, so we can
// catch that easily enough.
//
// Don't bother with SIGKILL.  It's uncatchable, which
// means that we can't fire any callbacks anyway.
//
// If a user does happen to register a handler on a non-
// fatal signal like SIGWINCH or something, and then
// exit, it'll end up firing `process.emit('exit')`, so
// the handler will be fired anyway.
//
// SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised
// artificially, inherently leave the process in a
// state from which it is not safe to try and enter JS
// listeners.
module.exports = [
  'SIGABRT',
  'SIGALRM',
  'SIGHUP',
  'SIGINT',
  'SIGTERM'
]

if (process.platform !== 'win32') {
  module.exports.push(
    'SIGVTALRM',
    'SIGXCPU',
    'SIGXFSZ',
    'SIGUSR2',
    'SIGTRAP',
    'SIGSYS',
    'SIGQUIT',
    'SIGIOT'
    // should detect profiler and enable/disable accordingly.
    // see #21
    // 'SIGPROF'
  )
}

if (process.platform === 'linux') {
  module.exports.push(
    'SIGIO',
    'SIGPOLL',
    'SIGPWR',
    'SIGSTKFLT',
    'SIGUNUSED'
  )
}


/***/ }),

/***/ 4294:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = __nccwpck_require__(4219);


/***/ }),

/***/ 4219:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


var net = __nccwpck_require__(1808);
var tls = __nccwpck_require__(4404);
var http = __nccwpck_require__(3685);
var https = __nccwpck_require__(5687);
var events = __nccwpck_require__(2361);
var assert = __nccwpck_require__(9491);
var util = __nccwpck_require__(3837);


exports.httpOverHttp = httpOverHttp;
exports.httpsOverHttp = httpsOverHttp;
exports.httpOverHttps = httpOverHttps;
exports.httpsOverHttps = httpsOverHttps;


function httpOverHttp(options) {
  var agent = new TunnelingAgent(options);
  agent.request = http.request;
  return agent;
}

function httpsOverHttp(options) {
  var agent = new TunnelingAgent(options);
  agent.request = http.request;
  agent.createSocket = createSecureSocket;
  agent.defaultPort = 443;
  return agent;
}

function httpOverHttps(options) {
  var agent = new TunnelingAgent(options);
  agent.request = https.request;
  return agent;
}

function httpsOverHttps(options) {
  var agent = new TunnelingAgent(options);
  agent.request = https.request;
  agent.createSocket = createSecureSocket;
  agent.defaultPort = 443;
  return agent;
}


function TunnelingAgent(options) {
  var self = this;
  self.options = options || {};
  self.proxyOptions = self.options.proxy || {};
  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;
  self.requests = [];
  self.sockets = [];

  self.on('free', function onFree(socket, host, port, localAddress) {
    var options = toOptions(host, port, localAddress);
    for (var i = 0, len = self.requests.length; i < len; ++i) {
      var pending = self.requests[i];
      if (pending.host === options.host && pending.port === options.port) {
        // Detect the request to connect same origin server,
        // reuse the connection.
        self.requests.splice(i, 1);
        pending.request.onSocket(socket);
        return;
      }
    }
    socket.destroy();
    self.removeSocket(socket);
  });
}
util.inherits(TunnelingAgent, events.EventEmitter);

TunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {
  var self = this;
  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));

  if (self.sockets.length >= this.maxSockets) {
    // We are over limit so we'll add it to the queue.
    self.requests.push(options);
    return;
  }

  // If we are under maxSockets create a new one.
  self.createSocket(options, function(socket) {
    socket.on('free', onFree);
    socket.on('close', onCloseOrRemove);
    socket.on('agentRemove', onCloseOrRemove);
    req.onSocket(socket);

    function onFree() {
      self.emit('free', socket, options);
    }

    function onCloseOrRemove(err) {
      self.removeSocket(socket);
      socket.removeListener('free', onFree);
      socket.removeListener('close', onCloseOrRemove);
      socket.removeListener('agentRemove', onCloseOrRemove);
    }
  });
};

TunnelingAgent.prototype.createSocket = function createSocket(options, cb) {
  var self = this;
  var placeholder = {};
  self.sockets.push(placeholder);

  var connectOptions = mergeOptions({}, self.proxyOptions, {
    method: 'CONNECT',
    path: options.host + ':' + options.port,
    agent: false,
    headers: {
      host: options.host + ':' + options.port
    }
  });
  if (options.localAddress) {
    connectOptions.localAddress = options.localAddress;
  }
  if (connectOptions.proxyAuth) {
    connectOptions.headers = connectOptions.headers || {};
    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +
        new Buffer(connectOptions.proxyAuth).toString('base64');
  }

  debug('making CONNECT request');
  var connectReq = self.request(connectOptions);
  connectReq.useChunkedEncodingByDefault = false; // for v0.6
  connectReq.once('response', onResponse); // for v0.6
  connectReq.once('upgrade', onUpgrade);   // for v0.6
  connectReq.once('connect', onConnect);   // for v0.7 or later
  connectReq.once('error', onError);
  connectReq.end();

  function onResponse(res) {
    // Very hacky. This is necessary to avoid http-parser leaks.
    res.upgrade = true;
  }

  function onUpgrade(res, socket, head) {
    // Hacky.
    process.nextTick(function() {
      onConnect(res, socket, head);
    });
  }

  function onConnect(res, socket, head) {
    connectReq.removeAllListeners();
    socket.removeAllListeners();

    if (res.statusCode !== 200) {
      debug('tunneling socket could not be established, statusCode=%d',
        res.statusCode);
      socket.destroy();
      var error = new Error('tunneling socket could not be established, ' +
        'statusCode=' + res.statusCode);
      error.code = 'ECONNRESET';
      options.request.emit('error', error);
      self.removeSocket(placeholder);
      return;
    }
    if (head.length > 0) {
      debug('got illegal response body from proxy');
      socket.destroy();
      var error = new Error('got illegal response body from proxy');
      error.code = 'ECONNRESET';
      options.request.emit('error', error);
      self.removeSocket(placeholder);
      return;
    }
    debug('tunneling connection has established');
    self.sockets[self.sockets.indexOf(placeholder)] = socket;
    return cb(socket);
  }

  function onError(cause) {
    connectReq.removeAllListeners();

    debug('tunneling socket could not be established, cause=%s\n',
          cause.message, cause.stack);
    var error = new Error('tunneling socket could not be established, ' +
                          'cause=' + cause.message);
    error.code = 'ECONNRESET';
    options.request.emit('error', error);
    self.removeSocket(placeholder);
  }
};

TunnelingAgent.prototype.removeSocket = function removeSocket(socket) {
  var pos = this.sockets.indexOf(socket)
  if (pos === -1) {
    return;
  }
  this.sockets.splice(pos, 1);

  var pending = this.requests.shift();
  if (pending) {
    // If we have pending requests and a socket gets closed a new one
    // needs to be created to take over in the pool for the one that closed.
    this.createSocket(pending, function(socket) {
      pending.request.onSocket(socket);
    });
  }
};

function createSecureSocket(options, cb) {
  var self = this;
  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {
    var hostHeader = options.request.getHeader('host');
    var tlsOptions = mergeOptions({}, self.options, {
      socket: socket,
      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host
    });

    // 0 is dummy port for v0.6
    var secureSocket = tls.connect(0, tlsOptions);
    self.sockets[self.sockets.indexOf(socket)] = secureSocket;
    cb(secureSocket);
  });
}


function toOptions(host, port, localAddress) {
  if (typeof host === 'string') { // since v0.10
    return {
      host: host,
      port: port,
      localAddress: localAddress
    };
  }
  return host; // for v0.11 or later
}

function mergeOptions(target) {
  for (var i = 1, len = arguments.length; i < len; ++i) {
    var overrides = arguments[i];
    if (typeof overrides === 'object') {
      var keys = Object.keys(overrides);
      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {
        var k = keys[j];
        if (overrides[k] !== undefined) {
          target[k] = overrides[k];
        }
      }
    }
  }
  return target;
}


var debug;
if (process.env.NODE_DEBUG && /\btunnel\b/.test(process.env.NODE_DEBUG)) {
  debug = function() {
    var args = Array.prototype.slice.call(arguments);
    if (typeof args[0] === 'string') {
      args[0] = 'TUNNEL: ' + args[0];
    } else {
      args.unshift('TUNNEL:');
    }
    console.error.apply(console, args);
  }
} else {
  debug = function() {};
}
exports.debug = debug; // for test


/***/ }),

/***/ 1773:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const Client = __nccwpck_require__(3598)
const Dispatcher = __nccwpck_require__(412)
const errors = __nccwpck_require__(8045)
const Pool = __nccwpck_require__(4634)
const BalancedPool = __nccwpck_require__(7931)
const Agent = __nccwpck_require__(7890)
const util = __nccwpck_require__(3983)
const { InvalidArgumentError } = errors
const api = __nccwpck_require__(4059)
const buildConnector = __nccwpck_require__(2067)
const MockClient = __nccwpck_require__(8687)
const MockAgent = __nccwpck_require__(6771)
const MockPool = __nccwpck_require__(6193)
const mockErrors = __nccwpck_require__(888)
const ProxyAgent = __nccwpck_require__(7858)
const { getGlobalDispatcher, setGlobalDispatcher } = __nccwpck_require__(1892)
const DecoratorHandler = __nccwpck_require__(6930)
const RedirectHandler = __nccwpck_require__(2860)
const createRedirectInterceptor = __nccwpck_require__(8861)

let hasCrypto
try {
  __nccwpck_require__(6113)
  hasCrypto = true
} catch {
  hasCrypto = false
}

Object.assign(Dispatcher.prototype, api)

module.exports.Dispatcher = Dispatcher
module.exports.Client = Client
module.exports.Pool = Pool
module.exports.BalancedPool = BalancedPool
module.exports.Agent = Agent
module.exports.ProxyAgent = ProxyAgent

module.exports.DecoratorHandler = DecoratorHandler
module.exports.RedirectHandler = RedirectHandler
module.exports.createRedirectInterceptor = createRedirectInterceptor

module.exports.buildConnector = buildConnector
module.exports.errors = errors

function makeDispatcher (fn) {
  return (url, opts, handler) => {
    if (typeof opts === 'function') {
      handler = opts
      opts = null
    }

    if (!url || (typeof url !== 'string' && typeof url !== 'object' && !(url instanceof URL))) {
      throw new InvalidArgumentError('invalid url')
    }

    if (opts != null && typeof opts !== 'object') {
      throw new InvalidArgumentError('invalid opts')
    }

    if (opts && opts.path != null) {
      if (typeof opts.path !== 'string') {
        throw new InvalidArgumentError('invalid opts.path')
      }

      let path = opts.path
      if (!opts.path.startsWith('/')) {
        path = `/${path}`
      }

      url = new URL(util.parseOrigin(url).origin + path)
    } else {
      if (!opts) {
        opts = typeof url === 'object' ? url : {}
      }

      url = util.parseURL(url)
    }

    const { agent, dispatcher = getGlobalDispatcher() } = opts

    if (agent) {
      throw new InvalidArgumentError('unsupported opts.agent. Did you mean opts.client?')
    }

    return fn.call(dispatcher, {
      ...opts,
      origin: url.origin,
      path: url.search ? `${url.pathname}${url.search}` : url.pathname,
      method: opts.method || (opts.body ? 'PUT' : 'GET')
    }, handler)
  }
}

module.exports.setGlobalDispatcher = setGlobalDispatcher
module.exports.getGlobalDispatcher = getGlobalDispatcher

if (util.nodeMajor > 16 || (util.nodeMajor === 16 && util.nodeMinor >= 8)) {
  let fetchImpl = null
  module.exports.fetch = async function fetch (resource) {
    if (!fetchImpl) {
      fetchImpl = (__nccwpck_require__(4881).fetch)
    }

    try {
      return await fetchImpl(...arguments)
    } catch (err) {
      if (typeof err === 'object') {
        Error.captureStackTrace(err, this)
      }

      throw err
    }
  }
  module.exports.Headers = __nccwpck_require__(554).Headers
  module.exports.Response = __nccwpck_require__(7823).Response
  module.exports.Request = __nccwpck_require__(8359).Request
  module.exports.FormData = __nccwpck_require__(2015).FormData
  module.exports.File = __nccwpck_require__(8511).File
  module.exports.FileReader = __nccwpck_require__(1446).FileReader

  const { setGlobalOrigin, getGlobalOrigin } = __nccwpck_require__(1246)

  module.exports.setGlobalOrigin = setGlobalOrigin
  module.exports.getGlobalOrigin = getGlobalOrigin

  const { CacheStorage } = __nccwpck_require__(7907)
  const { kConstruct } = __nccwpck_require__(9174)

  // Cache & CacheStorage are tightly coupled with fetch. Even if it may run
  // in an older version of Node, it doesn't have any use without fetch.
  module.exports.caches = new CacheStorage(kConstruct)
}

if (util.nodeMajor >= 16) {
  const { deleteCookie, getCookies, getSetCookies, setCookie } = __nccwpck_require__(1724)

  module.exports.deleteCookie = deleteCookie
  module.exports.getCookies = getCookies
  module.exports.getSetCookies = getSetCookies
  module.exports.setCookie = setCookie

  const { parseMIMEType, serializeAMimeType } = __nccwpck_require__(685)

  module.exports.parseMIMEType = parseMIMEType
  module.exports.serializeAMimeType = serializeAMimeType
}

if (util.nodeMajor >= 18 && hasCrypto) {
  const { WebSocket } = __nccwpck_require__(4284)

  module.exports.WebSocket = WebSocket
}

module.exports.request = makeDispatcher(api.request)
module.exports.stream = makeDispatcher(api.stream)
module.exports.pipeline = makeDispatcher(api.pipeline)
module.exports.connect = makeDispatcher(api.connect)
module.exports.upgrade = makeDispatcher(api.upgrade)

module.exports.MockClient = MockClient
module.exports.MockPool = MockPool
module.exports.MockAgent = MockAgent
module.exports.mockErrors = mockErrors


/***/ }),

/***/ 7890:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { InvalidArgumentError } = __nccwpck_require__(8045)
const { kClients, kRunning, kClose, kDestroy, kDispatch, kInterceptors } = __nccwpck_require__(2785)
const DispatcherBase = __nccwpck_require__(4839)
const Pool = __nccwpck_require__(4634)
const Client = __nccwpck_require__(3598)
const util = __nccwpck_require__(3983)
const createRedirectInterceptor = __nccwpck_require__(8861)
const { WeakRef, FinalizationRegistry } = __nccwpck_require__(6436)()

const kOnConnect = Symbol('onConnect')
const kOnDisconnect = Symbol('onDisconnect')
const kOnConnectionError = Symbol('onConnectionError')
const kMaxRedirections = Symbol('maxRedirections')
const kOnDrain = Symbol('onDrain')
const kFactory = Symbol('factory')
const kFinalizer = Symbol('finalizer')
const kOptions = Symbol('options')

function defaultFactory (origin, opts) {
  return opts && opts.connections === 1
    ? new Client(origin, opts)
    : new Pool(origin, opts)
}

class Agent extends DispatcherBase {
  constructor ({ factory = defaultFactory, maxRedirections = 0, connect, ...options } = {}) {
    super()

    if (typeof factory !== 'function') {
      throw new InvalidArgumentError('factory must be a function.')
    }

    if (connect != null && typeof connect !== 'function' && typeof connect !== 'object') {
      throw new InvalidArgumentError('connect must be a function or an object')
    }

    if (!Number.isInteger(maxRedirections) || maxRedirections < 0) {
      throw new InvalidArgumentError('maxRedirections must be a positive number')
    }

    if (connect && typeof connect !== 'function') {
      connect = { ...connect }
    }

    this[kInterceptors] = options.interceptors && options.interceptors.Agent && Array.isArray(options.interceptors.Agent)
      ? options.interceptors.Agent
      : [createRedirectInterceptor({ maxRedirections })]

    this[kOptions] = { ...util.deepClone(options), connect }
    this[kOptions].interceptors = options.interceptors
      ? { ...options.interceptors }
      : undefined
    this[kMaxRedirections] = maxRedirections
    this[kFactory] = factory
    this[kClients] = new Map()
    this[kFinalizer] = new FinalizationRegistry(/* istanbul ignore next: gc is undeterministic */ key => {
      const ref = this[kClients].get(key)
      if (ref !== undefined && ref.deref() === undefined) {
        this[kClients].delete(key)
      }
    })

    const agent = this

    this[kOnDrain] = (origin, targets) => {
      agent.emit('drain', origin, [agent, ...targets])
    }

    this[kOnConnect] = (origin, targets) => {
      agent.emit('connect', origin, [agent, ...targets])
    }

    this[kOnDisconnect] = (origin, targets, err) => {
      agent.emit('disconnect', origin, [agent, ...targets], err)
    }

    this[kOnConnectionError] = (origin, targets, err) => {
      agent.emit('connectionError', origin, [agent, ...targets], err)
    }
  }

  get [kRunning] () {
    let ret = 0
    for (const ref of this[kClients].values()) {
      const client = ref.deref()
      /* istanbul ignore next: gc is undeterministic */
      if (client) {
        ret += client[kRunning]
      }
    }
    return ret
  }

  [kDispatch] (opts, handler) {
    let key
    if (opts.origin && (typeof opts.origin === 'string' || opts.origin instanceof URL)) {
      key = String(opts.origin)
    } else {
      throw new InvalidArgumentError('opts.origin must be a non-empty string or URL.')
    }

    const ref = this[kClients].get(key)

    let dispatcher = ref ? ref.deref() : null
    if (!dispatcher) {
      dispatcher = this[kFactory](opts.origin, this[kOptions])
        .on('drain', this[kOnDrain])
        .on('connect', this[kOnConnect])
        .on('disconnect', this[kOnDisconnect])
        .on('connectionError', this[kOnConnectionError])

      this[kClients].set(key, new WeakRef(dispatcher))
      this[kFinalizer].register(dispatcher, key)
    }

    return dispatcher.dispatch(opts, handler)
  }

  async [kClose] () {
    const closePromises = []
    for (const ref of this[kClients].values()) {
      const client = ref.deref()
      /* istanbul ignore else: gc is undeterministic */
      if (client) {
        closePromises.push(client.close())
      }
    }

    await Promise.all(closePromises)
  }

  async [kDestroy] (err) {
    const destroyPromises = []
    for (const ref of this[kClients].values()) {
      const client = ref.deref()
      /* istanbul ignore else: gc is undeterministic */
      if (client) {
        destroyPromises.push(client.destroy(err))
      }
    }

    await Promise.all(destroyPromises)
  }
}

module.exports = Agent


/***/ }),

/***/ 7032:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const { addAbortListener } = __nccwpck_require__(3983)
const { RequestAbortedError } = __nccwpck_require__(8045)

const kListener = Symbol('kListener')
const kSignal = Symbol('kSignal')

function abort (self) {
  if (self.abort) {
    self.abort()
  } else {
    self.onError(new RequestAbortedError())
  }
}

function addSignal (self, signal) {
  self[kSignal] = null
  self[kListener] = null

  if (!signal) {
    return
  }

  if (signal.aborted) {
    abort(self)
    return
  }

  self[kSignal] = signal
  self[kListener] = () => {
    abort(self)
  }

  addAbortListener(self[kSignal], self[kListener])
}

function removeSignal (self) {
  if (!self[kSignal]) {
    return
  }

  if ('removeEventListener' in self[kSignal]) {
    self[kSignal].removeEventListener('abort', self[kListener])
  } else {
    self[kSignal].removeListener('abort', self[kListener])
  }

  self[kSignal] = null
  self[kListener] = null
}

module.exports = {
  addSignal,
  removeSignal
}


/***/ }),

/***/ 9744:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { AsyncResource } = __nccwpck_require__(852)
const { InvalidArgumentError, RequestAbortedError, SocketError } = __nccwpck_require__(8045)
const util = __nccwpck_require__(3983)
const { addSignal, removeSignal } = __nccwpck_require__(7032)

class ConnectHandler extends AsyncResource {
  constructor (opts, callback) {
    if (!opts || typeof opts !== 'object') {
      throw new InvalidArgumentError('invalid opts')
    }

    if (typeof callback !== 'function') {
      throw new InvalidArgumentError('invalid callback')
    }

    const { signal, opaque, responseHeaders } = opts

    if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {
      throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')
    }

    super('UNDICI_CONNECT')

    this.opaque = opaque || null
    this.responseHeaders = responseHeaders || null
    this.callback = callback
    this.abort = null

    addSignal(this, signal)
  }

  onConnect (abort, context) {
    if (!this.callback) {
      throw new RequestAbortedError()
    }

    this.abort = abort
    this.context = context
  }

  onHeaders () {
    throw new SocketError('bad connect', null)
  }

  onUpgrade (statusCode, rawHeaders, socket) {
    const { callback, opaque, context } = this

    removeSignal(this)

    this.callback = null

    let headers = rawHeaders
    // Indicates is an HTTP2Session
    if (headers != null) {
      headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)
    }

    this.runInAsyncScope(callback, null, null, {
      statusCode,
      headers,
      socket,
      opaque,
      context
    })
  }

  onError (err) {
    const { callback, opaque } = this

    removeSignal(this)

    if (callback) {
      this.callback = null
      queueMicrotask(() => {
        this.runInAsyncScope(callback, null, err, { opaque })
      })
    }
  }
}

function connect (opts, callback) {
  if (callback === undefined) {
    return new Promise((resolve, reject) => {
      connect.call(this, opts, (err, data) => {
        return err ? reject(err) : resolve(data)
      })
    })
  }

  try {
    const connectHandler = new ConnectHandler(opts, callback)
    this.dispatch({ ...opts, method: 'CONNECT' }, connectHandler)
  } catch (err) {
    if (typeof callback !== 'function') {
      throw err
    }
    const opaque = opts && opts.opaque
    queueMicrotask(() => callback(err, { opaque }))
  }
}

module.exports = connect


/***/ }),

/***/ 8752:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const {
  Readable,
  Duplex,
  PassThrough
} = __nccwpck_require__(2781)
const {
  InvalidArgumentError,
  InvalidReturnValueError,
  RequestAbortedError
} = __nccwpck_require__(8045)
const util = __nccwpck_require__(3983)
const { AsyncResource } = __nccwpck_require__(852)
const { addSignal, removeSignal } = __nccwpck_require__(7032)
const assert = __nccwpck_require__(9491)

const kResume = Symbol('resume')

class PipelineRequest extends Readable {
  constructor () {
    super({ autoDestroy: true })

    this[kResume] = null
  }

  _read () {
    const { [kResume]: resume } = this

    if (resume) {
      this[kResume] = null
      resume()
    }
  }

  _destroy (err, callback) {
    this._read()

    callback(err)
  }
}

class PipelineResponse extends Readable {
  constructor (resume) {
    super({ autoDestroy: true })
    this[kResume] = resume
  }

  _read () {
    this[kResume]()
  }

  _destroy (err, callback) {
    if (!err && !this._readableState.endEmitted) {
      err = new RequestAbortedError()
    }

    callback(err)
  }
}

class PipelineHandler extends AsyncResource {
  constructor (opts, handler) {
    if (!opts || typeof opts !== 'object') {
      throw new InvalidArgumentError('invalid opts')
    }

    if (typeof handler !== 'function') {
      throw new InvalidArgumentError('invalid handler')
    }

    const { signal, method, opaque, onInfo, responseHeaders } = opts

    if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {
      throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')
    }

    if (method === 'CONNECT') {
      throw new InvalidArgumentError('invalid method')
    }

    if (onInfo && typeof onInfo !== 'function') {
      throw new InvalidArgumentError('invalid onInfo callback')
    }

    super('UNDICI_PIPELINE')

    this.opaque = opaque || null
    this.responseHeaders = responseHeaders || null
    this.handler = handler
    this.abort = null
    this.context = null
    this.onInfo = onInfo || null

    this.req = new PipelineRequest().on('error', util.nop)

    this.ret = new Duplex({
      readableObjectMode: opts.objectMode,
      autoDestroy: true,
      read: () => {
        const { body } = this

        if (body && body.resume) {
          body.resume()
        }
      },
      write: (chunk, encoding, callback) => {
        const { req } = this

        if (req.push(chunk, encoding) || req._readableState.destroyed) {
          callback()
        } else {
          req[kResume] = callback
        }
      },
      destroy: (err, callback) => {
        const { body, req, res, ret, abort } = this

        if (!err && !ret._readableState.endEmitted) {
          err = new RequestAbortedError()
        }

        if (abort && err) {
          abort()
        }

        util.destroy(body, err)
        util.destroy(req, err)
        util.destroy(res, err)

        removeSignal(this)

        callback(err)
      }
    }).on('prefinish', () => {
      const { req } = this

      // Node < 15 does not call _final in same tick.
      req.push(null)
    })

    this.res = null

    addSignal(this, signal)
  }

  onConnect (abort, context) {
    const { ret, res } = this

    assert(!res, 'pipeline cannot be retried')

    if (ret.destroyed) {
      throw new RequestAbortedError()
    }

    this.abort = abort
    this.context = context
  }

  onHeaders (statusCode, rawHeaders, resume) {
    const { opaque, handler, context } = this

    if (statusCode < 200) {
      if (this.onInfo) {
        const headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)
        this.onInfo({ statusCode, headers })
      }
      return
    }

    this.res = new PipelineResponse(resume)

    let body
    try {
      this.handler = null
      const headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)
      body = this.runInAsyncScope(handler, null, {
        statusCode,
        headers,
        opaque,
        body: this.res,
        context
      })
    } catch (err) {
      this.res.on('error', util.nop)
      throw err
    }

    if (!body || typeof body.on !== 'function') {
      throw new InvalidReturnValueError('expected Readable')
    }

    body
      .on('data', (chunk) => {
        const { ret, body } = this

        if (!ret.push(chunk) && body.pause) {
          body.pause()
        }
      })
      .on('error', (err) => {
        const { ret } = this

        util.destroy(ret, err)
      })
      .on('end', () => {
        const { ret } = this

        ret.push(null)
      })
      .on('close', () => {
        const { ret } = this

        if (!ret._readableState.ended) {
          util.destroy(ret, new RequestAbortedError())
        }
      })

    this.body = body
  }

  onData (chunk) {
    const { res } = this
    return res.push(chunk)
  }

  onComplete (trailers) {
    const { res } = this
    res.push(null)
  }

  onError (err) {
    const { ret } = this
    this.handler = null
    util.destroy(ret, err)
  }
}

function pipeline (opts, handler) {
  try {
    const pipelineHandler = new PipelineHandler(opts, handler)
    this.dispatch({ ...opts, body: pipelineHandler.req }, pipelineHandler)
    return pipelineHandler.ret
  } catch (err) {
    return new PassThrough().destroy(err)
  }
}

module.exports = pipeline


/***/ }),

/***/ 5448:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const Readable = __nccwpck_require__(3858)
const {
  InvalidArgumentError,
  RequestAbortedError
} = __nccwpck_require__(8045)
const util = __nccwpck_require__(3983)
const { getResolveErrorBodyCallback } = __nccwpck_require__(7474)
const { AsyncResource } = __nccwpck_require__(852)
const { addSignal, removeSignal } = __nccwpck_require__(7032)

class RequestHandler extends AsyncResource {
  constructor (opts, callback) {
    if (!opts || typeof opts !== 'object') {
      throw new InvalidArgumentError('invalid opts')
    }

    const { signal, method, opaque, body, onInfo, responseHeaders, throwOnError, highWaterMark } = opts

    try {
      if (typeof callback !== 'function') {
        throw new InvalidArgumentError('invalid callback')
      }

      if (highWaterMark && (typeof highWaterMark !== 'number' || highWaterMark < 0)) {
        throw new InvalidArgumentError('invalid highWaterMark')
      }

      if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {
        throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')
      }

      if (method === 'CONNECT') {
        throw new InvalidArgumentError('invalid method')
      }

      if (onInfo && typeof onInfo !== 'function') {
        throw new InvalidArgumentError('invalid onInfo callback')
      }

      super('UNDICI_REQUEST')
    } catch (err) {
      if (util.isStream(body)) {
        util.destroy(body.on('error', util.nop), err)
      }
      throw err
    }

    this.responseHeaders = responseHeaders || null
    this.opaque = opaque || null
    this.callback = callback
    this.res = null
    this.abort = null
    this.body = body
    this.trailers = {}
    this.context = null
    this.onInfo = onInfo || null
    this.throwOnError = throwOnError
    this.highWaterMark = highWaterMark

    if (util.isStream(body)) {
      body.on('error', (err) => {
        this.onError(err)
      })
    }

    addSignal(this, signal)
  }

  onConnect (abort, context) {
    if (!this.callback) {
      throw new RequestAbortedError()
    }

    this.abort = abort
    this.context = context
  }

  onHeaders (statusCode, rawHeaders, resume, statusMessage) {
    const { callback, opaque, abort, context, responseHeaders, highWaterMark } = this

    const headers = responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)

    if (statusCode < 200) {
      if (this.onInfo) {
        this.onInfo({ statusCode, headers })
      }
      return
    }

    const parsedHeaders = responseHeaders === 'raw' ? util.parseHeaders(rawHeaders) : headers
    const contentType = parsedHeaders['content-type']
    const body = new Readable({ resume, abort, contentType, highWaterMark })

    this.callback = null
    this.res = body
    if (callback !== null) {
      if (this.throwOnError && statusCode >= 400) {
        this.runInAsyncScope(getResolveErrorBodyCallback, null,
          { callback, body, contentType, statusCode, statusMessage, headers }
        )
      } else {
        this.runInAsyncScope(callback, null, null, {
          statusCode,
          headers,
          trailers: this.trailers,
          opaque,
          body,
          context
        })
      }
    }
  }

  onData (chunk) {
    const { res } = this
    return res.push(chunk)
  }

  onComplete (trailers) {
    const { res } = this

    removeSignal(this)

    util.parseHeaders(trailers, this.trailers)

    res.push(null)
  }

  onError (err) {
    const { res, callback, body, opaque } = this

    removeSignal(this)

    if (callback) {
      // TODO: Does this need queueMicrotask?
      this.callback = null
      queueMicrotask(() => {
        this.runInAsyncScope(callback, null, err, { opaque })
      })
    }

    if (res) {
      this.res = null
      // Ensure all queued handlers are invoked before destroying res.
      queueMicrotask(() => {
        util.destroy(res, err)
      })
    }

    if (body) {
      this.body = null
      util.destroy(body, err)
    }
  }
}

function request (opts, callback) {
  if (callback === undefined) {
    return new Promise((resolve, reject) => {
      request.call(this, opts, (err, data) => {
        return err ? reject(err) : resolve(data)
      })
    })
  }

  try {
    this.dispatch(opts, new RequestHandler(opts, callback))
  } catch (err) {
    if (typeof callback !== 'function') {
      throw err
    }
    const opaque = opts && opts.opaque
    queueMicrotask(() => callback(err, { opaque }))
  }
}

module.exports = request


/***/ }),

/***/ 5395:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { finished, PassThrough } = __nccwpck_require__(2781)
const {
  InvalidArgumentError,
  InvalidReturnValueError,
  RequestAbortedError
} = __nccwpck_require__(8045)
const util = __nccwpck_require__(3983)
const { getResolveErrorBodyCallback } = __nccwpck_require__(7474)
const { AsyncResource } = __nccwpck_require__(852)
const { addSignal, removeSignal } = __nccwpck_require__(7032)

class StreamHandler extends AsyncResource {
  constructor (opts, factory, callback) {
    if (!opts || typeof opts !== 'object') {
      throw new InvalidArgumentError('invalid opts')
    }

    const { signal, method, opaque, body, onInfo, responseHeaders, throwOnError } = opts

    try {
      if (typeof callback !== 'function') {
        throw new InvalidArgumentError('invalid callback')
      }

      if (typeof factory !== 'function') {
        throw new InvalidArgumentError('invalid factory')
      }

      if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {
        throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')
      }

      if (method === 'CONNECT') {
        throw new InvalidArgumentError('invalid method')
      }

      if (onInfo && typeof onInfo !== 'function') {
        throw new InvalidArgumentError('invalid onInfo callback')
      }

      super('UNDICI_STREAM')
    } catch (err) {
      if (util.isStream(body)) {
        util.destroy(body.on('error', util.nop), err)
      }
      throw err
    }

    this.responseHeaders = responseHeaders || null
    this.opaque = opaque || null
    this.factory = factory
    this.callback = callback
    this.res = null
    this.abort = null
    this.context = null
    this.trailers = null
    this.body = body
    this.onInfo = onInfo || null
    this.throwOnError = throwOnError || false

    if (util.isStream(body)) {
      body.on('error', (err) => {
        this.onError(err)
      })
    }

    addSignal(this, signal)
  }

  onConnect (abort, context) {
    if (!this.callback) {
      throw new RequestAbortedError()
    }

    this.abort = abort
    this.context = context
  }

  onHeaders (statusCode, rawHeaders, resume, statusMessage) {
    const { factory, opaque, context, callback, responseHeaders } = this

    const headers = responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)

    if (statusCode < 200) {
      if (this.onInfo) {
        this.onInfo({ statusCode, headers })
      }
      return
    }

    this.factory = null

    let res

    if (this.throwOnError && statusCode >= 400) {
      const parsedHeaders = responseHeaders === 'raw' ? util.parseHeaders(rawHeaders) : headers
      const contentType = parsedHeaders['content-type']
      res = new PassThrough()

      this.callback = null
      this.runInAsyncScope(getResolveErrorBodyCallback, null,
        { callback, body: res, contentType, statusCode, statusMessage, headers }
      )
    } else {
      res = this.runInAsyncScope(factory, null, {
        statusCode,
        headers,
        opaque,
        context
      })

      if (
        !res ||
        typeof res.write !== 'function' ||
        typeof res.end !== 'function' ||
        typeof res.on !== 'function'
      ) {
        throw new InvalidReturnValueError('expected Writable')
      }

      // TODO: Avoid finished. It registers an unnecessary amount of listeners.
      finished(res, { readable: false }, (err) => {
        const { callback, res, opaque, trailers, abort } = this

        this.res = null
        if (err || !res.readable) {
          util.destroy(res, err)
        }

        this.callback = null
        this.runInAsyncScope(callback, null, err || null, { opaque, trailers })

        if (err) {
          abort()
        }
      })
    }

    res.on('drain', resume)

    this.res = res

    const needDrain = res.writableNeedDrain !== undefined
      ? res.writableNeedDrain
      : res._writableState && res._writableState.needDrain

    return needDrain !== true
  }

  onData (chunk) {
    const { res } = this

    return res.write(chunk)
  }

  onComplete (trailers) {
    const { res } = this

    removeSignal(this)

    this.trailers = util.parseHeaders(trailers)

    res.end()
  }

  onError (err) {
    const { res, callback, opaque, body } = this

    removeSignal(this)

    this.factory = null

    if (res) {
      this.res = null
      util.destroy(res, err)
    } else if (callback) {
      this.callback = null
      queueMicrotask(() => {
        this.runInAsyncScope(callback, null, err, { opaque })
      })
    }

    if (body) {
      this.body = null
      util.destroy(body, err)
    }
  }
}

function stream (opts, factory, callback) {
  if (callback === undefined) {
    return new Promise((resolve, reject) => {
      stream.call(this, opts, factory, (err, data) => {
        return err ? reject(err) : resolve(data)
      })
    })
  }

  try {
    this.dispatch(opts, new StreamHandler(opts, factory, callback))
  } catch (err) {
    if (typeof callback !== 'function') {
      throw err
    }
    const opaque = opts && opts.opaque
    queueMicrotask(() => callback(err, { opaque }))
  }
}

module.exports = stream


/***/ }),

/***/ 6923:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { InvalidArgumentError, RequestAbortedError, SocketError } = __nccwpck_require__(8045)
const { AsyncResource } = __nccwpck_require__(852)
const util = __nccwpck_require__(3983)
const { addSignal, removeSignal } = __nccwpck_require__(7032)
const assert = __nccwpck_require__(9491)

class UpgradeHandler extends AsyncResource {
  constructor (opts, callback) {
    if (!opts || typeof opts !== 'object') {
      throw new InvalidArgumentError('invalid opts')
    }

    if (typeof callback !== 'function') {
      throw new InvalidArgumentError('invalid callback')
    }

    const { signal, opaque, responseHeaders } = opts

    if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {
      throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')
    }

    super('UNDICI_UPGRADE')

    this.responseHeaders = responseHeaders || null
    this.opaque = opaque || null
    this.callback = callback
    this.abort = null
    this.context = null

    addSignal(this, signal)
  }

  onConnect (abort, context) {
    if (!this.callback) {
      throw new RequestAbortedError()
    }

    this.abort = abort
    this.context = null
  }

  onHeaders () {
    throw new SocketError('bad upgrade', null)
  }

  onUpgrade (statusCode, rawHeaders, socket) {
    const { callback, opaque, context } = this

    assert.strictEqual(statusCode, 101)

    removeSignal(this)

    this.callback = null
    const headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)
    this.runInAsyncScope(callback, null, null, {
      headers,
      socket,
      opaque,
      context
    })
  }

  onError (err) {
    const { callback, opaque } = this

    removeSignal(this)

    if (callback) {
      this.callback = null
      queueMicrotask(() => {
        this.runInAsyncScope(callback, null, err, { opaque })
      })
    }
  }
}

function upgrade (opts, callback) {
  if (callback === undefined) {
    return new Promise((resolve, reject) => {
      upgrade.call(this, opts, (err, data) => {
        return err ? reject(err) : resolve(data)
      })
    })
  }

  try {
    const upgradeHandler = new UpgradeHandler(opts, callback)
    this.dispatch({
      ...opts,
      method: opts.method || 'GET',
      upgrade: opts.protocol || 'Websocket'
    }, upgradeHandler)
  } catch (err) {
    if (typeof callback !== 'function') {
      throw err
    }
    const opaque = opts && opts.opaque
    queueMicrotask(() => callback(err, { opaque }))
  }
}

module.exports = upgrade


/***/ }),

/***/ 4059:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


module.exports.request = __nccwpck_require__(5448)
module.exports.stream = __nccwpck_require__(5395)
module.exports.pipeline = __nccwpck_require__(8752)
module.exports.upgrade = __nccwpck_require__(6923)
module.exports.connect = __nccwpck_require__(9744)


/***/ }),

/***/ 3858:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";
// Ported from https://github.com/nodejs/undici/pull/907



const assert = __nccwpck_require__(9491)
const { Readable } = __nccwpck_require__(2781)
const { RequestAbortedError, NotSupportedError, InvalidArgumentError } = __nccwpck_require__(8045)
const util = __nccwpck_require__(3983)
const { ReadableStreamFrom, toUSVString } = __nccwpck_require__(3983)

let Blob

const kConsume = Symbol('kConsume')
const kReading = Symbol('kReading')
const kBody = Symbol('kBody')
const kAbort = Symbol('abort')
const kContentType = Symbol('kContentType')

module.exports = class BodyReadable extends Readable {
  constructor ({
    resume,
    abort,
    contentType = '',
    highWaterMark = 64 * 1024 // Same as nodejs fs streams.
  }) {
    super({
      autoDestroy: true,
      read: resume,
      highWaterMark
    })

    this._readableState.dataEmitted = false

    this[kAbort] = abort
    this[kConsume] = null
    this[kBody] = null
    this[kContentType] = contentType

    // Is stream being consumed through Readable API?
    // This is an optimization so that we avoid checking
    // for 'data' and 'readable' listeners in the hot path
    // inside push().
    this[kReading] = false
  }

  destroy (err) {
    if (this.destroyed) {
      // Node < 16
      return this
    }

    if (!err && !this._readableState.endEmitted) {
      err = new RequestAbortedError()
    }

    if (err) {
      this[kAbort]()
    }

    return super.destroy(err)
  }

  emit (ev, ...args) {
    if (ev === 'data') {
      // Node < 16.7
      this._readableState.dataEmitted = true
    } else if (ev === 'error') {
      // Node < 16
      this._readableState.errorEmitted = true
    }
    return super.emit(ev, ...args)
  }

  on (ev, ...args) {
    if (ev === 'data' || ev === 'readable') {
      this[kReading] = true
    }
    return super.on(ev, ...args)
  }

  addListener (ev, ...args) {
    return this.on(ev, ...args)
  }

  off (ev, ...args) {
    const ret = super.off(ev, ...args)
    if (ev === 'data' || ev === 'readable') {
      this[kReading] = (
        this.listenerCount('data') > 0 ||
        this.listenerCount('readable') > 0
      )
    }
    return ret
  }

  removeListener (ev, ...args) {
    return this.off(ev, ...args)
  }

  push (chunk) {
    if (this[kConsume] && chunk !== null && this.readableLength === 0) {
      consumePush(this[kConsume], chunk)
      return this[kReading] ? super.push(chunk) : true
    }
    return super.push(chunk)
  }

  // https://fetch.spec.whatwg.org/#dom-body-text
  async text () {
    return consume(this, 'text')
  }

  // https://fetch.spec.whatwg.org/#dom-body-json
  async json () {
    return consume(this, 'json')
  }

  // https://fetch.spec.whatwg.org/#dom-body-blob
  async blob () {
    return consume(this, 'blob')
  }

  // https://fetch.spec.whatwg.org/#dom-body-arraybuffer
  async arrayBuffer () {
    return consume(this, 'arrayBuffer')
  }

  // https://fetch.spec.whatwg.org/#dom-body-formdata
  async formData () {
    // TODO: Implement.
    throw new NotSupportedError()
  }

  // https://fetch.spec.whatwg.org/#dom-body-bodyused
  get bodyUsed () {
    return util.isDisturbed(this)
  }

  // https://fetch.spec.whatwg.org/#dom-body-body
  get body () {
    if (!this[kBody]) {
      this[kBody] = ReadableStreamFrom(this)
      if (this[kConsume]) {
        // TODO: Is this the best way to force a lock?
        this[kBody].getReader() // Ensure stream is locked.
        assert(this[kBody].locked)
      }
    }
    return this[kBody]
  }

  async dump (opts) {
    let limit = opts && Number.isFinite(opts.limit) ? opts.limit : 262144
    const signal = opts && opts.signal
    const abortFn = () => {
      this.destroy()
    }
    let signalListenerCleanup
    if (signal) {
      if (typeof signal !== 'object' || !('aborted' in signal)) {
        throw new InvalidArgumentError('signal must be an AbortSignal')
      }
      util.throwIfAborted(signal)
      signalListenerCleanup = util.addAbortListener(signal, abortFn)
    }
    try {
      for await (const chunk of this) {
        util.throwIfAborted(signal)
        limit -= Buffer.byteLength(chunk)
        if (limit < 0) {
          return
        }
      }
    } catch {
      util.throwIfAborted(signal)
    } finally {
      if (typeof signalListenerCleanup === 'function') {
        signalListenerCleanup()
      } else if (signalListenerCleanup) {
        signalListenerCleanup[Symbol.dispose]()
      }
    }
  }
}

// https://streams.spec.whatwg.org/#readablestream-locked
function isLocked (self) {
  // Consume is an implicit lock.
  return (self[kBody] && self[kBody].locked === true) || self[kConsume]
}

// https://fetch.spec.whatwg.org/#body-unusable
function isUnusable (self) {
  return util.isDisturbed(self) || isLocked(self)
}

async function consume (stream, type) {
  if (isUnusable(stream)) {
    throw new TypeError('unusable')
  }

  assert(!stream[kConsume])

  return new Promise((resolve, reject) => {
    stream[kConsume] = {
      type,
      stream,
      resolve,
      reject,
      length: 0,
      body: []
    }

    stream
      .on('error', function (err) {
        consumeFinish(this[kConsume], err)
      })
      .on('close', function () {
        if (this[kConsume].body !== null) {
          consumeFinish(this[kConsume], new RequestAbortedError())
        }
      })

    process.nextTick(consumeStart, stream[kConsume])
  })
}

function consumeStart (consume) {
  if (consume.body === null) {
    return
  }

  const { _readableState: state } = consume.stream

  for (const chunk of state.buffer) {
    consumePush(consume, chunk)
  }

  if (state.endEmitted) {
    consumeEnd(this[kConsume])
  } else {
    consume.stream.on('end', function () {
      consumeEnd(this[kConsume])
    })
  }

  consume.stream.resume()

  while (consume.stream.read() != null) {
    // Loop
  }
}

function consumeEnd (consume) {
  const { type, body, resolve, stream, length } = consume

  try {
    if (type === 'text') {
      resolve(toUSVString(Buffer.concat(body)))
    } else if (type === 'json') {
      resolve(JSON.parse(Buffer.concat(body)))
    } else if (type === 'arrayBuffer') {
      const dst = new Uint8Array(length)

      let pos = 0
      for (const buf of body) {
        dst.set(buf, pos)
        pos += buf.byteLength
      }

      resolve(dst)
    } else if (type === 'blob') {
      if (!Blob) {
        Blob = (__nccwpck_require__(4300).Blob)
      }
      resolve(new Blob(body, { type: stream[kContentType] }))
    }

    consumeFinish(consume)
  } catch (err) {
    stream.destroy(err)
  }
}

function consumePush (consume, chunk) {
  consume.length += chunk.length
  consume.body.push(chunk)
}

function consumeFinish (consume, err) {
  if (consume.body === null) {
    return
  }

  if (err) {
    consume.reject(err)
  } else {
    consume.resolve()
  }

  consume.type = null
  consume.stream = null
  consume.resolve = null
  consume.reject = null
  consume.length = 0
  consume.body = null
}


/***/ }),

/***/ 7474:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const assert = __nccwpck_require__(9491)
const {
  ResponseStatusCodeError
} = __nccwpck_require__(8045)
const { toUSVString } = __nccwpck_require__(3983)

async function getResolveErrorBodyCallback ({ callback, body, contentType, statusCode, statusMessage, headers }) {
  assert(body)

  let chunks = []
  let limit = 0

  for await (const chunk of body) {
    chunks.push(chunk)
    limit += chunk.length
    if (limit > 128 * 1024) {
      chunks = null
      break
    }
  }

  if (statusCode === 204 || !contentType || !chunks) {
    process.nextTick(callback, new ResponseStatusCodeError(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ''}`, statusCode, headers))
    return
  }

  try {
    if (contentType.startsWith('application/json')) {
      const payload = JSON.parse(toUSVString(Buffer.concat(chunks)))
      process.nextTick(callback, new ResponseStatusCodeError(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ''}`, statusCode, headers, payload))
      return
    }

    if (contentType.startsWith('text/')) {
      const payload = toUSVString(Buffer.concat(chunks))
      process.nextTick(callback, new ResponseStatusCodeError(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ''}`, statusCode, headers, payload))
      return
    }
  } catch (err) {
    // Process in a fallback if error
  }

  process.nextTick(callback, new ResponseStatusCodeError(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ''}`, statusCode, headers))
}

module.exports = { getResolveErrorBodyCallback }


/***/ }),

/***/ 7931:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const {
  BalancedPoolMissingUpstreamError,
  InvalidArgumentError
} = __nccwpck_require__(8045)
const {
  PoolBase,
  kClients,
  kNeedDrain,
  kAddClient,
  kRemoveClient,
  kGetDispatcher
} = __nccwpck_require__(3198)
const Pool = __nccwpck_require__(4634)
const { kUrl, kInterceptors } = __nccwpck_require__(2785)
const { parseOrigin } = __nccwpck_require__(3983)
const kFactory = Symbol('factory')

const kOptions = Symbol('options')
const kGreatestCommonDivisor = Symbol('kGreatestCommonDivisor')
const kCurrentWeight = Symbol('kCurrentWeight')
const kIndex = Symbol('kIndex')
const kWeight = Symbol('kWeight')
const kMaxWeightPerServer = Symbol('kMaxWeightPerServer')
const kErrorPenalty = Symbol('kErrorPenalty')

function getGreatestCommonDivisor (a, b) {
  if (b === 0) return a
  return getGreatestCommonDivisor(b, a % b)
}

function defaultFactory (origin, opts) {
  return new Pool(origin, opts)
}

class BalancedPool extends PoolBase {
  constructor (upstreams = [], { factory = defaultFactory, ...opts } = {}) {
    super()

    this[kOptions] = opts
    this[kIndex] = -1
    this[kCurrentWeight] = 0

    this[kMaxWeightPerServer] = this[kOptions].maxWeightPerServer || 100
    this[kErrorPenalty] = this[kOptions].errorPenalty || 15

    if (!Array.isArray(upstreams)) {
      upstreams = [upstreams]
    }

    if (typeof factory !== 'function') {
      throw new InvalidArgumentError('factory must be a function.')
    }

    this[kInterceptors] = opts.interceptors && opts.interceptors.BalancedPool && Array.isArray(opts.interceptors.BalancedPool)
      ? opts.interceptors.BalancedPool
      : []
    this[kFactory] = factory

    for (const upstream of upstreams) {
      this.addUpstream(upstream)
    }
    this._updateBalancedPoolStats()
  }

  addUpstream (upstream) {
    const upstreamOrigin = parseOrigin(upstream).origin

    if (this[kClients].find((pool) => (
      pool[kUrl].origin === upstreamOrigin &&
      pool.closed !== true &&
      pool.destroyed !== true
    ))) {
      return this
    }
    const pool = this[kFactory](upstreamOrigin, Object.assign({}, this[kOptions]))

    this[kAddClient](pool)
    pool.on('connect', () => {
      pool[kWeight] = Math.min(this[kMaxWeightPerServer], pool[kWeight] + this[kErrorPenalty])
    })

    pool.on('connectionError', () => {
      pool[kWeight] = Math.max(1, pool[kWeight] - this[kErrorPenalty])
      this._updateBalancedPoolStats()
    })

    pool.on('disconnect', (...args) => {
      const err = args[2]
      if (err && err.code === 'UND_ERR_SOCKET') {
        // decrease the weight of the pool.
        pool[kWeight] = Math.max(1, pool[kWeight] - this[kErrorPenalty])
        this._updateBalancedPoolStats()
      }
    })

    for (const client of this[kClients]) {
      client[kWeight] = this[kMaxWeightPerServer]
    }

    this._updateBalancedPoolStats()

    return this
  }

  _updateBalancedPoolStats () {
    this[kGreatestCommonDivisor] = this[kClients].map(p => p[kWeight]).reduce(getGreatestCommonDivisor, 0)
  }

  removeUpstream (upstream) {
    const upstreamOrigin = parseOrigin(upstream).origin

    const pool = this[kClients].find((pool) => (
      pool[kUrl].origin === upstreamOrigin &&
      pool.closed !== true &&
      pool.destroyed !== true
    ))

    if (pool) {
      this[kRemoveClient](pool)
    }

    return this
  }

  get upstreams () {
    return this[kClients]
      .filter(dispatcher => dispatcher.closed !== true && dispatcher.destroyed !== true)
      .map((p) => p[kUrl].origin)
  }

  [kGetDispatcher] () {
    // We validate that pools is greater than 0,
    // otherwise we would have to wait until an upstream
    // is added, which might never happen.
    if (this[kClients].length === 0) {
      throw new BalancedPoolMissingUpstreamError()
    }

    const dispatcher = this[kClients].find(dispatcher => (
      !dispatcher[kNeedDrain] &&
      dispatcher.closed !== true &&
      dispatcher.destroyed !== true
    ))

    if (!dispatcher) {
      return
    }

    const allClientsBusy = this[kClients].map(pool => pool[kNeedDrain]).reduce((a, b) => a && b, true)

    if (allClientsBusy) {
      return
    }

    let counter = 0

    let maxWeightIndex = this[kClients].findIndex(pool => !pool[kNeedDrain])

    while (counter++ < this[kClients].length) {
      this[kIndex] = (this[kIndex] + 1) % this[kClients].length
      const pool = this[kClients][this[kIndex]]

      // find pool index with the largest weight
      if (pool[kWeight] > this[kClients][maxWeightIndex][kWeight] && !pool[kNeedDrain]) {
        maxWeightIndex = this[kIndex]
      }

      // decrease the current weight every `this[kClients].length`.
      if (this[kIndex] === 0) {
        // Set the current weight to the next lower weight.
        this[kCurrentWeight] = this[kCurrentWeight] - this[kGreatestCommonDivisor]

        if (this[kCurrentWeight] <= 0) {
          this[kCurrentWeight] = this[kMaxWeightPerServer]
        }
      }
      if (pool[kWeight] >= this[kCurrentWeight] && (!pool[kNeedDrain])) {
        return pool
      }
    }

    this[kCurrentWeight] = this[kClients][maxWeightIndex][kWeight]
    this[kIndex] = maxWeightIndex
    return this[kClients][maxWeightIndex]
  }
}

module.exports = BalancedPool


/***/ }),

/***/ 6101:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { kConstruct } = __nccwpck_require__(9174)
const { urlEquals, fieldValues: getFieldValues } = __nccwpck_require__(2396)
const { kEnumerableProperty, isDisturbed } = __nccwpck_require__(3983)
const { kHeadersList } = __nccwpck_require__(2785)
const { webidl } = __nccwpck_require__(1744)
const { Response, cloneResponse } = __nccwpck_require__(7823)
const { Request } = __nccwpck_require__(8359)
const { kState, kHeaders, kGuard, kRealm } = __nccwpck_require__(5861)
const { fetching } = __nccwpck_require__(4881)
const { urlIsHttpHttpsScheme, createDeferredPromise, readAllBytes } = __nccwpck_require__(2538)
const assert = __nccwpck_require__(9491)
const { getGlobalDispatcher } = __nccwpck_require__(1892)

/**
 * @see https://w3c.github.io/ServiceWorker/#dfn-cache-batch-operation
 * @typedef {Object} CacheBatchOperation
 * @property {'delete' | 'put'} type
 * @property {any} request
 * @property {any} response
 * @property {import('../../types/cache').CacheQueryOptions} options
 */

/**
 * @see https://w3c.github.io/ServiceWorker/#dfn-request-response-list
 * @typedef {[any, any][]} requestResponseList
 */

class Cache {
  /**
   * @see https://w3c.github.io/ServiceWorker/#dfn-relevant-request-response-list
   * @type {requestResponseList}
   */
  #relevantRequestResponseList

  constructor () {
    if (arguments[0] !== kConstruct) {
      webidl.illegalConstructor()
    }

    this.#relevantRequestResponseList = arguments[1]
  }

  async match (request, options = {}) {
    webidl.brandCheck(this, Cache)
    webidl.argumentLengthCheck(arguments, 1, { header: 'Cache.match' })

    request = webidl.converters.RequestInfo(request)
    options = webidl.converters.CacheQueryOptions(options)

    const p = await this.matchAll(request, options)

    if (p.length === 0) {
      return
    }

    return p[0]
  }

  async matchAll (request = undefined, options = {}) {
    webidl.brandCheck(this, Cache)

    if (request !== undefined) request = webidl.converters.RequestInfo(request)
    options = webidl.converters.CacheQueryOptions(options)

    // 1.
    let r = null

    // 2.
    if (request !== undefined) {
      if (request instanceof Request) {
        // 2.1.1
        r = request[kState]

        // 2.1.2
        if (r.method !== 'GET' && !options.ignoreMethod) {
          return []
        }
      } else if (typeof request === 'string') {
        // 2.2.1
        r = new Request(request)[kState]
      }
    }

    // 5.
    // 5.1
    const responses = []

    // 5.2
    if (request === undefined) {
      // 5.2.1
      for (const requestResponse of this.#relevantRequestResponseList) {
        responses.push(requestResponse[1])
      }
    } else { // 5.3
      // 5.3.1
      const requestResponses = this.#queryCache(r, options)

      // 5.3.2
      for (const requestResponse of requestResponses) {
        responses.push(requestResponse[1])
      }
    }

    // 5.4
    // We don't implement CORs so we don't need to loop over the responses, yay!

    // 5.5.1
    const responseList = []

    // 5.5.2
    for (const response of responses) {
      // 5.5.2.1
      const responseObject = new Response(response.body?.source ?? null)
      const body = responseObject[kState].body
      responseObject[kState] = response
      responseObject[kState].body = body
      responseObject[kHeaders][kHeadersList] = response.headersList
      responseObject[kHeaders][kGuard] = 'immutable'

      responseList.push(responseObject)
    }

    // 6.
    return Object.freeze(responseList)
  }

  async add (request) {
    webidl.brandCheck(this, Cache)
    webidl.argumentLengthCheck(arguments, 1, { header: 'Cache.add' })

    request = webidl.converters.RequestInfo(request)

    // 1.
    const requests = [request]

    // 2.
    const responseArrayPromise = this.addAll(requests)

    // 3.
    return await responseArrayPromise
  }

  async addAll (requests) {
    webidl.brandCheck(this, Cache)
    webidl.argumentLengthCheck(arguments, 1, { header: 'Cache.addAll' })

    requests = webidl.converters['sequence<RequestInfo>'](requests)

    // 1.
    const responsePromises = []

    // 2.
    const requestList = []

    // 3.
    for (const request of requests) {
      if (typeof request === 'string') {
        continue
      }

      // 3.1
      const r = request[kState]

      // 3.2
      if (!urlIsHttpHttpsScheme(r.url) || r.method !== 'GET') {
        throw webidl.errors.exception({
          header: 'Cache.addAll',
          message: 'Expected http/s scheme when method is not GET.'
        })
      }
    }

    // 4.
    /** @type {ReturnType<typeof fetching>[]} */
    const fetchControllers = []

    // 5.
    for (const request of requests) {
      // 5.1
      const r = new Request(request)[kState]

      // 5.2
      if (!urlIsHttpHttpsScheme(r.url)) {
        throw webidl.errors.exception({
          header: 'Cache.addAll',
          message: 'Expected http/s scheme.'
        })
      }

      // 5.4
      r.initiator = 'fetch'
      r.destination = 'subresource'

      // 5.5
      requestList.push(r)

      // 5.6
      const responsePromise = createDeferredPromise()

      // 5.7
      fetchControllers.push(fetching({
        request: r,
        dispatcher: getGlobalDispatcher(),
        processResponse (response) {
          // 1.
          if (response.type === 'error' || response.status === 206 || response.status < 200 || response.status > 299) {
            responsePromise.reject(webidl.errors.exception({
              header: 'Cache.addAll',
              message: 'Received an invalid status code or the request failed.'
            }))
          } else if (response.headersList.contains('vary')) { // 2.
            // 2.1
            const fieldValues = getFieldValues(response.headersList.get('vary'))

            // 2.2
            for (const fieldValue of fieldValues) {
              // 2.2.1
              if (fieldValue === '*') {
                responsePromise.reject(webidl.errors.exception({
                  header: 'Cache.addAll',
                  message: 'invalid vary field value'
                }))

                for (const controller of fetchControllers) {
                  controller.abort()
                }

                return
              }
            }
          }
        },
        processResponseEndOfBody (response) {
          // 1.
          if (response.aborted) {
            responsePromise.reject(new DOMException('aborted', 'AbortError'))
            return
          }

          // 2.
          responsePromise.resolve(response)
        }
      }))

      // 5.8
      responsePromises.push(responsePromise.promise)
    }

    // 6.
    const p = Promise.all(responsePromises)

    // 7.
    const responses = await p

    // 7.1
    const operations = []

    // 7.2
    let index = 0

    // 7.3
    for (const response of responses) {
      // 7.3.1
      /** @type {CacheBatchOperation} */
      const operation = {
        type: 'put', // 7.3.2
        request: requestList[index], // 7.3.3
        response // 7.3.4
      }

      operations.push(operation) // 7.3.5

      index++ // 7.3.6
    }

    // 7.5
    const cacheJobPromise = createDeferredPromise()

    // 7.6.1
    let errorData = null

    // 7.6.2
    try {
      this.#batchCacheOperations(operations)
    } catch (e) {
      errorData = e
    }

    // 7.6.3
    queueMicrotask(() => {
      // 7.6.3.1
      if (errorData === null) {
        cacheJobPromise.resolve(undefined)
      } else {
        // 7.6.3.2
        cacheJobPromise.reject(errorData)
      }
    })

    // 7.7
    return cacheJobPromise.promise
  }

  async put (request, response) {
    webidl.brandCheck(this, Cache)
    webidl.argumentLengthCheck(arguments, 2, { header: 'Cache.put' })

    request = webidl.converters.RequestInfo(request)
    response = webidl.converters.Response(response)

    // 1.
    let innerRequest = null

    // 2.
    if (request instanceof Request) {
      innerRequest = request[kState]
    } else { // 3.
      innerRequest = new Request(request)[kState]
    }

    // 4.
    if (!urlIsHttpHttpsScheme(innerRequest.url) || innerRequest.method !== 'GET') {
      throw webidl.errors.exception({
        header: 'Cache.put',
        message: 'Expected an http/s scheme when method is not GET'
      })
    }

    // 5.
    const innerResponse = response[kState]

    // 6.
    if (innerResponse.status === 206) {
      throw webidl.errors.exception({
        header: 'Cache.put',
        message: 'Got 206 status'
      })
    }

    // 7.
    if (innerResponse.headersList.contains('vary')) {
      // 7.1.
      const fieldValues = getFieldValues(innerResponse.headersList.get('vary'))

      // 7.2.
      for (const fieldValue of fieldValues) {
        // 7.2.1
        if (fieldValue === '*') {
          throw webidl.errors.exception({
            header: 'Cache.put',
            message: 'Got * vary field value'
          })
        }
      }
    }

    // 8.
    if (innerResponse.body && (isDisturbed(innerResponse.body.stream) || innerResponse.body.stream.locked)) {
      throw webidl.errors.exception({
        header: 'Cache.put',
        message: 'Response body is locked or disturbed'
      })
    }

    // 9.
    const clonedResponse = cloneResponse(innerResponse)

    // 10.
    const bodyReadPromise = createDeferredPromise()

    // 11.
    if (innerResponse.body != null) {
      // 11.1
      const stream = innerResponse.body.stream

      // 11.2
      const reader = stream.getReader()

      // 11.3
      readAllBytes(reader).then(bodyReadPromise.resolve, bodyReadPromise.reject)
    } else {
      bodyReadPromise.resolve(undefined)
    }

    // 12.
    /** @type {CacheBatchOperation[]} */
    const operations = []

    // 13.
    /** @type {CacheBatchOperation} */
    const operation = {
      type: 'put', // 14.
      request: innerRequest, // 15.
      response: clonedResponse // 16.
    }

    // 17.
    operations.push(operation)

    // 19.
    const bytes = await bodyReadPromise.promise

    if (clonedResponse.body != null) {
      clonedResponse.body.source = bytes
    }

    // 19.1
    const cacheJobPromise = createDeferredPromise()

    // 19.2.1
    let errorData = null

    // 19.2.2
    try {
      this.#batchCacheOperations(operations)
    } catch (e) {
      errorData = e
    }

    // 19.2.3
    queueMicrotask(() => {
      // 19.2.3.1
      if (errorData === null) {
        cacheJobPromise.resolve()
      } else { // 19.2.3.2
        cacheJobPromise.reject(errorData)
      }
    })

    return cacheJobPromise.promise
  }

  async delete (request, options = {}) {
    webidl.brandCheck(this, Cache)
    webidl.argumentLengthCheck(arguments, 1, { header: 'Cache.delete' })

    request = webidl.converters.RequestInfo(request)
    options = webidl.converters.CacheQueryOptions(options)

    /**
     * @type {Request}
     */
    let r = null

    if (request instanceof Request) {
      r = request[kState]

      if (r.method !== 'GET' && !options.ignoreMethod) {
        return false
      }
    } else {
      assert(typeof request === 'string')

      r = new Request(request)[kState]
    }

    /** @type {CacheBatchOperation[]} */
    const operations = []

    /** @type {CacheBatchOperation} */
    const operation = {
      type: 'delete',
      request: r,
      options
    }

    operations.push(operation)

    const cacheJobPromise = createDeferredPromise()

    let errorData = null
    let requestResponses

    try {
      requestResponses = this.#batchCacheOperations(operations)
    } catch (e) {
      errorData = e
    }

    queueMicrotask(() => {
      if (errorData === null) {
        cacheJobPromise.resolve(!!requestResponses?.length)
      } else {
        cacheJobPromise.reject(errorData)
      }
    })

    return cacheJobPromise.promise
  }

  /**
   * @see https://w3c.github.io/ServiceWorker/#dom-cache-keys
   * @param {any} request
   * @param {import('../../types/cache').CacheQueryOptions} options
   * @returns {readonly Request[]}
   */
  async keys (request = undefined, options = {}) {
    webidl.brandCheck(this, Cache)

    if (request !== undefined) request = webidl.converters.RequestInfo(request)
    options = webidl.converters.CacheQueryOptions(options)

    // 1.
    let r = null

    // 2.
    if (request !== undefined) {
      // 2.1
      if (request instanceof Request) {
        // 2.1.1
        r = request[kState]

        // 2.1.2
        if (r.method !== 'GET' && !options.ignoreMethod) {
          return []
        }
      } else if (typeof request === 'string') { // 2.2
        r = new Request(request)[kState]
      }
    }

    // 4.
    const promise = createDeferredPromise()

    // 5.
    // 5.1
    const requests = []

    // 5.2
    if (request === undefined) {
      // 5.2.1
      for (const requestResponse of this.#relevantRequestResponseList) {
        // 5.2.1.1
        requests.push(requestResponse[0])
      }
    } else { // 5.3
      // 5.3.1
      const requestResponses = this.#queryCache(r, options)

      // 5.3.2
      for (const requestResponse of requestResponses) {
        // 5.3.2.1
        requests.push(requestResponse[0])
      }
    }

    // 5.4
    queueMicrotask(() => {
      // 5.4.1
      const requestList = []

      // 5.4.2
      for (const request of requests) {
        const requestObject = new Request('https://a')
        requestObject[kState] = request
        requestObject[kHeaders][kHeadersList] = request.headersList
        requestObject[kHeaders][kGuard] = 'immutable'
        requestObject[kRealm] = request.client

        // 5.4.2.1
        requestList.push(requestObject)
      }

      // 5.4.3
      promise.resolve(Object.freeze(requestList))
    })

    return promise.promise
  }

  /**
   * @see https://w3c.github.io/ServiceWorker/#batch-cache-operations-algorithm
   * @param {CacheBatchOperation[]} operations
   * @returns {requestResponseList}
   */
  #batchCacheOperations (operations) {
    // 1.
    const cache = this.#relevantRequestResponseList

    // 2.
    const backupCache = [...cache]

    // 3.
    const addedItems = []

    // 4.1
    const resultList = []

    try {
      // 4.2
      for (const operation of operations) {
        // 4.2.1
        if (operation.type !== 'delete' && operation.type !== 'put') {
          throw webidl.errors.exception({
            header: 'Cache.#batchCacheOperations',
            message: 'operation type does not match "delete" or "put"'
          })
        }

        // 4.2.2
        if (operation.type === 'delete' && operation.response != null) {
          throw webidl.errors.exception({
            header: 'Cache.#batchCacheOperations',
            message: 'delete operation should not have an associated response'
          })
        }

        // 4.2.3
        if (this.#queryCache(operation.request, operation.options, addedItems).length) {
          throw new DOMException('???', 'InvalidStateError')
        }

        // 4.2.4
        let requestResponses

        // 4.2.5
        if (operation.type === 'delete') {
          // 4.2.5.1
          requestResponses = this.#queryCache(operation.request, operation.options)

          // TODO: the spec is wrong, this is needed to pass WPTs
          if (requestResponses.length === 0) {
            return []
          }

          // 4.2.5.2
          for (const requestResponse of requestResponses) {
            const idx = cache.indexOf(requestResponse)
            assert(idx !== -1)

            // 4.2.5.2.1
            cache.splice(idx, 1)
          }
        } else if (operation.type === 'put') { // 4.2.6
          // 4.2.6.1
          if (operation.response == null) {
            throw webidl.errors.exception({
              header: 'Cache.#batchCacheOperations',
              message: 'put operation should have an associated response'
            })
          }

          // 4.2.6.2
          const r = operation.request

          // 4.2.6.3
          if (!urlIsHttpHttpsScheme(r.url)) {
            throw webidl.errors.exception({
              header: 'Cache.#batchCacheOperations',
              message: 'expected http or https scheme'
            })
          }

          // 4.2.6.4
          if (r.method !== 'GET') {
            throw webidl.errors.exception({
              header: 'Cache.#batchCacheOperations',
              message: 'not get method'
            })
          }

          // 4.2.6.5
          if (operation.options != null) {
            throw webidl.errors.exception({
              header: 'Cache.#batchCacheOperations',
              message: 'options must not be defined'
            })
          }

          // 4.2.6.6
          requestResponses = this.#queryCache(operation.request)

          // 4.2.6.7
          for (const requestResponse of requestResponses) {
            const idx = cache.indexOf(requestResponse)
            assert(idx !== -1)

            // 4.2.6.7.1
            cache.splice(idx, 1)
          }

          // 4.2.6.8
          cache.push([operation.request, operation.response])

          // 4.2.6.10
          addedItems.push([operation.request, operation.response])
        }

        // 4.2.7
        resultList.push([operation.request, operation.response])
      }

      // 4.3
      return resultList
    } catch (e) { // 5.
      // 5.1
      this.#relevantRequestResponseList.length = 0

      // 5.2
      this.#relevantRequestResponseList = backupCache

      // 5.3
      throw e
    }
  }

  /**
   * @see https://w3c.github.io/ServiceWorker/#query-cache
   * @param {any} requestQuery
   * @param {import('../../types/cache').CacheQueryOptions} options
   * @param {requestResponseList} targetStorage
   * @returns {requestResponseList}
   */
  #queryCache (requestQuery, options, targetStorage) {
    /** @type {requestResponseList} */
    const resultList = []

    const storage = targetStorage ?? this.#relevantRequestResponseList

    for (const requestResponse of storage) {
      const [cachedRequest, cachedResponse] = requestResponse
      if (this.#requestMatchesCachedItem(requestQuery, cachedRequest, cachedResponse, options)) {
        resultList.push(requestResponse)
      }
    }

    return resultList
  }

  /**
   * @see https://w3c.github.io/ServiceWorker/#request-matches-cached-item-algorithm
   * @param {any} requestQuery
   * @param {any} request
   * @param {any | null} response
   * @param {import('../../types/cache').CacheQueryOptions | undefined} options
   * @returns {boolean}
   */
  #requestMatchesCachedItem (requestQuery, request, response = null, options) {
    // if (options?.ignoreMethod === false && request.method === 'GET') {
    //   return false
    // }

    const queryURL = new URL(requestQuery.url)

    const cachedURL = new URL(request.url)

    if (options?.ignoreSearch) {
      cachedURL.search = ''

      queryURL.search = ''
    }

    if (!urlEquals(queryURL, cachedURL, true)) {
      return false
    }

    if (
      response == null ||
      options?.ignoreVary ||
      !response.headersList.contains('vary')
    ) {
      return true
    }

    const fieldValues = getFieldValues(response.headersList.get('vary'))

    for (const fieldValue of fieldValues) {
      if (fieldValue === '*') {
        return false
      }

      const requestValue = request.headersList.get(fieldValue)
      const queryValue = requestQuery.headersList.get(fieldValue)

      // If one has the header and the other doesn't, or one has
      // a different value than the other, return false
      if (requestValue !== queryValue) {
        return false
      }
    }

    return true
  }
}

Object.defineProperties(Cache.prototype, {
  [Symbol.toStringTag]: {
    value: 'Cache',
    configurable: true
  },
  match: kEnumerableProperty,
  matchAll: kEnumerableProperty,
  add: kEnumerableProperty,
  addAll: kEnumerableProperty,
  put: kEnumerableProperty,
  delete: kEnumerableProperty,
  keys: kEnumerableProperty
})

const cacheQueryOptionConverters = [
  {
    key: 'ignoreSearch',
    converter: webidl.converters.boolean,
    defaultValue: false
  },
  {
    key: 'ignoreMethod',
    converter: webidl.converters.boolean,
    defaultValue: false
  },
  {
    key: 'ignoreVary',
    converter: webidl.converters.boolean,
    defaultValue: false
  }
]

webidl.converters.CacheQueryOptions = webidl.dictionaryConverter(cacheQueryOptionConverters)

webidl.converters.MultiCacheQueryOptions = webidl.dictionaryConverter([
  ...cacheQueryOptionConverters,
  {
    key: 'cacheName',
    converter: webidl.converters.DOMString
  }
])

webidl.converters.Response = webidl.interfaceConverter(Response)

webidl.converters['sequence<RequestInfo>'] = webidl.sequenceConverter(
  webidl.converters.RequestInfo
)

module.exports = {
  Cache
}


/***/ }),

/***/ 7907:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { kConstruct } = __nccwpck_require__(9174)
const { Cache } = __nccwpck_require__(6101)
const { webidl } = __nccwpck_require__(1744)
const { kEnumerableProperty } = __nccwpck_require__(3983)

class CacheStorage {
  /**
   * @see https://w3c.github.io/ServiceWorker/#dfn-relevant-name-to-cache-map
   * @type {Map<string, import('./cache').requestResponseList}
   */
  #caches = new Map()

  constructor () {
    if (arguments[0] !== kConstruct) {
      webidl.illegalConstructor()
    }
  }

  async match (request, options = {}) {
    webidl.brandCheck(this, CacheStorage)
    webidl.argumentLengthCheck(arguments, 1, { header: 'CacheStorage.match' })

    request = webidl.converters.RequestInfo(request)
    options = webidl.converters.MultiCacheQueryOptions(options)

    // 1.
    if (options.cacheName != null) {
      // 1.1.1.1
      if (this.#caches.has(options.cacheName)) {
        // 1.1.1.1.1
        const cacheList = this.#caches.get(options.cacheName)
        const cache = new Cache(kConstruct, cacheList)

        return await cache.match(request, options)
      }
    } else { // 2.
      // 2.2
      for (const cacheList of this.#caches.values()) {
        const cache = new Cache(kConstruct, cacheList)

        // 2.2.1.2
        const response = await cache.match(request, options)

        if (response !== undefined) {
          return response
        }
      }
    }
  }

  /**
   * @see https://w3c.github.io/ServiceWorker/#cache-storage-has
   * @param {string} cacheName
   * @returns {Promise<boolean>}
   */
  async has (cacheName) {
    webidl.brandCheck(this, CacheStorage)
    webidl.argumentLengthCheck(arguments, 1, { header: 'CacheStorage.has' })

    cacheName = webidl.converters.DOMString(cacheName)

    // 2.1.1
    // 2.2
    return this.#caches.has(cacheName)
  }

  /**
   * @see https://w3c.github.io/ServiceWorker/#dom-cachestorage-open
   * @param {string} cacheName
   * @returns {Promise<Cache>}
   */
  async open (cacheName) {
    webidl.brandCheck(this, CacheStorage)
    webidl.argumentLengthCheck(arguments, 1, { header: 'CacheStorage.open' })

    cacheName = webidl.converters.DOMString(cacheName)

    // 2.1
    if (this.#caches.has(cacheName)) {
      // await caches.open('v1') !== await caches.open('v1')

      // 2.1.1
      const cache = this.#caches.get(cacheName)

      // 2.1.1.1
      return new Cache(kConstruct, cache)
    }

    // 2.2
    const cache = []

    // 2.3
    this.#caches.set(cacheName, cache)

    // 2.4
    return new Cache(kConstruct, cache)
  }

  /**
   * @see https://w3c.github.io/ServiceWorker/#cache-storage-delete
   * @param {string} cacheName
   * @returns {Promise<boolean>}
   */
  async delete (cacheName) {
    webidl.brandCheck(this, CacheStorage)
    webidl.argumentLengthCheck(arguments, 1, { header: 'CacheStorage.delete' })

    cacheName = webidl.converters.DOMString(cacheName)

    return this.#caches.delete(cacheName)
  }

  /**
   * @see https://w3c.github.io/ServiceWorker/#cache-storage-keys
   * @returns {string[]}
   */
  async keys () {
    webidl.brandCheck(this, CacheStorage)

    // 2.1
    const keys = this.#caches.keys()

    // 2.2
    return [...keys]
  }
}

Object.defineProperties(CacheStorage.prototype, {
  [Symbol.toStringTag]: {
    value: 'CacheStorage',
    configurable: true
  },
  match: kEnumerableProperty,
  has: kEnumerableProperty,
  open: kEnumerableProperty,
  delete: kEnumerableProperty,
  keys: kEnumerableProperty
})

module.exports = {
  CacheStorage
}


/***/ }),

/***/ 9174:
/***/ ((module) => {

"use strict";


module.exports = {
  kConstruct: Symbol('constructable')
}


/***/ }),

/***/ 2396:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const assert = __nccwpck_require__(9491)
const { URLSerializer } = __nccwpck_require__(685)
const { isValidHeaderName } = __nccwpck_require__(2538)

/**
 * @see https://url.spec.whatwg.org/#concept-url-equals
 * @param {URL} A
 * @param {URL} B
 * @param {boolean | undefined} excludeFragment
 * @returns {boolean}
 */
function urlEquals (A, B, excludeFragment = false) {
  const serializedA = URLSerializer(A, excludeFragment)

  const serializedB = URLSerializer(B, excludeFragment)

  return serializedA === serializedB
}

/**
 * @see https://github.com/chromium/chromium/blob/694d20d134cb553d8d89e5500b9148012b1ba299/content/browser/cache_storage/cache_storage_cache.cc#L260-L262
 * @param {string} header
 */
function fieldValues (header) {
  assert(header !== null)

  const values = []

  for (let value of header.split(',')) {
    value = value.trim()

    if (!value.length) {
      continue
    } else if (!isValidHeaderName(value)) {
      continue
    }

    values.push(value)
  }

  return values
}

module.exports = {
  urlEquals,
  fieldValues
}


/***/ }),

/***/ 3598:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";
// @ts-check



/* global WebAssembly */

const assert = __nccwpck_require__(9491)
const net = __nccwpck_require__(1808)
const http = __nccwpck_require__(3685)
const { pipeline } = __nccwpck_require__(2781)
const util = __nccwpck_require__(3983)
const timers = __nccwpck_require__(9459)
const Request = __nccwpck_require__(2905)
const DispatcherBase = __nccwpck_require__(4839)
const {
  RequestContentLengthMismatchError,
  ResponseContentLengthMismatchError,
  InvalidArgumentError,
  RequestAbortedError,
  HeadersTimeoutError,
  HeadersOverflowError,
  SocketError,
  InformationalError,
  BodyTimeoutError,
  HTTPParserError,
  ResponseExceededMaxSizeError,
  ClientDestroyedError
} = __nccwpck_require__(8045)
const buildConnector = __nccwpck_require__(2067)
const {
  kUrl,
  kReset,
  kServerName,
  kClient,
  kBusy,
  kParser,
  kConnect,
  kBlocking,
  kResuming,
  kRunning,
  kPending,
  kSize,
  kWriting,
  kQueue,
  kConnected,
  kConnecting,
  kNeedDrain,
  kNoRef,
  kKeepAliveDefaultTimeout,
  kHostHeader,
  kPendingIdx,
  kRunningIdx,
  kError,
  kPipelining,
  kSocket,
  kKeepAliveTimeoutValue,
  kMaxHeadersSize,
  kKeepAliveMaxTimeout,
  kKeepAliveTimeoutThreshold,
  kHeadersTimeout,
  kBodyTimeout,
  kStrictContentLength,
  kConnector,
  kMaxRedirections,
  kMaxRequests,
  kCounter,
  kClose,
  kDestroy,
  kDispatch,
  kInterceptors,
  kLocalAddress,
  kMaxResponseSize,
  kHTTPConnVersion,
  // HTTP2
  kHost,
  kHTTP2Session,
  kHTTP2SessionState,
  kHTTP2BuildRequest,
  kHTTP2CopyHeaders,
  kHTTP1BuildRequest
} = __nccwpck_require__(2785)

/** @type {import('http2')} */
let http2
try {
  http2 = __nccwpck_require__(5158)
} catch {
  // @ts-ignore
  http2 = { constants: {} }
}

const {
  constants: {
    HTTP2_HEADER_AUTHORITY,
    HTTP2_HEADER_METHOD,
    HTTP2_HEADER_PATH,
    HTTP2_HEADER_SCHEME,
    HTTP2_HEADER_CONTENT_LENGTH,
    HTTP2_HEADER_EXPECT,
    HTTP2_HEADER_STATUS
  }
} = http2

// Experimental
let h2ExperimentalWarned = false

const FastBuffer = Buffer[Symbol.species]

const kClosedResolve = Symbol('kClosedResolve')

const channels = {}

try {
  const diagnosticsChannel = __nccwpck_require__(7643)
  channels.sendHeaders = diagnosticsChannel.channel('undici:client:sendHeaders')
  channels.beforeConnect = diagnosticsChannel.channel('undici:client:beforeConnect')
  channels.connectError = diagnosticsChannel.channel('undici:client:connectError')
  channels.connected = diagnosticsChannel.channel('undici:client:connected')
} catch {
  channels.sendHeaders = { hasSubscribers: false }
  channels.beforeConnect = { hasSubscribers: false }
  channels.connectError = { hasSubscribers: false }
  channels.connected = { hasSubscribers: false }
}

/**
 * @type {import('../types/client').default}
 */
class Client extends DispatcherBase {
  /**
   *
   * @param {string|URL} url
   * @param {import('../types/client').Client.Options} options
   */
  constructor (url, {
    interceptors,
    maxHeaderSize,
    headersTimeout,
    socketTimeout,
    requestTimeout,
    connectTimeout,
    bodyTimeout,
    idleTimeout,
    keepAlive,
    keepAliveTimeout,
    maxKeepAliveTimeout,
    keepAliveMaxTimeout,
    keepAliveTimeoutThreshold,
    socketPath,
    pipelining,
    tls,
    strictContentLength,
    maxCachedSessions,
    maxRedirections,
    connect,
    maxRequestsPerClient,
    localAddress,
    maxResponseSize,
    autoSelectFamily,
    autoSelectFamilyAttemptTimeout,
    // h2
    allowH2,
    maxConcurrentStreams
  } = {}) {
    super()

    if (keepAlive !== undefined) {
      throw new InvalidArgumentError('unsupported keepAlive, use pipelining=0 instead')
    }

    if (socketTimeout !== undefined) {
      throw new InvalidArgumentError('unsupported socketTimeout, use headersTimeout & bodyTimeout instead')
    }

    if (requestTimeout !== undefined) {
      throw new InvalidArgumentError('unsupported requestTimeout, use headersTimeout & bodyTimeout instead')
    }

    if (idleTimeout !== undefined) {
      throw new InvalidArgumentError('unsupported idleTimeout, use keepAliveTimeout instead')
    }

    if (maxKeepAliveTimeout !== undefined) {
      throw new InvalidArgumentError('unsupported maxKeepAliveTimeout, use keepAliveMaxTimeout instead')
    }

    if (maxHeaderSize != null && !Number.isFinite(maxHeaderSize)) {
      throw new InvalidArgumentError('invalid maxHeaderSize')
    }

    if (socketPath != null && typeof socketPath !== 'string') {
      throw new InvalidArgumentError('invalid socketPath')
    }

    if (connectTimeout != null && (!Number.isFinite(connectTimeout) || connectTimeout < 0)) {
      throw new InvalidArgumentError('invalid connectTimeout')
    }

    if (keepAliveTimeout != null && (!Number.isFinite(keepAliveTimeout) || keepAliveTimeout <= 0)) {
      throw new InvalidArgumentError('invalid keepAliveTimeout')
    }

    if (keepAliveMaxTimeout != null && (!Number.isFinite(keepAliveMaxTimeout) || keepAliveMaxTimeout <= 0)) {
      throw new InvalidArgumentError('invalid keepAliveMaxTimeout')
    }

    if (keepAliveTimeoutThreshold != null && !Number.isFinite(keepAliveTimeoutThreshold)) {
      throw new InvalidArgumentError('invalid keepAliveTimeoutThreshold')
    }

    if (headersTimeout != null && (!Number.isInteger(headersTimeout) || headersTimeout < 0)) {
      throw new InvalidArgumentError('headersTimeout must be a positive integer or zero')
    }

    if (bodyTimeout != null && (!Number.isInteger(bodyTimeout) || bodyTimeout < 0)) {
      throw new InvalidArgumentError('bodyTimeout must be a positive integer or zero')
    }

    if (connect != null && typeof connect !== 'function' && typeof connect !== 'object') {
      throw new InvalidArgumentError('connect must be a function or an object')
    }

    if (maxRedirections != null && (!Number.isInteger(maxRedirections) || maxRedirections < 0)) {
      throw new InvalidArgumentError('maxRedirections must be a positive number')
    }

    if (maxRequestsPerClient != null && (!Number.isInteger(maxRequestsPerClient) || maxRequestsPerClient < 0)) {
      throw new InvalidArgumentError('maxRequestsPerClient must be a positive number')
    }

    if (localAddress != null && (typeof localAddress !== 'string' || net.isIP(localAddress) === 0)) {
      throw new InvalidArgumentError('localAddress must be valid string IP address')
    }

    if (maxResponseSize != null && (!Number.isInteger(maxResponseSize) || maxResponseSize < -1)) {
      throw new InvalidArgumentError('maxResponseSize must be a positive number')
    }

    if (
      autoSelectFamilyAttemptTimeout != null &&
      (!Number.isInteger(autoSelectFamilyAttemptTimeout) || autoSelectFamilyAttemptTimeout < -1)
    ) {
      throw new InvalidArgumentError('autoSelectFamilyAttemptTimeout must be a positive number')
    }

    // h2
    if (allowH2 != null && typeof allowH2 !== 'boolean') {
      throw new InvalidArgumentError('allowH2 must be a valid boolean value')
    }

    if (maxConcurrentStreams != null && (typeof maxConcurrentStreams !== 'number' || maxConcurrentStreams < 1)) {
      throw new InvalidArgumentError('maxConcurrentStreams must be a possitive integer, greater than 0')
    }

    if (typeof connect !== 'function') {
      connect = buildConnector({
        ...tls,
        maxCachedSessions,
        allowH2,
        socketPath,
        timeout: connectTimeout,
        ...(util.nodeHasAutoSelectFamily && autoSelectFamily ? { autoSelectFamily, autoSelectFamilyAttemptTimeout } : undefined),
        ...connect
      })
    }

    this[kInterceptors] = interceptors && interceptors.Client && Array.isArray(interceptors.Client)
      ? interceptors.Client
      : [createRedirectInterceptor({ maxRedirections })]
    this[kUrl] = util.parseOrigin(url)
    this[kConnector] = connect
    this[kSocket] = null
    this[kPipelining] = pipelining != null ? pipelining : 1
    this[kMaxHeadersSize] = maxHeaderSize || http.maxHeaderSize
    this[kKeepAliveDefaultTimeout] = keepAliveTimeout == null ? 4e3 : keepAliveTimeout
    this[kKeepAliveMaxTimeout] = keepAliveMaxTimeout == null ? 600e3 : keepAliveMaxTimeout
    this[kKeepAliveTimeoutThreshold] = keepAliveTimeoutThreshold == null ? 1e3 : keepAliveTimeoutThreshold
    this[kKeepAliveTimeoutValue] = this[kKeepAliveDefaultTimeout]
    this[kServerName] = null
    this[kLocalAddress] = localAddress != null ? localAddress : null
    this[kResuming] = 0 // 0, idle, 1, scheduled, 2 resuming
    this[kNeedDrain] = 0 // 0, idle, 1, scheduled, 2 resuming
    this[kHostHeader] = `host: ${this[kUrl].hostname}${this[kUrl].port ? `:${this[kUrl].port}` : ''}\r\n`
    this[kBodyTimeout] = bodyTimeout != null ? bodyTimeout : 300e3
    this[kHeadersTimeout] = headersTimeout != null ? headersTimeout : 300e3
    this[kStrictContentLength] = strictContentLength == null ? true : strictContentLength
    this[kMaxRedirections] = maxRedirections
    this[kMaxRequests] = maxRequestsPerClient
    this[kClosedResolve] = null
    this[kMaxResponseSize] = maxResponseSize > -1 ? maxResponseSize : -1
    this[kHTTPConnVersion] = 'h1'

    // HTTP/2
    this[kHTTP2Session] = null
    this[kHTTP2SessionState] = !allowH2
      ? null
      : {
        // streams: null, // Fixed queue of streams - For future support of `push`
          openStreams: 0, // Keep track of them to decide wether or not unref the session
          maxConcurrentStreams: maxConcurrentStreams != null ? maxConcurrentStreams : 100 // Max peerConcurrentStreams for a Node h2 server
        }
    this[kHost] = `${this[kUrl].hostname}${this[kUrl].port ? `:${this[kUrl].port}` : ''}`

    // kQueue is built up of 3 sections separated by
    // the kRunningIdx and kPendingIdx indices.
    // |   complete   |   running   |   pending   |
    //                ^ kRunningIdx ^ kPendingIdx ^ kQueue.length
    // kRunningIdx points to the first running element.
    // kPendingIdx points to the first pending element.
    // This implements a fast queue with an amortized
    // time of O(1).

    this[kQueue] = []
    this[kRunningIdx] = 0
    this[kPendingIdx] = 0
  }

  get pipelining () {
    return this[kPipelining]
  }

  set pipelining (value) {
    this[kPipelining] = value
    resume(this, true)
  }

  get [kPending] () {
    return this[kQueue].length - this[kPendingIdx]
  }

  get [kRunning] () {
    return this[kPendingIdx] - this[kRunningIdx]
  }

  get [kSize] () {
    return this[kQueue].length - this[kRunningIdx]
  }

  get [kConnected] () {
    return !!this[kSocket] && !this[kConnecting] && !this[kSocket].destroyed
  }

  get [kBusy] () {
    const socket = this[kSocket]
    return (
      (socket && (socket[kReset] || socket[kWriting] || socket[kBlocking])) ||
      (this[kSize] >= (this[kPipelining] || 1)) ||
      this[kPending] > 0
    )
  }

  /* istanbul ignore: only used for test */
  [kConnect] (cb) {
    connect(this)
    this.once('connect', cb)
  }

  [kDispatch] (opts, handler) {
    const origin = opts.origin || this[kUrl].origin

    const request = this[kHTTPConnVersion] === 'h2'
      ? Request[kHTTP2BuildRequest](origin, opts, handler)
      : Request[kHTTP1BuildRequest](origin, opts, handler)

    this[kQueue].push(request)
    if (this[kResuming]) {
      // Do nothing.
    } else if (util.bodyLength(request.body) == null && util.isIterable(request.body)) {
      // Wait a tick in case stream/iterator is ended in the same tick.
      this[kResuming] = 1
      process.nextTick(resume, this)
    } else {
      resume(this, true)
    }

    if (this[kResuming] && this[kNeedDrain] !== 2 && this[kBusy]) {
      this[kNeedDrain] = 2
    }

    return this[kNeedDrain] < 2
  }

  async [kClose] () {
    // TODO: for H2 we need to gracefully flush the remaining enqueued
    // request and close each stream.
    return new Promise((resolve) => {
      if (!this[kSize]) {
        resolve(null)
      } else {
        this[kClosedResolve] = resolve
      }
    })
  }

  async [kDestroy] (err) {
    return new Promise((resolve) => {
      const requests = this[kQueue].splice(this[kPendingIdx])
      for (let i = 0; i < requests.length; i++) {
        const request = requests[i]
        errorRequest(this, request, err)
      }

      const callback = () => {
        if (this[kClosedResolve]) {
          // TODO (fix): Should we error here with ClientDestroyedError?
          this[kClosedResolve]()
          this[kClosedResolve] = null
        }
        resolve()
      }

      if (this[kHTTP2Session] != null) {
        util.destroy(this[kHTTP2Session], err)
        this[kHTTP2Session] = null
        this[kHTTP2SessionState] = null
      }

      if (!this[kSocket]) {
        queueMicrotask(callback)
      } else {
        util.destroy(this[kSocket].on('close', callback), err)
      }

      resume(this)
    })
  }
}

function onHttp2SessionError (err) {
  assert(err.code !== 'ERR_TLS_CERT_ALTNAME_INVALID')

  this[kSocket][kError] = err

  onError(this[kClient], err)
}

function onHttp2FrameError (type, code, id) {
  const err = new InformationalError(`HTTP/2: "frameError" received - type ${type}, code ${code}`)

  if (id === 0) {
    this[kSocket][kError] = err
    onError(this[kClient], err)
  }
}

function onHttp2SessionEnd () {
  util.destroy(this, new SocketError('other side closed'))
  util.destroy(this[kSocket], new SocketError('other side closed'))
}

function onHTTP2GoAway (code) {
  const client = this[kClient]
  const err = new InformationalError(`HTTP/2: "GOAWAY" frame received with code ${code}`)
  client[kSocket] = null
  client[kHTTP2Session] = null

  if (client.destroyed) {
    assert(this[kPending] === 0)

    // Fail entire queue.
    const requests = client[kQueue].splice(client[kRunningIdx])
    for (let i = 0; i < requests.length; i++) {
      const request = requests[i]
      errorRequest(this, request, err)
    }
  } else if (client[kRunning] > 0) {
    // Fail head of pipeline.
    const request = client[kQueue][client[kRunningIdx]]
    client[kQueue][client[kRunningIdx]++] = null

    errorRequest(client, request, err)
  }

  client[kPendingIdx] = client[kRunningIdx]

  assert(client[kRunning] === 0)

  client.emit('disconnect',
    client[kUrl],
    [client],
    err
  )

  resume(client)
}

const constants = __nccwpck_require__(953)
const createRedirectInterceptor = __nccwpck_require__(8861)
const EMPTY_BUF = Buffer.alloc(0)

async function lazyllhttp () {
  const llhttpWasmData = process.env.JEST_WORKER_ID ? __nccwpck_require__(1145) : undefined

  let mod
  try {
    mod = await WebAssembly.compile(Buffer.from(__nccwpck_require__(5627), 'base64'))
  } catch (e) {
    /* istanbul ignore next */

    // We could check if the error was caused by the simd option not
    // being enabled, but the occurring of this other error
    // * https://github.com/emscripten-core/emscripten/issues/11495
    // got me to remove that check to avoid breaking Node 12.
    mod = await WebAssembly.compile(Buffer.from(llhttpWasmData || __nccwpck_require__(1145), 'base64'))
  }

  return await WebAssembly.instantiate(mod, {
    env: {
      /* eslint-disable camelcase */

      wasm_on_url: (p, at, len) => {
        /* istanbul ignore next */
        return 0
      },
      wasm_on_status: (p, at, len) => {
        assert.strictEqual(currentParser.ptr, p)
        const start = at - currentBufferPtr + currentBufferRef.byteOffset
        return currentParser.onStatus(new FastBuffer(currentBufferRef.buffer, start, len)) || 0
      },
      wasm_on_message_begin: (p) => {
        assert.strictEqual(currentParser.ptr, p)
        return currentParser.onMessageBegin() || 0
      },
      wasm_on_header_field: (p, at, len) => {
        assert.strictEqual(currentParser.ptr, p)
        const start = at - currentBufferPtr + currentBufferRef.byteOffset
        return currentParser.onHeaderField(new FastBuffer(currentBufferRef.buffer, start, len)) || 0
      },
      wasm_on_header_value: (p, at, len) => {
        assert.strictEqual(currentParser.ptr, p)
        const start = at - currentBufferPtr + currentBufferRef.byteOffset
        return currentParser.onHeaderValue(new FastBuffer(currentBufferRef.buffer, start, len)) || 0
      },
      wasm_on_headers_complete: (p, statusCode, upgrade, shouldKeepAlive) => {
        assert.strictEqual(currentParser.ptr, p)
        return currentParser.onHeadersComplete(statusCode, Boolean(upgrade), Boolean(shouldKeepAlive)) || 0
      },
      wasm_on_body: (p, at, len) => {
        assert.strictEqual(currentParser.ptr, p)
        const start = at - currentBufferPtr + currentBufferRef.byteOffset
        return currentParser.onBody(new FastBuffer(currentBufferRef.buffer, start, len)) || 0
      },
      wasm_on_message_complete: (p) => {
        assert.strictEqual(currentParser.ptr, p)
        return currentParser.onMessageComplete() || 0
      }

      /* eslint-enable camelcase */
    }
  })
}

let llhttpInstance = null
let llhttpPromise = lazyllhttp()
llhttpPromise.catch()

let currentParser = null
let currentBufferRef = null
let currentBufferSize = 0
let currentBufferPtr = null

const TIMEOUT_HEADERS = 1
const TIMEOUT_BODY = 2
const TIMEOUT_IDLE = 3

class Parser {
  constructor (client, socket, { exports }) {
    assert(Number.isFinite(client[kMaxHeadersSize]) && client[kMaxHeadersSize] > 0)

    this.llhttp = exports
    this.ptr = this.llhttp.llhttp_alloc(constants.TYPE.RESPONSE)
    this.client = client
    this.socket = socket
    this.timeout = null
    this.timeoutValue = null
    this.timeoutType = null
    this.statusCode = null
    this.statusText = ''
    this.upgrade = false
    this.headers = []
    this.headersSize = 0
    this.headersMaxSize = client[kMaxHeadersSize]
    this.shouldKeepAlive = false
    this.paused = false
    this.resume = this.resume.bind(this)

    this.bytesRead = 0

    this.keepAlive = ''
    this.contentLength = ''
    this.connection = ''
    this.maxResponseSize = client[kMaxResponseSize]
  }

  setTimeout (value, type) {
    this.timeoutType = type
    if (value !== this.timeoutValue) {
      timers.clearTimeout(this.timeout)
      if (value) {
        this.timeout = timers.setTimeout(onParserTimeout, value, this)
        // istanbul ignore else: only for jest
        if (this.timeout.unref) {
          this.timeout.unref()
        }
      } else {
        this.timeout = null
      }
      this.timeoutValue = value
    } else if (this.timeout) {
      // istanbul ignore else: only for jest
      if (this.timeout.refresh) {
        this.timeout.refresh()
      }
    }
  }

  resume () {
    if (this.socket.destroyed || !this.paused) {
      return
    }

    assert(this.ptr != null)
    assert(currentParser == null)

    this.llhttp.llhttp_resume(this.ptr)

    assert(this.timeoutType === TIMEOUT_BODY)
    if (this.timeout) {
      // istanbul ignore else: only for jest
      if (this.timeout.refresh) {
        this.timeout.refresh()
      }
    }

    this.paused = false
    this.execute(this.socket.read() || EMPTY_BUF) // Flush parser.
    this.readMore()
  }

  readMore () {
    while (!this.paused && this.ptr) {
      const chunk = this.socket.read()
      if (chunk === null) {
        break
      }
      this.execute(chunk)
    }
  }

  execute (data) {
    assert(this.ptr != null)
    assert(currentParser == null)
    assert(!this.paused)

    const { socket, llhttp } = this

    if (data.length > currentBufferSize) {
      if (currentBufferPtr) {
        llhttp.free(currentBufferPtr)
      }
      currentBufferSize = Math.ceil(data.length / 4096) * 4096
      currentBufferPtr = llhttp.malloc(currentBufferSize)
    }

    new Uint8Array(llhttp.memory.buffer, currentBufferPtr, currentBufferSize).set(data)

    // Call `execute` on the wasm parser.
    // We pass the `llhttp_parser` pointer address, the pointer address of buffer view data,
    // and finally the length of bytes to parse.
    // The return value is an error code or `constants.ERROR.OK`.
    try {
      let ret

      try {
        currentBufferRef = data
        currentParser = this
        ret = llhttp.llhttp_execute(this.ptr, currentBufferPtr, data.length)
        /* eslint-disable-next-line no-useless-catch */
      } catch (err) {
        /* istanbul ignore next: difficult to make a test case for */
        throw err
      } finally {
        currentParser = null
        currentBufferRef = null
      }

      const offset = llhttp.llhttp_get_error_pos(this.ptr) - currentBufferPtr

      if (ret === constants.ERROR.PAUSED_UPGRADE) {
        this.onUpgrade(data.slice(offset))
      } else if (ret === constants.ERROR.PAUSED) {
        this.paused = true
        socket.unshift(data.slice(offset))
      } else if (ret !== constants.ERROR.OK) {
        const ptr = llhttp.llhttp_get_error_reason(this.ptr)
        let message = ''
        /* istanbul ignore else: difficult to make a test case for */
        if (ptr) {
          const len = new Uint8Array(llhttp.memory.buffer, ptr).indexOf(0)
          message =
            'Response does not match the HTTP/1.1 protocol (' +
            Buffer.from(llhttp.memory.buffer, ptr, len).toString() +
            ')'
        }
        throw new HTTPParserError(message, constants.ERROR[ret], data.slice(offset))
      }
    } catch (err) {
      util.destroy(socket, err)
    }
  }

  destroy () {
    assert(this.ptr != null)
    assert(currentParser == null)

    this.llhttp.llhttp_free(this.ptr)
    this.ptr = null

    timers.clearTimeout(this.timeout)
    this.timeout = null
    this.timeoutValue = null
    this.timeoutType = null

    this.paused = false
  }

  onStatus (buf) {
    this.statusText = buf.toString()
  }

  onMessageBegin () {
    const { socket, client } = this

    /* istanbul ignore next: difficult to make a test case for */
    if (socket.destroyed) {
      return -1
    }

    const request = client[kQueue][client[kRunningIdx]]
    if (!request) {
      return -1
    }
  }

  onHeaderField (buf) {
    const len = this.headers.length

    if ((len & 1) === 0) {
      this.headers.push(buf)
    } else {
      this.headers[len - 1] = Buffer.concat([this.headers[len - 1], buf])
    }

    this.trackHeader(buf.length)
  }

  onHeaderValue (buf) {
    let len = this.headers.length

    if ((len & 1) === 1) {
      this.headers.push(buf)
      len += 1
    } else {
      this.headers[len - 1] = Buffer.concat([this.headers[len - 1], buf])
    }

    const key = this.headers[len - 2]
    if (key.length === 10 && key.toString().toLowerCase() === 'keep-alive') {
      this.keepAlive += buf.toString()
    } else if (key.length === 10 && key.toString().toLowerCase() === 'connection') {
      this.connection += buf.toString()
    } else if (key.length === 14 && key.toString().toLowerCase() === 'content-length') {
      this.contentLength += buf.toString()
    }

    this.trackHeader(buf.length)
  }

  trackHeader (len) {
    this.headersSize += len
    if (this.headersSize >= this.headersMaxSize) {
      util.destroy(this.socket, new HeadersOverflowError())
    }
  }

  onUpgrade (head) {
    const { upgrade, client, socket, headers, statusCode } = this

    assert(upgrade)

    const request = client[kQueue][client[kRunningIdx]]
    assert(request)

    assert(!socket.destroyed)
    assert(socket === client[kSocket])
    assert(!this.paused)
    assert(request.upgrade || request.method === 'CONNECT')

    this.statusCode = null
    this.statusText = ''
    this.shouldKeepAlive = null

    assert(this.headers.length % 2 === 0)
    this.headers = []
    this.headersSize = 0

    socket.unshift(head)

    socket[kParser].destroy()
    socket[kParser] = null

    socket[kClient] = null
    socket[kError] = null
    socket
      .removeListener('error', onSocketError)
      .removeListener('readable', onSocketReadable)
      .removeListener('end', onSocketEnd)
      .removeListener('close', onSocketClose)

    client[kSocket] = null
    client[kQueue][client[kRunningIdx]++] = null
    client.emit('disconnect', client[kUrl], [client], new InformationalError('upgrade'))

    try {
      request.onUpgrade(statusCode, headers, socket)
    } catch (err) {
      util.destroy(socket, err)
    }

    resume(client)
  }

  onHeadersComplete (statusCode, upgrade, shouldKeepAlive) {
    const { client, socket, headers, statusText } = this

    /* istanbul ignore next: difficult to make a test case for */
    if (socket.destroyed) {
      return -1
    }

    const request = client[kQueue][client[kRunningIdx]]

    /* istanbul ignore next: difficult to make a test case for */
    if (!request) {
      return -1
    }

    assert(!this.upgrade)
    assert(this.statusCode < 200)

    if (statusCode === 100) {
      util.destroy(socket, new SocketError('bad response', util.getSocketInfo(socket)))
      return -1
    }

    /* this can only happen if server is misbehaving */
    if (upgrade && !request.upgrade) {
      util.destroy(socket, new SocketError('bad upgrade', util.getSocketInfo(socket)))
      return -1
    }

    assert.strictEqual(this.timeoutType, TIMEOUT_HEADERS)

    this.statusCode = statusCode
    this.shouldKeepAlive = (
      shouldKeepAlive ||
      // Override llhttp value which does not allow keepAlive for HEAD.
      (request.method === 'HEAD' && !socket[kReset] && this.connection.toLowerCase() === 'keep-alive')
    )

    if (this.statusCode >= 200) {
      const bodyTimeout = request.bodyTimeout != null
        ? request.bodyTimeout
        : client[kBodyTimeout]
      this.setTimeout(bodyTimeout, TIMEOUT_BODY)
    } else if (this.timeout) {
      // istanbul ignore else: only for jest
      if (this.timeout.refresh) {
        this.timeout.refresh()
      }
    }

    if (request.method === 'CONNECT') {
      assert(client[kRunning] === 1)
      this.upgrade = true
      return 2
    }

    if (upgrade) {
      assert(client[kRunning] === 1)
      this.upgrade = true
      return 2
    }

    assert(this.headers.length % 2 === 0)
    this.headers = []
    this.headersSize = 0

    if (this.shouldKeepAlive && client[kPipelining]) {
      const keepAliveTimeout = this.keepAlive ? util.parseKeepAliveTimeout(this.keepAlive) : null

      if (keepAliveTimeout != null) {
        const timeout = Math.min(
          keepAliveTimeout - client[kKeepAliveTimeoutThreshold],
          client[kKeepAliveMaxTimeout]
        )
        if (timeout <= 0) {
          socket[kReset] = true
        } else {
          client[kKeepAliveTimeoutValue] = timeout
        }
      } else {
        client[kKeepAliveTimeoutValue] = client[kKeepAliveDefaultTimeout]
      }
    } else {
      // Stop more requests from being dispatched.
      socket[kReset] = true
    }

    let pause
    try {
      pause = request.onHeaders(statusCode, headers, this.resume, statusText) === false
    } catch (err) {
      util.destroy(socket, err)
      return -1
    }

    if (request.method === 'HEAD') {
      return 1
    }

    if (statusCode < 200) {
      return 1
    }

    if (socket[kBlocking]) {
      socket[kBlocking] = false
      resume(client)
    }

    return pause ? constants.ERROR.PAUSED : 0
  }

  onBody (buf) {
    const { client, socket, statusCode, maxResponseSize } = this

    if (socket.destroyed) {
      return -1
    }

    const request = client[kQueue][client[kRunningIdx]]
    assert(request)

    assert.strictEqual(this.timeoutType, TIMEOUT_BODY)
    if (this.timeout) {
      // istanbul ignore else: only for jest
      if (this.timeout.refresh) {
        this.timeout.refresh()
      }
    }

    assert(statusCode >= 200)

    if (maxResponseSize > -1 && this.bytesRead + buf.length > maxResponseSize) {
      util.destroy(socket, new ResponseExceededMaxSizeError())
      return -1
    }

    this.bytesRead += buf.length

    try {
      if (request.onData(buf) === false) {
        return constants.ERROR.PAUSED
      }
    } catch (err) {
      util.destroy(socket, err)
      return -1
    }
  }

  onMessageComplete () {
    const { client, socket, statusCode, upgrade, headers, contentLength, bytesRead, shouldKeepAlive } = this

    if (socket.destroyed && (!statusCode || shouldKeepAlive)) {
      return -1
    }

    if (upgrade) {
      return
    }

    const request = client[kQueue][client[kRunningIdx]]
    assert(request)

    assert(statusCode >= 100)

    this.statusCode = null
    this.statusText = ''
    this.bytesRead = 0
    this.contentLength = ''
    this.keepAlive = ''
    this.connection = ''

    assert(this.headers.length % 2 === 0)
    this.headers = []
    this.headersSize = 0

    if (statusCode < 200) {
      return
    }

    /* istanbul ignore next: should be handled by llhttp? */
    if (request.method !== 'HEAD' && contentLength && bytesRead !== parseInt(contentLength, 10)) {
      util.destroy(socket, new ResponseContentLengthMismatchError())
      return -1
    }

    try {
      request.onComplete(headers)
    } catch (err) {
      errorRequest(client, request, err)
    }

    client[kQueue][client[kRunningIdx]++] = null

    if (socket[kWriting]) {
      assert.strictEqual(client[kRunning], 0)
      // Response completed before request.
      util.destroy(socket, new InformationalError('reset'))
      return constants.ERROR.PAUSED
    } else if (!shouldKeepAlive) {
      util.destroy(socket, new InformationalError('reset'))
      return constants.ERROR.PAUSED
    } else if (socket[kReset] && client[kRunning] === 0) {
      // Destroy socket once all requests have completed.
      // The request at the tail of the pipeline is the one
      // that requested reset and no further requests should
      // have been queued since then.
      util.destroy(socket, new InformationalError('reset'))
      return constants.ERROR.PAUSED
    } else if (client[kPipelining] === 1) {
      // We must wait a full event loop cycle to reuse this socket to make sure
      // that non-spec compliant servers are not closing the connection even if they
      // said they won't.
      setImmediate(resume, client)
    } else {
      resume(client)
    }
  }
}

function onParserTimeout (parser) {
  const { socket, timeoutType, client } = parser

  /* istanbul ignore else */
  if (timeoutType === TIMEOUT_HEADERS) {
    if (!socket[kWriting] || socket.writableNeedDrain || client[kRunning] > 1) {
      assert(!parser.paused, 'cannot be paused while waiting for headers')
      util.destroy(socket, new HeadersTimeoutError())
    }
  } else if (timeoutType === TIMEOUT_BODY) {
    if (!parser.paused) {
      util.destroy(socket, new BodyTimeoutError())
    }
  } else if (timeoutType === TIMEOUT_IDLE) {
    assert(client[kRunning] === 0 && client[kKeepAliveTimeoutValue])
    util.destroy(socket, new InformationalError('socket idle timeout'))
  }
}

function onSocketReadable () {
  const { [kParser]: parser } = this
  parser.readMore()
}

function onSocketError (err) {
  const { [kClient]: client, [kParser]: parser } = this

  assert(err.code !== 'ERR_TLS_CERT_ALTNAME_INVALID')

  if (client[kHTTPConnVersion] !== 'h2') {
    // On Mac OS, we get an ECONNRESET even if there is a full body to be forwarded
    // to the user.
    if (err.code === 'ECONNRESET' && parser.statusCode && !parser.shouldKeepAlive) {
      // We treat all incoming data so for as a valid response.
      parser.onMessageComplete()
      return
    }
  }

  this[kError] = err

  onError(this[kClient], err)
}

function onError (client, err) {
  if (
    client[kRunning] === 0 &&
    err.code !== 'UND_ERR_INFO' &&
    err.code !== 'UND_ERR_SOCKET'
  ) {
    // Error is not caused by running request and not a recoverable
    // socket error.

    assert(client[kPendingIdx] === client[kRunningIdx])

    const requests = client[kQueue].splice(client[kRunningIdx])
    for (let i = 0; i < requests.length; i++) {
      const request = requests[i]
      errorRequest(client, request, err)
    }
    assert(client[kSize] === 0)
  }
}

function onSocketEnd () {
  const { [kParser]: parser, [kClient]: client } = this

  if (client[kHTTPConnVersion] !== 'h2') {
    if (parser.statusCode && !parser.shouldKeepAlive) {
      // We treat all incoming data so far as a valid response.
      parser.onMessageComplete()
      return
    }
  }

  util.destroy(this, new SocketError('other side closed', util.getSocketInfo(this)))
}

function onSocketClose () {
  const { [kClient]: client, [kParser]: parser } = this

  if (client[kHTTPConnVersion] === 'h1' && parser) {
    if (!this[kError] && parser.statusCode && !parser.shouldKeepAlive) {
      // We treat all incoming data so far as a valid response.
      parser.onMessageComplete()
    }

    this[kParser].destroy()
    this[kParser] = null
  }

  const err = this[kError] || new SocketError('closed', util.getSocketInfo(this))

  client[kSocket] = null

  if (client.destroyed) {
    assert(client[kPending] === 0)

    // Fail entire queue.
    const requests = client[kQueue].splice(client[kRunningIdx])
    for (let i = 0; i < requests.length; i++) {
      const request = requests[i]
      errorRequest(client, request, err)
    }
  } else if (client[kRunning] > 0 && err.code !== 'UND_ERR_INFO') {
    // Fail head of pipeline.
    const request = client[kQueue][client[kRunningIdx]]
    client[kQueue][client[kRunningIdx]++] = null

    errorRequest(client, request, err)
  }

  client[kPendingIdx] = client[kRunningIdx]

  assert(client[kRunning] === 0)

  client.emit('disconnect', client[kUrl], [client], err)

  resume(client)
}

async function connect (client) {
  assert(!client[kConnecting])
  assert(!client[kSocket])

  let { host, hostname, protocol, port } = client[kUrl]

  // Resolve ipv6
  if (hostname[0] === '[') {
    const idx = hostname.indexOf(']')

    assert(idx !== -1)
    const ip = hostname.substr(1, idx - 1)

    assert(net.isIP(ip))
    hostname = ip
  }

  client[kConnecting] = true

  if (channels.beforeConnect.hasSubscribers) {
    channels.beforeConnect.publish({
      connectParams: {
        host,
        hostname,
        protocol,
        port,
        servername: client[kServerName],
        localAddress: client[kLocalAddress]
      },
      connector: client[kConnector]
    })
  }

  try {
    const socket = await new Promise((resolve, reject) => {
      client[kConnector]({
        host,
        hostname,
        protocol,
        port,
        servername: client[kServerName],
        localAddress: client[kLocalAddress]
      }, (err, socket) => {
        if (err) {
          reject(err)
        } else {
          resolve(socket)
        }
      })
    })

    if (client.destroyed) {
      util.destroy(socket.on('error', () => {}), new ClientDestroyedError())
      return
    }

    client[kConnecting] = false

    assert(socket)

    const isH2 = socket.alpnProtocol === 'h2'
    if (isH2) {
      if (!h2ExperimentalWarned) {
        h2ExperimentalWarned = true
        process.emitWarning('H2 support is experimental, expect them to change at any time.', {
          code: 'UNDICI-H2'
        })
      }

      const session = http2.connect(client[kUrl], {
        createConnection: () => socket,
        peerMaxConcurrentStreams: client[kHTTP2SessionState].maxConcurrentStreams
      })

      client[kHTTPConnVersion] = 'h2'
      session[kClient] = client
      session[kSocket] = socket
      session.on('error', onHttp2SessionError)
      session.on('frameError', onHttp2FrameError)
      session.on('end', onHttp2SessionEnd)
      session.on('goaway', onHTTP2GoAway)
      session.on('close', onSocketClose)
      session.unref()

      client[kHTTP2Session] = session
      socket[kHTTP2Session] = session
    } else {
      if (!llhttpInstance) {
        llhttpInstance = await llhttpPromise
        llhttpPromise = null
      }

      socket[kNoRef] = false
      socket[kWriting] = false
      socket[kReset] = false
      socket[kBlocking] = false
      socket[kParser] = new Parser(client, socket, llhttpInstance)
    }

    socket[kCounter] = 0
    socket[kMaxRequests] = client[kMaxRequests]
    socket[kClient] = client
    socket[kError] = null

    socket
      .on('error', onSocketError)
      .on('readable', onSocketReadable)
      .on('end', onSocketEnd)
      .on('close', onSocketClose)

    client[kSocket] = socket

    if (channels.connected.hasSubscribers) {
      channels.connected.publish({
        connectParams: {
          host,
          hostname,
          protocol,
          port,
          servername: client[kServerName],
          localAddress: client[kLocalAddress]
        },
        connector: client[kConnector],
        socket
      })
    }
    client.emit('connect', client[kUrl], [client])
  } catch (err) {
    if (client.destroyed) {
      return
    }

    client[kConnecting] = false

    if (channels.connectError.hasSubscribers) {
      channels.connectError.publish({
        connectParams: {
          host,
          hostname,
          protocol,
          port,
          servername: client[kServerName],
          localAddress: client[kLocalAddress]
        },
        connector: client[kConnector],
        error: err
      })
    }

    if (err.code === 'ERR_TLS_CERT_ALTNAME_INVALID') {
      assert(client[kRunning] === 0)
      while (client[kPending] > 0 && client[kQueue][client[kPendingIdx]].servername === client[kServerName]) {
        const request = client[kQueue][client[kPendingIdx]++]
        errorRequest(client, request, err)
      }
    } else {
      onError(client, err)
    }

    client.emit('connectionError', client[kUrl], [client], err)
  }

  resume(client)
}

function emitDrain (client) {
  client[kNeedDrain] = 0
  client.emit('drain', client[kUrl], [client])
}

function resume (client, sync) {
  if (client[kResuming] === 2) {
    return
  }

  client[kResuming] = 2

  _resume(client, sync)
  client[kResuming] = 0

  if (client[kRunningIdx] > 256) {
    client[kQueue].splice(0, client[kRunningIdx])
    client[kPendingIdx] -= client[kRunningIdx]
    client[kRunningIdx] = 0
  }
}

function _resume (client, sync) {
  while (true) {
    if (client.destroyed) {
      assert(client[kPending] === 0)
      return
    }

    if (client[kClosedResolve] && !client[kSize]) {
      client[kClosedResolve]()
      client[kClosedResolve] = null
      return
    }

    const socket = client[kSocket]

    if (socket && !socket.destroyed && socket.alpnProtocol !== 'h2') {
      if (client[kSize] === 0) {
        if (!socket[kNoRef] && socket.unref) {
          socket.unref()
          socket[kNoRef] = true
        }
      } else if (socket[kNoRef] && socket.ref) {
        socket.ref()
        socket[kNoRef] = false
      }

      if (client[kSize] === 0) {
        if (socket[kParser].timeoutType !== TIMEOUT_IDLE) {
          socket[kParser].setTimeout(client[kKeepAliveTimeoutValue], TIMEOUT_IDLE)
        }
      } else if (client[kRunning] > 0 && socket[kParser].statusCode < 200) {
        if (socket[kParser].timeoutType !== TIMEOUT_HEADERS) {
          const request = client[kQueue][client[kRunningIdx]]
          const headersTimeout = request.headersTimeout != null
            ? request.headersTimeout
            : client[kHeadersTimeout]
          socket[kParser].setTimeout(headersTimeout, TIMEOUT_HEADERS)
        }
      }
    }

    if (client[kBusy]) {
      client[kNeedDrain] = 2
    } else if (client[kNeedDrain] === 2) {
      if (sync) {
        client[kNeedDrain] = 1
        process.nextTick(emitDrain, client)
      } else {
        emitDrain(client)
      }
      continue
    }

    if (client[kPending] === 0) {
      return
    }

    if (client[kRunning] >= (client[kPipelining] || 1)) {
      return
    }

    const request = client[kQueue][client[kPendingIdx]]

    if (client[kUrl].protocol === 'https:' && client[kServerName] !== request.servername) {
      if (client[kRunning] > 0) {
        return
      }

      client[kServerName] = request.servername

      if (socket && socket.servername !== request.servername) {
        util.destroy(socket, new InformationalError('servername changed'))
        return
      }
    }

    if (client[kConnecting]) {
      return
    }

    if (!socket && !client[kHTTP2Session]) {
      connect(client)
      return
    }

    if (socket.destroyed || socket[kWriting] || socket[kReset] || socket[kBlocking]) {
      return
    }

    if (client[kRunning] > 0 && !request.idempotent) {
      // Non-idempotent request cannot be retried.
      // Ensure that no other requests are inflight and
      // could cause failure.
      return
    }

    if (client[kRunning] > 0 && (request.upgrade || request.method === 'CONNECT')) {
      // Don't dispatch an upgrade until all preceding requests have completed.
      // A misbehaving server might upgrade the connection before all pipelined
      // request has completed.
      return
    }

    if (util.isStream(request.body) && util.bodyLength(request.body) === 0) {
      request.body
        .on('data', /* istanbul ignore next */ function () {
          /* istanbul ignore next */
          assert(false)
        })
        .on('error', function (err) {
          errorRequest(client, request, err)
        })
        .on('end', function () {
          util.destroy(this)
        })

      request.body = null
    }

    if (client[kRunning] > 0 &&
      (util.isStream(request.body) || util.isAsyncIterable(request.body))) {
      // Request with stream or iterator body can error while other requests
      // are inflight and indirectly error those as well.
      // Ensure this doesn't happen by waiting for inflight
      // to complete before dispatching.

      // Request with stream or iterator body cannot be retried.
      // Ensure that no other requests are inflight and
      // could cause failure.
      return
    }

    if (!request.aborted && write(client, request)) {
      client[kPendingIdx]++
    } else {
      client[kQueue].splice(client[kPendingIdx], 1)
    }
  }
}

function write (client, request) {
  if (client[kHTTPConnVersion] === 'h2') {
    writeH2(client, client[kHTTP2Session], request)
    return
  }

  const { body, method, path, host, upgrade, headers, blocking, reset } = request

  // https://tools.ietf.org/html/rfc7231#section-4.3.1
  // https://tools.ietf.org/html/rfc7231#section-4.3.2
  // https://tools.ietf.org/html/rfc7231#section-4.3.5

  // Sending a payload body on a request that does not
  // expect it can cause undefined behavior on some
  // servers and corrupt connection state. Do not
  // re-use the connection for further requests.

  const expectsPayload = (
    method === 'PUT' ||
    method === 'POST' ||
    method === 'PATCH'
  )

  if (body && typeof body.read === 'function') {
    // Try to read EOF in order to get length.
    body.read(0)
  }

  let contentLength = util.bodyLength(body)

  if (contentLength === null) {
    contentLength = request.contentLength
  }

  if (contentLength === 0 && !expectsPayload) {
    // https://tools.ietf.org/html/rfc7230#section-3.3.2
    // A user agent SHOULD NOT send a Content-Length header field when
    // the request message does not contain a payload body and the method
    // semantics do not anticipate such a body.

    contentLength = null
  }

  if (request.contentLength !== null && request.contentLength !== contentLength) {
    if (client[kStrictContentLength]) {
      errorRequest(client, request, new RequestContentLengthMismatchError())
      return false
    }

    process.emitWarning(new RequestContentLengthMismatchError())
  }

  const socket = client[kSocket]

  try {
    request.onConnect((err) => {
      if (request.aborted || request.completed) {
        return
      }

      errorRequest(client, request, err || new RequestAbortedError())

      util.destroy(socket, new InformationalError('aborted'))
    })
  } catch (err) {
    errorRequest(client, request, err)
  }

  if (request.aborted) {
    return false
  }

  if (method === 'HEAD') {
    // https://github.com/mcollina/undici/issues/258
    // Close after a HEAD request to interop with misbehaving servers
    // that may send a body in the response.

    socket[kReset] = true
  }

  if (upgrade || method === 'CONNECT') {
    // On CONNECT or upgrade, block pipeline from dispatching further
    // requests on this connection.

    socket[kReset] = true
  }

  if (reset != null) {
    socket[kReset] = reset
  }

  if (client[kMaxRequests] && socket[kCounter]++ >= client[kMaxRequests]) {
    socket[kReset] = true
  }

  if (blocking) {
    socket[kBlocking] = true
  }

  let header = `${method} ${path} HTTP/1.1\r\n`

  if (typeof host === 'string') {
    header += `host: ${host}\r\n`
  } else {
    header += client[kHostHeader]
  }

  if (upgrade) {
    header += `connection: upgrade\r\nupgrade: ${upgrade}\r\n`
  } else if (client[kPipelining] && !socket[kReset]) {
    header += 'connection: keep-alive\r\n'
  } else {
    header += 'connection: close\r\n'
  }

  if (headers) {
    header += headers
  }

  if (channels.sendHeaders.hasSubscribers) {
    channels.sendHeaders.publish({ request, headers: header, socket })
  }

  /* istanbul ignore else: assertion */
  if (!body) {
    if (contentLength === 0) {
      socket.write(`${header}content-length: 0\r\n\r\n`, 'latin1')
    } else {
      assert(contentLength === null, 'no body must not have content length')
      socket.write(`${header}\r\n`, 'latin1')
    }
    request.onRequestSent()
  } else if (util.isBuffer(body)) {
    assert(contentLength === body.byteLength, 'buffer body must have content length')

    socket.cork()
    socket.write(`${header}content-length: ${contentLength}\r\n\r\n`, 'latin1')
    socket.write(body)
    socket.uncork()
    request.onBodySent(body)
    request.onRequestSent()
    if (!expectsPayload) {
      socket[kReset] = true
    }
  } else if (util.isBlobLike(body)) {
    if (typeof body.stream === 'function') {
      writeIterable({ body: body.stream(), client, request, socket, contentLength, header, expectsPayload })
    } else {
      writeBlob({ body, client, request, socket, contentLength, header, expectsPayload })
    }
  } else if (util.isStream(body)) {
    writeStream({ body, client, request, socket, contentLength, header, expectsPayload })
  } else if (util.isIterable(body)) {
    writeIterable({ body, client, request, socket, contentLength, header, expectsPayload })
  } else {
    assert(false)
  }

  return true
}

function writeH2 (client, session, request) {
  const { body, method, path, host, upgrade, expectContinue, signal, headers: reqHeaders } = request

  let headers
  if (typeof reqHeaders === 'string') headers = Request[kHTTP2CopyHeaders](reqHeaders.trim())
  else headers = reqHeaders

  if (upgrade) {
    errorRequest(client, request, new Error('Upgrade not supported for H2'))
    return false
  }

  try {
    // TODO(HTTP/2): Should we call onConnect immediately or on stream ready event?
    request.onConnect((err) => {
      if (request.aborted || request.completed) {
        return
      }

      errorRequest(client, request, err || new RequestAbortedError())
    })
  } catch (err) {
    errorRequest(client, request, err)
  }

  if (request.aborted) {
    return false
  }

  let stream
  const h2State = client[kHTTP2SessionState]

  headers[HTTP2_HEADER_AUTHORITY] = host || client[kHost]
  headers[HTTP2_HEADER_METHOD] = method

  if (method === 'CONNECT') {
    session.ref()
    // we are already connected, streams are pending, first request
    // will create a new stream. We trigger a request to create the stream and wait until
    // `ready` event is triggered
    // We disabled endStream to allow the user to write to the stream
    stream = session.request(headers, { endStream: false, signal })

    if (stream.id && !stream.pending) {
      request.onUpgrade(null, null, stream)
      ++h2State.openStreams
    } else {
      stream.once('ready', () => {
        request.onUpgrade(null, null, stream)
        ++h2State.openStreams
      })
    }

    stream.once('close', () => {
      h2State.openStreams -= 1
      // TODO(HTTP/2): unref only if current streams count is 0
      if (h2State.openStreams === 0) session.unref()
    })

    return true
  }

  // https://tools.ietf.org/html/rfc7540#section-8.3
  // :path and :scheme headers must be omited when sending CONNECT

  headers[HTTP2_HEADER_PATH] = path
  headers[HTTP2_HEADER_SCHEME] = 'https'

  // https://tools.ietf.org/html/rfc7231#section-4.3.1
  // https://tools.ietf.org/html/rfc7231#section-4.3.2
  // https://tools.ietf.org/html/rfc7231#section-4.3.5

  // Sending a payload body on a request that does not
  // expect it can cause undefined behavior on some
  // servers and corrupt connection state. Do not
  // re-use the connection for further requests.

  const expectsPayload = (
    method === 'PUT' ||
    method === 'POST' ||
    method === 'PATCH'
  )

  if (body && typeof body.read === 'function') {
    // Try to read EOF in order to get length.
    body.read(0)
  }

  let contentLength = util.bodyLength(body)

  if (contentLength == null) {
    contentLength = request.contentLength
  }

  if (contentLength === 0 || !expectsPayload) {
    // https://tools.ietf.org/html/rfc7230#section-3.3.2
    // A user agent SHOULD NOT send a Content-Length header field when
    // the request message does not contain a payload body and the method
    // semantics do not anticipate such a body.

    contentLength = null
  }

  if (request.contentLength != null && request.contentLength !== contentLength) {
    if (client[kStrictContentLength]) {
      errorRequest(client, request, new RequestContentLengthMismatchError())
      return false
    }

    process.emitWarning(new RequestContentLengthMismatchError())
  }

  if (contentLength != null) {
    assert(body, 'no body must not have content length')
    headers[HTTP2_HEADER_CONTENT_LENGTH] = `${contentLength}`
  }

  session.ref()

  const shouldEndStream = method === 'GET' || method === 'HEAD'
  if (expectContinue) {
    headers[HTTP2_HEADER_EXPECT] = '100-continue'
    /**
     * @type {import('node:http2').ClientHttp2Stream}
     */
    stream = session.request(headers, { endStream: shouldEndStream, signal })

    stream.once('continue', writeBodyH2)
  } else {
    /** @type {import('node:http2').ClientHttp2Stream} */
    stream = session.request(headers, {
      endStream: shouldEndStream,
      signal
    })
    writeBodyH2()
  }

  // Increment counter as we have new several streams open
  ++h2State.openStreams

  stream.once('response', headers => {
    if (request.onHeaders(Number(headers[HTTP2_HEADER_STATUS]), headers, stream.resume.bind(stream), '') === false) {
      stream.pause()
    }
  })

  stream.once('end', () => {
    request.onComplete([])
  })

  stream.on('data', (chunk) => {
    if (request.onData(chunk) === false) stream.pause()
  })

  stream.once('close', () => {
    h2State.openStreams -= 1
    // TODO(HTTP/2): unref only if current streams count is 0
    if (h2State.openStreams === 0) session.unref()
  })

  stream.once('error', function (err) {
    if (client[kHTTP2Session] && !client[kHTTP2Session].destroyed && !this.closed && !this.destroyed) {
      h2State.streams -= 1
      util.destroy(stream, err)
    }
  })

  stream.once('frameError', (type, code) => {
    const err = new InformationalError(`HTTP/2: "frameError" received - type ${type}, code ${code}`)
    errorRequest(client, request, err)

    if (client[kHTTP2Session] && !client[kHTTP2Session].destroyed && !this.closed && !this.destroyed) {
      h2State.streams -= 1
      util.destroy(stream, err)
    }
  })

  // stream.on('aborted', () => {
  //   // TODO(HTTP/2): Support aborted
  // })

  // stream.on('timeout', () => {
  //   // TODO(HTTP/2): Support timeout
  // })

  // stream.on('push', headers => {
  //   // TODO(HTTP/2): Suppor push
  // })

  // stream.on('trailers', headers => {
  //   // TODO(HTTP/2): Support trailers
  // })

  return true

  function writeBodyH2 () {
    /* istanbul ignore else: assertion */
    if (!body) {
      request.onRequestSent()
    } else if (util.isBuffer(body)) {
      assert(contentLength === body.byteLength, 'buffer body must have content length')
      stream.cork()
      stream.write(body)
      stream.uncork()
      stream.end()
      request.onBodySent(body)
      request.onRequestSent()
    } else if (util.isBlobLike(body)) {
      if (typeof body.stream === 'function') {
        writeIterable({
          client,
          request,
          contentLength,
          h2stream: stream,
          expectsPayload,
          body: body.stream(),
          socket: client[kSocket],
          header: ''
        })
      } else {
        writeBlob({
          body,
          client,
          request,
          contentLength,
          expectsPayload,
          h2stream: stream,
          header: '',
          socket: client[kSocket]
        })
      }
    } else if (util.isStream(body)) {
      writeStream({
        body,
        client,
        request,
        contentLength,
        expectsPayload,
        socket: client[kSocket],
        h2stream: stream,
        header: ''
      })
    } else if (util.isIterable(body)) {
      writeIterable({
        body,
        client,
        request,
        contentLength,
        expectsPayload,
        header: '',
        h2stream: stream,
        socket: client[kSocket]
      })
    } else {
      assert(false)
    }
  }
}

function writeStream ({ h2stream, body, client, request, socket, contentLength, header, expectsPayload }) {
  assert(contentLength !== 0 || client[kRunning] === 0, 'stream body cannot be pipelined')

  if (client[kHTTPConnVersion] === 'h2') {
    // For HTTP/2, is enough to pipe the stream
    const pipe = pipeline(
      body,
      h2stream,
      (err) => {
        if (err) {
          util.destroy(body, err)
          util.destroy(h2stream, err)
        } else {
          request.onRequestSent()
        }
      }
    )

    pipe.on('data', onPipeData)
    pipe.once('end', () => {
      pipe.removeListener('data', onPipeData)
      util.destroy(pipe)
    })

    function onPipeData (chunk) {
      request.onBodySent(chunk)
    }

    return
  }

  let finished = false

  const writer = new AsyncWriter({ socket, request, contentLength, client, expectsPayload, header })

  const onData = function (chunk) {
    if (finished) {
      return
    }

    try {
      if (!writer.write(chunk) && this.pause) {
        this.pause()
      }
    } catch (err) {
      util.destroy(this, err)
    }
  }
  const onDrain = function () {
    if (finished) {
      return
    }

    if (body.resume) {
      body.resume()
    }
  }
  const onAbort = function () {
    onFinished(new RequestAbortedError())
  }
  const onFinished = function (err) {
    if (finished) {
      return
    }

    finished = true

    assert(socket.destroyed || (socket[kWriting] && client[kRunning] <= 1))

    socket
      .off('drain', onDrain)
      .off('error', onFinished)

    body
      .removeListener('data', onData)
      .removeListener('end', onFinished)
      .removeListener('error', onFinished)
      .removeListener('close', onAbort)

    if (!err) {
      try {
        writer.end()
      } catch (er) {
        err = er
      }
    }

    writer.destroy(err)

    if (err && (err.code !== 'UND_ERR_INFO' || err.message !== 'reset')) {
      util.destroy(body, err)
    } else {
      util.destroy(body)
    }
  }

  body
    .on('data', onData)
    .on('end', onFinished)
    .on('error', onFinished)
    .on('close', onAbort)

  if (body.resume) {
    body.resume()
  }

  socket
    .on('drain', onDrain)
    .on('error', onFinished)
}

async function writeBlob ({ h2stream, body, client, request, socket, contentLength, header, expectsPayload }) {
  assert(contentLength === body.size, 'blob body must have content length')

  const isH2 = client[kHTTPConnVersion] === 'h2'
  try {
    if (contentLength != null && contentLength !== body.size) {
      throw new RequestContentLengthMismatchError()
    }

    const buffer = Buffer.from(await body.arrayBuffer())

    if (isH2) {
      h2stream.cork()
      h2stream.write(buffer)
      h2stream.uncork()
    } else {
      socket.cork()
      socket.write(`${header}content-length: ${contentLength}\r\n\r\n`, 'latin1')
      socket.write(buffer)
      socket.uncork()
    }

    request.onBodySent(buffer)
    request.onRequestSent()

    if (!expectsPayload) {
      socket[kReset] = true
    }

    resume(client)
  } catch (err) {
    util.destroy(isH2 ? h2stream : socket, err)
  }
}

async function writeIterable ({ h2stream, body, client, request, socket, contentLength, header, expectsPayload }) {
  assert(contentLength !== 0 || client[kRunning] === 0, 'iterator body cannot be pipelined')

  let callback = null
  function onDrain () {
    if (callback) {
      const cb = callback
      callback = null
      cb()
    }
  }

  const waitForDrain = () => new Promise((resolve, reject) => {
    assert(callback === null)

    if (socket[kError]) {
      reject(socket[kError])
    } else {
      callback = resolve
    }
  })

  if (client[kHTTPConnVersion] === 'h2') {
    h2stream
      .on('close', onDrain)
      .on('drain', onDrain)

    try {
      // It's up to the user to somehow abort the async iterable.
      for await (const chunk of body) {
        if (socket[kError]) {
          throw socket[kError]
        }

        const res = h2stream.write(chunk)
        request.onBodySent(chunk)
        if (!res) {
          await waitForDrain()
        }
      }
    } catch (err) {
      h2stream.destroy(err)
    } finally {
      request.onRequestSent()
      h2stream.end()
      h2stream
        .off('close', onDrain)
        .off('drain', onDrain)
    }

    return
  }

  socket
    .on('close', onDrain)
    .on('drain', onDrain)

  const writer = new AsyncWriter({ socket, request, contentLength, client, expectsPayload, header })
  try {
    // It's up to the user to somehow abort the async iterable.
    for await (const chunk of body) {
      if (socket[kError]) {
        throw socket[kError]
      }

      if (!writer.write(chunk)) {
        await waitForDrain()
      }
    }

    writer.end()
  } catch (err) {
    writer.destroy(err)
  } finally {
    socket
      .off('close', onDrain)
      .off('drain', onDrain)
  }
}

class AsyncWriter {
  constructor ({ socket, request, contentLength, client, expectsPayload, header }) {
    this.socket = socket
    this.request = request
    this.contentLength = contentLength
    this.client = client
    this.bytesWritten = 0
    this.expectsPayload = expectsPayload
    this.header = header

    socket[kWriting] = true
  }

  write (chunk) {
    const { socket, request, contentLength, client, bytesWritten, expectsPayload, header } = this

    if (socket[kError]) {
      throw socket[kError]
    }

    if (socket.destroyed) {
      return false
    }

    const len = Buffer.byteLength(chunk)
    if (!len) {
      return true
    }

    // We should defer writing chunks.
    if (contentLength !== null && bytesWritten + len > contentLength) {
      if (client[kStrictContentLength]) {
        throw new RequestContentLengthMismatchError()
      }

      process.emitWarning(new RequestContentLengthMismatchError())
    }

    socket.cork()

    if (bytesWritten === 0) {
      if (!expectsPayload) {
        socket[kReset] = true
      }

      if (contentLength === null) {
        socket.write(`${header}transfer-encoding: chunked\r\n`, 'latin1')
      } else {
        socket.write(`${header}content-length: ${contentLength}\r\n\r\n`, 'latin1')
      }
    }

    if (contentLength === null) {
      socket.write(`\r\n${len.toString(16)}\r\n`, 'latin1')
    }

    this.bytesWritten += len

    const ret = socket.write(chunk)

    socket.uncork()

    request.onBodySent(chunk)

    if (!ret) {
      if (socket[kParser].timeout && socket[kParser].timeoutType === TIMEOUT_HEADERS) {
        // istanbul ignore else: only for jest
        if (socket[kParser].timeout.refresh) {
          socket[kParser].timeout.refresh()
        }
      }
    }

    return ret
  }

  end () {
    const { socket, contentLength, client, bytesWritten, expectsPayload, header, request } = this
    request.onRequestSent()

    socket[kWriting] = false

    if (socket[kError]) {
      throw socket[kError]
    }

    if (socket.destroyed) {
      return
    }

    if (bytesWritten === 0) {
      if (expectsPayload) {
        // https://tools.ietf.org/html/rfc7230#section-3.3.2
        // A user agent SHOULD send a Content-Length in a request message when
        // no Transfer-Encoding is sent and the request method defines a meaning
        // for an enclosed payload body.

        socket.write(`${header}content-length: 0\r\n\r\n`, 'latin1')
      } else {
        socket.write(`${header}\r\n`, 'latin1')
      }
    } else if (contentLength === null) {
      socket.write('\r\n0\r\n\r\n', 'latin1')
    }

    if (contentLength !== null && bytesWritten !== contentLength) {
      if (client[kStrictContentLength]) {
        throw new RequestContentLengthMismatchError()
      } else {
        process.emitWarning(new RequestContentLengthMismatchError())
      }
    }

    if (socket[kParser].timeout && socket[kParser].timeoutType === TIMEOUT_HEADERS) {
      // istanbul ignore else: only for jest
      if (socket[kParser].timeout.refresh) {
        socket[kParser].timeout.refresh()
      }
    }

    resume(client)
  }

  destroy (err) {
    const { socket, client } = this

    socket[kWriting] = false

    if (err) {
      assert(client[kRunning] <= 1, 'pipeline should only contain this request')
      util.destroy(socket, err)
    }
  }
}

function errorRequest (client, request, err) {
  try {
    request.onError(err)
    assert(request.aborted)
  } catch (err) {
    client.emit('error', err)
  }
}

module.exports = Client


/***/ }),

/***/ 6436:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


/* istanbul ignore file: only for Node 12 */

const { kConnected, kSize } = __nccwpck_require__(2785)

class CompatWeakRef {
  constructor (value) {
    this.value = value
  }

  deref () {
    return this.value[kConnected] === 0 && this.value[kSize] === 0
      ? undefined
      : this.value
  }
}

class CompatFinalizer {
  constructor (finalizer) {
    this.finalizer = finalizer
  }

  register (dispatcher, key) {
    if (dispatcher.on) {
      dispatcher.on('disconnect', () => {
        if (dispatcher[kConnected] === 0 && dispatcher[kSize] === 0) {
          this.finalizer(key)
        }
      })
    }
  }
}

module.exports = function () {
  // FIXME: remove workaround when the Node bug is fixed
  // https://github.com/nodejs/node/issues/49344#issuecomment-1741776308
  if (process.env.NODE_V8_COVERAGE) {
    return {
      WeakRef: CompatWeakRef,
      FinalizationRegistry: CompatFinalizer
    }
  }
  return {
    WeakRef: global.WeakRef || CompatWeakRef,
    FinalizationRegistry: global.FinalizationRegistry || CompatFinalizer
  }
}


/***/ }),

/***/ 663:
/***/ ((module) => {

"use strict";


// https://wicg.github.io/cookie-store/#cookie-maximum-attribute-value-size
const maxAttributeValueSize = 1024

// https://wicg.github.io/cookie-store/#cookie-maximum-name-value-pair-size
const maxNameValuePairSize = 4096

module.exports = {
  maxAttributeValueSize,
  maxNameValuePairSize
}


/***/ }),

/***/ 1724:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { parseSetCookie } = __nccwpck_require__(4408)
const { stringify, getHeadersList } = __nccwpck_require__(3121)
const { webidl } = __nccwpck_require__(1744)
const { Headers } = __nccwpck_require__(554)

/**
 * @typedef {Object} Cookie
 * @property {string} name
 * @property {string} value
 * @property {Date|number|undefined} expires
 * @property {number|undefined} maxAge
 * @property {string|undefined} domain
 * @property {string|undefined} path
 * @property {boolean|undefined} secure
 * @property {boolean|undefined} httpOnly
 * @property {'Strict'|'Lax'|'None'} sameSite
 * @property {string[]} unparsed
 */

/**
 * @param {Headers} headers
 * @returns {Record<string, string>}
 */
function getCookies (headers) {
  webidl.argumentLengthCheck(arguments, 1, { header: 'getCookies' })

  webidl.brandCheck(headers, Headers, { strict: false })

  const cookie = headers.get('cookie')
  const out = {}

  if (!cookie) {
    return out
  }

  for (const piece of cookie.split(';')) {
    const [name, ...value] = piece.split('=')

    out[name.trim()] = value.join('=')
  }

  return out
}

/**
 * @param {Headers} headers
 * @param {string} name
 * @param {{ path?: string, domain?: string }|undefined} attributes
 * @returns {void}
 */
function deleteCookie (headers, name, attributes) {
  webidl.argumentLengthCheck(arguments, 2, { header: 'deleteCookie' })

  webidl.brandCheck(headers, Headers, { strict: false })

  name = webidl.converters.DOMString(name)
  attributes = webidl.converters.DeleteCookieAttributes(attributes)

  // Matches behavior of
  // https://github.com/denoland/deno_std/blob/63827b16330b82489a04614027c33b7904e08be5/http/cookie.ts#L278
  setCookie(headers, {
    name,
    value: '',
    expires: new Date(0),
    ...attributes
  })
}

/**
 * @param {Headers} headers
 * @returns {Cookie[]}
 */
function getSetCookies (headers) {
  webidl.argumentLengthCheck(arguments, 1, { header: 'getSetCookies' })

  webidl.brandCheck(headers, Headers, { strict: false })

  const cookies = getHeadersList(headers).cookies

  if (!cookies) {
    return []
  }

  // In older versions of undici, cookies is a list of name:value.
  return cookies.map((pair) => parseSetCookie(Array.isArray(pair) ? pair[1] : pair))
}

/**
 * @param {Headers} headers
 * @param {Cookie} cookie
 * @returns {void}
 */
function setCookie (headers, cookie) {
  webidl.argumentLengthCheck(arguments, 2, { header: 'setCookie' })

  webidl.brandCheck(headers, Headers, { strict: false })

  cookie = webidl.converters.Cookie(cookie)

  const str = stringify(cookie)

  if (str) {
    headers.append('Set-Cookie', stringify(cookie))
  }
}

webidl.converters.DeleteCookieAttributes = webidl.dictionaryConverter([
  {
    converter: webidl.nullableConverter(webidl.converters.DOMString),
    key: 'path',
    defaultValue: null
  },
  {
    converter: webidl.nullableConverter(webidl.converters.DOMString),
    key: 'domain',
    defaultValue: null
  }
])

webidl.converters.Cookie = webidl.dictionaryConverter([
  {
    converter: webidl.converters.DOMString,
    key: 'name'
  },
  {
    converter: webidl.converters.DOMString,
    key: 'value'
  },
  {
    converter: webidl.nullableConverter((value) => {
      if (typeof value === 'number') {
        return webidl.converters['unsigned long long'](value)
      }

      return new Date(value)
    }),
    key: 'expires',
    defaultValue: null
  },
  {
    converter: webidl.nullableConverter(webidl.converters['long long']),
    key: 'maxAge',
    defaultValue: null
  },
  {
    converter: webidl.nullableConverter(webidl.converters.DOMString),
    key: 'domain',
    defaultValue: null
  },
  {
    converter: webidl.nullableConverter(webidl.converters.DOMString),
    key: 'path',
    defaultValue: null
  },
  {
    converter: webidl.nullableConverter(webidl.converters.boolean),
    key: 'secure',
    defaultValue: null
  },
  {
    converter: webidl.nullableConverter(webidl.converters.boolean),
    key: 'httpOnly',
    defaultValue: null
  },
  {
    converter: webidl.converters.USVString,
    key: 'sameSite',
    allowedValues: ['Strict', 'Lax', 'None']
  },
  {
    converter: webidl.sequenceConverter(webidl.converters.DOMString),
    key: 'unparsed',
    defaultValue: []
  }
])

module.exports = {
  getCookies,
  deleteCookie,
  getSetCookies,
  setCookie
}


/***/ }),

/***/ 4408:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { maxNameValuePairSize, maxAttributeValueSize } = __nccwpck_require__(663)
const { isCTLExcludingHtab } = __nccwpck_require__(3121)
const { collectASequenceOfCodePointsFast } = __nccwpck_require__(685)
const assert = __nccwpck_require__(9491)

/**
 * @description Parses the field-value attributes of a set-cookie header string.
 * @see https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4
 * @param {string} header
 * @returns if the header is invalid, null will be returned
 */
function parseSetCookie (header) {
  // 1. If the set-cookie-string contains a %x00-08 / %x0A-1F / %x7F
  //    character (CTL characters excluding HTAB): Abort these steps and
  //    ignore the set-cookie-string entirely.
  if (isCTLExcludingHtab(header)) {
    return null
  }

  let nameValuePair = ''
  let unparsedAttributes = ''
  let name = ''
  let value = ''

  // 2. If the set-cookie-string contains a %x3B (";") character:
  if (header.includes(';')) {
    // 1. The name-value-pair string consists of the characters up to,
    //    but not including, the first %x3B (";"), and the unparsed-
    //    attributes consist of the remainder of the set-cookie-string
    //    (including the %x3B (";") in question).
    const position = { position: 0 }

    nameValuePair = collectASequenceOfCodePointsFast(';', header, position)
    unparsedAttributes = header.slice(position.position)
  } else {
    // Otherwise:

    // 1. The name-value-pair string consists of all the characters
    //    contained in the set-cookie-string, and the unparsed-
    //    attributes is the empty string.
    nameValuePair = header
  }

  // 3. If the name-value-pair string lacks a %x3D ("=") character, then
  //    the name string is empty, and the value string is the value of
  //    name-value-pair.
  if (!nameValuePair.includes('=')) {
    value = nameValuePair
  } else {
    //    Otherwise, the name string consists of the characters up to, but
    //    not including, the first %x3D ("=") character, and the (possibly
    //    empty) value string consists of the characters after the first
    //    %x3D ("=") character.
    const position = { position: 0 }
    name = collectASequenceOfCodePointsFast(
      '=',
      nameValuePair,
      position
    )
    value = nameValuePair.slice(position.position + 1)
  }

  // 4. Remove any leading or trailing WSP characters from the name
  //    string and the value string.
  name = name.trim()
  value = value.trim()

  // 5. If the sum of the lengths of the name string and the value string
  //    is more than 4096 octets, abort these steps and ignore the set-
  //    cookie-string entirely.
  if (name.length + value.length > maxNameValuePairSize) {
    return null
  }

  // 6. The cookie-name is the name string, and the cookie-value is the
  //    value string.
  return {
    name, value, ...parseUnparsedAttributes(unparsedAttributes)
  }
}

/**
 * Parses the remaining attributes of a set-cookie header
 * @see https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4
 * @param {string} unparsedAttributes
 * @param {[Object.<string, unknown>]={}} cookieAttributeList
 */
function parseUnparsedAttributes (unparsedAttributes, cookieAttributeList = {}) {
  // 1. If the unparsed-attributes string is empty, skip the rest of
  //    these steps.
  if (unparsedAttributes.length === 0) {
    return cookieAttributeList
  }

  // 2. Discard the first character of the unparsed-attributes (which
  //    will be a %x3B (";") character).
  assert(unparsedAttributes[0] === ';')
  unparsedAttributes = unparsedAttributes.slice(1)

  let cookieAv = ''

  // 3. If the remaining unparsed-attributes contains a %x3B (";")
  //    character:
  if (unparsedAttributes.includes(';')) {
    // 1. Consume the characters of the unparsed-attributes up to, but
    //    not including, the first %x3B (";") character.
    cookieAv = collectASequenceOfCodePointsFast(
      ';',
      unparsedAttributes,
      { position: 0 }
    )
    unparsedAttributes = unparsedAttributes.slice(cookieAv.length)
  } else {
    // Otherwise:

    // 1. Consume the remainder of the unparsed-attributes.
    cookieAv = unparsedAttributes
    unparsedAttributes = ''
  }

  // Let the cookie-av string be the characters consumed in this step.

  let attributeName = ''
  let attributeValue = ''

  // 4. If the cookie-av string contains a %x3D ("=") character:
  if (cookieAv.includes('=')) {
    // 1. The (possibly empty) attribute-name string consists of the
    //    characters up to, but not including, the first %x3D ("=")
    //    character, and the (possibly empty) attribute-value string
    //    consists of the characters after the first %x3D ("=")
    //    character.
    const position = { position: 0 }

    attributeName = collectASequenceOfCodePointsFast(
      '=',
      cookieAv,
      position
    )
    attributeValue = cookieAv.slice(position.position + 1)
  } else {
    // Otherwise:

    // 1. The attribute-name string consists of the entire cookie-av
    //    string, and the attribute-value string is empty.
    attributeName = cookieAv
  }

  // 5. Remove any leading or trailing WSP characters from the attribute-
  //    name string and the attribute-value string.
  attributeName = attributeName.trim()
  attributeValue = attributeValue.trim()

  // 6. If the attribute-value is longer than 1024 octets, ignore the
  //    cookie-av string and return to Step 1 of this algorithm.
  if (attributeValue.length > maxAttributeValueSize) {
    return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList)
  }

  // 7. Process the attribute-name and attribute-value according to the
  //    requirements in the following subsections.  (Notice that
  //    attributes with unrecognized attribute-names are ignored.)
  const attributeNameLowercase = attributeName.toLowerCase()

  // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.1
  // If the attribute-name case-insensitively matches the string
  // "Expires", the user agent MUST process the cookie-av as follows.
  if (attributeNameLowercase === 'expires') {
    // 1. Let the expiry-time be the result of parsing the attribute-value
    //    as cookie-date (see Section 5.1.1).
    const expiryTime = new Date(attributeValue)

    // 2. If the attribute-value failed to parse as a cookie date, ignore
    //    the cookie-av.

    cookieAttributeList.expires = expiryTime
  } else if (attributeNameLowercase === 'max-age') {
    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.2
    // If the attribute-name case-insensitively matches the string "Max-
    // Age", the user agent MUST process the cookie-av as follows.

    // 1. If the first character of the attribute-value is not a DIGIT or a
    //    "-" character, ignore the cookie-av.
    const charCode = attributeValue.charCodeAt(0)

    if ((charCode < 48 || charCode > 57) && attributeValue[0] !== '-') {
      return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList)
    }

    // 2. If the remainder of attribute-value contains a non-DIGIT
    //    character, ignore the cookie-av.
    if (!/^\d+$/.test(attributeValue)) {
      return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList)
    }

    // 3. Let delta-seconds be the attribute-value converted to an integer.
    const deltaSeconds = Number(attributeValue)

    // 4. Let cookie-age-limit be the maximum age of the cookie (which
    //    SHOULD be 400 days or less, see Section 4.1.2.2).

    // 5. Set delta-seconds to the smaller of its present value and cookie-
    //    age-limit.
    // deltaSeconds = Math.min(deltaSeconds * 1000, maxExpiresMs)

    // 6. If delta-seconds is less than or equal to zero (0), let expiry-
    //    time be the earliest representable date and time.  Otherwise, let
    //    the expiry-time be the current date and time plus delta-seconds
    //    seconds.
    // const expiryTime = deltaSeconds <= 0 ? Date.now() : Date.now() + deltaSeconds

    // 7. Append an attribute to the cookie-attribute-list with an
    //    attribute-name of Max-Age and an attribute-value of expiry-time.
    cookieAttributeList.maxAge = deltaSeconds
  } else if (attributeNameLowercase === 'domain') {
    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.3
    // If the attribute-name case-insensitively matches the string "Domain",
    // the user agent MUST process the cookie-av as follows.

    // 1. Let cookie-domain be the attribute-value.
    let cookieDomain = attributeValue

    // 2. If cookie-domain starts with %x2E ("."), let cookie-domain be
    //    cookie-domain without its leading %x2E (".").
    if (cookieDomain[0] === '.') {
      cookieDomain = cookieDomain.slice(1)
    }

    // 3. Convert the cookie-domain to lower case.
    cookieDomain = cookieDomain.toLowerCase()

    // 4. Append an attribute to the cookie-attribute-list with an
    //    attribute-name of Domain and an attribute-value of cookie-domain.
    cookieAttributeList.domain = cookieDomain
  } else if (attributeNameLowercase === 'path') {
    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.4
    // If the attribute-name case-insensitively matches the string "Path",
    // the user agent MUST process the cookie-av as follows.

    // 1. If the attribute-value is empty or if the first character of the
    //    attribute-value is not %x2F ("/"):
    let cookiePath = ''
    if (attributeValue.length === 0 || attributeValue[0] !== '/') {
      // 1. Let cookie-path be the default-path.
      cookiePath = '/'
    } else {
      // Otherwise:

      // 1. Let cookie-path be the attribute-value.
      cookiePath = attributeValue
    }

    // 2. Append an attribute to the cookie-attribute-list with an
    //    attribute-name of Path and an attribute-value of cookie-path.
    cookieAttributeList.path = cookiePath
  } else if (attributeNameLowercase === 'secure') {
    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.5
    // If the attribute-name case-insensitively matches the string "Secure",
    // the user agent MUST append an attribute to the cookie-attribute-list
    // with an attribute-name of Secure and an empty attribute-value.

    cookieAttributeList.secure = true
  } else if (attributeNameLowercase === 'httponly') {
    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.6
    // If the attribute-name case-insensitively matches the string
    // "HttpOnly", the user agent MUST append an attribute to the cookie-
    // attribute-list with an attribute-name of HttpOnly and an empty
    // attribute-value.

    cookieAttributeList.httpOnly = true
  } else if (attributeNameLowercase === 'samesite') {
    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.7
    // If the attribute-name case-insensitively matches the string
    // "SameSite", the user agent MUST process the cookie-av as follows:

    // 1. Let enforcement be "Default".
    let enforcement = 'Default'

    const attributeValueLowercase = attributeValue.toLowerCase()
    // 2. If cookie-av's attribute-value is a case-insensitive match for
    //    "None", set enforcement to "None".
    if (attributeValueLowercase.includes('none')) {
      enforcement = 'None'
    }

    // 3. If cookie-av's attribute-value is a case-insensitive match for
    //    "Strict", set enforcement to "Strict".
    if (attributeValueLowercase.includes('strict')) {
      enforcement = 'Strict'
    }

    // 4. If cookie-av's attribute-value is a case-insensitive match for
    //    "Lax", set enforcement to "Lax".
    if (attributeValueLowercase.includes('lax')) {
      enforcement = 'Lax'
    }

    // 5. Append an attribute to the cookie-attribute-list with an
    //    attribute-name of "SameSite" and an attribute-value of
    //    enforcement.
    cookieAttributeList.sameSite = enforcement
  } else {
    cookieAttributeList.unparsed ??= []

    cookieAttributeList.unparsed.push(`${attributeName}=${attributeValue}`)
  }

  // 8. Return to Step 1 of this algorithm.
  return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList)
}

module.exports = {
  parseSetCookie,
  parseUnparsedAttributes
}


/***/ }),

/***/ 3121:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const assert = __nccwpck_require__(9491)
const { kHeadersList } = __nccwpck_require__(2785)

function isCTLExcludingHtab (value) {
  if (value.length === 0) {
    return false
  }

  for (const char of value) {
    const code = char.charCodeAt(0)

    if (
      (code >= 0x00 || code <= 0x08) ||
      (code >= 0x0A || code <= 0x1F) ||
      code === 0x7F
    ) {
      return false
    }
  }
}

/**
 CHAR           = <any US-ASCII character (octets 0 - 127)>
 token          = 1*<any CHAR except CTLs or separators>
 separators     = "(" | ")" | "<" | ">" | "@"
                | "," | ";" | ":" | "\" | <">
                | "/" | "[" | "]" | "?" | "="
                | "{" | "}" | SP | HT
 * @param {string} name
 */
function validateCookieName (name) {
  for (const char of name) {
    const code = char.charCodeAt(0)

    if (
      (code <= 0x20 || code > 0x7F) ||
      char === '(' ||
      char === ')' ||
      char === '>' ||
      char === '<' ||
      char === '@' ||
      char === ',' ||
      char === ';' ||
      char === ':' ||
      char === '\\' ||
      char === '"' ||
      char === '/' ||
      char === '[' ||
      char === ']' ||
      char === '?' ||
      char === '=' ||
      char === '{' ||
      char === '}'
    ) {
      throw new Error('Invalid cookie name')
    }
  }
}

/**
 cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )
 cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E
                       ; US-ASCII characters excluding CTLs,
                       ; whitespace DQUOTE, comma, semicolon,
                       ; and backslash
 * @param {string} value
 */
function validateCookieValue (value) {
  for (const char of value) {
    const code = char.charCodeAt(0)

    if (
      code < 0x21 || // exclude CTLs (0-31)
      code === 0x22 ||
      code === 0x2C ||
      code === 0x3B ||
      code === 0x5C ||
      code > 0x7E // non-ascii
    ) {
      throw new Error('Invalid header value')
    }
  }
}

/**
 * path-value        = <any CHAR except CTLs or ";">
 * @param {string} path
 */
function validateCookiePath (path) {
  for (const char of path) {
    const code = char.charCodeAt(0)

    if (code < 0x21 || char === ';') {
      throw new Error('Invalid cookie path')
    }
  }
}

/**
 * I have no idea why these values aren't allowed to be honest,
 * but Deno tests these. - Khafra
 * @param {string} domain
 */
function validateCookieDomain (domain) {
  if (
    domain.startsWith('-') ||
    domain.endsWith('.') ||
    domain.endsWith('-')
  ) {
    throw new Error('Invalid cookie domain')
  }
}

/**
 * @see https://www.rfc-editor.org/rfc/rfc7231#section-7.1.1.1
 * @param {number|Date} date
  IMF-fixdate  = day-name "," SP date1 SP time-of-day SP GMT
  ; fixed length/zone/capitalization subset of the format
  ; see Section 3.3 of [RFC5322]

  day-name     = %x4D.6F.6E ; "Mon", case-sensitive
              / %x54.75.65 ; "Tue", case-sensitive
              / %x57.65.64 ; "Wed", case-sensitive
              / %x54.68.75 ; "Thu", case-sensitive
              / %x46.72.69 ; "Fri", case-sensitive
              / %x53.61.74 ; "Sat", case-sensitive
              / %x53.75.6E ; "Sun", case-sensitive
  date1        = day SP month SP year
                  ; e.g., 02 Jun 1982

  day          = 2DIGIT
  month        = %x4A.61.6E ; "Jan", case-sensitive
              / %x46.65.62 ; "Feb", case-sensitive
              / %x4D.61.72 ; "Mar", case-sensitive
              / %x41.70.72 ; "Apr", case-sensitive
              / %x4D.61.79 ; "May", case-sensitive
              / %x4A.75.6E ; "Jun", case-sensitive
              / %x4A.75.6C ; "Jul", case-sensitive
              / %x41.75.67 ; "Aug", case-sensitive
              / %x53.65.70 ; "Sep", case-sensitive
              / %x4F.63.74 ; "Oct", case-sensitive
              / %x4E.6F.76 ; "Nov", case-sensitive
              / %x44.65.63 ; "Dec", case-sensitive
  year         = 4DIGIT

  GMT          = %x47.4D.54 ; "GMT", case-sensitive

  time-of-day  = hour ":" minute ":" second
              ; 00:00:00 - 23:59:60 (leap second)

  hour         = 2DIGIT
  minute       = 2DIGIT
  second       = 2DIGIT
 */
function toIMFDate (date) {
  if (typeof date === 'number') {
    date = new Date(date)
  }

  const days = [
    'Sun', 'Mon', 'Tue', 'Wed',
    'Thu', 'Fri', 'Sat'
  ]

  const months = [
    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'
  ]

  const dayName = days[date.getUTCDay()]
  const day = date.getUTCDate().toString().padStart(2, '0')
  const month = months[date.getUTCMonth()]
  const year = date.getUTCFullYear()
  const hour = date.getUTCHours().toString().padStart(2, '0')
  const minute = date.getUTCMinutes().toString().padStart(2, '0')
  const second = date.getUTCSeconds().toString().padStart(2, '0')

  return `${dayName}, ${day} ${month} ${year} ${hour}:${minute}:${second} GMT`
}

/**
 max-age-av        = "Max-Age=" non-zero-digit *DIGIT
                       ; In practice, both expires-av and max-age-av
                       ; are limited to dates representable by the
                       ; user agent.
 * @param {number} maxAge
 */
function validateCookieMaxAge (maxAge) {
  if (maxAge < 0) {
    throw new Error('Invalid cookie max-age')
  }
}

/**
 * @see https://www.rfc-editor.org/rfc/rfc6265#section-4.1.1
 * @param {import('./index').Cookie} cookie
 */
function stringify (cookie) {
  if (cookie.name.length === 0) {
    return null
  }

  validateCookieName(cookie.name)
  validateCookieValue(cookie.value)

  const out = [`${cookie.name}=${cookie.value}`]

  // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-cookie-prefixes-00#section-3.1
  // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-cookie-prefixes-00#section-3.2
  if (cookie.name.startsWith('__Secure-')) {
    cookie.secure = true
  }

  if (cookie.name.startsWith('__Host-')) {
    cookie.secure = true
    cookie.domain = null
    cookie.path = '/'
  }

  if (cookie.secure) {
    out.push('Secure')
  }

  if (cookie.httpOnly) {
    out.push('HttpOnly')
  }

  if (typeof cookie.maxAge === 'number') {
    validateCookieMaxAge(cookie.maxAge)
    out.push(`Max-Age=${cookie.maxAge}`)
  }

  if (cookie.domain) {
    validateCookieDomain(cookie.domain)
    out.push(`Domain=${cookie.domain}`)
  }

  if (cookie.path) {
    validateCookiePath(cookie.path)
    out.push(`Path=${cookie.path}`)
  }

  if (cookie.expires && cookie.expires.toString() !== 'Invalid Date') {
    out.push(`Expires=${toIMFDate(cookie.expires)}`)
  }

  if (cookie.sameSite) {
    out.push(`SameSite=${cookie.sameSite}`)
  }

  for (const part of cookie.unparsed) {
    if (!part.includes('=')) {
      throw new Error('Invalid unparsed')
    }

    const [key, ...value] = part.split('=')

    out.push(`${key.trim()}=${value.join('=')}`)
  }

  return out.join('; ')
}

let kHeadersListNode

function getHeadersList (headers) {
  if (headers[kHeadersList]) {
    return headers[kHeadersList]
  }

  if (!kHeadersListNode) {
    kHeadersListNode = Object.getOwnPropertySymbols(headers).find(
      (symbol) => symbol.description === 'headers list'
    )

    assert(kHeadersListNode, 'Headers cannot be parsed')
  }

  const headersList = headers[kHeadersListNode]
  assert(headersList)

  return headersList
}

module.exports = {
  isCTLExcludingHtab,
  stringify,
  getHeadersList
}


/***/ }),

/***/ 2067:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const net = __nccwpck_require__(1808)
const assert = __nccwpck_require__(9491)
const util = __nccwpck_require__(3983)
const { InvalidArgumentError, ConnectTimeoutError } = __nccwpck_require__(8045)

let tls // include tls conditionally since it is not always available

// TODO: session re-use does not wait for the first
// connection to resolve the session and might therefore
// resolve the same servername multiple times even when
// re-use is enabled.

let SessionCache
// FIXME: remove workaround when the Node bug is fixed
// https://github.com/nodejs/node/issues/49344#issuecomment-1741776308
if (global.FinalizationRegistry && !process.env.NODE_V8_COVERAGE) {
  SessionCache = class WeakSessionCache {
    constructor (maxCachedSessions) {
      this._maxCachedSessions = maxCachedSessions
      this._sessionCache = new Map()
      this._sessionRegistry = new global.FinalizationRegistry((key) => {
        if (this._sessionCache.size < this._maxCachedSessions) {
          return
        }

        const ref = this._sessionCache.get(key)
        if (ref !== undefined && ref.deref() === undefined) {
          this._sessionCache.delete(key)
        }
      })
    }

    get (sessionKey) {
      const ref = this._sessionCache.get(sessionKey)
      return ref ? ref.deref() : null
    }

    set (sessionKey, session) {
      if (this._maxCachedSessions === 0) {
        return
      }

      this._sessionCache.set(sessionKey, new WeakRef(session))
      this._sessionRegistry.register(session, sessionKey)
    }
  }
} else {
  SessionCache = class SimpleSessionCache {
    constructor (maxCachedSessions) {
      this._maxCachedSessions = maxCachedSessions
      this._sessionCache = new Map()
    }

    get (sessionKey) {
      return this._sessionCache.get(sessionKey)
    }

    set (sessionKey, session) {
      if (this._maxCachedSessions === 0) {
        return
      }

      if (this._sessionCache.size >= this._maxCachedSessions) {
        // remove the oldest session
        const { value: oldestKey } = this._sessionCache.keys().next()
        this._sessionCache.delete(oldestKey)
      }

      this._sessionCache.set(sessionKey, session)
    }
  }
}

function buildConnector ({ allowH2, maxCachedSessions, socketPath, timeout, ...opts }) {
  if (maxCachedSessions != null && (!Number.isInteger(maxCachedSessions) || maxCachedSessions < 0)) {
    throw new InvalidArgumentError('maxCachedSessions must be a positive integer or zero')
  }

  const options = { path: socketPath, ...opts }
  const sessionCache = new SessionCache(maxCachedSessions == null ? 100 : maxCachedSessions)
  timeout = timeout == null ? 10e3 : timeout
  allowH2 = allowH2 != null ? allowH2 : false
  return function connect ({ hostname, host, protocol, port, servername, localAddress, httpSocket }, callback) {
    let socket
    if (protocol === 'https:') {
      if (!tls) {
        tls = __nccwpck_require__(4404)
      }
      servername = servername || options.servername || util.getServerName(host) || null

      const sessionKey = servername || hostname
      const session = sessionCache.get(sessionKey) || null

      assert(sessionKey)

      socket = tls.connect({
        highWaterMark: 16384, // TLS in node can't have bigger HWM anyway...
        ...options,
        servername,
        session,
        localAddress,
        // TODO(HTTP/2): Add support for h2c
        ALPNProtocols: allowH2 ? ['http/1.1', 'h2'] : ['http/1.1'],
        socket: httpSocket, // upgrade socket connection
        port: port || 443,
        host: hostname
      })

      socket
        .on('session', function (session) {
          // TODO (fix): Can a session become invalid once established? Don't think so?
          sessionCache.set(sessionKey, session)
        })
    } else {
      assert(!httpSocket, 'httpSocket can only be sent on TLS update')
      socket = net.connect({
        highWaterMark: 64 * 1024, // Same as nodejs fs streams.
        ...options,
        localAddress,
        port: port || 80,
        host: hostname
      })
    }

    // Set TCP keep alive options on the socket here instead of in connect() for the case of assigning the socket
    if (options.keepAlive == null || options.keepAlive) {
      const keepAliveInitialDelay = options.keepAliveInitialDelay === undefined ? 60e3 : options.keepAliveInitialDelay
      socket.setKeepAlive(true, keepAliveInitialDelay)
    }

    const cancelTimeout = setupTimeout(() => onConnectTimeout(socket), timeout)

    socket
      .setNoDelay(true)
      .once(protocol === 'https:' ? 'secureConnect' : 'connect', function () {
        cancelTimeout()

        if (callback) {
          const cb = callback
          callback = null
          cb(null, this)
        }
      })
      .on('error', function (err) {
        cancelTimeout()

        if (callback) {
          const cb = callback
          callback = null
          cb(err)
        }
      })

    return socket
  }
}

function setupTimeout (onConnectTimeout, timeout) {
  if (!timeout) {
    return () => {}
  }

  let s1 = null
  let s2 = null
  const timeoutId = setTimeout(() => {
    // setImmediate is added to make sure that we priotorise socket error events over timeouts
    s1 = setImmediate(() => {
      if (process.platform === 'win32') {
        // Windows needs an extra setImmediate probably due to implementation differences in the socket logic
        s2 = setImmediate(() => onConnectTimeout())
      } else {
        onConnectTimeout()
      }
    })
  }, timeout)
  return () => {
    clearTimeout(timeoutId)
    clearImmediate(s1)
    clearImmediate(s2)
  }
}

function onConnectTimeout (socket) {
  util.destroy(socket, new ConnectTimeoutError())
}

module.exports = buildConnector


/***/ }),

/***/ 8045:
/***/ ((module) => {

"use strict";


class UndiciError extends Error {
  constructor (message) {
    super(message)
    this.name = 'UndiciError'
    this.code = 'UND_ERR'
  }
}

class ConnectTimeoutError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, ConnectTimeoutError)
    this.name = 'ConnectTimeoutError'
    this.message = message || 'Connect Timeout Error'
    this.code = 'UND_ERR_CONNECT_TIMEOUT'
  }
}

class HeadersTimeoutError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, HeadersTimeoutError)
    this.name = 'HeadersTimeoutError'
    this.message = message || 'Headers Timeout Error'
    this.code = 'UND_ERR_HEADERS_TIMEOUT'
  }
}

class HeadersOverflowError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, HeadersOverflowError)
    this.name = 'HeadersOverflowError'
    this.message = message || 'Headers Overflow Error'
    this.code = 'UND_ERR_HEADERS_OVERFLOW'
  }
}

class BodyTimeoutError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, BodyTimeoutError)
    this.name = 'BodyTimeoutError'
    this.message = message || 'Body Timeout Error'
    this.code = 'UND_ERR_BODY_TIMEOUT'
  }
}

class ResponseStatusCodeError extends UndiciError {
  constructor (message, statusCode, headers, body) {
    super(message)
    Error.captureStackTrace(this, ResponseStatusCodeError)
    this.name = 'ResponseStatusCodeError'
    this.message = message || 'Response Status Code Error'
    this.code = 'UND_ERR_RESPONSE_STATUS_CODE'
    this.body = body
    this.status = statusCode
    this.statusCode = statusCode
    this.headers = headers
  }
}

class InvalidArgumentError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, InvalidArgumentError)
    this.name = 'InvalidArgumentError'
    this.message = message || 'Invalid Argument Error'
    this.code = 'UND_ERR_INVALID_ARG'
  }
}

class InvalidReturnValueError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, InvalidReturnValueError)
    this.name = 'InvalidReturnValueError'
    this.message = message || 'Invalid Return Value Error'
    this.code = 'UND_ERR_INVALID_RETURN_VALUE'
  }
}

class RequestAbortedError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, RequestAbortedError)
    this.name = 'AbortError'
    this.message = message || 'Request aborted'
    this.code = 'UND_ERR_ABORTED'
  }
}

class InformationalError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, InformationalError)
    this.name = 'InformationalError'
    this.message = message || 'Request information'
    this.code = 'UND_ERR_INFO'
  }
}

class RequestContentLengthMismatchError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, RequestContentLengthMismatchError)
    this.name = 'RequestContentLengthMismatchError'
    this.message = message || 'Request body length does not match content-length header'
    this.code = 'UND_ERR_REQ_CONTENT_LENGTH_MISMATCH'
  }
}

class ResponseContentLengthMismatchError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, ResponseContentLengthMismatchError)
    this.name = 'ResponseContentLengthMismatchError'
    this.message = message || 'Response body length does not match content-length header'
    this.code = 'UND_ERR_RES_CONTENT_LENGTH_MISMATCH'
  }
}

class ClientDestroyedError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, ClientDestroyedError)
    this.name = 'ClientDestroyedError'
    this.message = message || 'The client is destroyed'
    this.code = 'UND_ERR_DESTROYED'
  }
}

class ClientClosedError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, ClientClosedError)
    this.name = 'ClientClosedError'
    this.message = message || 'The client is closed'
    this.code = 'UND_ERR_CLOSED'
  }
}

class SocketError extends UndiciError {
  constructor (message, socket) {
    super(message)
    Error.captureStackTrace(this, SocketError)
    this.name = 'SocketError'
    this.message = message || 'Socket error'
    this.code = 'UND_ERR_SOCKET'
    this.socket = socket
  }
}

class NotSupportedError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, NotSupportedError)
    this.name = 'NotSupportedError'
    this.message = message || 'Not supported error'
    this.code = 'UND_ERR_NOT_SUPPORTED'
  }
}

class BalancedPoolMissingUpstreamError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, NotSupportedError)
    this.name = 'MissingUpstreamError'
    this.message = message || 'No upstream has been added to the BalancedPool'
    this.code = 'UND_ERR_BPL_MISSING_UPSTREAM'
  }
}

class HTTPParserError extends Error {
  constructor (message, code, data) {
    super(message)
    Error.captureStackTrace(this, HTTPParserError)
    this.name = 'HTTPParserError'
    this.code = code ? `HPE_${code}` : undefined
    this.data = data ? data.toString() : undefined
  }
}

class ResponseExceededMaxSizeError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, ResponseExceededMaxSizeError)
    this.name = 'ResponseExceededMaxSizeError'
    this.message = message || 'Response content exceeded max size'
    this.code = 'UND_ERR_RES_EXCEEDED_MAX_SIZE'
  }
}

module.exports = {
  HTTPParserError,
  UndiciError,
  HeadersTimeoutError,
  HeadersOverflowError,
  BodyTimeoutError,
  RequestContentLengthMismatchError,
  ConnectTimeoutError,
  ResponseStatusCodeError,
  InvalidArgumentError,
  InvalidReturnValueError,
  RequestAbortedError,
  ClientDestroyedError,
  ClientClosedError,
  InformationalError,
  SocketError,
  NotSupportedError,
  ResponseContentLengthMismatchError,
  BalancedPoolMissingUpstreamError,
  ResponseExceededMaxSizeError
}


/***/ }),

/***/ 2905:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const {
  InvalidArgumentError,
  NotSupportedError
} = __nccwpck_require__(8045)
const assert = __nccwpck_require__(9491)
const { kHTTP2BuildRequest, kHTTP2CopyHeaders, kHTTP1BuildRequest } = __nccwpck_require__(2785)
const util = __nccwpck_require__(3983)

// tokenRegExp and headerCharRegex have been lifted from
// https://github.com/nodejs/node/blob/main/lib/_http_common.js

/**
 * Verifies that the given val is a valid HTTP token
 * per the rules defined in RFC 7230
 * See https://tools.ietf.org/html/rfc7230#section-3.2.6
 */
const tokenRegExp = /^[\^_`a-zA-Z\-0-9!#$%&'*+.|~]+$/

/**
 * Matches if val contains an invalid field-vchar
 *  field-value    = *( field-content / obs-fold )
 *  field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]
 *  field-vchar    = VCHAR / obs-text
 */
const headerCharRegex = /[^\t\x20-\x7e\x80-\xff]/

// Verifies that a given path is valid does not contain control chars \x00 to \x20
const invalidPathRegex = /[^\u0021-\u00ff]/

const kHandler = Symbol('handler')

const channels = {}

let extractBody

try {
  const diagnosticsChannel = __nccwpck_require__(7643)
  channels.create = diagnosticsChannel.channel('undici:request:create')
  channels.bodySent = diagnosticsChannel.channel('undici:request:bodySent')
  channels.headers = diagnosticsChannel.channel('undici:request:headers')
  channels.trailers = diagnosticsChannel.channel('undici:request:trailers')
  channels.error = diagnosticsChannel.channel('undici:request:error')
} catch {
  channels.create = { hasSubscribers: false }
  channels.bodySent = { hasSubscribers: false }
  channels.headers = { hasSubscribers: false }
  channels.trailers = { hasSubscribers: false }
  channels.error = { hasSubscribers: false }
}

class Request {
  constructor (origin, {
    path,
    method,
    body,
    headers,
    query,
    idempotent,
    blocking,
    upgrade,
    headersTimeout,
    bodyTimeout,
    reset,
    throwOnError,
    expectContinue
  }, handler) {
    if (typeof path !== 'string') {
      throw new InvalidArgumentError('path must be a string')
    } else if (
      path[0] !== '/' &&
      !(path.startsWith('http://') || path.startsWith('https://')) &&
      method !== 'CONNECT'
    ) {
      throw new InvalidArgumentError('path must be an absolute URL or start with a slash')
    } else if (invalidPathRegex.exec(path) !== null) {
      throw new InvalidArgumentError('invalid request path')
    }

    if (typeof method !== 'string') {
      throw new InvalidArgumentError('method must be a string')
    } else if (tokenRegExp.exec(method) === null) {
      throw new InvalidArgumentError('invalid request method')
    }

    if (upgrade && typeof upgrade !== 'string') {
      throw new InvalidArgumentError('upgrade must be a string')
    }

    if (headersTimeout != null && (!Number.isFinite(headersTimeout) || headersTimeout < 0)) {
      throw new InvalidArgumentError('invalid headersTimeout')
    }

    if (bodyTimeout != null && (!Number.isFinite(bodyTimeout) || bodyTimeout < 0)) {
      throw new InvalidArgumentError('invalid bodyTimeout')
    }

    if (reset != null && typeof reset !== 'boolean') {
      throw new InvalidArgumentError('invalid reset')
    }

    if (expectContinue != null && typeof expectContinue !== 'boolean') {
      throw new InvalidArgumentError('invalid expectContinue')
    }

    this.headersTimeout = headersTimeout

    this.bodyTimeout = bodyTimeout

    this.throwOnError = throwOnError === true

    this.method = method

    if (body == null) {
      this.body = null
    } else if (util.isStream(body)) {
      this.body = body
    } else if (util.isBuffer(body)) {
      this.body = body.byteLength ? body : null
    } else if (ArrayBuffer.isView(body)) {
      this.body = body.buffer.byteLength ? Buffer.from(body.buffer, body.byteOffset, body.byteLength) : null
    } else if (body instanceof ArrayBuffer) {
      this.body = body.byteLength ? Buffer.from(body) : null
    } else if (typeof body === 'string') {
      this.body = body.length ? Buffer.from(body) : null
    } else if (util.isFormDataLike(body) || util.isIterable(body) || util.isBlobLike(body)) {
      this.body = body
    } else {
      throw new InvalidArgumentError('body must be a string, a Buffer, a Readable stream, an iterable, or an async iterable')
    }

    this.completed = false

    this.aborted = false

    this.upgrade = upgrade || null

    this.path = query ? util.buildURL(path, query) : path

    this.origin = origin

    this.idempotent = idempotent == null
      ? method === 'HEAD' || method === 'GET'
      : idempotent

    this.blocking = blocking == null ? false : blocking

    this.reset = reset == null ? null : reset

    this.host = null

    this.contentLength = null

    this.contentType = null

    this.headers = ''

    // Only for H2
    this.expectContinue = expectContinue != null ? expectContinue : false

    if (Array.isArray(headers)) {
      if (headers.length % 2 !== 0) {
        throw new InvalidArgumentError('headers array must be even')
      }
      for (let i = 0; i < headers.length; i += 2) {
        processHeader(this, headers[i], headers[i + 1])
      }
    } else if (headers && typeof headers === 'object') {
      const keys = Object.keys(headers)
      for (let i = 0; i < keys.length; i++) {
        const key = keys[i]
        processHeader(this, key, headers[key])
      }
    } else if (headers != null) {
      throw new InvalidArgumentError('headers must be an object or an array')
    }

    if (util.isFormDataLike(this.body)) {
      if (util.nodeMajor < 16 || (util.nodeMajor === 16 && util.nodeMinor < 8)) {
        throw new InvalidArgumentError('Form-Data bodies are only supported in node v16.8 and newer.')
      }

      if (!extractBody) {
        extractBody = (__nccwpck_require__(1472).extractBody)
      }

      const [bodyStream, contentType] = extractBody(body)
      if (this.contentType == null) {
        this.contentType = contentType
        this.headers += `content-type: ${contentType}\r\n`
      }
      this.body = bodyStream.stream
      this.contentLength = bodyStream.length
    } else if (util.isBlobLike(body) && this.contentType == null && body.type) {
      this.contentType = body.type
      this.headers += `content-type: ${body.type}\r\n`
    }

    util.validateHandler(handler, method, upgrade)

    this.servername = util.getServerName(this.host)

    this[kHandler] = handler

    if (channels.create.hasSubscribers) {
      channels.create.publish({ request: this })
    }
  }

  onBodySent (chunk) {
    if (this[kHandler].onBodySent) {
      try {
        this[kHandler].onBodySent(chunk)
      } catch (err) {
        this.onError(err)
      }
    }
  }

  onRequestSent () {
    if (channels.bodySent.hasSubscribers) {
      channels.bodySent.publish({ request: this })
    }
  }

  onConnect (abort) {
    assert(!this.aborted)
    assert(!this.completed)

    return this[kHandler].onConnect(abort)
  }

  onHeaders (statusCode, headers, resume, statusText) {
    assert(!this.aborted)
    assert(!this.completed)

    if (channels.headers.hasSubscribers) {
      channels.headers.publish({ request: this, response: { statusCode, headers, statusText } })
    }

    return this[kHandler].onHeaders(statusCode, headers, resume, statusText)
  }

  onData (chunk) {
    assert(!this.aborted)
    assert(!this.completed)

    return this[kHandler].onData(chunk)
  }

  onUpgrade (statusCode, headers, socket) {
    assert(!this.aborted)
    assert(!this.completed)

    return this[kHandler].onUpgrade(statusCode, headers, socket)
  }

  onComplete (trailers) {
    assert(!this.aborted)

    this.completed = true
    if (channels.trailers.hasSubscribers) {
      channels.trailers.publish({ request: this, trailers })
    }
    return this[kHandler].onComplete(trailers)
  }

  onError (error) {
    if (channels.error.hasSubscribers) {
      channels.error.publish({ request: this, error })
    }

    if (this.aborted) {
      return
    }
    this.aborted = true
    return this[kHandler].onError(error)
  }

  // TODO: adjust to support H2
  addHeader (key, value) {
    processHeader(this, key, value)
    return this
  }

  static [kHTTP1BuildRequest] (origin, opts, handler) {
    // TODO: Migrate header parsing here, to make Requests
    // HTTP agnostic
    return new Request(origin, opts, handler)
  }

  static [kHTTP2BuildRequest] (origin, opts, handler) {
    const headers = opts.headers
    opts = { ...opts, headers: null }

    const request = new Request(origin, opts, handler)

    request.headers = {}

    if (Array.isArray(headers)) {
      if (headers.length % 2 !== 0) {
        throw new InvalidArgumentError('headers array must be even')
      }
      for (let i = 0; i < headers.length; i += 2) {
        processHeader(request, headers[i], headers[i + 1], true)
      }
    } else if (headers && typeof headers === 'object') {
      const keys = Object.keys(headers)
      for (let i = 0; i < keys.length; i++) {
        const key = keys[i]
        processHeader(request, key, headers[key], true)
      }
    } else if (headers != null) {
      throw new InvalidArgumentError('headers must be an object or an array')
    }

    return request
  }

  static [kHTTP2CopyHeaders] (raw) {
    const rawHeaders = raw.split('\r\n')
    const headers = {}

    for (const header of rawHeaders) {
      const [key, value] = header.split(': ')

      if (value == null || value.length === 0) continue

      if (headers[key]) headers[key] += `,${value}`
      else headers[key] = value
    }

    return headers
  }
}

function processHeaderValue (key, val, skipAppend) {
  if (val && typeof val === 'object') {
    throw new InvalidArgumentError(`invalid ${key} header`)
  }

  val = val != null ? `${val}` : ''

  if (headerCharRegex.exec(val) !== null) {
    throw new InvalidArgumentError(`invalid ${key} header`)
  }

  return skipAppend ? val : `${key}: ${val}\r\n`
}

function processHeader (request, key, val, skipAppend = false) {
  if (val && (typeof val === 'object' && !Array.isArray(val))) {
    throw new InvalidArgumentError(`invalid ${key} header`)
  } else if (val === undefined) {
    return
  }

  if (
    request.host === null &&
    key.length === 4 &&
    key.toLowerCase() === 'host'
  ) {
    if (headerCharRegex.exec(val) !== null) {
      throw new InvalidArgumentError(`invalid ${key} header`)
    }
    // Consumed by Client
    request.host = val
  } else if (
    request.contentLength === null &&
    key.length === 14 &&
    key.toLowerCase() === 'content-length'
  ) {
    request.contentLength = parseInt(val, 10)
    if (!Number.isFinite(request.contentLength)) {
      throw new InvalidArgumentError('invalid content-length header')
    }
  } else if (
    request.contentType === null &&
    key.length === 12 &&
    key.toLowerCase() === 'content-type'
  ) {
    request.contentType = val
    if (skipAppend) request.headers[key] = processHeaderValue(key, val, skipAppend)
    else request.headers += processHeaderValue(key, val)
  } else if (
    key.length === 17 &&
    key.toLowerCase() === 'transfer-encoding'
  ) {
    throw new InvalidArgumentError('invalid transfer-encoding header')
  } else if (
    key.length === 10 &&
    key.toLowerCase() === 'connection'
  ) {
    const value = typeof val === 'string' ? val.toLowerCase() : null
    if (value !== 'close' && value !== 'keep-alive') {
      throw new InvalidArgumentError('invalid connection header')
    } else if (value === 'close') {
      request.reset = true
    }
  } else if (
    key.length === 10 &&
    key.toLowerCase() === 'keep-alive'
  ) {
    throw new InvalidArgumentError('invalid keep-alive header')
  } else if (
    key.length === 7 &&
    key.toLowerCase() === 'upgrade'
  ) {
    throw new InvalidArgumentError('invalid upgrade header')
  } else if (
    key.length === 6 &&
    key.toLowerCase() === 'expect'
  ) {
    throw new NotSupportedError('expect header not supported')
  } else if (tokenRegExp.exec(key) === null) {
    throw new InvalidArgumentError('invalid header key')
  } else {
    if (Array.isArray(val)) {
      for (let i = 0; i < val.length; i++) {
        if (skipAppend) {
          if (request.headers[key]) request.headers[key] += `,${processHeaderValue(key, val[i], skipAppend)}`
          else request.headers[key] = processHeaderValue(key, val[i], skipAppend)
        } else {
          request.headers += processHeaderValue(key, val[i])
        }
      }
    } else {
      if (skipAppend) request.headers[key] = processHeaderValue(key, val, skipAppend)
      else request.headers += processHeaderValue(key, val)
    }
  }
}

module.exports = Request


/***/ }),

/***/ 2785:
/***/ ((module) => {

module.exports = {
  kClose: Symbol('close'),
  kDestroy: Symbol('destroy'),
  kDispatch: Symbol('dispatch'),
  kUrl: Symbol('url'),
  kWriting: Symbol('writing'),
  kResuming: Symbol('resuming'),
  kQueue: Symbol('queue'),
  kConnect: Symbol('connect'),
  kConnecting: Symbol('connecting'),
  kHeadersList: Symbol('headers list'),
  kKeepAliveDefaultTimeout: Symbol('default keep alive timeout'),
  kKeepAliveMaxTimeout: Symbol('max keep alive timeout'),
  kKeepAliveTimeoutThreshold: Symbol('keep alive timeout threshold'),
  kKeepAliveTimeoutValue: Symbol('keep alive timeout'),
  kKeepAlive: Symbol('keep alive'),
  kHeadersTimeout: Symbol('headers timeout'),
  kBodyTimeout: Symbol('body timeout'),
  kServerName: Symbol('server name'),
  kLocalAddress: Symbol('local address'),
  kHost: Symbol('host'),
  kNoRef: Symbol('no ref'),
  kBodyUsed: Symbol('used'),
  kRunning: Symbol('running'),
  kBlocking: Symbol('blocking'),
  kPending: Symbol('pending'),
  kSize: Symbol('size'),
  kBusy: Symbol('busy'),
  kQueued: Symbol('queued'),
  kFree: Symbol('free'),
  kConnected: Symbol('connected'),
  kClosed: Symbol('closed'),
  kNeedDrain: Symbol('need drain'),
  kReset: Symbol('reset'),
  kDestroyed: Symbol.for('nodejs.stream.destroyed'),
  kMaxHeadersSize: Symbol('max headers size'),
  kRunningIdx: Symbol('running index'),
  kPendingIdx: Symbol('pending index'),
  kError: Symbol('error'),
  kClients: Symbol('clients'),
  kClient: Symbol('client'),
  kParser: Symbol('parser'),
  kOnDestroyed: Symbol('destroy callbacks'),
  kPipelining: Symbol('pipelining'),
  kSocket: Symbol('socket'),
  kHostHeader: Symbol('host header'),
  kConnector: Symbol('connector'),
  kStrictContentLength: Symbol('strict content length'),
  kMaxRedirections: Symbol('maxRedirections'),
  kMaxRequests: Symbol('maxRequestsPerClient'),
  kProxy: Symbol('proxy agent options'),
  kCounter: Symbol('socket request counter'),
  kInterceptors: Symbol('dispatch interceptors'),
  kMaxResponseSize: Symbol('max response size'),
  kHTTP2Session: Symbol('http2Session'),
  kHTTP2SessionState: Symbol('http2Session state'),
  kHTTP2BuildRequest: Symbol('http2 build request'),
  kHTTP1BuildRequest: Symbol('http1 build request'),
  kHTTP2CopyHeaders: Symbol('http2 copy headers'),
  kHTTPConnVersion: Symbol('http connection version')
}


/***/ }),

/***/ 3983:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const assert = __nccwpck_require__(9491)
const { kDestroyed, kBodyUsed } = __nccwpck_require__(2785)
const { IncomingMessage } = __nccwpck_require__(3685)
const stream = __nccwpck_require__(2781)
const net = __nccwpck_require__(1808)
const { InvalidArgumentError } = __nccwpck_require__(8045)
const { Blob } = __nccwpck_require__(4300)
const nodeUtil = __nccwpck_require__(3837)
const { stringify } = __nccwpck_require__(3477)

const [nodeMajor, nodeMinor] = process.versions.node.split('.').map(v => Number(v))

function nop () {}

function isStream (obj) {
  return obj && typeof obj === 'object' && typeof obj.pipe === 'function' && typeof obj.on === 'function'
}

// based on https://github.com/node-fetch/fetch-blob/blob/8ab587d34080de94140b54f07168451e7d0b655e/index.js#L229-L241 (MIT License)
function isBlobLike (object) {
  return (Blob && object instanceof Blob) || (
    object &&
    typeof object === 'object' &&
    (typeof object.stream === 'function' ||
      typeof object.arrayBuffer === 'function') &&
    /^(Blob|File)$/.test(object[Symbol.toStringTag])
  )
}

function buildURL (url, queryParams) {
  if (url.includes('?') || url.includes('#')) {
    throw new Error('Query params cannot be passed when url already contains "?" or "#".')
  }

  const stringified = stringify(queryParams)

  if (stringified) {
    url += '?' + stringified
  }

  return url
}

function parseURL (url) {
  if (typeof url === 'string') {
    url = new URL(url)

    if (!/^https?:/.test(url.origin || url.protocol)) {
      throw new InvalidArgumentError('Invalid URL protocol: the URL must start with `http:` or `https:`.')
    }

    return url
  }

  if (!url || typeof url !== 'object') {
    throw new InvalidArgumentError('Invalid URL: The URL argument must be a non-null object.')
  }

  if (!/^https?:/.test(url.origin || url.protocol)) {
    throw new InvalidArgumentError('Invalid URL protocol: the URL must start with `http:` or `https:`.')
  }

  if (!(url instanceof URL)) {
    if (url.port != null && url.port !== '' && !Number.isFinite(parseInt(url.port))) {
      throw new InvalidArgumentError('Invalid URL: port must be a valid integer or a string representation of an integer.')
    }

    if (url.path != null && typeof url.path !== 'string') {
      throw new InvalidArgumentError('Invalid URL path: the path must be a string or null/undefined.')
    }

    if (url.pathname != null && typeof url.pathname !== 'string') {
      throw new InvalidArgumentError('Invalid URL pathname: the pathname must be a string or null/undefined.')
    }

    if (url.hostname != null && typeof url.hostname !== 'string') {
      throw new InvalidArgumentError('Invalid URL hostname: the hostname must be a string or null/undefined.')
    }

    if (url.origin != null && typeof url.origin !== 'string') {
      throw new InvalidArgumentError('Invalid URL origin: the origin must be a string or null/undefined.')
    }

    const port = url.port != null
      ? url.port
      : (url.protocol === 'https:' ? 443 : 80)
    let origin = url.origin != null
      ? url.origin
      : `${url.protocol}//${url.hostname}:${port}`
    let path = url.path != null
      ? url.path
      : `${url.pathname || ''}${url.search || ''}`

    if (origin.endsWith('/')) {
      origin = origin.substring(0, origin.length - 1)
    }

    if (path && !path.startsWith('/')) {
      path = `/${path}`
    }
    // new URL(path, origin) is unsafe when `path` contains an absolute URL
    // From https://developer.mozilla.org/en-US/docs/Web/API/URL/URL:
    // If first parameter is a relative URL, second param is required, and will be used as the base URL.
    // If first parameter is an absolute URL, a given second param will be ignored.
    url = new URL(origin + path)
  }

  return url
}

function parseOrigin (url) {
  url = parseURL(url)

  if (url.pathname !== '/' || url.search || url.hash) {
    throw new InvalidArgumentError('invalid url')
  }

  return url
}

function getHostname (host) {
  if (host[0] === '[') {
    const idx = host.indexOf(']')

    assert(idx !== -1)
    return host.substr(1, idx - 1)
  }

  const idx = host.indexOf(':')
  if (idx === -1) return host

  return host.substr(0, idx)
}

// IP addresses are not valid server names per RFC6066
// > Currently, the only server names supported are DNS hostnames
function getServerName (host) {
  if (!host) {
    return null
  }

  assert.strictEqual(typeof host, 'string')

  const servername = getHostname(host)
  if (net.isIP(servername)) {
    return ''
  }

  return servername
}

function deepClone (obj) {
  return JSON.parse(JSON.stringify(obj))
}

function isAsyncIterable (obj) {
  return !!(obj != null && typeof obj[Symbol.asyncIterator] === 'function')
}

function isIterable (obj) {
  return !!(obj != null && (typeof obj[Symbol.iterator] === 'function' || typeof obj[Symbol.asyncIterator] === 'function'))
}

function bodyLength (body) {
  if (body == null) {
    return 0
  } else if (isStream(body)) {
    const state = body._readableState
    return state && state.objectMode === false && state.ended === true && Number.isFinite(state.length)
      ? state.length
      : null
  } else if (isBlobLike(body)) {
    return body.size != null ? body.size : null
  } else if (isBuffer(body)) {
    return body.byteLength
  }

  return null
}

function isDestroyed (stream) {
  return !stream || !!(stream.destroyed || stream[kDestroyed])
}

function isReadableAborted (stream) {
  const state = stream && stream._readableState
  return isDestroyed(stream) && state && !state.endEmitted
}

function destroy (stream, err) {
  if (!isStream(stream) || isDestroyed(stream)) {
    return
  }

  if (typeof stream.destroy === 'function') {
    if (Object.getPrototypeOf(stream).constructor === IncomingMessage) {
      // See: https://github.com/nodejs/node/pull/38505/files
      stream.socket = null
    }

    stream.destroy(err)
  } else if (err) {
    process.nextTick((stream, err) => {
      stream.emit('error', err)
    }, stream, err)
  }

  if (stream.destroyed !== true) {
    stream[kDestroyed] = true
  }
}

const KEEPALIVE_TIMEOUT_EXPR = /timeout=(\d+)/
function parseKeepAliveTimeout (val) {
  const m = val.toString().match(KEEPALIVE_TIMEOUT_EXPR)
  return m ? parseInt(m[1], 10) * 1000 : null
}

function parseHeaders (headers, obj = {}) {
  // For H2 support
  if (!Array.isArray(headers)) return headers

  for (let i = 0; i < headers.length; i += 2) {
    const key = headers[i].toString().toLowerCase()
    let val = obj[key]

    if (!val) {
      if (Array.isArray(headers[i + 1])) {
        obj[key] = headers[i + 1]
      } else {
        obj[key] = headers[i + 1].toString('utf8')
      }
    } else {
      if (!Array.isArray(val)) {
        val = [val]
        obj[key] = val
      }
      val.push(headers[i + 1].toString('utf8'))
    }
  }

  // See https://github.com/nodejs/node/pull/46528
  if ('content-length' in obj && 'content-disposition' in obj) {
    obj['content-disposition'] = Buffer.from(obj['content-disposition']).toString('latin1')
  }

  return obj
}

function parseRawHeaders (headers) {
  const ret = []
  let hasContentLength = false
  let contentDispositionIdx = -1

  for (let n = 0; n < headers.length; n += 2) {
    const key = headers[n + 0].toString()
    const val = headers[n + 1].toString('utf8')

    if (key.length === 14 && (key === 'content-length' || key.toLowerCase() === 'content-length')) {
      ret.push(key, val)
      hasContentLength = true
    } else if (key.length === 19 && (key === 'content-disposition' || key.toLowerCase() === 'content-disposition')) {
      contentDispositionIdx = ret.push(key, val) - 1
    } else {
      ret.push(key, val)
    }
  }

  // See https://github.com/nodejs/node/pull/46528
  if (hasContentLength && contentDispositionIdx !== -1) {
    ret[contentDispositionIdx] = Buffer.from(ret[contentDispositionIdx]).toString('latin1')
  }

  return ret
}

function isBuffer (buffer) {
  // See, https://github.com/mcollina/undici/pull/319
  return buffer instanceof Uint8Array || Buffer.isBuffer(buffer)
}

function validateHandler (handler, method, upgrade) {
  if (!handler || typeof handler !== 'object') {
    throw new InvalidArgumentError('handler must be an object')
  }

  if (typeof handler.onConnect !== 'function') {
    throw new InvalidArgumentError('invalid onConnect method')
  }

  if (typeof handler.onError !== 'function') {
    throw new InvalidArgumentError('invalid onError method')
  }

  if (typeof handler.onBodySent !== 'function' && handler.onBodySent !== undefined) {
    throw new InvalidArgumentError('invalid onBodySent method')
  }

  if (upgrade || method === 'CONNECT') {
    if (typeof handler.onUpgrade !== 'function') {
      throw new InvalidArgumentError('invalid onUpgrade method')
    }
  } else {
    if (typeof handler.onHeaders !== 'function') {
      throw new InvalidArgumentError('invalid onHeaders method')
    }

    if (typeof handler.onData !== 'function') {
      throw new InvalidArgumentError('invalid onData method')
    }

    if (typeof handler.onComplete !== 'function') {
      throw new InvalidArgumentError('invalid onComplete method')
    }
  }
}

// A body is disturbed if it has been read from and it cannot
// be re-used without losing state or data.
function isDisturbed (body) {
  return !!(body && (
    stream.isDisturbed
      ? stream.isDisturbed(body) || body[kBodyUsed] // TODO (fix): Why is body[kBodyUsed] needed?
      : body[kBodyUsed] ||
        body.readableDidRead ||
        (body._readableState && body._readableState.dataEmitted) ||
        isReadableAborted(body)
  ))
}

function isErrored (body) {
  return !!(body && (
    stream.isErrored
      ? stream.isErrored(body)
      : /state: 'errored'/.test(nodeUtil.inspect(body)
      )))
}

function isReadable (body) {
  return !!(body && (
    stream.isReadable
      ? stream.isReadable(body)
      : /state: 'readable'/.test(nodeUtil.inspect(body)
      )))
}

function getSocketInfo (socket) {
  return {
    localAddress: socket.localAddress,
    localPort: socket.localPort,
    remoteAddress: socket.remoteAddress,
    remotePort: socket.remotePort,
    remoteFamily: socket.remoteFamily,
    timeout: socket.timeout,
    bytesWritten: socket.bytesWritten,
    bytesRead: socket.bytesRead
  }
}

async function * convertIterableToBuffer (iterable) {
  for await (const chunk of iterable) {
    yield Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk)
  }
}

let ReadableStream
function ReadableStreamFrom (iterable) {
  if (!ReadableStream) {
    ReadableStream = (__nccwpck_require__(4544).ReadableStream)
  }

  if (ReadableStream.from) {
    return ReadableStream.from(convertIterableToBuffer(iterable))
  }

  let iterator
  return new ReadableStream(
    {
      async start () {
        iterator = iterable[Symbol.asyncIterator]()
      },
      async pull (controller) {
        const { done, value } = await iterator.next()
        if (done) {
          queueMicrotask(() => {
            controller.close()
          })
        } else {
          const buf = Buffer.isBuffer(value) ? value : Buffer.from(value)
          controller.enqueue(new Uint8Array(buf))
        }
        return controller.desiredSize > 0
      },
      async cancel (reason) {
        await iterator.return()
      }
    },
    0
  )
}

// The chunk should be a FormData instance and contains
// all the required methods.
function isFormDataLike (object) {
  return (
    object &&
    typeof object === 'object' &&
    typeof object.append === 'function' &&
    typeof object.delete === 'function' &&
    typeof object.get === 'function' &&
    typeof object.getAll === 'function' &&
    typeof object.has === 'function' &&
    typeof object.set === 'function' &&
    object[Symbol.toStringTag] === 'FormData'
  )
}

function throwIfAborted (signal) {
  if (!signal) { return }
  if (typeof signal.throwIfAborted === 'function') {
    signal.throwIfAborted()
  } else {
    if (signal.aborted) {
      // DOMException not available < v17.0.0
      const err = new Error('The operation was aborted')
      err.name = 'AbortError'
      throw err
    }
  }
}

let events
function addAbortListener (signal, listener) {
  if (typeof Symbol.dispose === 'symbol') {
    if (!events) {
      events = __nccwpck_require__(2361)
    }
    if (typeof events.addAbortListener === 'function' && 'aborted' in signal) {
      return events.addAbortListener(signal, listener)
    }
  }
  if ('addEventListener' in signal) {
    signal.addEventListener('abort', listener, { once: true })
    return () => signal.removeEventListener('abort', listener)
  }
  signal.addListener('abort', listener)
  return () => signal.removeListener('abort', listener)
}

const hasToWellFormed = !!String.prototype.toWellFormed

/**
 * @param {string} val
 */
function toUSVString (val) {
  if (hasToWellFormed) {
    return `${val}`.toWellFormed()
  } else if (nodeUtil.toUSVString) {
    return nodeUtil.toUSVString(val)
  }

  return `${val}`
}

const kEnumerableProperty = Object.create(null)
kEnumerableProperty.enumerable = true

module.exports = {
  kEnumerableProperty,
  nop,
  isDisturbed,
  isErrored,
  isReadable,
  toUSVString,
  isReadableAborted,
  isBlobLike,
  parseOrigin,
  parseURL,
  getServerName,
  isStream,
  isIterable,
  isAsyncIterable,
  isDestroyed,
  parseRawHeaders,
  parseHeaders,
  parseKeepAliveTimeout,
  destroy,
  bodyLength,
  deepClone,
  ReadableStreamFrom,
  isBuffer,
  validateHandler,
  getSocketInfo,
  isFormDataLike,
  buildURL,
  throwIfAborted,
  addAbortListener,
  nodeMajor,
  nodeMinor,
  nodeHasAutoSelectFamily: nodeMajor > 18 || (nodeMajor === 18 && nodeMinor >= 13)
}


/***/ }),

/***/ 4839:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const Dispatcher = __nccwpck_require__(412)
const {
  ClientDestroyedError,
  ClientClosedError,
  InvalidArgumentError
} = __nccwpck_require__(8045)
const { kDestroy, kClose, kDispatch, kInterceptors } = __nccwpck_require__(2785)

const kDestroyed = Symbol('destroyed')
const kClosed = Symbol('closed')
const kOnDestroyed = Symbol('onDestroyed')
const kOnClosed = Symbol('onClosed')
const kInterceptedDispatch = Symbol('Intercepted Dispatch')

class DispatcherBase extends Dispatcher {
  constructor () {
    super()

    this[kDestroyed] = false
    this[kOnDestroyed] = null
    this[kClosed] = false
    this[kOnClosed] = []
  }

  get destroyed () {
    return this[kDestroyed]
  }

  get closed () {
    return this[kClosed]
  }

  get interceptors () {
    return this[kInterceptors]
  }

  set interceptors (newInterceptors) {
    if (newInterceptors) {
      for (let i = newInterceptors.length - 1; i >= 0; i--) {
        const interceptor = this[kInterceptors][i]
        if (typeof interceptor !== 'function') {
          throw new InvalidArgumentError('interceptor must be an function')
        }
      }
    }

    this[kInterceptors] = newInterceptors
  }

  close (callback) {
    if (callback === undefined) {
      return new Promise((resolve, reject) => {
        this.close((err, data) => {
          return err ? reject(err) : resolve(data)
        })
      })
    }

    if (typeof callback !== 'function') {
      throw new InvalidArgumentError('invalid callback')
    }

    if (this[kDestroyed]) {
      queueMicrotask(() => callback(new ClientDestroyedError(), null))
      return
    }

    if (this[kClosed]) {
      if (this[kOnClosed]) {
        this[kOnClosed].push(callback)
      } else {
        queueMicrotask(() => callback(null, null))
      }
      return
    }

    this[kClosed] = true
    this[kOnClosed].push(callback)

    const onClosed = () => {
      const callbacks = this[kOnClosed]
      this[kOnClosed] = null
      for (let i = 0; i < callbacks.length; i++) {
        callbacks[i](null, null)
      }
    }

    // Should not error.
    this[kClose]()
      .then(() => this.destroy())
      .then(() => {
        queueMicrotask(onClosed)
      })
  }

  destroy (err, callback) {
    if (typeof err === 'function') {
      callback = err
      err = null
    }

    if (callback === undefined) {
      return new Promise((resolve, reject) => {
        this.destroy(err, (err, data) => {
          return err ? /* istanbul ignore next: should never error */ reject(err) : resolve(data)
        })
      })
    }

    if (typeof callback !== 'function') {
      throw new InvalidArgumentError('invalid callback')
    }

    if (this[kDestroyed]) {
      if (this[kOnDestroyed]) {
        this[kOnDestroyed].push(callback)
      } else {
        queueMicrotask(() => callback(null, null))
      }
      return
    }

    if (!err) {
      err = new ClientDestroyedError()
    }

    this[kDestroyed] = true
    this[kOnDestroyed] = this[kOnDestroyed] || []
    this[kOnDestroyed].push(callback)

    const onDestroyed = () => {
      const callbacks = this[kOnDestroyed]
      this[kOnDestroyed] = null
      for (let i = 0; i < callbacks.length; i++) {
        callbacks[i](null, null)
      }
    }

    // Should not error.
    this[kDestroy](err).then(() => {
      queueMicrotask(onDestroyed)
    })
  }

  [kInterceptedDispatch] (opts, handler) {
    if (!this[kInterceptors] || this[kInterceptors].length === 0) {
      this[kInterceptedDispatch] = this[kDispatch]
      return this[kDispatch](opts, handler)
    }

    let dispatch = this[kDispatch].bind(this)
    for (let i = this[kInterceptors].length - 1; i >= 0; i--) {
      dispatch = this[kInterceptors][i](dispatch)
    }
    this[kInterceptedDispatch] = dispatch
    return dispatch(opts, handler)
  }

  dispatch (opts, handler) {
    if (!handler || typeof handler !== 'object') {
      throw new InvalidArgumentError('handler must be an object')
    }

    try {
      if (!opts || typeof opts !== 'object') {
        throw new InvalidArgumentError('opts must be an object.')
      }

      if (this[kDestroyed] || this[kOnDestroyed]) {
        throw new ClientDestroyedError()
      }

      if (this[kClosed]) {
        throw new ClientClosedError()
      }

      return this[kInterceptedDispatch](opts, handler)
    } catch (err) {
      if (typeof handler.onError !== 'function') {
        throw new InvalidArgumentError('invalid onError method')
      }

      handler.onError(err)

      return false
    }
  }
}

module.exports = DispatcherBase


/***/ }),

/***/ 412:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const EventEmitter = __nccwpck_require__(2361)

class Dispatcher extends EventEmitter {
  dispatch () {
    throw new Error('not implemented')
  }

  close () {
    throw new Error('not implemented')
  }

  destroy () {
    throw new Error('not implemented')
  }
}

module.exports = Dispatcher


/***/ }),

/***/ 1472:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const Busboy = __nccwpck_require__(3438)
const util = __nccwpck_require__(3983)
const {
  ReadableStreamFrom,
  isBlobLike,
  isReadableStreamLike,
  readableStreamClose,
  createDeferredPromise,
  fullyReadBody
} = __nccwpck_require__(2538)
const { FormData } = __nccwpck_require__(2015)
const { kState } = __nccwpck_require__(5861)
const { webidl } = __nccwpck_require__(1744)
const { DOMException, structuredClone } = __nccwpck_require__(1037)
const { Blob, File: NativeFile } = __nccwpck_require__(4300)
const { kBodyUsed } = __nccwpck_require__(2785)
const assert = __nccwpck_require__(9491)
const { isErrored } = __nccwpck_require__(3983)
const { isUint8Array, isArrayBuffer } = __nccwpck_require__(9830)
const { File: UndiciFile } = __nccwpck_require__(8511)
const { parseMIMEType, serializeAMimeType } = __nccwpck_require__(685)

let ReadableStream = globalThis.ReadableStream

/** @type {globalThis['File']} */
const File = NativeFile ?? UndiciFile

// https://fetch.spec.whatwg.org/#concept-bodyinit-extract
function extractBody (object, keepalive = false) {
  if (!ReadableStream) {
    ReadableStream = (__nccwpck_require__(4544).ReadableStream)
  }

  // 1. Let stream be null.
  let stream = null

  // 2. If object is a ReadableStream object, then set stream to object.
  if (object instanceof ReadableStream) {
    stream = object
  } else if (isBlobLike(object)) {
    // 3. Otherwise, if object is a Blob object, set stream to the
    //    result of running object’s get stream.
    stream = object.stream()
  } else {
    // 4. Otherwise, set stream to a new ReadableStream object, and set
    //    up stream.
    stream = new ReadableStream({
      async pull (controller) {
        controller.enqueue(
          typeof source === 'string' ? new TextEncoder().encode(source) : source
        )
        queueMicrotask(() => readableStreamClose(controller))
      },
      start () {},
      type: undefined
    })
  }

  // 5. Assert: stream is a ReadableStream object.
  assert(isReadableStreamLike(stream))

  // 6. Let action be null.
  let action = null

  // 7. Let source be null.
  let source = null

  // 8. Let length be null.
  let length = null

  // 9. Let type be null.
  let type = null

  // 10. Switch on object:
  if (typeof object === 'string') {
    // Set source to the UTF-8 encoding of object.
    // Note: setting source to a Uint8Array here breaks some mocking assumptions.
    source = object

    // Set type to `text/plain;charset=UTF-8`.
    type = 'text/plain;charset=UTF-8'
  } else if (object instanceof URLSearchParams) {
    // URLSearchParams

    // spec says to run application/x-www-form-urlencoded on body.list
    // this is implemented in Node.js as apart of an URLSearchParams instance toString method
    // See: https://github.com/nodejs/node/blob/e46c680bf2b211bbd52cf959ca17ee98c7f657f5/lib/internal/url.js#L490
    // and https://github.com/nodejs/node/blob/e46c680bf2b211bbd52cf959ca17ee98c7f657f5/lib/internal/url.js#L1100

    // Set source to the result of running the application/x-www-form-urlencoded serializer with object’s list.
    source = object.toString()

    // Set type to `application/x-www-form-urlencoded;charset=UTF-8`.
    type = 'application/x-www-form-urlencoded;charset=UTF-8'
  } else if (isArrayBuffer(object)) {
    // BufferSource/ArrayBuffer

    // Set source to a copy of the bytes held by object.
    source = new Uint8Array(object.slice())
  } else if (ArrayBuffer.isView(object)) {
    // BufferSource/ArrayBufferView

    // Set source to a copy of the bytes held by object.
    source = new Uint8Array(object.buffer.slice(object.byteOffset, object.byteOffset + object.byteLength))
  } else if (util.isFormDataLike(object)) {
    const boundary = `----formdata-undici-0${`${Math.floor(Math.random() * 1e11)}`.padStart(11, '0')}`
    const prefix = `--${boundary}\r\nContent-Disposition: form-data`

    /*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */
    const escape = (str) =>
      str.replace(/\n/g, '%0A').replace(/\r/g, '%0D').replace(/"/g, '%22')
    const normalizeLinefeeds = (value) => value.replace(/\r?\n|\r/g, '\r\n')

    // Set action to this step: run the multipart/form-data
    // encoding algorithm, with object’s entry list and UTF-8.
    // - This ensures that the body is immutable and can't be changed afterwords
    // - That the content-length is calculated in advance.
    // - And that all parts are pre-encoded and ready to be sent.

    const enc = new TextEncoder()
    const blobParts = []
    const rn = new Uint8Array([13, 10]) // '\r\n'
    length = 0
    let hasUnknownSizeValue = false

    for (const [name, value] of object) {
      if (typeof value === 'string') {
        const chunk = enc.encode(prefix +
          `; name="${escape(normalizeLinefeeds(name))}"` +
          `\r\n\r\n${normalizeLinefeeds(value)}\r\n`)
        blobParts.push(chunk)
        length += chunk.byteLength
      } else {
        const chunk = enc.encode(`${prefix}; name="${escape(normalizeLinefeeds(name))}"` +
          (value.name ? `; filename="${escape(value.name)}"` : '') + '\r\n' +
          `Content-Type: ${
            value.type || 'application/octet-stream'
          }\r\n\r\n`)
        blobParts.push(chunk, value, rn)
        if (typeof value.size === 'number') {
          length += chunk.byteLength + value.size + rn.byteLength
        } else {
          hasUnknownSizeValue = true
        }
      }
    }

    const chunk = enc.encode(`--${boundary}--`)
    blobParts.push(chunk)
    length += chunk.byteLength
    if (hasUnknownSizeValue) {
      length = null
    }

    // Set source to object.
    source = object

    action = async function * () {
      for (const part of blobParts) {
        if (part.stream) {
          yield * part.stream()
        } else {
          yield part
        }
      }
    }

    // Set type to `multipart/form-data; boundary=`,
    // followed by the multipart/form-data boundary string generated
    // by the multipart/form-data encoding algorithm.
    type = 'multipart/form-data; boundary=' + boundary
  } else if (isBlobLike(object)) {
    // Blob

    // Set source to object.
    source = object

    // Set length to object’s size.
    length = object.size

    // If object’s type attribute is not the empty byte sequence, set
    // type to its value.
    if (object.type) {
      type = object.type
    }
  } else if (typeof object[Symbol.asyncIterator] === 'function') {
    // If keepalive is true, then throw a TypeError.
    if (keepalive) {
      throw new TypeError('keepalive')
    }

    // If object is disturbed or locked, then throw a TypeError.
    if (util.isDisturbed(object) || object.locked) {
      throw new TypeError(
        'Response body object should not be disturbed or locked'
      )
    }

    stream =
      object instanceof ReadableStream ? object : ReadableStreamFrom(object)
  }

  // 11. If source is a byte sequence, then set action to a
  // step that returns source and length to source’s length.
  if (typeof source === 'string' || util.isBuffer(source)) {
    length = Buffer.byteLength(source)
  }

  // 12. If action is non-null, then run these steps in in parallel:
  if (action != null) {
    // Run action.
    let iterator
    stream = new ReadableStream({
      async start () {
        iterator = action(object)[Symbol.asyncIterator]()
      },
      async pull (controller) {
        const { value, done } = await iterator.next()
        if (done) {
          // When running action is done, close stream.
          queueMicrotask(() => {
            controller.close()
          })
        } else {
          // Whenever one or more bytes are available and stream is not errored,
          // enqueue a Uint8Array wrapping an ArrayBuffer containing the available
          // bytes into stream.
          if (!isErrored(stream)) {
            controller.enqueue(new Uint8Array(value))
          }
        }
        return controller.desiredSize > 0
      },
      async cancel (reason) {
        await iterator.return()
      },
      type: undefined
    })
  }

  // 13. Let body be a body whose stream is stream, source is source,
  // and length is length.
  const body = { stream, source, length }

  // 14. Return (body, type).
  return [body, type]
}

// https://fetch.spec.whatwg.org/#bodyinit-safely-extract
function safelyExtractBody (object, keepalive = false) {
  if (!ReadableStream) {
    // istanbul ignore next
    ReadableStream = (__nccwpck_require__(4544).ReadableStream)
  }

  // To safely extract a body and a `Content-Type` value from
  // a byte sequence or BodyInit object object, run these steps:

  // 1. If object is a ReadableStream object, then:
  if (object instanceof ReadableStream) {
    // Assert: object is neither disturbed nor locked.
    // istanbul ignore next
    assert(!util.isDisturbed(object), 'The body has already been consumed.')
    // istanbul ignore next
    assert(!object.locked, 'The stream is locked.')
  }

  // 2. Return the results of extracting object.
  return extractBody(object, keepalive)
}

function cloneBody (body) {
  // To clone a body body, run these steps:

  // https://fetch.spec.whatwg.org/#concept-body-clone

  // 1. Let « out1, out2 » be the result of teeing body’s stream.
  const [out1, out2] = body.stream.tee()
  const out2Clone = structuredClone(out2, { transfer: [out2] })
  // This, for whatever reasons, unrefs out2Clone which allows
  // the process to exit by itself.
  const [, finalClone] = out2Clone.tee()

  // 2. Set body’s stream to out1.
  body.stream = out1

  // 3. Return a body whose stream is out2 and other members are copied from body.
  return {
    stream: finalClone,
    length: body.length,
    source: body.source
  }
}

async function * consumeBody (body) {
  if (body) {
    if (isUint8Array(body)) {
      yield body
    } else {
      const stream = body.stream

      if (util.isDisturbed(stream)) {
        throw new TypeError('The body has already been consumed.')
      }

      if (stream.locked) {
        throw new TypeError('The stream is locked.')
      }

      // Compat.
      stream[kBodyUsed] = true

      yield * stream
    }
  }
}

function throwIfAborted (state) {
  if (state.aborted) {
    throw new DOMException('The operation was aborted.', 'AbortError')
  }
}

function bodyMixinMethods (instance) {
  const methods = {
    blob () {
      // The blob() method steps are to return the result of
      // running consume body with this and the following step
      // given a byte sequence bytes: return a Blob whose
      // contents are bytes and whose type attribute is this’s
      // MIME type.
      return specConsumeBody(this, (bytes) => {
        let mimeType = bodyMimeType(this)

        if (mimeType === 'failure') {
          mimeType = ''
        } else if (mimeType) {
          mimeType = serializeAMimeType(mimeType)
        }

        // Return a Blob whose contents are bytes and type attribute
        // is mimeType.
        return new Blob([bytes], { type: mimeType })
      }, instance)
    },

    arrayBuffer () {
      // The arrayBuffer() method steps are to return the result
      // of running consume body with this and the following step
      // given a byte sequence bytes: return a new ArrayBuffer
      // whose contents are bytes.
      return specConsumeBody(this, (bytes) => {
        return new Uint8Array(bytes).buffer
      }, instance)
    },

    text () {
      // The text() method steps are to return the result of running
      // consume body with this and UTF-8 decode.
      return specConsumeBody(this, utf8DecodeBytes, instance)
    },

    json () {
      // The json() method steps are to return the result of running
      // consume body with this and parse JSON from bytes.
      return specConsumeBody(this, parseJSONFromBytes, instance)
    },

    async formData () {
      webidl.brandCheck(this, instance)

      throwIfAborted(this[kState])

      const contentType = this.headers.get('Content-Type')

      // If mimeType’s essence is "multipart/form-data", then:
      if (/multipart\/form-data/.test(contentType)) {
        const headers = {}
        for (const [key, value] of this.headers) headers[key.toLowerCase()] = value

        const responseFormData = new FormData()

        let busboy

        try {
          busboy = new Busboy({
            headers,
            preservePath: true
          })
        } catch (err) {
          throw new DOMException(`${err}`, 'AbortError')
        }

        busboy.on('field', (name, value) => {
          responseFormData.append(name, value)
        })
        busboy.on('file', (name, value, filename, encoding, mimeType) => {
          const chunks = []

          if (encoding === 'base64' || encoding.toLowerCase() === 'base64') {
            let base64chunk = ''

            value.on('data', (chunk) => {
              base64chunk += chunk.toString().replace(/[\r\n]/gm, '')

              const end = base64chunk.length - base64chunk.length % 4
              chunks.push(Buffer.from(base64chunk.slice(0, end), 'base64'))

              base64chunk = base64chunk.slice(end)
            })
            value.on('end', () => {
              chunks.push(Buffer.from(base64chunk, 'base64'))
              responseFormData.append(name, new File(chunks, filename, { type: mimeType }))
            })
          } else {
            value.on('data', (chunk) => {
              chunks.push(chunk)
            })
            value.on('end', () => {
              responseFormData.append(name, new File(chunks, filename, { type: mimeType }))
            })
          }
        })

        const busboyResolve = new Promise((resolve, reject) => {
          busboy.on('finish', resolve)
          busboy.on('error', (err) => reject(new TypeError(err)))
        })

        if (this.body !== null) for await (const chunk of consumeBody(this[kState].body)) busboy.write(chunk)
        busboy.end()
        await busboyResolve

        return responseFormData
      } else if (/application\/x-www-form-urlencoded/.test(contentType)) {
        // Otherwise, if mimeType’s essence is "application/x-www-form-urlencoded", then:

        // 1. Let entries be the result of parsing bytes.
        let entries
        try {
          let text = ''
          // application/x-www-form-urlencoded parser will keep the BOM.
          // https://url.spec.whatwg.org/#concept-urlencoded-parser
          const textDecoder = new TextDecoder('utf-8', { ignoreBOM: true })
          for await (const chunk of consumeBody(this[kState].body)) {
            if (!isUint8Array(chunk)) {
              throw new TypeError('Expected Uint8Array chunk')
            }
            text += textDecoder.decode(chunk, { stream: true })
          }
          text += textDecoder.decode()
          entries = new URLSearchParams(text)
        } catch (err) {
          // istanbul ignore next: Unclear when new URLSearchParams can fail on a string.
          // 2. If entries is failure, then throw a TypeError.
          throw Object.assign(new TypeError(), { cause: err })
        }

        // 3. Return a new FormData object whose entries are entries.
        const formData = new FormData()
        for (const [name, value] of entries) {
          formData.append(name, value)
        }
        return formData
      } else {
        // Wait a tick before checking if the request has been aborted.
        // Otherwise, a TypeError can be thrown when an AbortError should.
        await Promise.resolve()

        throwIfAborted(this[kState])

        // Otherwise, throw a TypeError.
        throw webidl.errors.exception({
          header: `${instance.name}.formData`,
          message: 'Could not parse content as FormData.'
        })
      }
    }
  }

  return methods
}

function mixinBody (prototype) {
  Object.assign(prototype.prototype, bodyMixinMethods(prototype))
}

/**
 * @see https://fetch.spec.whatwg.org/#concept-body-consume-body
 * @param {Response|Request} object
 * @param {(value: unknown) => unknown} convertBytesToJSValue
 * @param {Response|Request} instance
 */
async function specConsumeBody (object, convertBytesToJSValue, instance) {
  webidl.brandCheck(object, instance)

  throwIfAborted(object[kState])

  // 1. If object is unusable, then return a promise rejected
  //    with a TypeError.
  if (bodyUnusable(object[kState].body)) {
    throw new TypeError('Body is unusable')
  }

  // 2. Let promise be a new promise.
  const promise = createDeferredPromise()

  // 3. Let errorSteps given error be to reject promise with error.
  const errorSteps = (error) => promise.reject(error)

  // 4. Let successSteps given a byte sequence data be to resolve
  //    promise with the result of running convertBytesToJSValue
  //    with data. If that threw an exception, then run errorSteps
  //    with that exception.
  const successSteps = (data) => {
    try {
      promise.resolve(convertBytesToJSValue(data))
    } catch (e) {
      errorSteps(e)
    }
  }

  // 5. If object’s body is null, then run successSteps with an
  //    empty byte sequence.
  if (object[kState].body == null) {
    successSteps(new Uint8Array())
    return promise.promise
  }

  // 6. Otherwise, fully read object’s body given successSteps,
  //    errorSteps, and object’s relevant global object.
  await fullyReadBody(object[kState].body, successSteps, errorSteps)

  // 7. Return promise.
  return promise.promise
}

// https://fetch.spec.whatwg.org/#body-unusable
function bodyUnusable (body) {
  // An object including the Body interface mixin is
  // said to be unusable if its body is non-null and
  // its body’s stream is disturbed or locked.
  return body != null && (body.stream.locked || util.isDisturbed(body.stream))
}

/**
 * @see https://encoding.spec.whatwg.org/#utf-8-decode
 * @param {Buffer} buffer
 */
function utf8DecodeBytes (buffer) {
  if (buffer.length === 0) {
    return ''
  }

  // 1. Let buffer be the result of peeking three bytes from
  //    ioQueue, converted to a byte sequence.

  // 2. If buffer is 0xEF 0xBB 0xBF, then read three
  //    bytes from ioQueue. (Do nothing with those bytes.)
  if (buffer[0] === 0xEF && buffer[1] === 0xBB && buffer[2] === 0xBF) {
    buffer = buffer.subarray(3)
  }

  // 3. Process a queue with an instance of UTF-8’s
  //    decoder, ioQueue, output, and "replacement".
  const output = new TextDecoder().decode(buffer)

  // 4. Return output.
  return output
}

/**
 * @see https://infra.spec.whatwg.org/#parse-json-bytes-to-a-javascript-value
 * @param {Uint8Array} bytes
 */
function parseJSONFromBytes (bytes) {
  return JSON.parse(utf8DecodeBytes(bytes))
}

/**
 * @see https://fetch.spec.whatwg.org/#concept-body-mime-type
 * @param {import('./response').Response|import('./request').Request} object
 */
function bodyMimeType (object) {
  const { headersList } = object[kState]
  const contentType = headersList.get('content-type')

  if (contentType === null) {
    return 'failure'
  }

  return parseMIMEType(contentType)
}

module.exports = {
  extractBody,
  safelyExtractBody,
  cloneBody,
  mixinBody
}


/***/ }),

/***/ 1037:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { MessageChannel, receiveMessageOnPort } = __nccwpck_require__(1267)

const corsSafeListedMethods = ['GET', 'HEAD', 'POST']

const nullBodyStatus = [101, 204, 205, 304]

const redirectStatus = [301, 302, 303, 307, 308]

// https://fetch.spec.whatwg.org/#block-bad-port
const badPorts = [
  '1', '7', '9', '11', '13', '15', '17', '19', '20', '21', '22', '23', '25', '37', '42', '43', '53', '69', '77', '79',
  '87', '95', '101', '102', '103', '104', '109', '110', '111', '113', '115', '117', '119', '123', '135', '137',
  '139', '143', '161', '179', '389', '427', '465', '512', '513', '514', '515', '526', '530', '531', '532',
  '540', '548', '554', '556', '563', '587', '601', '636', '989', '990', '993', '995', '1719', '1720', '1723',
  '2049', '3659', '4045', '5060', '5061', '6000', '6566', '6665', '6666', '6667', '6668', '6669', '6697',
  '10080'
]

// https://w3c.github.io/webappsec-referrer-policy/#referrer-policies
const referrerPolicy = [
  '',
  'no-referrer',
  'no-referrer-when-downgrade',
  'same-origin',
  'origin',
  'strict-origin',
  'origin-when-cross-origin',
  'strict-origin-when-cross-origin',
  'unsafe-url'
]

const requestRedirect = ['follow', 'manual', 'error']

const safeMethods = ['GET', 'HEAD', 'OPTIONS', 'TRACE']

const requestMode = ['navigate', 'same-origin', 'no-cors', 'cors']

const requestCredentials = ['omit', 'same-origin', 'include']

const requestCache = [
  'default',
  'no-store',
  'reload',
  'no-cache',
  'force-cache',
  'only-if-cached'
]

// https://fetch.spec.whatwg.org/#request-body-header-name
const requestBodyHeader = [
  'content-encoding',
  'content-language',
  'content-location',
  'content-type',
  // See https://github.com/nodejs/undici/issues/2021
  // 'Content-Length' is a forbidden header name, which is typically
  // removed in the Headers implementation. However, undici doesn't
  // filter out headers, so we add it here.
  'content-length'
]

// https://fetch.spec.whatwg.org/#enumdef-requestduplex
const requestDuplex = [
  'half'
]

// http://fetch.spec.whatwg.org/#forbidden-method
const forbiddenMethods = ['CONNECT', 'TRACE', 'TRACK']

const subresource = [
  'audio',
  'audioworklet',
  'font',
  'image',
  'manifest',
  'paintworklet',
  'script',
  'style',
  'track',
  'video',
  'xslt',
  ''
]

/** @type {globalThis['DOMException']} */
const DOMException = globalThis.DOMException ?? (() => {
  // DOMException was only made a global in Node v17.0.0,
  // but fetch supports >= v16.8.
  try {
    atob('~')
  } catch (err) {
    return Object.getPrototypeOf(err).constructor
  }
})()

let channel

/** @type {globalThis['structuredClone']} */
const structuredClone =
  globalThis.structuredClone ??
  // https://github.com/nodejs/node/blob/b27ae24dcc4251bad726d9d84baf678d1f707fed/lib/internal/structured_clone.js
  // structuredClone was added in v17.0.0, but fetch supports v16.8
  function structuredClone (value, options = undefined) {
    if (arguments.length === 0) {
      throw new TypeError('missing argument')
    }

    if (!channel) {
      channel = new MessageChannel()
    }
    channel.port1.unref()
    channel.port2.unref()
    channel.port1.postMessage(value, options?.transfer)
    return receiveMessageOnPort(channel.port2).message
  }

module.exports = {
  DOMException,
  structuredClone,
  subresource,
  forbiddenMethods,
  requestBodyHeader,
  referrerPolicy,
  requestRedirect,
  requestMode,
  requestCredentials,
  requestCache,
  redirectStatus,
  corsSafeListedMethods,
  nullBodyStatus,
  safeMethods,
  badPorts,
  requestDuplex
}


/***/ }),

/***/ 685:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const assert = __nccwpck_require__(9491)
const { atob } = __nccwpck_require__(4300)
const { isomorphicDecode } = __nccwpck_require__(2538)

const encoder = new TextEncoder()

/**
 * @see https://mimesniff.spec.whatwg.org/#http-token-code-point
 */
const HTTP_TOKEN_CODEPOINTS = /^[!#$%&'*+-.^_|~A-Za-z0-9]+$/
const HTTP_WHITESPACE_REGEX = /(\u000A|\u000D|\u0009|\u0020)/ // eslint-disable-line
/**
 * @see https://mimesniff.spec.whatwg.org/#http-quoted-string-token-code-point
 */
const HTTP_QUOTED_STRING_TOKENS = /[\u0009|\u0020-\u007E|\u0080-\u00FF]/ // eslint-disable-line

// https://fetch.spec.whatwg.org/#data-url-processor
/** @param {URL} dataURL */
function dataURLProcessor (dataURL) {
  // 1. Assert: dataURL’s scheme is "data".
  assert(dataURL.protocol === 'data:')

  // 2. Let input be the result of running the URL
  // serializer on dataURL with exclude fragment
  // set to true.
  let input = URLSerializer(dataURL, true)

  // 3. Remove the leading "data:" string from input.
  input = input.slice(5)

  // 4. Let position point at the start of input.
  const position = { position: 0 }

  // 5. Let mimeType be the result of collecting a
  // sequence of code points that are not equal
  // to U+002C (,), given position.
  let mimeType = collectASequenceOfCodePointsFast(
    ',',
    input,
    position
  )

  // 6. Strip leading and trailing ASCII whitespace
  // from mimeType.
  // Undici implementation note: we need to store the
  // length because if the mimetype has spaces removed,
  // the wrong amount will be sliced from the input in
  // step #9
  const mimeTypeLength = mimeType.length
  mimeType = removeASCIIWhitespace(mimeType, true, true)

  // 7. If position is past the end of input, then
  // return failure
  if (position.position >= input.length) {
    return 'failure'
  }

  // 8. Advance position by 1.
  position.position++

  // 9. Let encodedBody be the remainder of input.
  const encodedBody = input.slice(mimeTypeLength + 1)

  // 10. Let body be the percent-decoding of encodedBody.
  let body = stringPercentDecode(encodedBody)

  // 11. If mimeType ends with U+003B (;), followed by
  // zero or more U+0020 SPACE, followed by an ASCII
  // case-insensitive match for "base64", then:
  if (/;(\u0020){0,}base64$/i.test(mimeType)) {
    // 1. Let stringBody be the isomorphic decode of body.
    const stringBody = isomorphicDecode(body)

    // 2. Set body to the forgiving-base64 decode of
    // stringBody.
    body = forgivingBase64(stringBody)

    // 3. If body is failure, then return failure.
    if (body === 'failure') {
      return 'failure'
    }

    // 4. Remove the last 6 code points from mimeType.
    mimeType = mimeType.slice(0, -6)

    // 5. Remove trailing U+0020 SPACE code points from mimeType,
    // if any.
    mimeType = mimeType.replace(/(\u0020)+$/, '')

    // 6. Remove the last U+003B (;) code point from mimeType.
    mimeType = mimeType.slice(0, -1)
  }

  // 12. If mimeType starts with U+003B (;), then prepend
  // "text/plain" to mimeType.
  if (mimeType.startsWith(';')) {
    mimeType = 'text/plain' + mimeType
  }

  // 13. Let mimeTypeRecord be the result of parsing
  // mimeType.
  let mimeTypeRecord = parseMIMEType(mimeType)

  // 14. If mimeTypeRecord is failure, then set
  // mimeTypeRecord to text/plain;charset=US-ASCII.
  if (mimeTypeRecord === 'failure') {
    mimeTypeRecord = parseMIMEType('text/plain;charset=US-ASCII')
  }

  // 15. Return a new data: URL struct whose MIME
  // type is mimeTypeRecord and body is body.
  // https://fetch.spec.whatwg.org/#data-url-struct
  return { mimeType: mimeTypeRecord, body }
}

// https://url.spec.whatwg.org/#concept-url-serializer
/**
 * @param {URL} url
 * @param {boolean} excludeFragment
 */
function URLSerializer (url, excludeFragment = false) {
  const href = url.href

  if (!excludeFragment) {
    return href
  }

  const hash = href.lastIndexOf('#')
  if (hash === -1) {
    return href
  }
  return href.slice(0, hash)
}

// https://infra.spec.whatwg.org/#collect-a-sequence-of-code-points
/**
 * @param {(char: string) => boolean} condition
 * @param {string} input
 * @param {{ position: number }} position
 */
function collectASequenceOfCodePoints (condition, input, position) {
  // 1. Let result be the empty string.
  let result = ''

  // 2. While position doesn’t point past the end of input and the
  // code point at position within input meets the condition condition:
  while (position.position < input.length && condition(input[position.position])) {
    // 1. Append that code point to the end of result.
    result += input[position.position]

    // 2. Advance position by 1.
    position.position++
  }

  // 3. Return result.
  return result
}

/**
 * A faster collectASequenceOfCodePoints that only works when comparing a single character.
 * @param {string} char
 * @param {string} input
 * @param {{ position: number }} position
 */
function collectASequenceOfCodePointsFast (char, input, position) {
  const idx = input.indexOf(char, position.position)
  const start = position.position

  if (idx === -1) {
    position.position = input.length
    return input.slice(start)
  }

  position.position = idx
  return input.slice(start, position.position)
}

// https://url.spec.whatwg.org/#string-percent-decode
/** @param {string} input */
function stringPercentDecode (input) {
  // 1. Let bytes be the UTF-8 encoding of input.
  const bytes = encoder.encode(input)

  // 2. Return the percent-decoding of bytes.
  return percentDecode(bytes)
}

// https://url.spec.whatwg.org/#percent-decode
/** @param {Uint8Array} input */
function percentDecode (input) {
  // 1. Let output be an empty byte sequence.
  /** @type {number[]} */
  const output = []

  // 2. For each byte byte in input:
  for (let i = 0; i < input.length; i++) {
    const byte = input[i]

    // 1. If byte is not 0x25 (%), then append byte to output.
    if (byte !== 0x25) {
      output.push(byte)

    // 2. Otherwise, if byte is 0x25 (%) and the next two bytes
    // after byte in input are not in the ranges
    // 0x30 (0) to 0x39 (9), 0x41 (A) to 0x46 (F),
    // and 0x61 (a) to 0x66 (f), all inclusive, append byte
    // to output.
    } else if (
      byte === 0x25 &&
      !/^[0-9A-Fa-f]{2}$/i.test(String.fromCharCode(input[i + 1], input[i + 2]))
    ) {
      output.push(0x25)

    // 3. Otherwise:
    } else {
      // 1. Let bytePoint be the two bytes after byte in input,
      // decoded, and then interpreted as hexadecimal number.
      const nextTwoBytes = String.fromCharCode(input[i + 1], input[i + 2])
      const bytePoint = Number.parseInt(nextTwoBytes, 16)

      // 2. Append a byte whose value is bytePoint to output.
      output.push(bytePoint)

      // 3. Skip the next two bytes in input.
      i += 2
    }
  }

  // 3. Return output.
  return Uint8Array.from(output)
}

// https://mimesniff.spec.whatwg.org/#parse-a-mime-type
/** @param {string} input */
function parseMIMEType (input) {
  // 1. Remove any leading and trailing HTTP whitespace
  // from input.
  input = removeHTTPWhitespace(input, true, true)

  // 2. Let position be a position variable for input,
  // initially pointing at the start of input.
  const position = { position: 0 }

  // 3. Let type be the result of collecting a sequence
  // of code points that are not U+002F (/) from
  // input, given position.
  const type = collectASequenceOfCodePointsFast(
    '/',
    input,
    position
  )

  // 4. If type is the empty string or does not solely
  // contain HTTP token code points, then return failure.
  // https://mimesniff.spec.whatwg.org/#http-token-code-point
  if (type.length === 0 || !HTTP_TOKEN_CODEPOINTS.test(type)) {
    return 'failure'
  }

  // 5. If position is past the end of input, then return
  // failure
  if (position.position > input.length) {
    return 'failure'
  }

  // 6. Advance position by 1. (This skips past U+002F (/).)
  position.position++

  // 7. Let subtype be the result of collecting a sequence of
  // code points that are not U+003B (;) from input, given
  // position.
  let subtype = collectASequenceOfCodePointsFast(
    ';',
    input,
    position
  )

  // 8. Remove any trailing HTTP whitespace from subtype.
  subtype = removeHTTPWhitespace(subtype, false, true)

  // 9. If subtype is the empty string or does not solely
  // contain HTTP token code points, then return failure.
  if (subtype.length === 0 || !HTTP_TOKEN_CODEPOINTS.test(subtype)) {
    return 'failure'
  }

  const typeLowercase = type.toLowerCase()
  const subtypeLowercase = subtype.toLowerCase()

  // 10. Let mimeType be a new MIME type record whose type
  // is type, in ASCII lowercase, and subtype is subtype,
  // in ASCII lowercase.
  // https://mimesniff.spec.whatwg.org/#mime-type
  const mimeType = {
    type: typeLowercase,
    subtype: subtypeLowercase,
    /** @type {Map<string, string>} */
    parameters: new Map(),
    // https://mimesniff.spec.whatwg.org/#mime-type-essence
    essence: `${typeLowercase}/${subtypeLowercase}`
  }

  // 11. While position is not past the end of input:
  while (position.position < input.length) {
    // 1. Advance position by 1. (This skips past U+003B (;).)
    position.position++

    // 2. Collect a sequence of code points that are HTTP
    // whitespace from input given position.
    collectASequenceOfCodePoints(
      // https://fetch.spec.whatwg.org/#http-whitespace
      char => HTTP_WHITESPACE_REGEX.test(char),
      input,
      position
    )

    // 3. Let parameterName be the result of collecting a
    // sequence of code points that are not U+003B (;)
    // or U+003D (=) from input, given position.
    let parameterName = collectASequenceOfCodePoints(
      (char) => char !== ';' && char !== '=',
      input,
      position
    )

    // 4. Set parameterName to parameterName, in ASCII
    // lowercase.
    parameterName = parameterName.toLowerCase()

    // 5. If position is not past the end of input, then:
    if (position.position < input.length) {
      // 1. If the code point at position within input is
      // U+003B (;), then continue.
      if (input[position.position] === ';') {
        continue
      }

      // 2. Advance position by 1. (This skips past U+003D (=).)
      position.position++
    }

    // 6. If position is past the end of input, then break.
    if (position.position > input.length) {
      break
    }

    // 7. Let parameterValue be null.
    let parameterValue = null

    // 8. If the code point at position within input is
    // U+0022 ("), then:
    if (input[position.position] === '"') {
      // 1. Set parameterValue to the result of collecting
      // an HTTP quoted string from input, given position
      // and the extract-value flag.
      parameterValue = collectAnHTTPQuotedString(input, position, true)

      // 2. Collect a sequence of code points that are not
      // U+003B (;) from input, given position.
      collectASequenceOfCodePointsFast(
        ';',
        input,
        position
      )

    // 9. Otherwise:
    } else {
      // 1. Set parameterValue to the result of collecting
      // a sequence of code points that are not U+003B (;)
      // from input, given position.
      parameterValue = collectASequenceOfCodePointsFast(
        ';',
        input,
        position
      )

      // 2. Remove any trailing HTTP whitespace from parameterValue.
      parameterValue = removeHTTPWhitespace(parameterValue, false, true)

      // 3. If parameterValue is the empty string, then continue.
      if (parameterValue.length === 0) {
        continue
      }
    }

    // 10. If all of the following are true
    // - parameterName is not the empty string
    // - parameterName solely contains HTTP token code points
    // - parameterValue solely contains HTTP quoted-string token code points
    // - mimeType’s parameters[parameterName] does not exist
    // then set mimeType’s parameters[parameterName] to parameterValue.
    if (
      parameterName.length !== 0 &&
      HTTP_TOKEN_CODEPOINTS.test(parameterName) &&
      (parameterValue.length === 0 || HTTP_QUOTED_STRING_TOKENS.test(parameterValue)) &&
      !mimeType.parameters.has(parameterName)
    ) {
      mimeType.parameters.set(parameterName, parameterValue)
    }
  }

  // 12. Return mimeType.
  return mimeType
}

// https://infra.spec.whatwg.org/#forgiving-base64-decode
/** @param {string} data */
function forgivingBase64 (data) {
  // 1. Remove all ASCII whitespace from data.
  data = data.replace(/[\u0009\u000A\u000C\u000D\u0020]/g, '')  // eslint-disable-line

  // 2. If data’s code point length divides by 4 leaving
  // no remainder, then:
  if (data.length % 4 === 0) {
    // 1. If data ends with one or two U+003D (=) code points,
    // then remove them from data.
    data = data.replace(/=?=$/, '')
  }

  // 3. If data’s code point length divides by 4 leaving
  // a remainder of 1, then return failure.
  if (data.length % 4 === 1) {
    return 'failure'
  }

  // 4. If data contains a code point that is not one of
  //  U+002B (+)
  //  U+002F (/)
  //  ASCII alphanumeric
  // then return failure.
  if (/[^+/0-9A-Za-z]/.test(data)) {
    return 'failure'
  }

  const binary = atob(data)
  const bytes = new Uint8Array(binary.length)

  for (let byte = 0; byte < binary.length; byte++) {
    bytes[byte] = binary.charCodeAt(byte)
  }

  return bytes
}

// https://fetch.spec.whatwg.org/#collect-an-http-quoted-string
// tests: https://fetch.spec.whatwg.org/#example-http-quoted-string
/**
 * @param {string} input
 * @param {{ position: number }} position
 * @param {boolean?} extractValue
 */
function collectAnHTTPQuotedString (input, position, extractValue) {
  // 1. Let positionStart be position.
  const positionStart = position.position

  // 2. Let value be the empty string.
  let value = ''

  // 3. Assert: the code point at position within input
  // is U+0022 (").
  assert(input[position.position] === '"')

  // 4. Advance position by 1.
  position.position++

  // 5. While true:
  while (true) {
    // 1. Append the result of collecting a sequence of code points
    // that are not U+0022 (") or U+005C (\) from input, given
    // position, to value.
    value += collectASequenceOfCodePoints(
      (char) => char !== '"' && char !== '\\',
      input,
      position
    )

    // 2. If position is past the end of input, then break.
    if (position.position >= input.length) {
      break
    }

    // 3. Let quoteOrBackslash be the code point at position within
    // input.
    const quoteOrBackslash = input[position.position]

    // 4. Advance position by 1.
    position.position++

    // 5. If quoteOrBackslash is U+005C (\), then:
    if (quoteOrBackslash === '\\') {
      // 1. If position is past the end of input, then append
      // U+005C (\) to value and break.
      if (position.position >= input.length) {
        value += '\\'
        break
      }

      // 2. Append the code point at position within input to value.
      value += input[position.position]

      // 3. Advance position by 1.
      position.position++

    // 6. Otherwise:
    } else {
      // 1. Assert: quoteOrBackslash is U+0022 (").
      assert(quoteOrBackslash === '"')

      // 2. Break.
      break
    }
  }

  // 6. If the extract-value flag is set, then return value.
  if (extractValue) {
    return value
  }

  // 7. Return the code points from positionStart to position,
  // inclusive, within input.
  return input.slice(positionStart, position.position)
}

/**
 * @see https://mimesniff.spec.whatwg.org/#serialize-a-mime-type
 */
function serializeAMimeType (mimeType) {
  assert(mimeType !== 'failure')
  const { parameters, essence } = mimeType

  // 1. Let serialization be the concatenation of mimeType’s
  //    type, U+002F (/), and mimeType’s subtype.
  let serialization = essence

  // 2. For each name → value of mimeType’s parameters:
  for (let [name, value] of parameters.entries()) {
    // 1. Append U+003B (;) to serialization.
    serialization += ';'

    // 2. Append name to serialization.
    serialization += name

    // 3. Append U+003D (=) to serialization.
    serialization += '='

    // 4. If value does not solely contain HTTP token code
    //    points or value is the empty string, then:
    if (!HTTP_TOKEN_CODEPOINTS.test(value)) {
      // 1. Precede each occurence of U+0022 (") or
      //    U+005C (\) in value with U+005C (\).
      value = value.replace(/(\\|")/g, '\\$1')

      // 2. Prepend U+0022 (") to value.
      value = '"' + value

      // 3. Append U+0022 (") to value.
      value += '"'
    }

    // 5. Append value to serialization.
    serialization += value
  }

  // 3. Return serialization.
  return serialization
}

/**
 * @see https://fetch.spec.whatwg.org/#http-whitespace
 * @param {string} char
 */
function isHTTPWhiteSpace (char) {
  return char === '\r' || char === '\n' || char === '\t' || char === ' '
}

/**
 * @see https://fetch.spec.whatwg.org/#http-whitespace
 * @param {string} str
 */
function removeHTTPWhitespace (str, leading = true, trailing = true) {
  let lead = 0
  let trail = str.length - 1

  if (leading) {
    for (; lead < str.length && isHTTPWhiteSpace(str[lead]); lead++);
  }

  if (trailing) {
    for (; trail > 0 && isHTTPWhiteSpace(str[trail]); trail--);
  }

  return str.slice(lead, trail + 1)
}

/**
 * @see https://infra.spec.whatwg.org/#ascii-whitespace
 * @param {string} char
 */
function isASCIIWhitespace (char) {
  return char === '\r' || char === '\n' || char === '\t' || char === '\f' || char === ' '
}

/**
 * @see https://infra.spec.whatwg.org/#strip-leading-and-trailing-ascii-whitespace
 */
function removeASCIIWhitespace (str, leading = true, trailing = true) {
  let lead = 0
  let trail = str.length - 1

  if (leading) {
    for (; lead < str.length && isASCIIWhitespace(str[lead]); lead++);
  }

  if (trailing) {
    for (; trail > 0 && isASCIIWhitespace(str[trail]); trail--);
  }

  return str.slice(lead, trail + 1)
}

module.exports = {
  dataURLProcessor,
  URLSerializer,
  collectASequenceOfCodePoints,
  collectASequenceOfCodePointsFast,
  stringPercentDecode,
  parseMIMEType,
  collectAnHTTPQuotedString,
  serializeAMimeType
}


/***/ }),

/***/ 8511:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { Blob, File: NativeFile } = __nccwpck_require__(4300)
const { types } = __nccwpck_require__(3837)
const { kState } = __nccwpck_require__(5861)
const { isBlobLike } = __nccwpck_require__(2538)
const { webidl } = __nccwpck_require__(1744)
const { parseMIMEType, serializeAMimeType } = __nccwpck_require__(685)
const { kEnumerableProperty } = __nccwpck_require__(3983)

class File extends Blob {
  constructor (fileBits, fileName, options = {}) {
    // The File constructor is invoked with two or three parameters, depending
    // on whether the optional dictionary parameter is used. When the File()
    // constructor is invoked, user agents must run the following steps:
    webidl.argumentLengthCheck(arguments, 2, { header: 'File constructor' })

    fileBits = webidl.converters['sequence<BlobPart>'](fileBits)
    fileName = webidl.converters.USVString(fileName)
    options = webidl.converters.FilePropertyBag(options)

    // 1. Let bytes be the result of processing blob parts given fileBits and
    // options.
    // Note: Blob handles this for us

    // 2. Let n be the fileName argument to the constructor.
    const n = fileName

    // 3. Process FilePropertyBag dictionary argument by running the following
    // substeps:

    //    1. If the type member is provided and is not the empty string, let t
    //    be set to the type dictionary member. If t contains any characters
    //    outside the range U+0020 to U+007E, then set t to the empty string
    //    and return from these substeps.
    //    2. Convert every character in t to ASCII lowercase.
    let t = options.type
    let d

    // eslint-disable-next-line no-labels
    substep: {
      if (t) {
        t = parseMIMEType(t)

        if (t === 'failure') {
          t = ''
          // eslint-disable-next-line no-labels
          break substep
        }

        t = serializeAMimeType(t).toLowerCase()
      }

      //    3. If the lastModified member is provided, let d be set to the
      //    lastModified dictionary member. If it is not provided, set d to the
      //    current date and time represented as the number of milliseconds since
      //    the Unix Epoch (which is the equivalent of Date.now() [ECMA-262]).
      d = options.lastModified
    }

    // 4. Return a new File object F such that:
    // F refers to the bytes byte sequence.
    // F.size is set to the number of total bytes in bytes.
    // F.name is set to n.
    // F.type is set to t.
    // F.lastModified is set to d.

    super(processBlobParts(fileBits, options), { type: t })
    this[kState] = {
      name: n,
      lastModified: d,
      type: t
    }
  }

  get name () {
    webidl.brandCheck(this, File)

    return this[kState].name
  }

  get lastModified () {
    webidl.brandCheck(this, File)

    return this[kState].lastModified
  }

  get type () {
    webidl.brandCheck(this, File)

    return this[kState].type
  }
}

class FileLike {
  constructor (blobLike, fileName, options = {}) {
    // TODO: argument idl type check

    // The File constructor is invoked with two or three parameters, depending
    // on whether the optional dictionary parameter is used. When the File()
    // constructor is invoked, user agents must run the following steps:

    // 1. Let bytes be the result of processing blob parts given fileBits and
    // options.

    // 2. Let n be the fileName argument to the constructor.
    const n = fileName

    // 3. Process FilePropertyBag dictionary argument by running the following
    // substeps:

    //    1. If the type member is provided and is not the empty string, let t
    //    be set to the type dictionary member. If t contains any characters
    //    outside the range U+0020 to U+007E, then set t to the empty string
    //    and return from these substeps.
    //    TODO
    const t = options.type

    //    2. Convert every character in t to ASCII lowercase.
    //    TODO

    //    3. If the lastModified member is provided, let d be set to the
    //    lastModified dictionary member. If it is not provided, set d to the
    //    current date and time represented as the number of milliseconds since
    //    the Unix Epoch (which is the equivalent of Date.now() [ECMA-262]).
    const d = options.lastModified ?? Date.now()

    // 4. Return a new File object F such that:
    // F refers to the bytes byte sequence.
    // F.size is set to the number of total bytes in bytes.
    // F.name is set to n.
    // F.type is set to t.
    // F.lastModified is set to d.

    this[kState] = {
      blobLike,
      name: n,
      type: t,
      lastModified: d
    }
  }

  stream (...args) {
    webidl.brandCheck(this, FileLike)

    return this[kState].blobLike.stream(...args)
  }

  arrayBuffer (...args) {
    webidl.brandCheck(this, FileLike)

    return this[kState].blobLike.arrayBuffer(...args)
  }

  slice (...args) {
    webidl.brandCheck(this, FileLike)

    return this[kState].blobLike.slice(...args)
  }

  text (...args) {
    webidl.brandCheck(this, FileLike)

    return this[kState].blobLike.text(...args)
  }

  get size () {
    webidl.brandCheck(this, FileLike)

    return this[kState].blobLike.size
  }

  get type () {
    webidl.brandCheck(this, FileLike)

    return this[kState].blobLike.type
  }

  get name () {
    webidl.brandCheck(this, FileLike)

    return this[kState].name
  }

  get lastModified () {
    webidl.brandCheck(this, FileLike)

    return this[kState].lastModified
  }

  get [Symbol.toStringTag] () {
    return 'File'
  }
}

Object.defineProperties(File.prototype, {
  [Symbol.toStringTag]: {
    value: 'File',
    configurable: true
  },
  name: kEnumerableProperty,
  lastModified: kEnumerableProperty
})

webidl.converters.Blob = webidl.interfaceConverter(Blob)

webidl.converters.BlobPart = function (V, opts) {
  if (webidl.util.Type(V) === 'Object') {
    if (isBlobLike(V)) {
      return webidl.converters.Blob(V, { strict: false })
    }

    if (
      ArrayBuffer.isView(V) ||
      types.isAnyArrayBuffer(V)
    ) {
      return webidl.converters.BufferSource(V, opts)
    }
  }

  return webidl.converters.USVString(V, opts)
}

webidl.converters['sequence<BlobPart>'] = webidl.sequenceConverter(
  webidl.converters.BlobPart
)

// https://www.w3.org/TR/FileAPI/#dfn-FilePropertyBag
webidl.converters.FilePropertyBag = webidl.dictionaryConverter([
  {
    key: 'lastModified',
    converter: webidl.converters['long long'],
    get defaultValue () {
      return Date.now()
    }
  },
  {
    key: 'type',
    converter: webidl.converters.DOMString,
    defaultValue: ''
  },
  {
    key: 'endings',
    converter: (value) => {
      value = webidl.converters.DOMString(value)
      value = value.toLowerCase()

      if (value !== 'native') {
        value = 'transparent'
      }

      return value
    },
    defaultValue: 'transparent'
  }
])

/**
 * @see https://www.w3.org/TR/FileAPI/#process-blob-parts
 * @param {(NodeJS.TypedArray|Blob|string)[]} parts
 * @param {{ type: string, endings: string }} options
 */
function processBlobParts (parts, options) {
  // 1. Let bytes be an empty sequence of bytes.
  /** @type {NodeJS.TypedArray[]} */
  const bytes = []

  // 2. For each element in parts:
  for (const element of parts) {
    // 1. If element is a USVString, run the following substeps:
    if (typeof element === 'string') {
      // 1. Let s be element.
      let s = element

      // 2. If the endings member of options is "native", set s
      //    to the result of converting line endings to native
      //    of element.
      if (options.endings === 'native') {
        s = convertLineEndingsNative(s)
      }

      // 3. Append the result of UTF-8 encoding s to bytes.
      bytes.push(new TextEncoder().encode(s))
    } else if (
      types.isAnyArrayBuffer(element) ||
      types.isTypedArray(element)
    ) {
      // 2. If element is a BufferSource, get a copy of the
      //    bytes held by the buffer source, and append those
      //    bytes to bytes.
      if (!element.buffer) { // ArrayBuffer
        bytes.push(new Uint8Array(element))
      } else {
        bytes.push(
          new Uint8Array(element.buffer, element.byteOffset, element.byteLength)
        )
      }
    } else if (isBlobLike(element)) {
      // 3. If element is a Blob, append the bytes it represents
      //    to bytes.
      bytes.push(element)
    }
  }

  // 3. Return bytes.
  return bytes
}

/**
 * @see https://www.w3.org/TR/FileAPI/#convert-line-endings-to-native
 * @param {string} s
 */
function convertLineEndingsNative (s) {
  // 1. Let native line ending be be the code point U+000A LF.
  let nativeLineEnding = '\n'

  // 2. If the underlying platform’s conventions are to
  //    represent newlines as a carriage return and line feed
  //    sequence, set native line ending to the code point
  //    U+000D CR followed by the code point U+000A LF.
  if (process.platform === 'win32') {
    nativeLineEnding = '\r\n'
  }

  return s.replace(/\r?\n/g, nativeLineEnding)
}

// If this function is moved to ./util.js, some tools (such as
// rollup) will warn about circular dependencies. See:
// https://github.com/nodejs/undici/issues/1629
function isFileLike (object) {
  return (
    (NativeFile && object instanceof NativeFile) ||
    object instanceof File || (
      object &&
      (typeof object.stream === 'function' ||
      typeof object.arrayBuffer === 'function') &&
      object[Symbol.toStringTag] === 'File'
    )
  )
}

module.exports = { File, FileLike, isFileLike }


/***/ }),

/***/ 2015:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { isBlobLike, toUSVString, makeIterator } = __nccwpck_require__(2538)
const { kState } = __nccwpck_require__(5861)
const { File: UndiciFile, FileLike, isFileLike } = __nccwpck_require__(8511)
const { webidl } = __nccwpck_require__(1744)
const { Blob, File: NativeFile } = __nccwpck_require__(4300)

/** @type {globalThis['File']} */
const File = NativeFile ?? UndiciFile

// https://xhr.spec.whatwg.org/#formdata
class FormData {
  constructor (form) {
    if (form !== undefined) {
      throw webidl.errors.conversionFailed({
        prefix: 'FormData constructor',
        argument: 'Argument 1',
        types: ['undefined']
      })
    }

    this[kState] = []
  }

  append (name, value, filename = undefined) {
    webidl.brandCheck(this, FormData)

    webidl.argumentLengthCheck(arguments, 2, { header: 'FormData.append' })

    if (arguments.length === 3 && !isBlobLike(value)) {
      throw new TypeError(
        "Failed to execute 'append' on 'FormData': parameter 2 is not of type 'Blob'"
      )
    }

    // 1. Let value be value if given; otherwise blobValue.

    name = webidl.converters.USVString(name)
    value = isBlobLike(value)
      ? webidl.converters.Blob(value, { strict: false })
      : webidl.converters.USVString(value)
    filename = arguments.length === 3
      ? webidl.converters.USVString(filename)
      : undefined

    // 2. Let entry be the result of creating an entry with
    // name, value, and filename if given.
    const entry = makeEntry(name, value, filename)

    // 3. Append entry to this’s entry list.
    this[kState].push(entry)
  }

  delete (name) {
    webidl.brandCheck(this, FormData)

    webidl.argumentLengthCheck(arguments, 1, { header: 'FormData.delete' })

    name = webidl.converters.USVString(name)

    // The delete(name) method steps are to remove all entries whose name
    // is name from this’s entry list.
    this[kState] = this[kState].filter(entry => entry.name !== name)
  }

  get (name) {
    webidl.brandCheck(this, FormData)

    webidl.argumentLengthCheck(arguments, 1, { header: 'FormData.get' })

    name = webidl.converters.USVString(name)

    // 1. If there is no entry whose name is name in this’s entry list,
    // then return null.
    const idx = this[kState].findIndex((entry) => entry.name === name)
    if (idx === -1) {
      return null
    }

    // 2. Return the value of the first entry whose name is name from
    // this’s entry list.
    return this[kState][idx].value
  }

  getAll (name) {
    webidl.brandCheck(this, FormData)

    webidl.argumentLengthCheck(arguments, 1, { header: 'FormData.getAll' })

    name = webidl.converters.USVString(name)

    // 1. If there is no entry whose name is name in this’s entry list,
    // then return the empty list.
    // 2. Return the values of all entries whose name is name, in order,
    // from this’s entry list.
    return this[kState]
      .filter((entry) => entry.name === name)
      .map((entry) => entry.value)
  }

  has (name) {
    webidl.brandCheck(this, FormData)

    webidl.argumentLengthCheck(arguments, 1, { header: 'FormData.has' })

    name = webidl.converters.USVString(name)

    // The has(name) method steps are to return true if there is an entry
    // whose name is name in this’s entry list; otherwise false.
    return this[kState].findIndex((entry) => entry.name === name) !== -1
  }

  set (name, value, filename = undefined) {
    webidl.brandCheck(this, FormData)

    webidl.argumentLengthCheck(arguments, 2, { header: 'FormData.set' })

    if (arguments.length === 3 && !isBlobLike(value)) {
      throw new TypeError(
        "Failed to execute 'set' on 'FormData': parameter 2 is not of type 'Blob'"
      )
    }

    // The set(name, value) and set(name, blobValue, filename) method steps
    // are:

    // 1. Let value be value if given; otherwise blobValue.

    name = webidl.converters.USVString(name)
    value = isBlobLike(value)
      ? webidl.converters.Blob(value, { strict: false })
      : webidl.converters.USVString(value)
    filename = arguments.length === 3
      ? toUSVString(filename)
      : undefined

    // 2. Let entry be the result of creating an entry with name, value, and
    // filename if given.
    const entry = makeEntry(name, value, filename)

    // 3. If there are entries in this’s entry list whose name is name, then
    // replace the first such entry with entry and remove the others.
    const idx = this[kState].findIndex((entry) => entry.name === name)
    if (idx !== -1) {
      this[kState] = [
        ...this[kState].slice(0, idx),
        entry,
        ...this[kState].slice(idx + 1).filter((entry) => entry.name !== name)
      ]
    } else {
      // 4. Otherwise, append entry to this’s entry list.
      this[kState].push(entry)
    }
  }

  entries () {
    webidl.brandCheck(this, FormData)

    return makeIterator(
      () => this[kState].map(pair => [pair.name, pair.value]),
      'FormData',
      'key+value'
    )
  }

  keys () {
    webidl.brandCheck(this, FormData)

    return makeIterator(
      () => this[kState].map(pair => [pair.name, pair.value]),
      'FormData',
      'key'
    )
  }

  values () {
    webidl.brandCheck(this, FormData)

    return makeIterator(
      () => this[kState].map(pair => [pair.name, pair.value]),
      'FormData',
      'value'
    )
  }

  /**
   * @param {(value: string, key: string, self: FormData) => void} callbackFn
   * @param {unknown} thisArg
   */
  forEach (callbackFn, thisArg = globalThis) {
    webidl.brandCheck(this, FormData)

    webidl.argumentLengthCheck(arguments, 1, { header: 'FormData.forEach' })

    if (typeof callbackFn !== 'function') {
      throw new TypeError(
        "Failed to execute 'forEach' on 'FormData': parameter 1 is not of type 'Function'."
      )
    }

    for (const [key, value] of this) {
      callbackFn.apply(thisArg, [value, key, this])
    }
  }
}

FormData.prototype[Symbol.iterator] = FormData.prototype.entries

Object.defineProperties(FormData.prototype, {
  [Symbol.toStringTag]: {
    value: 'FormData',
    configurable: true
  }
})

/**
 * @see https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#create-an-entry
 * @param {string} name
 * @param {string|Blob} value
 * @param {?string} filename
 * @returns
 */
function makeEntry (name, value, filename) {
  // 1. Set name to the result of converting name into a scalar value string.
  // "To convert a string into a scalar value string, replace any surrogates
  //  with U+FFFD."
  // see: https://nodejs.org/dist/latest-v18.x/docs/api/buffer.html#buftostringencoding-start-end
  name = Buffer.from(name).toString('utf8')

  // 2. If value is a string, then set value to the result of converting
  //    value into a scalar value string.
  if (typeof value === 'string') {
    value = Buffer.from(value).toString('utf8')
  } else {
    // 3. Otherwise:

    // 1. If value is not a File object, then set value to a new File object,
    //    representing the same bytes, whose name attribute value is "blob"
    if (!isFileLike(value)) {
      value = value instanceof Blob
        ? new File([value], 'blob', { type: value.type })
        : new FileLike(value, 'blob', { type: value.type })
    }

    // 2. If filename is given, then set value to a new File object,
    //    representing the same bytes, whose name attribute is filename.
    if (filename !== undefined) {
      /** @type {FilePropertyBag} */
      const options = {
        type: value.type,
        lastModified: value.lastModified
      }

      value = (NativeFile && value instanceof NativeFile) || value instanceof UndiciFile
        ? new File([value], filename, options)
        : new FileLike(value, filename, options)
    }
  }

  // 4. Return an entry whose name is name and whose value is value.
  return { name, value }
}

module.exports = { FormData }


/***/ }),

/***/ 1246:
/***/ ((module) => {

"use strict";


// In case of breaking changes, increase the version
// number to avoid conflicts.
const globalOrigin = Symbol.for('undici.globalOrigin.1')

function getGlobalOrigin () {
  return globalThis[globalOrigin]
}

function setGlobalOrigin (newOrigin) {
  if (newOrigin === undefined) {
    Object.defineProperty(globalThis, globalOrigin, {
      value: undefined,
      writable: true,
      enumerable: false,
      configurable: false
    })

    return
  }

  const parsedURL = new URL(newOrigin)

  if (parsedURL.protocol !== 'http:' && parsedURL.protocol !== 'https:') {
    throw new TypeError(`Only http & https urls are allowed, received ${parsedURL.protocol}`)
  }

  Object.defineProperty(globalThis, globalOrigin, {
    value: parsedURL,
    writable: true,
    enumerable: false,
    configurable: false
  })
}

module.exports = {
  getGlobalOrigin,
  setGlobalOrigin
}


/***/ }),

/***/ 554:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";
// https://github.com/Ethan-Arrowood/undici-fetch



const { kHeadersList } = __nccwpck_require__(2785)
const { kGuard } = __nccwpck_require__(5861)
const { kEnumerableProperty } = __nccwpck_require__(3983)
const {
  makeIterator,
  isValidHeaderName,
  isValidHeaderValue
} = __nccwpck_require__(2538)
const { webidl } = __nccwpck_require__(1744)
const assert = __nccwpck_require__(9491)

const kHeadersMap = Symbol('headers map')
const kHeadersSortedMap = Symbol('headers map sorted')

/**
 * @see https://fetch.spec.whatwg.org/#concept-header-value-normalize
 * @param {string} potentialValue
 */
function headerValueNormalize (potentialValue) {
  //  To normalize a byte sequence potentialValue, remove
  //  any leading and trailing HTTP whitespace bytes from
  //  potentialValue.

  // Trimming the end with `.replace()` and a RegExp is typically subject to
  // ReDoS. This is safer and faster.
  let i = potentialValue.length
  while (/[\r\n\t ]/.test(potentialValue.charAt(--i)));
  return potentialValue.slice(0, i + 1).replace(/^[\r\n\t ]+/, '')
}

function fill (headers, object) {
  // To fill a Headers object headers with a given object object, run these steps:

  // 1. If object is a sequence, then for each header in object:
  // Note: webidl conversion to array has already been done.
  if (Array.isArray(object)) {
    for (const header of object) {
      // 1. If header does not contain exactly two items, then throw a TypeError.
      if (header.length !== 2) {
        throw webidl.errors.exception({
          header: 'Headers constructor',
          message: `expected name/value pair to be length 2, found ${header.length}.`
        })
      }

      // 2. Append (header’s first item, header’s second item) to headers.
      headers.append(header[0], header[1])
    }
  } else if (typeof object === 'object' && object !== null) {
    // Note: null should throw

    // 2. Otherwise, object is a record, then for each key → value in object,
    //    append (key, value) to headers
    for (const [key, value] of Object.entries(object)) {
      headers.append(key, value)
    }
  } else {
    throw webidl.errors.conversionFailed({
      prefix: 'Headers constructor',
      argument: 'Argument 1',
      types: ['sequence<sequence<ByteString>>', 'record<ByteString, ByteString>']
    })
  }
}

class HeadersList {
  /** @type {[string, string][]|null} */
  cookies = null

  constructor (init) {
    if (init instanceof HeadersList) {
      this[kHeadersMap] = new Map(init[kHeadersMap])
      this[kHeadersSortedMap] = init[kHeadersSortedMap]
      this.cookies = init.cookies
    } else {
      this[kHeadersMap] = new Map(init)
      this[kHeadersSortedMap] = null
    }
  }

  // https://fetch.spec.whatwg.org/#header-list-contains
  contains (name) {
    // A header list list contains a header name name if list
    // contains a header whose name is a byte-case-insensitive
    // match for name.
    name = name.toLowerCase()

    return this[kHeadersMap].has(name)
  }

  clear () {
    this[kHeadersMap].clear()
    this[kHeadersSortedMap] = null
    this.cookies = null
  }

  // https://fetch.spec.whatwg.org/#concept-header-list-append
  append (name, value) {
    this[kHeadersSortedMap] = null

    // 1. If list contains name, then set name to the first such
    //    header’s name.
    const lowercaseName = name.toLowerCase()
    const exists = this[kHeadersMap].get(lowercaseName)

    // 2. Append (name, value) to list.
    if (exists) {
      const delimiter = lowercaseName === 'cookie' ? '; ' : ', '
      this[kHeadersMap].set(lowercaseName, {
        name: exists.name,
        value: `${exists.value}${delimiter}${value}`
      })
    } else {
      this[kHeadersMap].set(lowercaseName, { name, value })
    }

    if (lowercaseName === 'set-cookie') {
      this.cookies ??= []
      this.cookies.push(value)
    }
  }

  // https://fetch.spec.whatwg.org/#concept-header-list-set
  set (name, value) {
    this[kHeadersSortedMap] = null
    const lowercaseName = name.toLowerCase()

    if (lowercaseName === 'set-cookie') {
      this.cookies = [value]
    }

    // 1. If list contains name, then set the value of
    //    the first such header to value and remove the
    //    others.
    // 2. Otherwise, append header (name, value) to list.
    return this[kHeadersMap].set(lowercaseName, { name, value })
  }

  // https://fetch.spec.whatwg.org/#concept-header-list-delete
  delete (name) {
    this[kHeadersSortedMap] = null

    name = name.toLowerCase()

    if (name === 'set-cookie') {
      this.cookies = null
    }

    return this[kHeadersMap].delete(name)
  }

  // https://fetch.spec.whatwg.org/#concept-header-list-get
  get (name) {
    // 1. If list does not contain name, then return null.
    if (!this.contains(name)) {
      return null
    }

    // 2. Return the values of all headers in list whose name
    //    is a byte-case-insensitive match for name,
    //    separated from each other by 0x2C 0x20, in order.
    return this[kHeadersMap].get(name.toLowerCase())?.value ?? null
  }

  * [Symbol.iterator] () {
    // use the lowercased name
    for (const [name, { value }] of this[kHeadersMap]) {
      yield [name, value]
    }
  }

  get entries () {
    const headers = {}

    if (this[kHeadersMap].size) {
      for (const { name, value } of this[kHeadersMap].values()) {
        headers[name] = value
      }
    }

    return headers
  }
}

// https://fetch.spec.whatwg.org/#headers-class
class Headers {
  constructor (init = undefined) {
    this[kHeadersList] = new HeadersList()

    // The new Headers(init) constructor steps are:

    // 1. Set this’s guard to "none".
    this[kGuard] = 'none'

    // 2. If init is given, then fill this with init.
    if (init !== undefined) {
      init = webidl.converters.HeadersInit(init)
      fill(this, init)
    }
  }

  // https://fetch.spec.whatwg.org/#dom-headers-append
  append (name, value) {
    webidl.brandCheck(this, Headers)

    webidl.argumentLengthCheck(arguments, 2, { header: 'Headers.append' })

    name = webidl.converters.ByteString(name)
    value = webidl.converters.ByteString(value)

    // 1. Normalize value.
    value = headerValueNormalize(value)

    // 2. If name is not a header name or value is not a
    //    header value, then throw a TypeError.
    if (!isValidHeaderName(name)) {
      throw webidl.errors.invalidArgument({
        prefix: 'Headers.append',
        value: name,
        type: 'header name'
      })
    } else if (!isValidHeaderValue(value)) {
      throw webidl.errors.invalidArgument({
        prefix: 'Headers.append',
        value,
        type: 'header value'
      })
    }

    // 3. If headers’s guard is "immutable", then throw a TypeError.
    // 4. Otherwise, if headers’s guard is "request" and name is a
    //    forbidden header name, return.
    // Note: undici does not implement forbidden header names
    if (this[kGuard] === 'immutable') {
      throw new TypeError('immutable')
    } else if (this[kGuard] === 'request-no-cors') {
      // 5. Otherwise, if headers’s guard is "request-no-cors":
      // TODO
    }

    // 6. Otherwise, if headers’s guard is "response" and name is a
    //    forbidden response-header name, return.

    // 7. Append (name, value) to headers’s header list.
    // 8. If headers’s guard is "request-no-cors", then remove
    //    privileged no-CORS request headers from headers
    return this[kHeadersList].append(name, value)
  }

  // https://fetch.spec.whatwg.org/#dom-headers-delete
  delete (name) {
    webidl.brandCheck(this, Headers)

    webidl.argumentLengthCheck(arguments, 1, { header: 'Headers.delete' })

    name = webidl.converters.ByteString(name)

    // 1. If name is not a header name, then throw a TypeError.
    if (!isValidHeaderName(name)) {
      throw webidl.errors.invalidArgument({
        prefix: 'Headers.delete',
        value: name,
        type: 'header name'
      })
    }

    // 2. If this’s guard is "immutable", then throw a TypeError.
    // 3. Otherwise, if this’s guard is "request" and name is a
    //    forbidden header name, return.
    // 4. Otherwise, if this’s guard is "request-no-cors", name
    //    is not a no-CORS-safelisted request-header name, and
    //    name is not a privileged no-CORS request-header name,
    //    return.
    // 5. Otherwise, if this’s guard is "response" and name is
    //    a forbidden response-header name, return.
    // Note: undici does not implement forbidden header names
    if (this[kGuard] === 'immutable') {
      throw new TypeError('immutable')
    } else if (this[kGuard] === 'request-no-cors') {
      // TODO
    }

    // 6. If this’s header list does not contain name, then
    //    return.
    if (!this[kHeadersList].contains(name)) {
      return
    }

    // 7. Delete name from this’s header list.
    // 8. If this’s guard is "request-no-cors", then remove
    //    privileged no-CORS request headers from this.
    return this[kHeadersList].delete(name)
  }

  // https://fetch.spec.whatwg.org/#dom-headers-get
  get (name) {
    webidl.brandCheck(this, Headers)

    webidl.argumentLengthCheck(arguments, 1, { header: 'Headers.get' })

    name = webidl.converters.ByteString(name)

    // 1. If name is not a header name, then throw a TypeError.
    if (!isValidHeaderName(name)) {
      throw webidl.errors.invalidArgument({
        prefix: 'Headers.get',
        value: name,
        type: 'header name'
      })
    }

    // 2. Return the result of getting name from this’s header
    //    list.
    return this[kHeadersList].get(name)
  }

  // https://fetch.spec.whatwg.org/#dom-headers-has
  has (name) {
    webidl.brandCheck(this, Headers)

    webidl.argumentLengthCheck(arguments, 1, { header: 'Headers.has' })

    name = webidl.converters.ByteString(name)

    // 1. If name is not a header name, then throw a TypeError.
    if (!isValidHeaderName(name)) {
      throw webidl.errors.invalidArgument({
        prefix: 'Headers.has',
        value: name,
        type: 'header name'
      })
    }

    // 2. Return true if this’s header list contains name;
    //    otherwise false.
    return this[kHeadersList].contains(name)
  }

  // https://fetch.spec.whatwg.org/#dom-headers-set
  set (name, value) {
    webidl.brandCheck(this, Headers)

    webidl.argumentLengthCheck(arguments, 2, { header: 'Headers.set' })

    name = webidl.converters.ByteString(name)
    value = webidl.converters.ByteString(value)

    // 1. Normalize value.
    value = headerValueNormalize(value)

    // 2. If name is not a header name or value is not a
    //    header value, then throw a TypeError.
    if (!isValidHeaderName(name)) {
      throw webidl.errors.invalidArgument({
        prefix: 'Headers.set',
        value: name,
        type: 'header name'
      })
    } else if (!isValidHeaderValue(value)) {
      throw webidl.errors.invalidArgument({
        prefix: 'Headers.set',
        value,
        type: 'header value'
      })
    }

    // 3. If this’s guard is "immutable", then throw a TypeError.
    // 4. Otherwise, if this’s guard is "request" and name is a
    //    forbidden header name, return.
    // 5. Otherwise, if this’s guard is "request-no-cors" and
    //    name/value is not a no-CORS-safelisted request-header,
    //    return.
    // 6. Otherwise, if this’s guard is "response" and name is a
    //    forbidden response-header name, return.
    // Note: undici does not implement forbidden header names
    if (this[kGuard] === 'immutable') {
      throw new TypeError('immutable')
    } else if (this[kGuard] === 'request-no-cors') {
      // TODO
    }

    // 7. Set (name, value) in this’s header list.
    // 8. If this’s guard is "request-no-cors", then remove
    //    privileged no-CORS request headers from this
    return this[kHeadersList].set(name, value)
  }

  // https://fetch.spec.whatwg.org/#dom-headers-getsetcookie
  getSetCookie () {
    webidl.brandCheck(this, Headers)

    // 1. If this’s header list does not contain `Set-Cookie`, then return « ».
    // 2. Return the values of all headers in this’s header list whose name is
    //    a byte-case-insensitive match for `Set-Cookie`, in order.

    const list = this[kHeadersList].cookies

    if (list) {
      return [...list]
    }

    return []
  }

  // https://fetch.spec.whatwg.org/#concept-header-list-sort-and-combine
  get [kHeadersSortedMap] () {
    if (this[kHeadersList][kHeadersSortedMap]) {
      return this[kHeadersList][kHeadersSortedMap]
    }

    // 1. Let headers be an empty list of headers with the key being the name
    //    and value the value.
    const headers = []

    // 2. Let names be the result of convert header names to a sorted-lowercase
    //    set with all the names of the headers in list.
    const names = [...this[kHeadersList]].sort((a, b) => a[0] < b[0] ? -1 : 1)
    const cookies = this[kHeadersList].cookies

    // 3. For each name of names:
    for (const [name, value] of names) {
      // 1. If name is `set-cookie`, then:
      if (name === 'set-cookie') {
        // 1. Let values be a list of all values of headers in list whose name
        //    is a byte-case-insensitive match for name, in order.

        // 2. For each value of values:
        // 1. Append (name, value) to headers.
        for (const value of cookies) {
          headers.push([name, value])
        }
      } else {
        // 2. Otherwise:

        // 1. Let value be the result of getting name from list.

        // 2. Assert: value is non-null.
        assert(value !== null)

        // 3. Append (name, value) to headers.
        headers.push([name, value])
      }
    }

    this[kHeadersList][kHeadersSortedMap] = headers

    // 4. Return headers.
    return headers
  }

  keys () {
    webidl.brandCheck(this, Headers)

    return makeIterator(
      () => [...this[kHeadersSortedMap].values()],
      'Headers',
      'key'
    )
  }

  values () {
    webidl.brandCheck(this, Headers)

    return makeIterator(
      () => [...this[kHeadersSortedMap].values()],
      'Headers',
      'value'
    )
  }

  entries () {
    webidl.brandCheck(this, Headers)

    return makeIterator(
      () => [...this[kHeadersSortedMap].values()],
      'Headers',
      'key+value'
    )
  }

  /**
   * @param {(value: string, key: string, self: Headers) => void} callbackFn
   * @param {unknown} thisArg
   */
  forEach (callbackFn, thisArg = globalThis) {
    webidl.brandCheck(this, Headers)

    webidl.argumentLengthCheck(arguments, 1, { header: 'Headers.forEach' })

    if (typeof callbackFn !== 'function') {
      throw new TypeError(
        "Failed to execute 'forEach' on 'Headers': parameter 1 is not of type 'Function'."
      )
    }

    for (const [key, value] of this) {
      callbackFn.apply(thisArg, [value, key, this])
    }
  }

  [Symbol.for('nodejs.util.inspect.custom')] () {
    webidl.brandCheck(this, Headers)

    return this[kHeadersList]
  }
}

Headers.prototype[Symbol.iterator] = Headers.prototype.entries

Object.defineProperties(Headers.prototype, {
  append: kEnumerableProperty,
  delete: kEnumerableProperty,
  get: kEnumerableProperty,
  has: kEnumerableProperty,
  set: kEnumerableProperty,
  getSetCookie: kEnumerableProperty,
  keys: kEnumerableProperty,
  values: kEnumerableProperty,
  entries: kEnumerableProperty,
  forEach: kEnumerableProperty,
  [Symbol.iterator]: { enumerable: false },
  [Symbol.toStringTag]: {
    value: 'Headers',
    configurable: true
  }
})

webidl.converters.HeadersInit = function (V) {
  if (webidl.util.Type(V) === 'Object') {
    if (V[Symbol.iterator]) {
      return webidl.converters['sequence<sequence<ByteString>>'](V)
    }

    return webidl.converters['record<ByteString, ByteString>'](V)
  }

  throw webidl.errors.conversionFailed({
    prefix: 'Headers constructor',
    argument: 'Argument 1',
    types: ['sequence<sequence<ByteString>>', 'record<ByteString, ByteString>']
  })
}

module.exports = {
  fill,
  Headers,
  HeadersList
}


/***/ }),

/***/ 4881:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";
// https://github.com/Ethan-Arrowood/undici-fetch



const {
  Response,
  makeNetworkError,
  makeAppropriateNetworkError,
  filterResponse,
  makeResponse
} = __nccwpck_require__(7823)
const { Headers } = __nccwpck_require__(554)
const { Request, makeRequest } = __nccwpck_require__(8359)
const zlib = __nccwpck_require__(9796)
const {
  bytesMatch,
  makePolicyContainer,
  clonePolicyContainer,
  requestBadPort,
  TAOCheck,
  appendRequestOriginHeader,
  responseLocationURL,
  requestCurrentURL,
  setRequestReferrerPolicyOnRedirect,
  tryUpgradeRequestToAPotentiallyTrustworthyURL,
  createOpaqueTimingInfo,
  appendFetchMetadata,
  corsCheck,
  crossOriginResourcePolicyCheck,
  determineRequestsReferrer,
  coarsenedSharedCurrentTime,
  createDeferredPromise,
  isBlobLike,
  sameOrigin,
  isCancelled,
  isAborted,
  isErrorLike,
  fullyReadBody,
  readableStreamClose,
  isomorphicEncode,
  urlIsLocal,
  urlIsHttpHttpsScheme,
  urlHasHttpsScheme
} = __nccwpck_require__(2538)
const { kState, kHeaders, kGuard, kRealm } = __nccwpck_require__(5861)
const assert = __nccwpck_require__(9491)
const { safelyExtractBody } = __nccwpck_require__(1472)
const {
  redirectStatus,
  nullBodyStatus,
  safeMethods,
  requestBodyHeader,
  subresource,
  DOMException
} = __nccwpck_require__(1037)
const { kHeadersList } = __nccwpck_require__(2785)
const EE = __nccwpck_require__(2361)
const { Readable, pipeline } = __nccwpck_require__(2781)
const { addAbortListener, isErrored, isReadable, nodeMajor, nodeMinor } = __nccwpck_require__(3983)
const { dataURLProcessor, serializeAMimeType } = __nccwpck_require__(685)
const { TransformStream } = __nccwpck_require__(4544)
const { getGlobalDispatcher } = __nccwpck_require__(1892)
const { webidl } = __nccwpck_require__(1744)
const { STATUS_CODES } = __nccwpck_require__(3685)

/** @type {import('buffer').resolveObjectURL} */
let resolveObjectURL
let ReadableStream = globalThis.ReadableStream

class Fetch extends EE {
  constructor (dispatcher) {
    super()

    this.dispatcher = dispatcher
    this.connection = null
    this.dump = false
    this.state = 'ongoing'
    // 2 terminated listeners get added per request,
    // but only 1 gets removed. If there are 20 redirects,
    // 21 listeners will be added.
    // See https://github.com/nodejs/undici/issues/1711
    // TODO (fix): Find and fix root cause for leaked listener.
    this.setMaxListeners(21)
  }

  terminate (reason) {
    if (this.state !== 'ongoing') {
      return
    }

    this.state = 'terminated'
    this.connection?.destroy(reason)
    this.emit('terminated', reason)
  }

  // https://fetch.spec.whatwg.org/#fetch-controller-abort
  abort (error) {
    if (this.state !== 'ongoing') {
      return
    }

    // 1. Set controller’s state to "aborted".
    this.state = 'aborted'

    // 2. Let fallbackError be an "AbortError" DOMException.
    // 3. Set error to fallbackError if it is not given.
    if (!error) {
      error = new DOMException('The operation was aborted.', 'AbortError')
    }

    // 4. Let serializedError be StructuredSerialize(error).
    //    If that threw an exception, catch it, and let
    //    serializedError be StructuredSerialize(fallbackError).

    // 5. Set controller’s serialized abort reason to serializedError.
    this.serializedAbortReason = error

    this.connection?.destroy(error)
    this.emit('terminated', error)
  }
}

// https://fetch.spec.whatwg.org/#fetch-method
async function fetch (input, init = {}) {
  webidl.argumentLengthCheck(arguments, 1, { header: 'globalThis.fetch' })

  // 1. Let p be a new promise.
  const p = createDeferredPromise()

  // 2. Let requestObject be the result of invoking the initial value of
  // Request as constructor with input and init as arguments. If this throws
  // an exception, reject p with it and return p.
  let requestObject

  try {
    requestObject = new Request(input, init)
  } catch (e) {
    p.reject(e)
    return p.promise
  }

  // 3. Let request be requestObject’s request.
  const request = requestObject[kState]

  // 4. If requestObject’s signal’s aborted flag is set, then:
  if (requestObject.signal.aborted) {
    // 1. Abort the fetch() call with p, request, null, and
    //    requestObject’s signal’s abort reason.
    abortFetch(p, request, null, requestObject.signal.reason)

    // 2. Return p.
    return p.promise
  }

  // 5. Let globalObject be request’s client’s global object.
  const globalObject = request.client.globalObject

  // 6. If globalObject is a ServiceWorkerGlobalScope object, then set
  // request’s service-workers mode to "none".
  if (globalObject?.constructor?.name === 'ServiceWorkerGlobalScope') {
    request.serviceWorkers = 'none'
  }

  // 7. Let responseObject be null.
  let responseObject = null

  // 8. Let relevantRealm be this’s relevant Realm.
  const relevantRealm = null

  // 9. Let locallyAborted be false.
  let locallyAborted = false

  // 10. Let controller be null.
  let controller = null

  // 11. Add the following abort steps to requestObject’s signal:
  addAbortListener(
    requestObject.signal,
    () => {
      // 1. Set locallyAborted to true.
      locallyAborted = true

      // 2. Assert: controller is non-null.
      assert(controller != null)

      // 3. Abort controller with requestObject’s signal’s abort reason.
      controller.abort(requestObject.signal.reason)

      // 4. Abort the fetch() call with p, request, responseObject,
      //    and requestObject’s signal’s abort reason.
      abortFetch(p, request, responseObject, requestObject.signal.reason)
    }
  )

  // 12. Let handleFetchDone given response response be to finalize and
  // report timing with response, globalObject, and "fetch".
  const handleFetchDone = (response) =>
    finalizeAndReportTiming(response, 'fetch')

  // 13. Set controller to the result of calling fetch given request,
  // with processResponseEndOfBody set to handleFetchDone, and processResponse
  // given response being these substeps:

  const processResponse = (response) => {
    // 1. If locallyAborted is true, terminate these substeps.
    if (locallyAborted) {
      return
    }

    // 2. If response’s aborted flag is set, then:
    if (response.aborted) {
      // 1. Let deserializedError be the result of deserialize a serialized
      //    abort reason given controller’s serialized abort reason and
      //    relevantRealm.

      // 2. Abort the fetch() call with p, request, responseObject, and
      //    deserializedError.

      abortFetch(p, request, responseObject, controller.serializedAbortReason)
      return
    }

    // 3. If response is a network error, then reject p with a TypeError
    // and terminate these substeps.
    if (response.type === 'error') {
      p.reject(
        Object.assign(new TypeError('fetch failed'), { cause: response.error })
      )
      return
    }

    // 4. Set responseObject to the result of creating a Response object,
    // given response, "immutable", and relevantRealm.
    responseObject = new Response()
    responseObject[kState] = response
    responseObject[kRealm] = relevantRealm
    responseObject[kHeaders][kHeadersList] = response.headersList
    responseObject[kHeaders][kGuard] = 'immutable'
    responseObject[kHeaders][kRealm] = relevantRealm

    // 5. Resolve p with responseObject.
    p.resolve(responseObject)
  }

  controller = fetching({
    request,
    processResponseEndOfBody: handleFetchDone,
    processResponse,
    dispatcher: init.dispatcher ?? getGlobalDispatcher() // undici
  })

  // 14. Return p.
  return p.promise
}

// https://fetch.spec.whatwg.org/#finalize-and-report-timing
function finalizeAndReportTiming (response, initiatorType = 'other') {
  // 1. If response is an aborted network error, then return.
  if (response.type === 'error' && response.aborted) {
    return
  }

  // 2. If response’s URL list is null or empty, then return.
  if (!response.urlList?.length) {
    return
  }

  // 3. Let originalURL be response’s URL list[0].
  const originalURL = response.urlList[0]

  // 4. Let timingInfo be response’s timing info.
  let timingInfo = response.timingInfo

  // 5. Let cacheState be response’s cache state.
  let cacheState = response.cacheState

  // 6. If originalURL’s scheme is not an HTTP(S) scheme, then return.
  if (!urlIsHttpHttpsScheme(originalURL)) {
    return
  }

  // 7. If timingInfo is null, then return.
  if (timingInfo === null) {
    return
  }

  // 8. If response’s timing allow passed flag is not set, then:
  if (!timingInfo.timingAllowPassed) {
    //  1. Set timingInfo to a the result of creating an opaque timing info for timingInfo.
    timingInfo = createOpaqueTimingInfo({
      startTime: timingInfo.startTime
    })

    //  2. Set cacheState to the empty string.
    cacheState = ''
  }

  // 9. Set timingInfo’s end time to the coarsened shared current time
  // given global’s relevant settings object’s cross-origin isolated
  // capability.
  // TODO: given global’s relevant settings object’s cross-origin isolated
  // capability?
  timingInfo.endTime = coarsenedSharedCurrentTime()

  // 10. Set response’s timing info to timingInfo.
  response.timingInfo = timingInfo

  // 11. Mark resource timing for timingInfo, originalURL, initiatorType,
  // global, and cacheState.
  markResourceTiming(
    timingInfo,
    originalURL,
    initiatorType,
    globalThis,
    cacheState
  )
}

// https://w3c.github.io/resource-timing/#dfn-mark-resource-timing
function markResourceTiming (timingInfo, originalURL, initiatorType, globalThis, cacheState) {
  if (nodeMajor > 18 || (nodeMajor === 18 && nodeMinor >= 2)) {
    performance.markResourceTiming(timingInfo, originalURL.href, initiatorType, globalThis, cacheState)
  }
}

// https://fetch.spec.whatwg.org/#abort-fetch
function abortFetch (p, request, responseObject, error) {
  // Note: AbortSignal.reason was added in node v17.2.0
  // which would give us an undefined error to reject with.
  // Remove this once node v16 is no longer supported.
  if (!error) {
    error = new DOMException('The operation was aborted.', 'AbortError')
  }

  // 1. Reject promise with error.
  p.reject(error)

  // 2. If request’s body is not null and is readable, then cancel request’s
  // body with error.
  if (request.body != null && isReadable(request.body?.stream)) {
    request.body.stream.cancel(error).catch((err) => {
      if (err.code === 'ERR_INVALID_STATE') {
        // Node bug?
        return
      }
      throw err
    })
  }

  // 3. If responseObject is null, then return.
  if (responseObject == null) {
    return
  }

  // 4. Let response be responseObject’s response.
  const response = responseObject[kState]

  // 5. If response’s body is not null and is readable, then error response’s
  // body with error.
  if (response.body != null && isReadable(response.body?.stream)) {
    response.body.stream.cancel(error).catch((err) => {
      if (err.code === 'ERR_INVALID_STATE') {
        // Node bug?
        return
      }
      throw err
    })
  }
}

// https://fetch.spec.whatwg.org/#fetching
function fetching ({
  request,
  processRequestBodyChunkLength,
  processRequestEndOfBody,
  processResponse,
  processResponseEndOfBody,
  processResponseConsumeBody,
  useParallelQueue = false,
  dispatcher // undici
}) {
  // 1. Let taskDestination be null.
  let taskDestination = null

  // 2. Let crossOriginIsolatedCapability be false.
  let crossOriginIsolatedCapability = false

  // 3. If request’s client is non-null, then:
  if (request.client != null) {
    // 1. Set taskDestination to request’s client’s global object.
    taskDestination = request.client.globalObject

    // 2. Set crossOriginIsolatedCapability to request’s client’s cross-origin
    // isolated capability.
    crossOriginIsolatedCapability =
      request.client.crossOriginIsolatedCapability
  }

  // 4. If useParallelQueue is true, then set taskDestination to the result of
  // starting a new parallel queue.
  // TODO

  // 5. Let timingInfo be a new fetch timing info whose start time and
  // post-redirect start time are the coarsened shared current time given
  // crossOriginIsolatedCapability.
  const currenTime = coarsenedSharedCurrentTime(crossOriginIsolatedCapability)
  const timingInfo = createOpaqueTimingInfo({
    startTime: currenTime
  })

  // 6. Let fetchParams be a new fetch params whose
  // request is request,
  // timing info is timingInfo,
  // process request body chunk length is processRequestBodyChunkLength,
  // process request end-of-body is processRequestEndOfBody,
  // process response is processResponse,
  // process response consume body is processResponseConsumeBody,
  // process response end-of-body is processResponseEndOfBody,
  // task destination is taskDestination,
  // and cross-origin isolated capability is crossOriginIsolatedCapability.
  const fetchParams = {
    controller: new Fetch(dispatcher),
    request,
    timingInfo,
    processRequestBodyChunkLength,
    processRequestEndOfBody,
    processResponse,
    processResponseConsumeBody,
    processResponseEndOfBody,
    taskDestination,
    crossOriginIsolatedCapability
  }

  // 7. If request’s body is a byte sequence, then set request’s body to
  //    request’s body as a body.
  // NOTE: Since fetching is only called from fetch, body should already be
  // extracted.
  assert(!request.body || request.body.stream)

  // 8. If request’s window is "client", then set request’s window to request’s
  // client, if request’s client’s global object is a Window object; otherwise
  // "no-window".
  if (request.window === 'client') {
    // TODO: What if request.client is null?
    request.window =
      request.client?.globalObject?.constructor?.name === 'Window'
        ? request.client
        : 'no-window'
  }

  // 9. If request’s origin is "client", then set request’s origin to request’s
  // client’s origin.
  if (request.origin === 'client') {
    // TODO: What if request.client is null?
    request.origin = request.client?.origin
  }

  // 10. If all of the following conditions are true:
  // TODO

  // 11. If request’s policy container is "client", then:
  if (request.policyContainer === 'client') {
    // 1. If request’s client is non-null, then set request’s policy
    // container to a clone of request’s client’s policy container. [HTML]
    if (request.client != null) {
      request.policyContainer = clonePolicyContainer(
        request.client.policyContainer
      )
    } else {
      // 2. Otherwise, set request’s policy container to a new policy
      // container.
      request.policyContainer = makePolicyContainer()
    }
  }

  // 12. If request’s header list does not contain `Accept`, then:
  if (!request.headersList.contains('accept')) {
    // 1. Let value be `*/*`.
    const value = '*/*'

    // 2. A user agent should set value to the first matching statement, if
    // any, switching on request’s destination:
    // "document"
    // "frame"
    // "iframe"
    // `text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8`
    // "image"
    // `image/png,image/svg+xml,image/*;q=0.8,*/*;q=0.5`
    // "style"
    // `text/css,*/*;q=0.1`
    // TODO

    // 3. Append `Accept`/value to request’s header list.
    request.headersList.append('accept', value)
  }

  // 13. If request’s header list does not contain `Accept-Language`, then
  // user agents should append `Accept-Language`/an appropriate value to
  // request’s header list.
  if (!request.headersList.contains('accept-language')) {
    request.headersList.append('accept-language', '*')
  }

  // 14. If request’s priority is null, then use request’s initiator and
  // destination appropriately in setting request’s priority to a
  // user-agent-defined object.
  if (request.priority === null) {
    // TODO
  }

  // 15. If request is a subresource request, then:
  if (subresource.includes(request.destination)) {
    // TODO
  }

  // 16. Run main fetch given fetchParams.
  mainFetch(fetchParams)
    .catch(err => {
      fetchParams.controller.terminate(err)
    })

  // 17. Return fetchParam's controller
  return fetchParams.controller
}

// https://fetch.spec.whatwg.org/#concept-main-fetch
async function mainFetch (fetchParams, recursive = false) {
  // 1. Let request be fetchParams’s request.
  const request = fetchParams.request

  // 2. Let response be null.
  let response = null

  // 3. If request’s local-URLs-only flag is set and request’s current URL is
  // not local, then set response to a network error.
  if (request.localURLsOnly && !urlIsLocal(requestCurrentURL(request))) {
    response = makeNetworkError('local URLs only')
  }

  // 4. Run report Content Security Policy violations for request.
  // TODO

  // 5. Upgrade request to a potentially trustworthy URL, if appropriate.
  tryUpgradeRequestToAPotentiallyTrustworthyURL(request)

  // 6. If should request be blocked due to a bad port, should fetching request
  // be blocked as mixed content, or should request be blocked by Content
  // Security Policy returns blocked, then set response to a network error.
  if (requestBadPort(request) === 'blocked') {
    response = makeNetworkError('bad port')
  }
  // TODO: should fetching request be blocked as mixed content?
  // TODO: should request be blocked by Content Security Policy?

  // 7. If request’s referrer policy is the empty string, then set request’s
  // referrer policy to request’s policy container’s referrer policy.
  if (request.referrerPolicy === '') {
    request.referrerPolicy = request.policyContainer.referrerPolicy
  }

  // 8. If request’s referrer is not "no-referrer", then set request’s
  // referrer to the result of invoking determine request’s referrer.
  if (request.referrer !== 'no-referrer') {
    request.referrer = determineRequestsReferrer(request)
  }

  // 9. Set request’s current URL’s scheme to "https" if all of the following
  // conditions are true:
  // - request’s current URL’s scheme is "http"
  // - request’s current URL’s host is a domain
  // - Matching request’s current URL’s host per Known HSTS Host Domain Name
  //   Matching results in either a superdomain match with an asserted
  //   includeSubDomains directive or a congruent match (with or without an
  //   asserted includeSubDomains directive). [HSTS]
  // TODO

  // 10. If recursive is false, then run the remaining steps in parallel.
  // TODO

  // 11. If response is null, then set response to the result of running
  // the steps corresponding to the first matching statement:
  if (response === null) {
    response = await (async () => {
      const currentURL = requestCurrentURL(request)

      if (
        // - request’s current URL’s origin is same origin with request’s origin,
        //   and request’s response tainting is "basic"
        (sameOrigin(currentURL, request.url) && request.responseTainting === 'basic') ||
        // request’s current URL’s scheme is "data"
        (currentURL.protocol === 'data:') ||
        // - request’s mode is "navigate" or "websocket"
        (request.mode === 'navigate' || request.mode === 'websocket')
      ) {
        // 1. Set request’s response tainting to "basic".
        request.responseTainting = 'basic'

        // 2. Return the result of running scheme fetch given fetchParams.
        return await schemeFetch(fetchParams)
      }

      // request’s mode is "same-origin"
      if (request.mode === 'same-origin') {
        // 1. Return a network error.
        return makeNetworkError('request mode cannot be "same-origin"')
      }

      // request’s mode is "no-cors"
      if (request.mode === 'no-cors') {
        // 1. If request’s redirect mode is not "follow", then return a network
        // error.
        if (request.redirect !== 'follow') {
          return makeNetworkError(
            'redirect mode cannot be "follow" for "no-cors" request'
          )
        }

        // 2. Set request’s response tainting to "opaque".
        request.responseTainting = 'opaque'

        // 3. Return the result of running scheme fetch given fetchParams.
        return await schemeFetch(fetchParams)
      }

      // request’s current URL’s scheme is not an HTTP(S) scheme
      if (!urlIsHttpHttpsScheme(requestCurrentURL(request))) {
        // Return a network error.
        return makeNetworkError('URL scheme must be a HTTP(S) scheme')
      }

      // - request’s use-CORS-preflight flag is set
      // - request’s unsafe-request flag is set and either request’s method is
      //   not a CORS-safelisted method or CORS-unsafe request-header names with
      //   request’s header list is not empty
      //    1. Set request’s response tainting to "cors".
      //    2. Let corsWithPreflightResponse be the result of running HTTP fetch
      //    given fetchParams and true.
      //    3. If corsWithPreflightResponse is a network error, then clear cache
      //    entries using request.
      //    4. Return corsWithPreflightResponse.
      // TODO

      // Otherwise
      //    1. Set request’s response tainting to "cors".
      request.responseTainting = 'cors'

      //    2. Return the result of running HTTP fetch given fetchParams.
      return await httpFetch(fetchParams)
    })()
  }

  // 12. If recursive is true, then return response.
  if (recursive) {
    return response
  }

  // 13. If response is not a network error and response is not a filtered
  // response, then:
  if (response.status !== 0 && !response.internalResponse) {
    // If request’s response tainting is "cors", then:
    if (request.responseTainting === 'cors') {
      // 1. Let headerNames be the result of extracting header list values
      // given `Access-Control-Expose-Headers` and response’s header list.
      // TODO
      // 2. If request’s credentials mode is not "include" and headerNames
      // contains `*`, then set response’s CORS-exposed header-name list to
      // all unique header names in response’s header list.
      // TODO
      // 3. Otherwise, if headerNames is not null or failure, then set
      // response’s CORS-exposed header-name list to headerNames.
      // TODO
    }

    // Set response to the following filtered response with response as its
    // internal response, depending on request’s response tainting:
    if (request.responseTainting === 'basic') {
      response = filterResponse(response, 'basic')
    } else if (request.responseTainting === 'cors') {
      response = filterResponse(response, 'cors')
    } else if (request.responseTainting === 'opaque') {
      response = filterResponse(response, 'opaque')
    } else {
      assert(false)
    }
  }

  // 14. Let internalResponse be response, if response is a network error,
  // and response’s internal response otherwise.
  let internalResponse =
    response.status === 0 ? response : response.internalResponse

  // 15. If internalResponse’s URL list is empty, then set it to a clone of
  // request’s URL list.
  if (internalResponse.urlList.length === 0) {
    internalResponse.urlList.push(...request.urlList)
  }

  // 16. If request’s timing allow failed flag is unset, then set
  // internalResponse’s timing allow passed flag.
  if (!request.timingAllowFailed) {
    response.timingAllowPassed = true
  }

  // 17. If response is not a network error and any of the following returns
  // blocked
  // - should internalResponse to request be blocked as mixed content
  // - should internalResponse to request be blocked by Content Security Policy
  // - should internalResponse to request be blocked due to its MIME type
  // - should internalResponse to request be blocked due to nosniff
  // TODO

  // 18. If response’s type is "opaque", internalResponse’s status is 206,
  // internalResponse’s range-requested flag is set, and request’s header
  // list does not contain `Range`, then set response and internalResponse
  // to a network error.
  if (
    response.type === 'opaque' &&
    internalResponse.status === 206 &&
    internalResponse.rangeRequested &&
    !request.headers.contains('range')
  ) {
    response = internalResponse = makeNetworkError()
  }

  // 19. If response is not a network error and either request’s method is
  // `HEAD` or `CONNECT`, or internalResponse’s status is a null body status,
  // set internalResponse’s body to null and disregard any enqueuing toward
  // it (if any).
  if (
    response.status !== 0 &&
    (request.method === 'HEAD' ||
      request.method === 'CONNECT' ||
      nullBodyStatus.includes(internalResponse.status))
  ) {
    internalResponse.body = null
    fetchParams.controller.dump = true
  }

  // 20. If request’s integrity metadata is not the empty string, then:
  if (request.integrity) {
    // 1. Let processBodyError be this step: run fetch finale given fetchParams
    // and a network error.
    const processBodyError = (reason) =>
      fetchFinale(fetchParams, makeNetworkError(reason))

    // 2. If request’s response tainting is "opaque", or response’s body is null,
    // then run processBodyError and abort these steps.
    if (request.responseTainting === 'opaque' || response.body == null) {
      processBodyError(response.error)
      return
    }

    // 3. Let processBody given bytes be these steps:
    const processBody = (bytes) => {
      // 1. If bytes do not match request’s integrity metadata,
      // then run processBodyError and abort these steps. [SRI]
      if (!bytesMatch(bytes, request.integrity)) {
        processBodyError('integrity mismatch')
        return
      }

      // 2. Set response’s body to bytes as a body.
      response.body = safelyExtractBody(bytes)[0]

      // 3. Run fetch finale given fetchParams and response.
      fetchFinale(fetchParams, response)
    }

    // 4. Fully read response’s body given processBody and processBodyError.
    await fullyReadBody(response.body, processBody, processBodyError)
  } else {
    // 21. Otherwise, run fetch finale given fetchParams and response.
    fetchFinale(fetchParams, response)
  }
}

// https://fetch.spec.whatwg.org/#concept-scheme-fetch
// given a fetch params fetchParams
async function schemeFetch (fetchParams) {
  // Note: since the connection is destroyed on redirect, which sets fetchParams to a
  // cancelled state, we do not want this condition to trigger *unless* there have been
  // no redirects. See https://github.com/nodejs/undici/issues/1776
  // 1. If fetchParams is canceled, then return the appropriate network error for fetchParams.
  if (isCancelled(fetchParams) && fetchParams.request.redirectCount === 0) {
    return makeAppropriateNetworkError(fetchParams)
  }

  // 2. Let request be fetchParams’s request.
  const { request } = fetchParams

  const { protocol: scheme } = requestCurrentURL(request)

  // 3. Switch on request’s current URL’s scheme and run the associated steps:
  switch (scheme) {
    case 'about:': {
      // If request’s current URL’s path is the string "blank", then return a new response
      // whose status message is `OK`, header list is « (`Content-Type`, `text/html;charset=utf-8`) »,
      // and body is the empty byte sequence as a body.

      // Otherwise, return a network error.
      return makeNetworkError('about scheme is not supported')
    }
    case 'blob:': {
      if (!resolveObjectURL) {
        resolveObjectURL = (__nccwpck_require__(4300).resolveObjectURL)
      }

      // 1. Let blobURLEntry be request’s current URL’s blob URL entry.
      const blobURLEntry = requestCurrentURL(request)

      // https://github.com/web-platform-tests/wpt/blob/7b0ebaccc62b566a1965396e5be7bb2bc06f841f/FileAPI/url/resources/fetch-tests.js#L52-L56
      // Buffer.resolveObjectURL does not ignore URL queries.
      if (blobURLEntry.search.length !== 0) {
        return makeNetworkError('NetworkError when attempting to fetch resource.')
      }

      const blobURLEntryObject = resolveObjectURL(blobURLEntry.toString())

      // 2. If request’s method is not `GET`, blobURLEntry is null, or blobURLEntry’s
      //    object is not a Blob object, then return a network error.
      if (request.method !== 'GET' || !isBlobLike(blobURLEntryObject)) {
        return makeNetworkError('invalid method')
      }

      // 3. Let bodyWithType be the result of safely extracting blobURLEntry’s object.
      const bodyWithType = safelyExtractBody(blobURLEntryObject)

      // 4. Let body be bodyWithType’s body.
      const body = bodyWithType[0]

      // 5. Let length be body’s length, serialized and isomorphic encoded.
      const length = isomorphicEncode(`${body.length}`)

      // 6. Let type be bodyWithType’s type if it is non-null; otherwise the empty byte sequence.
      const type = bodyWithType[1] ?? ''

      // 7. Return a new response whose status message is `OK`, header list is
      //    « (`Content-Length`, length), (`Content-Type`, type) », and body is body.
      const response = makeResponse({
        statusText: 'OK',
        headersList: [
          ['content-length', { name: 'Content-Length', value: length }],
          ['content-type', { name: 'Content-Type', value: type }]
        ]
      })

      response.body = body

      return response
    }
    case 'data:': {
      // 1. Let dataURLStruct be the result of running the
      //    data: URL processor on request’s current URL.
      const currentURL = requestCurrentURL(request)
      const dataURLStruct = dataURLProcessor(currentURL)

      // 2. If dataURLStruct is failure, then return a
      //    network error.
      if (dataURLStruct === 'failure') {
        return makeNetworkError('failed to fetch the data URL')
      }

      // 3. Let mimeType be dataURLStruct’s MIME type, serialized.
      const mimeType = serializeAMimeType(dataURLStruct.mimeType)

      // 4. Return a response whose status message is `OK`,
      //    header list is « (`Content-Type`, mimeType) »,
      //    and body is dataURLStruct’s body as a body.
      return makeResponse({
        statusText: 'OK',
        headersList: [
          ['content-type', { name: 'Content-Type', value: mimeType }]
        ],
        body: safelyExtractBody(dataURLStruct.body)[0]
      })
    }
    case 'file:': {
      // For now, unfortunate as it is, file URLs are left as an exercise for the reader.
      // When in doubt, return a network error.
      return makeNetworkError('not implemented... yet...')
    }
    case 'http:':
    case 'https:': {
      // Return the result of running HTTP fetch given fetchParams.

      return await httpFetch(fetchParams)
        .catch((err) => makeNetworkError(err))
    }
    default: {
      return makeNetworkError('unknown scheme')
    }
  }
}

// https://fetch.spec.whatwg.org/#finalize-response
function finalizeResponse (fetchParams, response) {
  // 1. Set fetchParams’s request’s done flag.
  fetchParams.request.done = true

  // 2, If fetchParams’s process response done is not null, then queue a fetch
  // task to run fetchParams’s process response done given response, with
  // fetchParams’s task destination.
  if (fetchParams.processResponseDone != null) {
    queueMicrotask(() => fetchParams.processResponseDone(response))
  }
}

// https://fetch.spec.whatwg.org/#fetch-finale
async function fetchFinale (fetchParams, response) {
  // 1. If response is a network error, then:
  if (response.type === 'error') {
    // 1. Set response’s URL list to « fetchParams’s request’s URL list[0] ».
    response.urlList = [fetchParams.request.urlList[0]]

    // 2. Set response’s timing info to the result of creating an opaque timing
    // info for fetchParams’s timing info.
    response.timingInfo = createOpaqueTimingInfo({
      startTime: fetchParams.timingInfo.startTime
    })
  }

  // 2. Let processResponseEndOfBody be the following steps:
  const processResponseEndOfBody = () => {
    // 1. Set fetchParams’s request’s done flag.
    fetchParams.request.done = true

    // If fetchParams’s process response end-of-body is not null,
    // then queue a fetch task to run fetchParams’s process response
    // end-of-body given response with fetchParams’s task destination.
    if (fetchParams.processResponseEndOfBody != null) {
      queueMicrotask(() => fetchParams.processResponseEndOfBody(response))
    }
  }

  // 3. If fetchParams’s process response is non-null, then queue a fetch task
  // to run fetchParams’s process response given response, with fetchParams’s
  // task destination.
  if (fetchParams.processResponse != null) {
    queueMicrotask(() => fetchParams.processResponse(response))
  }

  // 4. If response’s body is null, then run processResponseEndOfBody.
  if (response.body == null) {
    processResponseEndOfBody()
  } else {
  // 5. Otherwise:

    // 1. Let transformStream be a new a TransformStream.

    // 2. Let identityTransformAlgorithm be an algorithm which, given chunk,
    // enqueues chunk in transformStream.
    const identityTransformAlgorithm = (chunk, controller) => {
      controller.enqueue(chunk)
    }

    // 3. Set up transformStream with transformAlgorithm set to identityTransformAlgorithm
    // and flushAlgorithm set to processResponseEndOfBody.
    const transformStream = new TransformStream({
      start () {},
      transform: identityTransformAlgorithm,
      flush: processResponseEndOfBody
    }, {
      size () {
        return 1
      }
    }, {
      size () {
        return 1
      }
    })

    // 4. Set response’s body to the result of piping response’s body through transformStream.
    response.body = { stream: response.body.stream.pipeThrough(transformStream) }
  }

  // 6. If fetchParams’s process response consume body is non-null, then:
  if (fetchParams.processResponseConsumeBody != null) {
    // 1. Let processBody given nullOrBytes be this step: run fetchParams’s
    // process response consume body given response and nullOrBytes.
    const processBody = (nullOrBytes) => fetchParams.processResponseConsumeBody(response, nullOrBytes)

    // 2. Let processBodyError be this step: run fetchParams’s process
    // response consume body given response and failure.
    const processBodyError = (failure) => fetchParams.processResponseConsumeBody(response, failure)

    // 3. If response’s body is null, then queue a fetch task to run processBody
    // given null, with fetchParams’s task destination.
    if (response.body == null) {
      queueMicrotask(() => processBody(null))
    } else {
      // 4. Otherwise, fully read response’s body given processBody, processBodyError,
      // and fetchParams’s task destination.
      await fullyReadBody(response.body, processBody, processBodyError)
    }
  }
}

// https://fetch.spec.whatwg.org/#http-fetch
async function httpFetch (fetchParams) {
  // 1. Let request be fetchParams’s request.
  const request = fetchParams.request

  // 2. Let response be null.
  let response = null

  // 3. Let actualResponse be null.
  let actualResponse = null

  // 4. Let timingInfo be fetchParams’s timing info.
  const timingInfo = fetchParams.timingInfo

  // 5. If request’s service-workers mode is "all", then:
  if (request.serviceWorkers === 'all') {
    // TODO
  }

  // 6. If response is null, then:
  if (response === null) {
    // 1. If makeCORSPreflight is true and one of these conditions is true:
    // TODO

    // 2. If request’s redirect mode is "follow", then set request’s
    // service-workers mode to "none".
    if (request.redirect === 'follow') {
      request.serviceWorkers = 'none'
    }

    // 3. Set response and actualResponse to the result of running
    // HTTP-network-or-cache fetch given fetchParams.
    actualResponse = response = await httpNetworkOrCacheFetch(fetchParams)

    // 4. If request’s response tainting is "cors" and a CORS check
    // for request and response returns failure, then return a network error.
    if (
      request.responseTainting === 'cors' &&
      corsCheck(request, response) === 'failure'
    ) {
      return makeNetworkError('cors failure')
    }

    // 5. If the TAO check for request and response returns failure, then set
    // request’s timing allow failed flag.
    if (TAOCheck(request, response) === 'failure') {
      request.timingAllowFailed = true
    }
  }

  // 7. If either request’s response tainting or response’s type
  // is "opaque", and the cross-origin resource policy check with
  // request’s origin, request’s client, request’s destination,
  // and actualResponse returns blocked, then return a network error.
  if (
    (request.responseTainting === 'opaque' || response.type === 'opaque') &&
    crossOriginResourcePolicyCheck(
      request.origin,
      request.client,
      request.destination,
      actualResponse
    ) === 'blocked'
  ) {
    return makeNetworkError('blocked')
  }

  // 8. If actualResponse’s status is a redirect status, then:
  if (redirectStatus.includes(actualResponse.status)) {
    // 1. If actualResponse’s status is not 303, request’s body is not null,
    // and the connection uses HTTP/2, then user agents may, and are even
    // encouraged to, transmit an RST_STREAM frame.
    // See, https://github.com/whatwg/fetch/issues/1288
    if (request.redirect !== 'manual') {
      fetchParams.controller.connection.destroy()
    }

    // 2. Switch on request’s redirect mode:
    if (request.redirect === 'error') {
      // Set response to a network error.
      response = makeNetworkError('unexpected redirect')
    } else if (request.redirect === 'manual') {
      // Set response to an opaque-redirect filtered response whose internal
      // response is actualResponse.
      // NOTE(spec): On the web this would return an `opaqueredirect` response,
      // but that doesn't make sense server side.
      // See https://github.com/nodejs/undici/issues/1193.
      response = actualResponse
    } else if (request.redirect === 'follow') {
      // Set response to the result of running HTTP-redirect fetch given
      // fetchParams and response.
      response = await httpRedirectFetch(fetchParams, response)
    } else {
      assert(false)
    }
  }

  // 9. Set response’s timing info to timingInfo.
  response.timingInfo = timingInfo

  // 10. Return response.
  return response
}

// https://fetch.spec.whatwg.org/#http-redirect-fetch
async function httpRedirectFetch (fetchParams, response) {
  // 1. Let request be fetchParams’s request.
  const request = fetchParams.request

  // 2. Let actualResponse be response, if response is not a filtered response,
  // and response’s internal response otherwise.
  const actualResponse = response.internalResponse
    ? response.internalResponse
    : response

  // 3. Let locationURL be actualResponse’s location URL given request’s current
  // URL’s fragment.
  let locationURL

  try {
    locationURL = responseLocationURL(
      actualResponse,
      requestCurrentURL(request).hash
    )

    // 4. If locationURL is null, then return response.
    if (locationURL == null) {
      return response
    }
  } catch (err) {
    // 5. If locationURL is failure, then return a network error.
    return makeNetworkError(err)
  }

  // 6. If locationURL’s scheme is not an HTTP(S) scheme, then return a network
  // error.
  if (!urlIsHttpHttpsScheme(locationURL)) {
    return makeNetworkError('URL scheme must be a HTTP(S) scheme')
  }

  // 7. If request’s redirect count is 20, then return a network error.
  if (request.redirectCount === 20) {
    return makeNetworkError('redirect count exceeded')
  }

  // 8. Increase request’s redirect count by 1.
  request.redirectCount += 1

  // 9. If request’s mode is "cors", locationURL includes credentials, and
  // request’s origin is not same origin with locationURL’s origin, then return
  //  a network error.
  if (
    request.mode === 'cors' &&
    (locationURL.username || locationURL.password) &&
    !sameOrigin(request, locationURL)
  ) {
    return makeNetworkError('cross origin not allowed for request mode "cors"')
  }

  // 10. If request’s response tainting is "cors" and locationURL includes
  // credentials, then return a network error.
  if (
    request.responseTainting === 'cors' &&
    (locationURL.username || locationURL.password)
  ) {
    return makeNetworkError(
      'URL cannot contain credentials for request mode "cors"'
    )
  }

  // 11. If actualResponse’s status is not 303, request’s body is non-null,
  // and request’s body’s source is null, then return a network error.
  if (
    actualResponse.status !== 303 &&
    request.body != null &&
    request.body.source == null
  ) {
    return makeNetworkError()
  }

  // 12. If one of the following is true
  // - actualResponse’s status is 301 or 302 and request’s method is `POST`
  // - actualResponse’s status is 303 and request’s method is not `GET` or `HEAD`
  if (
    ([301, 302].includes(actualResponse.status) && request.method === 'POST') ||
    (actualResponse.status === 303 &&
      !['GET', 'HEAD'].includes(request.method))
  ) {
    // then:
    // 1. Set request’s method to `GET` and request’s body to null.
    request.method = 'GET'
    request.body = null

    // 2. For each headerName of request-body-header name, delete headerName from
    // request’s header list.
    for (const headerName of requestBodyHeader) {
      request.headersList.delete(headerName)
    }
  }

  // 13. If request’s current URL’s origin is not same origin with locationURL’s
  //     origin, then for each headerName of CORS non-wildcard request-header name,
  //     delete headerName from request’s header list.
  if (!sameOrigin(requestCurrentURL(request), locationURL)) {
    // https://fetch.spec.whatwg.org/#cors-non-wildcard-request-header-name
    request.headersList.delete('authorization')

    // "Cookie" and "Host" are forbidden request-headers, which undici doesn't implement.
    request.headersList.delete('cookie')
    request.headersList.delete('host')
  }

  // 14. If request’s body is non-null, then set request’s body to the first return
  // value of safely extracting request’s body’s source.
  if (request.body != null) {
    assert(request.body.source != null)
    request.body = safelyExtractBody(request.body.source)[0]
  }

  // 15. Let timingInfo be fetchParams’s timing info.
  const timingInfo = fetchParams.timingInfo

  // 16. Set timingInfo’s redirect end time and post-redirect start time to the
  // coarsened shared current time given fetchParams’s cross-origin isolated
  // capability.
  timingInfo.redirectEndTime = timingInfo.postRedirectStartTime =
    coarsenedSharedCurrentTime(fetchParams.crossOriginIsolatedCapability)

  // 17. If timingInfo’s redirect start time is 0, then set timingInfo’s
  //  redirect start time to timingInfo’s start time.
  if (timingInfo.redirectStartTime === 0) {
    timingInfo.redirectStartTime = timingInfo.startTime
  }

  // 18. Append locationURL to request’s URL list.
  request.urlList.push(locationURL)

  // 19. Invoke set request’s referrer policy on redirect on request and
  // actualResponse.
  setRequestReferrerPolicyOnRedirect(request, actualResponse)

  // 20. Return the result of running main fetch given fetchParams and true.
  return mainFetch(fetchParams, true)
}

// https://fetch.spec.whatwg.org/#http-network-or-cache-fetch
async function httpNetworkOrCacheFetch (
  fetchParams,
  isAuthenticationFetch = false,
  isNewConnectionFetch = false
) {
  // 1. Let request be fetchParams’s request.
  const request = fetchParams.request

  // 2. Let httpFetchParams be null.
  let httpFetchParams = null

  // 3. Let httpRequest be null.
  let httpRequest = null

  // 4. Let response be null.
  let response = null

  // 5. Let storedResponse be null.
  // TODO: cache

  // 6. Let httpCache be null.
  const httpCache = null

  // 7. Let the revalidatingFlag be unset.
  const revalidatingFlag = false

  // 8. Run these steps, but abort when the ongoing fetch is terminated:

  //    1. If request’s window is "no-window" and request’s redirect mode is
  //    "error", then set httpFetchParams to fetchParams and httpRequest to
  //    request.
  if (request.window === 'no-window' && request.redirect === 'error') {
    httpFetchParams = fetchParams
    httpRequest = request
  } else {
    // Otherwise:

    // 1. Set httpRequest to a clone of request.
    httpRequest = makeRequest(request)

    // 2. Set httpFetchParams to a copy of fetchParams.
    httpFetchParams = { ...fetchParams }

    // 3. Set httpFetchParams’s request to httpRequest.
    httpFetchParams.request = httpRequest
  }

  //    3. Let includeCredentials be true if one of
  const includeCredentials =
    request.credentials === 'include' ||
    (request.credentials === 'same-origin' &&
      request.responseTainting === 'basic')

  //    4. Let contentLength be httpRequest’s body’s length, if httpRequest’s
  //    body is non-null; otherwise null.
  const contentLength = httpRequest.body ? httpRequest.body.length : null

  //    5. Let contentLengthHeaderValue be null.
  let contentLengthHeaderValue = null

  //    6. If httpRequest’s body is null and httpRequest’s method is `POST` or
  //    `PUT`, then set contentLengthHeaderValue to `0`.
  if (
    httpRequest.body == null &&
    ['POST', 'PUT'].includes(httpRequest.method)
  ) {
    contentLengthHeaderValue = '0'
  }

  //    7. If contentLength is non-null, then set contentLengthHeaderValue to
  //    contentLength, serialized and isomorphic encoded.
  if (contentLength != null) {
    contentLengthHeaderValue = isomorphicEncode(`${contentLength}`)
  }

  //    8. If contentLengthHeaderValue is non-null, then append
  //    `Content-Length`/contentLengthHeaderValue to httpRequest’s header
  //    list.
  if (contentLengthHeaderValue != null) {
    httpRequest.headersList.append('content-length', contentLengthHeaderValue)
  }

  //    9. If contentLengthHeaderValue is non-null, then append (`Content-Length`,
  //    contentLengthHeaderValue) to httpRequest’s header list.

  //    10. If contentLength is non-null and httpRequest’s keepalive is true,
  //    then:
  if (contentLength != null && httpRequest.keepalive) {
    // NOTE: keepalive is a noop outside of browser context.
  }

  //    11. If httpRequest’s referrer is a URL, then append
  //    `Referer`/httpRequest’s referrer, serialized and isomorphic encoded,
  //     to httpRequest’s header list.
  if (httpRequest.referrer instanceof URL) {
    httpRequest.headersList.append('referer', isomorphicEncode(httpRequest.referrer.href))
  }

  //    12. Append a request `Origin` header for httpRequest.
  appendRequestOriginHeader(httpRequest)

  //    13. Append the Fetch metadata headers for httpRequest. [FETCH-METADATA]
  appendFetchMetadata(httpRequest)

  //    14. If httpRequest’s header list does not contain `User-Agent`, then
  //    user agents should append `User-Agent`/default `User-Agent` value to
  //    httpRequest’s header list.
  if (!httpRequest.headersList.contains('user-agent')) {
    httpRequest.headersList.append('user-agent', typeof esbuildDetection === 'undefined' ? 'undici' : 'node')
  }

  //    15. If httpRequest’s cache mode is "default" and httpRequest’s header
  //    list contains `If-Modified-Since`, `If-None-Match`,
  //    `If-Unmodified-Since`, `If-Match`, or `If-Range`, then set
  //    httpRequest’s cache mode to "no-store".
  if (
    httpRequest.cache === 'default' &&
    (httpRequest.headersList.contains('if-modified-since') ||
      httpRequest.headersList.contains('if-none-match') ||
      httpRequest.headersList.contains('if-unmodified-since') ||
      httpRequest.headersList.contains('if-match') ||
      httpRequest.headersList.contains('if-range'))
  ) {
    httpRequest.cache = 'no-store'
  }

  //    16. If httpRequest’s cache mode is "no-cache", httpRequest’s prevent
  //    no-cache cache-control header modification flag is unset, and
  //    httpRequest’s header list does not contain `Cache-Control`, then append
  //    `Cache-Control`/`max-age=0` to httpRequest’s header list.
  if (
    httpRequest.cache === 'no-cache' &&
    !httpRequest.preventNoCacheCacheControlHeaderModification &&
    !httpRequest.headersList.contains('cache-control')
  ) {
    httpRequest.headersList.append('cache-control', 'max-age=0')
  }

  //    17. If httpRequest’s cache mode is "no-store" or "reload", then:
  if (httpRequest.cache === 'no-store' || httpRequest.cache === 'reload') {
    // 1. If httpRequest’s header list does not contain `Pragma`, then append
    // `Pragma`/`no-cache` to httpRequest’s header list.
    if (!httpRequest.headersList.contains('pragma')) {
      httpRequest.headersList.append('pragma', 'no-cache')
    }

    // 2. If httpRequest’s header list does not contain `Cache-Control`,
    // then append `Cache-Control`/`no-cache` to httpRequest’s header list.
    if (!httpRequest.headersList.contains('cache-control')) {
      httpRequest.headersList.append('cache-control', 'no-cache')
    }
  }

  //    18. If httpRequest’s header list contains `Range`, then append
  //    `Accept-Encoding`/`identity` to httpRequest’s header list.
  if (httpRequest.headersList.contains('range')) {
    httpRequest.headersList.append('accept-encoding', 'identity')
  }

  //    19. Modify httpRequest’s header list per HTTP. Do not append a given
  //    header if httpRequest’s header list contains that header’s name.
  //    TODO: https://github.com/whatwg/fetch/issues/1285#issuecomment-896560129
  if (!httpRequest.headersList.contains('accept-encoding')) {
    if (urlHasHttpsScheme(requestCurrentURL(httpRequest))) {
      httpRequest.headersList.append('accept-encoding', 'br, gzip, deflate')
    } else {
      httpRequest.headersList.append('accept-encoding', 'gzip, deflate')
    }
  }

  httpRequest.headersList.delete('host')

  //    20. If includeCredentials is true, then:
  if (includeCredentials) {
    // 1. If the user agent is not configured to block cookies for httpRequest
    // (see section 7 of [COOKIES]), then:
    // TODO: credentials
    // 2. If httpRequest’s header list does not contain `Authorization`, then:
    // TODO: credentials
  }

  //    21. If there’s a proxy-authentication entry, use it as appropriate.
  //    TODO: proxy-authentication

  //    22. Set httpCache to the result of determining the HTTP cache
  //    partition, given httpRequest.
  //    TODO: cache

  //    23. If httpCache is null, then set httpRequest’s cache mode to
  //    "no-store".
  if (httpCache == null) {
    httpRequest.cache = 'no-store'
  }

  //    24. If httpRequest’s cache mode is neither "no-store" nor "reload",
  //    then:
  if (httpRequest.mode !== 'no-store' && httpRequest.mode !== 'reload') {
    // TODO: cache
  }

  // 9. If aborted, then return the appropriate network error for fetchParams.
  // TODO

  // 10. If response is null, then:
  if (response == null) {
    // 1. If httpRequest’s cache mode is "only-if-cached", then return a
    // network error.
    if (httpRequest.mode === 'only-if-cached') {
      return makeNetworkError('only if cached')
    }

    // 2. Let forwardResponse be the result of running HTTP-network fetch
    // given httpFetchParams, includeCredentials, and isNewConnectionFetch.
    const forwardResponse = await httpNetworkFetch(
      httpFetchParams,
      includeCredentials,
      isNewConnectionFetch
    )

    // 3. If httpRequest’s method is unsafe and forwardResponse’s status is
    // in the range 200 to 399, inclusive, invalidate appropriate stored
    // responses in httpCache, as per the "Invalidation" chapter of HTTP
    // Caching, and set storedResponse to null. [HTTP-CACHING]
    if (
      !safeMethods.includes(httpRequest.method) &&
      forwardResponse.status >= 200 &&
      forwardResponse.status <= 399
    ) {
      // TODO: cache
    }

    // 4. If the revalidatingFlag is set and forwardResponse’s status is 304,
    // then:
    if (revalidatingFlag && forwardResponse.status === 304) {
      // TODO: cache
    }

    // 5. If response is null, then:
    if (response == null) {
      // 1. Set response to forwardResponse.
      response = forwardResponse

      // 2. Store httpRequest and forwardResponse in httpCache, as per the
      // "Storing Responses in Caches" chapter of HTTP Caching. [HTTP-CACHING]
      // TODO: cache
    }
  }

  // 11. Set response’s URL list to a clone of httpRequest’s URL list.
  response.urlList = [...httpRequest.urlList]

  // 12. If httpRequest’s header list contains `Range`, then set response’s
  // range-requested flag.
  if (httpRequest.headersList.contains('range')) {
    response.rangeRequested = true
  }

  // 13. Set response’s request-includes-credentials to includeCredentials.
  response.requestIncludesCredentials = includeCredentials

  // 14. If response’s status is 401, httpRequest’s response tainting is not
  // "cors", includeCredentials is true, and request’s window is an environment
  // settings object, then:
  // TODO

  // 15. If response’s status is 407, then:
  if (response.status === 407) {
    // 1. If request’s window is "no-window", then return a network error.
    if (request.window === 'no-window') {
      return makeNetworkError()
    }

    // 2. ???

    // 3. If fetchParams is canceled, then return the appropriate network error for fetchParams.
    if (isCancelled(fetchParams)) {
      return makeAppropriateNetworkError(fetchParams)
    }

    // 4. Prompt the end user as appropriate in request’s window and store
    // the result as a proxy-authentication entry. [HTTP-AUTH]
    // TODO: Invoke some kind of callback?

    // 5. Set response to the result of running HTTP-network-or-cache fetch given
    // fetchParams.
    // TODO
    return makeNetworkError('proxy authentication required')
  }

  // 16. If all of the following are true
  if (
    // response’s status is 421
    response.status === 421 &&
    // isNewConnectionFetch is false
    !isNewConnectionFetch &&
    // request’s body is null, or request’s body is non-null and request’s body’s source is non-null
    (request.body == null || request.body.source != null)
  ) {
    // then:

    // 1. If fetchParams is canceled, then return the appropriate network error for fetchParams.
    if (isCancelled(fetchParams)) {
      return makeAppropriateNetworkError(fetchParams)
    }

    // 2. Set response to the result of running HTTP-network-or-cache
    // fetch given fetchParams, isAuthenticationFetch, and true.

    // TODO (spec): The spec doesn't specify this but we need to cancel
    // the active response before we can start a new one.
    // https://github.com/whatwg/fetch/issues/1293
    fetchParams.controller.connection.destroy()

    response = await httpNetworkOrCacheFetch(
      fetchParams,
      isAuthenticationFetch,
      true
    )
  }

  // 17. If isAuthenticationFetch is true, then create an authentication entry
  if (isAuthenticationFetch) {
    // TODO
  }

  // 18. Return response.
  return response
}

// https://fetch.spec.whatwg.org/#http-network-fetch
async function httpNetworkFetch (
  fetchParams,
  includeCredentials = false,
  forceNewConnection = false
) {
  assert(!fetchParams.controller.connection || fetchParams.controller.connection.destroyed)

  fetchParams.controller.connection = {
    abort: null,
    destroyed: false,
    destroy (err) {
      if (!this.destroyed) {
        this.destroyed = true
        this.abort?.(err ?? new DOMException('The operation was aborted.', 'AbortError'))
      }
    }
  }

  // 1. Let request be fetchParams’s request.
  const request = fetchParams.request

  // 2. Let response be null.
  let response = null

  // 3. Let timingInfo be fetchParams’s timing info.
  const timingInfo = fetchParams.timingInfo

  // 4. Let httpCache be the result of determining the HTTP cache partition,
  // given request.
  // TODO: cache
  const httpCache = null

  // 5. If httpCache is null, then set request’s cache mode to "no-store".
  if (httpCache == null) {
    request.cache = 'no-store'
  }

  // 6. Let networkPartitionKey be the result of determining the network
  // partition key given request.
  // TODO

  // 7. Let newConnection be "yes" if forceNewConnection is true; otherwise
  // "no".
  const newConnection = forceNewConnection ? 'yes' : 'no' // eslint-disable-line no-unused-vars

  // 8. Switch on request’s mode:
  if (request.mode === 'websocket') {
    // Let connection be the result of obtaining a WebSocket connection,
    // given request’s current URL.
    // TODO
  } else {
    // Let connection be the result of obtaining a connection, given
    // networkPartitionKey, request’s current URL’s origin,
    // includeCredentials, and forceNewConnection.
    // TODO
  }

  // 9. Run these steps, but abort when the ongoing fetch is terminated:

  //    1. If connection is failure, then return a network error.

  //    2. Set timingInfo’s final connection timing info to the result of
  //    calling clamp and coarsen connection timing info with connection’s
  //    timing info, timingInfo’s post-redirect start time, and fetchParams’s
  //    cross-origin isolated capability.

  //    3. If connection is not an HTTP/2 connection, request’s body is non-null,
  //    and request’s body’s source is null, then append (`Transfer-Encoding`,
  //    `chunked`) to request’s header list.

  //    4. Set timingInfo’s final network-request start time to the coarsened
  //    shared current time given fetchParams’s cross-origin isolated
  //    capability.

  //    5. Set response to the result of making an HTTP request over connection
  //    using request with the following caveats:

  //        - Follow the relevant requirements from HTTP. [HTTP] [HTTP-SEMANTICS]
  //        [HTTP-COND] [HTTP-CACHING] [HTTP-AUTH]

  //        - If request’s body is non-null, and request’s body’s source is null,
  //        then the user agent may have a buffer of up to 64 kibibytes and store
  //        a part of request’s body in that buffer. If the user agent reads from
  //        request’s body beyond that buffer’s size and the user agent needs to
  //        resend request, then instead return a network error.

  //        - Set timingInfo’s final network-response start time to the coarsened
  //        shared current time given fetchParams’s cross-origin isolated capability,
  //        immediately after the user agent’s HTTP parser receives the first byte
  //        of the response (e.g., frame header bytes for HTTP/2 or response status
  //        line for HTTP/1.x).

  //        - Wait until all the headers are transmitted.

  //        - Any responses whose status is in the range 100 to 199, inclusive,
  //        and is not 101, are to be ignored, except for the purposes of setting
  //        timingInfo’s final network-response start time above.

  //    - If request’s header list contains `Transfer-Encoding`/`chunked` and
  //    response is transferred via HTTP/1.0 or older, then return a network
  //    error.

  //    - If the HTTP request results in a TLS client certificate dialog, then:

  //        1. If request’s window is an environment settings object, make the
  //        dialog available in request’s window.

  //        2. Otherwise, return a network error.

  // To transmit request’s body body, run these steps:
  let requestBody = null
  // 1. If body is null and fetchParams’s process request end-of-body is
  // non-null, then queue a fetch task given fetchParams’s process request
  // end-of-body and fetchParams’s task destination.
  if (request.body == null && fetchParams.processRequestEndOfBody) {
    queueMicrotask(() => fetchParams.processRequestEndOfBody())
  } else if (request.body != null) {
    // 2. Otherwise, if body is non-null:

    //    1. Let processBodyChunk given bytes be these steps:
    const processBodyChunk = async function * (bytes) {
      // 1. If the ongoing fetch is terminated, then abort these steps.
      if (isCancelled(fetchParams)) {
        return
      }

      // 2. Run this step in parallel: transmit bytes.
      yield bytes

      // 3. If fetchParams’s process request body is non-null, then run
      // fetchParams’s process request body given bytes’s length.
      fetchParams.processRequestBodyChunkLength?.(bytes.byteLength)
    }

    // 2. Let processEndOfBody be these steps:
    const processEndOfBody = () => {
      // 1. If fetchParams is canceled, then abort these steps.
      if (isCancelled(fetchParams)) {
        return
      }

      // 2. If fetchParams’s process request end-of-body is non-null,
      // then run fetchParams’s process request end-of-body.
      if (fetchParams.processRequestEndOfBody) {
        fetchParams.processRequestEndOfBody()
      }
    }

    // 3. Let processBodyError given e be these steps:
    const processBodyError = (e) => {
      // 1. If fetchParams is canceled, then abort these steps.
      if (isCancelled(fetchParams)) {
        return
      }

      // 2. If e is an "AbortError" DOMException, then abort fetchParams’s controller.
      if (e.name === 'AbortError') {
        fetchParams.controller.abort()
      } else {
        fetchParams.controller.terminate(e)
      }
    }

    // 4. Incrementally read request’s body given processBodyChunk, processEndOfBody,
    // processBodyError, and fetchParams’s task destination.
    requestBody = (async function * () {
      try {
        for await (const bytes of request.body.stream) {
          yield * processBodyChunk(bytes)
        }
        processEndOfBody()
      } catch (err) {
        processBodyError(err)
      }
    })()
  }

  try {
    // socket is only provided for websockets
    const { body, status, statusText, headersList, socket } = await dispatch({ body: requestBody })

    if (socket) {
      response = makeResponse({ status, statusText, headersList, socket })
    } else {
      const iterator = body[Symbol.asyncIterator]()
      fetchParams.controller.next = () => iterator.next()

      response = makeResponse({ status, statusText, headersList })
    }
  } catch (err) {
    // 10. If aborted, then:
    if (err.name === 'AbortError') {
      // 1. If connection uses HTTP/2, then transmit an RST_STREAM frame.
      fetchParams.controller.connection.destroy()

      // 2. Return the appropriate network error for fetchParams.
      return makeAppropriateNetworkError(fetchParams, err)
    }

    return makeNetworkError(err)
  }

  // 11. Let pullAlgorithm be an action that resumes the ongoing fetch
  // if it is suspended.
  const pullAlgorithm = () => {
    fetchParams.controller.resume()
  }

  // 12. Let cancelAlgorithm be an algorithm that aborts fetchParams’s
  // controller with reason, given reason.
  const cancelAlgorithm = (reason) => {
    fetchParams.controller.abort(reason)
  }

  // 13. Let highWaterMark be a non-negative, non-NaN number, chosen by
  // the user agent.
  // TODO

  // 14. Let sizeAlgorithm be an algorithm that accepts a chunk object
  // and returns a non-negative, non-NaN, non-infinite number, chosen by the user agent.
  // TODO

  // 15. Let stream be a new ReadableStream.
  // 16. Set up stream with pullAlgorithm set to pullAlgorithm,
  // cancelAlgorithm set to cancelAlgorithm, highWaterMark set to
  // highWaterMark, and sizeAlgorithm set to sizeAlgorithm.
  if (!ReadableStream) {
    ReadableStream = (__nccwpck_require__(4544).ReadableStream)
  }

  const stream = new ReadableStream(
    {
      async start (controller) {
        fetchParams.controller.controller = controller
      },
      async pull (controller) {
        await pullAlgorithm(controller)
      },
      async cancel (reason) {
        await cancelAlgorithm(reason)
      }
    },
    {
      highWaterMark: 0,
      size () {
        return 1
      }
    }
  )

  // 17. Run these steps, but abort when the ongoing fetch is terminated:

  //    1. Set response’s body to a new body whose stream is stream.
  response.body = { stream }

  //    2. If response is not a network error and request’s cache mode is
  //    not "no-store", then update response in httpCache for request.
  //    TODO

  //    3. If includeCredentials is true and the user agent is not configured
  //    to block cookies for request (see section 7 of [COOKIES]), then run the
  //    "set-cookie-string" parsing algorithm (see section 5.2 of [COOKIES]) on
  //    the value of each header whose name is a byte-case-insensitive match for
  //    `Set-Cookie` in response’s header list, if any, and request’s current URL.
  //    TODO

  // 18. If aborted, then:
  // TODO

  // 19. Run these steps in parallel:

  //    1. Run these steps, but abort when fetchParams is canceled:
  fetchParams.controller.on('terminated', onAborted)
  fetchParams.controller.resume = async () => {
    // 1. While true
    while (true) {
      // 1-3. See onData...

      // 4. Set bytes to the result of handling content codings given
      // codings and bytes.
      let bytes
      let isFailure
      try {
        const { done, value } = await fetchParams.controller.next()

        if (isAborted(fetchParams)) {
          break
        }

        bytes = done ? undefined : value
      } catch (err) {
        if (fetchParams.controller.ended && !timingInfo.encodedBodySize) {
          // zlib doesn't like empty streams.
          bytes = undefined
        } else {
          bytes = err

          // err may be propagated from the result of calling readablestream.cancel,
          // which might not be an error. https://github.com/nodejs/undici/issues/2009
          isFailure = true
        }
      }

      if (bytes === undefined) {
        // 2. Otherwise, if the bytes transmission for response’s message
        // body is done normally and stream is readable, then close
        // stream, finalize response for fetchParams and response, and
        // abort these in-parallel steps.
        readableStreamClose(fetchParams.controller.controller)

        finalizeResponse(fetchParams, response)

        return
      }

      // 5. Increase timingInfo’s decoded body size by bytes’s length.
      timingInfo.decodedBodySize += bytes?.byteLength ?? 0

      // 6. If bytes is failure, then terminate fetchParams’s controller.
      if (isFailure) {
        fetchParams.controller.terminate(bytes)
        return
      }

      // 7. Enqueue a Uint8Array wrapping an ArrayBuffer containing bytes
      // into stream.
      fetchParams.controller.controller.enqueue(new Uint8Array(bytes))

      // 8. If stream is errored, then terminate the ongoing fetch.
      if (isErrored(stream)) {
        fetchParams.controller.terminate()
        return
      }

      // 9. If stream doesn’t need more data ask the user agent to suspend
      // the ongoing fetch.
      if (!fetchParams.controller.controller.desiredSize) {
        return
      }
    }
  }

  //    2. If aborted, then:
  function onAborted (reason) {
    // 2. If fetchParams is aborted, then:
    if (isAborted(fetchParams)) {
      // 1. Set response’s aborted flag.
      response.aborted = true

      // 2. If stream is readable, then error stream with the result of
      //    deserialize a serialized abort reason given fetchParams’s
      //    controller’s serialized abort reason and an
      //    implementation-defined realm.
      if (isReadable(stream)) {
        fetchParams.controller.controller.error(
          fetchParams.controller.serializedAbortReason
        )
      }
    } else {
      // 3. Otherwise, if stream is readable, error stream with a TypeError.
      if (isReadable(stream)) {
        fetchParams.controller.controller.error(new TypeError('terminated', {
          cause: isErrorLike(reason) ? reason : undefined
        }))
      }
    }

    // 4. If connection uses HTTP/2, then transmit an RST_STREAM frame.
    // 5. Otherwise, the user agent should close connection unless it would be bad for performance to do so.
    fetchParams.controller.connection.destroy()
  }

  // 20. Return response.
  return response

  async function dispatch ({ body }) {
    const url = requestCurrentURL(request)
    /** @type {import('../..').Agent} */
    const agent = fetchParams.controller.dispatcher

    return new Promise((resolve, reject) => agent.dispatch(
      {
        path: url.pathname + url.search,
        origin: url.origin,
        method: request.method,
        body: fetchParams.controller.dispatcher.isMockActive ? request.body && request.body.source : body,
        headers: request.headersList.entries,
        maxRedirections: 0,
        upgrade: request.mode === 'websocket' ? 'websocket' : undefined
      },
      {
        body: null,
        abort: null,

        onConnect (abort) {
          // TODO (fix): Do we need connection here?
          const { connection } = fetchParams.controller

          if (connection.destroyed) {
            abort(new DOMException('The operation was aborted.', 'AbortError'))
          } else {
            fetchParams.controller.on('terminated', abort)
            this.abort = connection.abort = abort
          }
        },

        onHeaders (status, headersList, resume, statusText) {
          if (status < 200) {
            return
          }

          let codings = []
          let location = ''

          const headers = new Headers()

          // For H2, the headers are a plain JS object
          // We distinguish between them and iterate accordingly
          if (Array.isArray(headersList)) {
            for (let n = 0; n < headersList.length; n += 2) {
              const key = headersList[n + 0].toString('latin1')
              const val = headersList[n + 1].toString('latin1')
              if (key.toLowerCase() === 'content-encoding') {
                // https://www.rfc-editor.org/rfc/rfc7231#section-3.1.2.1
                // "All content-coding values are case-insensitive..."
                codings = val.toLowerCase().split(',').map((x) => x.trim())
              } else if (key.toLowerCase() === 'location') {
                location = val
              }

              headers.append(key, val)
            }
          } else {
            const keys = Object.keys(headersList)
            for (const key of keys) {
              const val = headersList[key]
              if (key.toLowerCase() === 'content-encoding') {
                // https://www.rfc-editor.org/rfc/rfc7231#section-3.1.2.1
                // "All content-coding values are case-insensitive..."
                codings = val.toLowerCase().split(',').map((x) => x.trim()).reverse()
              } else if (key.toLowerCase() === 'location') {
                location = val
              }

              headers.append(key, val)
            }
          }

          this.body = new Readable({ read: resume })

          const decoders = []

          const willFollow = request.redirect === 'follow' &&
            location &&
            redirectStatus.includes(status)

          // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Encoding
          if (request.method !== 'HEAD' && request.method !== 'CONNECT' && !nullBodyStatus.includes(status) && !willFollow) {
            for (const coding of codings) {
              // https://www.rfc-editor.org/rfc/rfc9112.html#section-7.2
              if (coding === 'x-gzip' || coding === 'gzip') {
                decoders.push(zlib.createGunzip({
                  // Be less strict when decoding compressed responses, since sometimes
                  // servers send slightly invalid responses that are still accepted
                  // by common browsers.
                  // Always using Z_SYNC_FLUSH is what cURL does.
                  flush: zlib.constants.Z_SYNC_FLUSH,
                  finishFlush: zlib.constants.Z_SYNC_FLUSH
                }))
              } else if (coding === 'deflate') {
                decoders.push(zlib.createInflate())
              } else if (coding === 'br') {
                decoders.push(zlib.createBrotliDecompress())
              } else {
                decoders.length = 0
                break
              }
            }
          }

          resolve({
            status,
            statusText,
            headersList: headers[kHeadersList],
            body: decoders.length
              ? pipeline(this.body, ...decoders, () => { })
              : this.body.on('error', () => {})
          })

          return true
        },

        onData (chunk) {
          if (fetchParams.controller.dump) {
            return
          }

          // 1. If one or more bytes have been transmitted from response’s
          // message body, then:

          //  1. Let bytes be the transmitted bytes.
          const bytes = chunk

          //  2. Let codings be the result of extracting header list values
          //  given `Content-Encoding` and response’s header list.
          //  See pullAlgorithm.

          //  3. Increase timingInfo’s encoded body size by bytes’s length.
          timingInfo.encodedBodySize += bytes.byteLength

          //  4. See pullAlgorithm...

          return this.body.push(bytes)
        },

        onComplete () {
          if (this.abort) {
            fetchParams.controller.off('terminated', this.abort)
          }

          fetchParams.controller.ended = true

          this.body.push(null)
        },

        onError (error) {
          if (this.abort) {
            fetchParams.controller.off('terminated', this.abort)
          }

          this.body?.destroy(error)

          fetchParams.controller.terminate(error)

          reject(error)
        },

        onUpgrade (status, headersList, socket) {
          if (status !== 101) {
            return
          }

          const headers = new Headers()

          for (let n = 0; n < headersList.length; n += 2) {
            const key = headersList[n + 0].toString('latin1')
            const val = headersList[n + 1].toString('latin1')

            headers.append(key, val)
          }

          resolve({
            status,
            statusText: STATUS_CODES[status],
            headersList: headers[kHeadersList],
            socket
          })

          return true
        }
      }
    ))
  }
}

module.exports = {
  fetch,
  Fetch,
  fetching,
  finalizeAndReportTiming
}


/***/ }),

/***/ 8359:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";
/* globals AbortController */



const { extractBody, mixinBody, cloneBody } = __nccwpck_require__(1472)
const { Headers, fill: fillHeaders, HeadersList } = __nccwpck_require__(554)
const { FinalizationRegistry } = __nccwpck_require__(6436)()
const util = __nccwpck_require__(3983)
const {
  isValidHTTPToken,
  sameOrigin,
  normalizeMethod,
  makePolicyContainer
} = __nccwpck_require__(2538)
const {
  forbiddenMethods,
  corsSafeListedMethods,
  referrerPolicy,
  requestRedirect,
  requestMode,
  requestCredentials,
  requestCache,
  requestDuplex
} = __nccwpck_require__(1037)
const { kEnumerableProperty } = util
const { kHeaders, kSignal, kState, kGuard, kRealm } = __nccwpck_require__(5861)
const { webidl } = __nccwpck_require__(1744)
const { getGlobalOrigin } = __nccwpck_require__(1246)
const { URLSerializer } = __nccwpck_require__(685)
const { kHeadersList } = __nccwpck_require__(2785)
const assert = __nccwpck_require__(9491)
const { getMaxListeners, setMaxListeners, getEventListeners, defaultMaxListeners } = __nccwpck_require__(2361)

let TransformStream = globalThis.TransformStream

const kInit = Symbol('init')
const kAbortController = Symbol('abortController')

const requestFinalizer = new FinalizationRegistry(({ signal, abort }) => {
  signal.removeEventListener('abort', abort)
})

// https://fetch.spec.whatwg.org/#request-class
class Request {
  // https://fetch.spec.whatwg.org/#dom-request
  constructor (input, init = {}) {
    if (input === kInit) {
      return
    }

    webidl.argumentLengthCheck(arguments, 1, { header: 'Request constructor' })

    input = webidl.converters.RequestInfo(input)
    init = webidl.converters.RequestInit(init)

    // https://html.spec.whatwg.org/multipage/webappapis.html#environment-settings-object
    this[kRealm] = {
      settingsObject: {
        baseUrl: getGlobalOrigin(),
        get origin () {
          return this.baseUrl?.origin
        },
        policyContainer: makePolicyContainer()
      }
    }

    // 1. Let request be null.
    let request = null

    // 2. Let fallbackMode be null.
    let fallbackMode = null

    // 3. Let baseURL be this’s relevant settings object’s API base URL.
    const baseUrl = this[kRealm].settingsObject.baseUrl

    // 4. Let signal be null.
    let signal = null

    // 5. If input is a string, then:
    if (typeof input === 'string') {
      // 1. Let parsedURL be the result of parsing input with baseURL.
      // 2. If parsedURL is failure, then throw a TypeError.
      let parsedURL
      try {
        parsedURL = new URL(input, baseUrl)
      } catch (err) {
        throw new TypeError('Failed to parse URL from ' + input, { cause: err })
      }

      // 3. If parsedURL includes credentials, then throw a TypeError.
      if (parsedURL.username || parsedURL.password) {
        throw new TypeError(
          'Request cannot be constructed from a URL that includes credentials: ' +
            input
        )
      }

      // 4. Set request to a new request whose URL is parsedURL.
      request = makeRequest({ urlList: [parsedURL] })

      // 5. Set fallbackMode to "cors".
      fallbackMode = 'cors'
    } else {
      // 6. Otherwise:

      // 7. Assert: input is a Request object.
      assert(input instanceof Request)

      // 8. Set request to input’s request.
      request = input[kState]

      // 9. Set signal to input’s signal.
      signal = input[kSignal]
    }

    // 7. Let origin be this’s relevant settings object’s origin.
    const origin = this[kRealm].settingsObject.origin

    // 8. Let window be "client".
    let window = 'client'

    // 9. If request’s window is an environment settings object and its origin
    // is same origin with origin, then set window to request’s window.
    if (
      request.window?.constructor?.name === 'EnvironmentSettingsObject' &&
      sameOrigin(request.window, origin)
    ) {
      window = request.window
    }

    // 10. If init["window"] exists and is non-null, then throw a TypeError.
    if (init.window != null) {
      throw new TypeError(`'window' option '${window}' must be null`)
    }

    // 11. If init["window"] exists, then set window to "no-window".
    if ('window' in init) {
      window = 'no-window'
    }

    // 12. Set request to a new request with the following properties:
    request = makeRequest({
      // URL request’s URL.
      // undici implementation note: this is set as the first item in request's urlList in makeRequest
      // method request’s method.
      method: request.method,
      // header list A copy of request’s header list.
      // undici implementation note: headersList is cloned in makeRequest
      headersList: request.headersList,
      // unsafe-request flag Set.
      unsafeRequest: request.unsafeRequest,
      // client This’s relevant settings object.
      client: this[kRealm].settingsObject,
      // window window.
      window,
      // priority request’s priority.
      priority: request.priority,
      // origin request’s origin. The propagation of the origin is only significant for navigation requests
      // being handled by a service worker. In this scenario a request can have an origin that is different
      // from the current client.
      origin: request.origin,
      // referrer request’s referrer.
      referrer: request.referrer,
      // referrer policy request’s referrer policy.
      referrerPolicy: request.referrerPolicy,
      // mode request’s mode.
      mode: request.mode,
      // credentials mode request’s credentials mode.
      credentials: request.credentials,
      // cache mode request’s cache mode.
      cache: request.cache,
      // redirect mode request’s redirect mode.
      redirect: request.redirect,
      // integrity metadata request’s integrity metadata.
      integrity: request.integrity,
      // keepalive request’s keepalive.
      keepalive: request.keepalive,
      // reload-navigation flag request’s reload-navigation flag.
      reloadNavigation: request.reloadNavigation,
      // history-navigation flag request’s history-navigation flag.
      historyNavigation: request.historyNavigation,
      // URL list A clone of request’s URL list.
      urlList: [...request.urlList]
    })

    // 13. If init is not empty, then:
    if (Object.keys(init).length > 0) {
      // 1. If request’s mode is "navigate", then set it to "same-origin".
      if (request.mode === 'navigate') {
        request.mode = 'same-origin'
      }

      // 2. Unset request’s reload-navigation flag.
      request.reloadNavigation = false

      // 3. Unset request’s history-navigation flag.
      request.historyNavigation = false

      // 4. Set request’s origin to "client".
      request.origin = 'client'

      // 5. Set request’s referrer to "client"
      request.referrer = 'client'

      // 6. Set request’s referrer policy to the empty string.
      request.referrerPolicy = ''

      // 7. Set request’s URL to request’s current URL.
      request.url = request.urlList[request.urlList.length - 1]

      // 8. Set request’s URL list to « request’s URL ».
      request.urlList = [request.url]
    }

    // 14. If init["referrer"] exists, then:
    if (init.referrer !== undefined) {
      // 1. Let referrer be init["referrer"].
      const referrer = init.referrer

      // 2. If referrer is the empty string, then set request’s referrer to "no-referrer".
      if (referrer === '') {
        request.referrer = 'no-referrer'
      } else {
        // 1. Let parsedReferrer be the result of parsing referrer with
        // baseURL.
        // 2. If parsedReferrer is failure, then throw a TypeError.
        let parsedReferrer
        try {
          parsedReferrer = new URL(referrer, baseUrl)
        } catch (err) {
          throw new TypeError(`Referrer "${referrer}" is not a valid URL.`, { cause: err })
        }

        // 3. If one of the following is true
        // - parsedReferrer’s scheme is "about" and path is the string "client"
        // - parsedReferrer’s origin is not same origin with origin
        // then set request’s referrer to "client".
        if (
          (parsedReferrer.protocol === 'about:' && parsedReferrer.hostname === 'client') ||
          (origin && !sameOrigin(parsedReferrer, this[kRealm].settingsObject.baseUrl))
        ) {
          request.referrer = 'client'
        } else {
          // 4. Otherwise, set request’s referrer to parsedReferrer.
          request.referrer = parsedReferrer
        }
      }
    }

    // 15. If init["referrerPolicy"] exists, then set request’s referrer policy
    // to it.
    if (init.referrerPolicy !== undefined) {
      request.referrerPolicy = init.referrerPolicy
    }

    // 16. Let mode be init["mode"] if it exists, and fallbackMode otherwise.
    let mode
    if (init.mode !== undefined) {
      mode = init.mode
    } else {
      mode = fallbackMode
    }

    // 17. If mode is "navigate", then throw a TypeError.
    if (mode === 'navigate') {
      throw webidl.errors.exception({
        header: 'Request constructor',
        message: 'invalid request mode navigate.'
      })
    }

    // 18. If mode is non-null, set request’s mode to mode.
    if (mode != null) {
      request.mode = mode
    }

    // 19. If init["credentials"] exists, then set request’s credentials mode
    // to it.
    if (init.credentials !== undefined) {
      request.credentials = init.credentials
    }

    // 18. If init["cache"] exists, then set request’s cache mode to it.
    if (init.cache !== undefined) {
      request.cache = init.cache
    }

    // 21. If request’s cache mode is "only-if-cached" and request’s mode is
    // not "same-origin", then throw a TypeError.
    if (request.cache === 'only-if-cached' && request.mode !== 'same-origin') {
      throw new TypeError(
        "'only-if-cached' can be set only with 'same-origin' mode"
      )
    }

    // 22. If init["redirect"] exists, then set request’s redirect mode to it.
    if (init.redirect !== undefined) {
      request.redirect = init.redirect
    }

    // 23. If init["integrity"] exists, then set request’s integrity metadata to it.
    if (init.integrity !== undefined && init.integrity != null) {
      request.integrity = String(init.integrity)
    }

    // 24. If init["keepalive"] exists, then set request’s keepalive to it.
    if (init.keepalive !== undefined) {
      request.keepalive = Boolean(init.keepalive)
    }

    // 25. If init["method"] exists, then:
    if (init.method !== undefined) {
      // 1. Let method be init["method"].
      let method = init.method

      // 2. If method is not a method or method is a forbidden method, then
      // throw a TypeError.
      if (!isValidHTTPToken(init.method)) {
        throw TypeError(`'${init.method}' is not a valid HTTP method.`)
      }

      if (forbiddenMethods.indexOf(method.toUpperCase()) !== -1) {
        throw TypeError(`'${init.method}' HTTP method is unsupported.`)
      }

      // 3. Normalize method.
      method = normalizeMethod(init.method)

      // 4. Set request’s method to method.
      request.method = method
    }

    // 26. If init["signal"] exists, then set signal to it.
    if (init.signal !== undefined) {
      signal = init.signal
    }

    // 27. Set this’s request to request.
    this[kState] = request

    // 28. Set this’s signal to a new AbortSignal object with this’s relevant
    // Realm.
    // TODO: could this be simplified with AbortSignal.any
    // (https://dom.spec.whatwg.org/#dom-abortsignal-any)
    const ac = new AbortController()
    this[kSignal] = ac.signal
    this[kSignal][kRealm] = this[kRealm]

    // 29. If signal is not null, then make this’s signal follow signal.
    if (signal != null) {
      if (
        !signal ||
        typeof signal.aborted !== 'boolean' ||
        typeof signal.addEventListener !== 'function'
      ) {
        throw new TypeError(
          "Failed to construct 'Request': member signal is not of type AbortSignal."
        )
      }

      if (signal.aborted) {
        ac.abort(signal.reason)
      } else {
        // Keep a strong ref to ac while request object
        // is alive. This is needed to prevent AbortController
        // from being prematurely garbage collected.
        // See, https://github.com/nodejs/undici/issues/1926.
        this[kAbortController] = ac

        const acRef = new WeakRef(ac)
        const abort = function () {
          const ac = acRef.deref()
          if (ac !== undefined) {
            ac.abort(this.reason)
          }
        }

        // Third-party AbortControllers may not work with these.
        // See, https://github.com/nodejs/undici/pull/1910#issuecomment-1464495619.
        try {
          // If the max amount of listeners is equal to the default, increase it
          // This is only available in node >= v19.9.0
          if (typeof getMaxListeners === 'function' && getMaxListeners(signal) === defaultMaxListeners) {
            setMaxListeners(100, signal)
          } else if (getEventListeners(signal, 'abort').length >= defaultMaxListeners) {
            setMaxListeners(100, signal)
          }
        } catch {}

        util.addAbortListener(signal, abort)
        requestFinalizer.register(ac, { signal, abort })
      }
    }

    // 30. Set this’s headers to a new Headers object with this’s relevant
    // Realm, whose header list is request’s header list and guard is
    // "request".
    this[kHeaders] = new Headers()
    this[kHeaders][kHeadersList] = request.headersList
    this[kHeaders][kGuard] = 'request'
    this[kHeaders][kRealm] = this[kRealm]

    // 31. If this’s request’s mode is "no-cors", then:
    if (mode === 'no-cors') {
      // 1. If this’s request’s method is not a CORS-safelisted method,
      // then throw a TypeError.
      if (!corsSafeListedMethods.includes(request.method)) {
        throw new TypeError(
          `'${request.method} is unsupported in no-cors mode.`
        )
      }

      // 2. Set this’s headers’s guard to "request-no-cors".
      this[kHeaders][kGuard] = 'request-no-cors'
    }

    // 32. If init is not empty, then:
    if (Object.keys(init).length !== 0) {
      // 1. Let headers be a copy of this’s headers and its associated header
      // list.
      let headers = new Headers(this[kHeaders])

      // 2. If init["headers"] exists, then set headers to init["headers"].
      if (init.headers !== undefined) {
        headers = init.headers
      }

      // 3. Empty this’s headers’s header list.
      this[kHeaders][kHeadersList].clear()

      // 4. If headers is a Headers object, then for each header in its header
      // list, append header’s name/header’s value to this’s headers.
      if (headers.constructor.name === 'Headers') {
        for (const [key, val] of headers) {
          this[kHeaders].append(key, val)
        }
      } else {
        // 5. Otherwise, fill this’s headers with headers.
        fillHeaders(this[kHeaders], headers)
      }
    }

    // 33. Let inputBody be input’s request’s body if input is a Request
    // object; otherwise null.
    const inputBody = input instanceof Request ? input[kState].body : null

    // 34. If either init["body"] exists and is non-null or inputBody is
    // non-null, and request’s method is `GET` or `HEAD`, then throw a
    // TypeError.
    if (
      (init.body != null || inputBody != null) &&
      (request.method === 'GET' || request.method === 'HEAD')
    ) {
      throw new TypeError('Request with GET/HEAD method cannot have body.')
    }

    // 35. Let initBody be null.
    let initBody = null

    // 36. If init["body"] exists and is non-null, then:
    if (init.body != null) {
      // 1. Let Content-Type be null.
      // 2. Set initBody and Content-Type to the result of extracting
      // init["body"], with keepalive set to request’s keepalive.
      const [extractedBody, contentType] = extractBody(
        init.body,
        request.keepalive
      )
      initBody = extractedBody

      // 3, If Content-Type is non-null and this’s headers’s header list does
      // not contain `Content-Type`, then append `Content-Type`/Content-Type to
      // this’s headers.
      if (contentType && !this[kHeaders][kHeadersList].contains('content-type')) {
        this[kHeaders].append('content-type', contentType)
      }
    }

    // 37. Let inputOrInitBody be initBody if it is non-null; otherwise
    // inputBody.
    const inputOrInitBody = initBody ?? inputBody

    // 38. If inputOrInitBody is non-null and inputOrInitBody’s source is
    // null, then:
    if (inputOrInitBody != null && inputOrInitBody.source == null) {
      // 1. If initBody is non-null and init["duplex"] does not exist,
      //    then throw a TypeError.
      if (initBody != null && init.duplex == null) {
        throw new TypeError('RequestInit: duplex option is required when sending a body.')
      }

      // 2. If this’s request’s mode is neither "same-origin" nor "cors",
      // then throw a TypeError.
      if (request.mode !== 'same-origin' && request.mode !== 'cors') {
        throw new TypeError(
          'If request is made from ReadableStream, mode should be "same-origin" or "cors"'
        )
      }

      // 3. Set this’s request’s use-CORS-preflight flag.
      request.useCORSPreflightFlag = true
    }

    // 39. Let finalBody be inputOrInitBody.
    let finalBody = inputOrInitBody

    // 40. If initBody is null and inputBody is non-null, then:
    if (initBody == null && inputBody != null) {
      // 1. If input is unusable, then throw a TypeError.
      if (util.isDisturbed(inputBody.stream) || inputBody.stream.locked) {
        throw new TypeError(
          'Cannot construct a Request with a Request object that has already been used.'
        )
      }

      // 2. Set finalBody to the result of creating a proxy for inputBody.
      if (!TransformStream) {
        TransformStream = (__nccwpck_require__(4544).TransformStream)
      }

      // https://streams.spec.whatwg.org/#readablestream-create-a-proxy
      const identityTransform = new TransformStream()
      inputBody.stream.pipeThrough(identityTransform)
      finalBody = {
        source: inputBody.source,
        length: inputBody.length,
        stream: identityTransform.readable
      }
    }

    // 41. Set this’s request’s body to finalBody.
    this[kState].body = finalBody
  }

  // Returns request’s HTTP method, which is "GET" by default.
  get method () {
    webidl.brandCheck(this, Request)

    // The method getter steps are to return this’s request’s method.
    return this[kState].method
  }

  // Returns the URL of request as a string.
  get url () {
    webidl.brandCheck(this, Request)

    // The url getter steps are to return this’s request’s URL, serialized.
    return URLSerializer(this[kState].url)
  }

  // Returns a Headers object consisting of the headers associated with request.
  // Note that headers added in the network layer by the user agent will not
  // be accounted for in this object, e.g., the "Host" header.
  get headers () {
    webidl.brandCheck(this, Request)

    // The headers getter steps are to return this’s headers.
    return this[kHeaders]
  }

  // Returns the kind of resource requested by request, e.g., "document"
  // or "script".
  get destination () {
    webidl.brandCheck(this, Request)

    // The destination getter are to return this’s request’s destination.
    return this[kState].destination
  }

  // Returns the referrer of request. Its value can be a same-origin URL if
  // explicitly set in init, the empty string to indicate no referrer, and
  // "about:client" when defaulting to the global’s default. This is used
  // during fetching to determine the value of the `Referer` header of the
  // request being made.
  get referrer () {
    webidl.brandCheck(this, Request)

    // 1. If this’s request’s referrer is "no-referrer", then return the
    // empty string.
    if (this[kState].referrer === 'no-referrer') {
      return ''
    }

    // 2. If this’s request’s referrer is "client", then return
    // "about:client".
    if (this[kState].referrer === 'client') {
      return 'about:client'
    }

    // Return this’s request’s referrer, serialized.
    return this[kState].referrer.toString()
  }

  // Returns the referrer policy associated with request.
  // This is used during fetching to compute the value of the request’s
  // referrer.
  get referrerPolicy () {
    webidl.brandCheck(this, Request)

    // The referrerPolicy getter steps are to return this’s request’s referrer policy.
    return this[kState].referrerPolicy
  }

  // Returns the mode associated with request, which is a string indicating
  // whether the request will use CORS, or will be restricted to same-origin
  // URLs.
  get mode () {
    webidl.brandCheck(this, Request)

    // The mode getter steps are to return this’s request’s mode.
    return this[kState].mode
  }

  // Returns the credentials mode associated with request,
  // which is a string indicating whether credentials will be sent with the
  // request always, never, or only when sent to a same-origin URL.
  get credentials () {
    // The credentials getter steps are to return this’s request’s credentials mode.
    return this[kState].credentials
  }

  // Returns the cache mode associated with request,
  // which is a string indicating how the request will
  // interact with the browser’s cache when fetching.
  get cache () {
    webidl.brandCheck(this, Request)

    // The cache getter steps are to return this’s request’s cache mode.
    return this[kState].cache
  }

  // Returns the redirect mode associated with request,
  // which is a string indicating how redirects for the
  // request will be handled during fetching. A request
  // will follow redirects by default.
  get redirect () {
    webidl.brandCheck(this, Request)

    // The redirect getter steps are to return this’s request’s redirect mode.
    return this[kState].redirect
  }

  // Returns request’s subresource integrity metadata, which is a
  // cryptographic hash of the resource being fetched. Its value
  // consists of multiple hashes separated by whitespace. [SRI]
  get integrity () {
    webidl.brandCheck(this, Request)

    // The integrity getter steps are to return this’s request’s integrity
    // metadata.
    return this[kState].integrity
  }

  // Returns a boolean indicating whether or not request can outlive the
  // global in which it was created.
  get keepalive () {
    webidl.brandCheck(this, Request)

    // The keepalive getter steps are to return this’s request’s keepalive.
    return this[kState].keepalive
  }

  // Returns a boolean indicating whether or not request is for a reload
  // navigation.
  get isReloadNavigation () {
    webidl.brandCheck(this, Request)

    // The isReloadNavigation getter steps are to return true if this’s
    // request’s reload-navigation flag is set; otherwise false.
    return this[kState].reloadNavigation
  }

  // Returns a boolean indicating whether or not request is for a history
  // navigation (a.k.a. back-foward navigation).
  get isHistoryNavigation () {
    webidl.brandCheck(this, Request)

    // The isHistoryNavigation getter steps are to return true if this’s request’s
    // history-navigation flag is set; otherwise false.
    return this[kState].historyNavigation
  }

  // Returns the signal associated with request, which is an AbortSignal
  // object indicating whether or not request has been aborted, and its
  // abort event handler.
  get signal () {
    webidl.brandCheck(this, Request)

    // The signal getter steps are to return this’s signal.
    return this[kSignal]
  }

  get body () {
    webidl.brandCheck(this, Request)

    return this[kState].body ? this[kState].body.stream : null
  }

  get bodyUsed () {
    webidl.brandCheck(this, Request)

    return !!this[kState].body && util.isDisturbed(this[kState].body.stream)
  }

  get duplex () {
    webidl.brandCheck(this, Request)

    return 'half'
  }

  // Returns a clone of request.
  clone () {
    webidl.brandCheck(this, Request)

    // 1. If this is unusable, then throw a TypeError.
    if (this.bodyUsed || this.body?.locked) {
      throw new TypeError('unusable')
    }

    // 2. Let clonedRequest be the result of cloning this’s request.
    const clonedRequest = cloneRequest(this[kState])

    // 3. Let clonedRequestObject be the result of creating a Request object,
    // given clonedRequest, this’s headers’s guard, and this’s relevant Realm.
    const clonedRequestObject = new Request(kInit)
    clonedRequestObject[kState] = clonedRequest
    clonedRequestObject[kRealm] = this[kRealm]
    clonedRequestObject[kHeaders] = new Headers()
    clonedRequestObject[kHeaders][kHeadersList] = clonedRequest.headersList
    clonedRequestObject[kHeaders][kGuard] = this[kHeaders][kGuard]
    clonedRequestObject[kHeaders][kRealm] = this[kHeaders][kRealm]

    // 4. Make clonedRequestObject’s signal follow this’s signal.
    const ac = new AbortController()
    if (this.signal.aborted) {
      ac.abort(this.signal.reason)
    } else {
      util.addAbortListener(
        this.signal,
        () => {
          ac.abort(this.signal.reason)
        }
      )
    }
    clonedRequestObject[kSignal] = ac.signal

    // 4. Return clonedRequestObject.
    return clonedRequestObject
  }
}

mixinBody(Request)

function makeRequest (init) {
  // https://fetch.spec.whatwg.org/#requests
  const request = {
    method: 'GET',
    localURLsOnly: false,
    unsafeRequest: false,
    body: null,
    client: null,
    reservedClient: null,
    replacesClientId: '',
    window: 'client',
    keepalive: false,
    serviceWorkers: 'all',
    initiator: '',
    destination: '',
    priority: null,
    origin: 'client',
    policyContainer: 'client',
    referrer: 'client',
    referrerPolicy: '',
    mode: 'no-cors',
    useCORSPreflightFlag: false,
    credentials: 'same-origin',
    useCredentials: false,
    cache: 'default',
    redirect: 'follow',
    integrity: '',
    cryptoGraphicsNonceMetadata: '',
    parserMetadata: '',
    reloadNavigation: false,
    historyNavigation: false,
    userActivation: false,
    taintedOrigin: false,
    redirectCount: 0,
    responseTainting: 'basic',
    preventNoCacheCacheControlHeaderModification: false,
    done: false,
    timingAllowFailed: false,
    ...init,
    headersList: init.headersList
      ? new HeadersList(init.headersList)
      : new HeadersList()
  }
  request.url = request.urlList[0]
  return request
}

// https://fetch.spec.whatwg.org/#concept-request-clone
function cloneRequest (request) {
  // To clone a request request, run these steps:

  // 1. Let newRequest be a copy of request, except for its body.
  const newRequest = makeRequest({ ...request, body: null })

  // 2. If request’s body is non-null, set newRequest’s body to the
  // result of cloning request’s body.
  if (request.body != null) {
    newRequest.body = cloneBody(request.body)
  }

  // 3. Return newRequest.
  return newRequest
}

Object.defineProperties(Request.prototype, {
  method: kEnumerableProperty,
  url: kEnumerableProperty,
  headers: kEnumerableProperty,
  redirect: kEnumerableProperty,
  clone: kEnumerableProperty,
  signal: kEnumerableProperty,
  duplex: kEnumerableProperty,
  destination: kEnumerableProperty,
  body: kEnumerableProperty,
  bodyUsed: kEnumerableProperty,
  isHistoryNavigation: kEnumerableProperty,
  isReloadNavigation: kEnumerableProperty,
  keepalive: kEnumerableProperty,
  integrity: kEnumerableProperty,
  cache: kEnumerableProperty,
  credentials: kEnumerableProperty,
  attribute: kEnumerableProperty,
  referrerPolicy: kEnumerableProperty,
  referrer: kEnumerableProperty,
  mode: kEnumerableProperty,
  [Symbol.toStringTag]: {
    value: 'Request',
    configurable: true
  }
})

webidl.converters.Request = webidl.interfaceConverter(
  Request
)

// https://fetch.spec.whatwg.org/#requestinfo
webidl.converters.RequestInfo = function (V) {
  if (typeof V === 'string') {
    return webidl.converters.USVString(V)
  }

  if (V instanceof Request) {
    return webidl.converters.Request(V)
  }

  return webidl.converters.USVString(V)
}

webidl.converters.AbortSignal = webidl.interfaceConverter(
  AbortSignal
)

// https://fetch.spec.whatwg.org/#requestinit
webidl.converters.RequestInit = webidl.dictionaryConverter([
  {
    key: 'method',
    converter: webidl.converters.ByteString
  },
  {
    key: 'headers',
    converter: webidl.converters.HeadersInit
  },
  {
    key: 'body',
    converter: webidl.nullableConverter(
      webidl.converters.BodyInit
    )
  },
  {
    key: 'referrer',
    converter: webidl.converters.USVString
  },
  {
    key: 'referrerPolicy',
    converter: webidl.converters.DOMString,
    // https://w3c.github.io/webappsec-referrer-policy/#referrer-policy
    allowedValues: referrerPolicy
  },
  {
    key: 'mode',
    converter: webidl.converters.DOMString,
    // https://fetch.spec.whatwg.org/#concept-request-mode
    allowedValues: requestMode
  },
  {
    key: 'credentials',
    converter: webidl.converters.DOMString,
    // https://fetch.spec.whatwg.org/#requestcredentials
    allowedValues: requestCredentials
  },
  {
    key: 'cache',
    converter: webidl.converters.DOMString,
    // https://fetch.spec.whatwg.org/#requestcache
    allowedValues: requestCache
  },
  {
    key: 'redirect',
    converter: webidl.converters.DOMString,
    // https://fetch.spec.whatwg.org/#requestredirect
    allowedValues: requestRedirect
  },
  {
    key: 'integrity',
    converter: webidl.converters.DOMString
  },
  {
    key: 'keepalive',
    converter: webidl.converters.boolean
  },
  {
    key: 'signal',
    converter: webidl.nullableConverter(
      (signal) => webidl.converters.AbortSignal(
        signal,
        { strict: false }
      )
    )
  },
  {
    key: 'window',
    converter: webidl.converters.any
  },
  {
    key: 'duplex',
    converter: webidl.converters.DOMString,
    allowedValues: requestDuplex
  }
])

module.exports = { Request, makeRequest }


/***/ }),

/***/ 7823:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { Headers, HeadersList, fill } = __nccwpck_require__(554)
const { extractBody, cloneBody, mixinBody } = __nccwpck_require__(1472)
const util = __nccwpck_require__(3983)
const { kEnumerableProperty } = util
const {
  isValidReasonPhrase,
  isCancelled,
  isAborted,
  isBlobLike,
  serializeJavascriptValueToJSONString,
  isErrorLike,
  isomorphicEncode
} = __nccwpck_require__(2538)
const {
  redirectStatus,
  nullBodyStatus,
  DOMException
} = __nccwpck_require__(1037)
const { kState, kHeaders, kGuard, kRealm } = __nccwpck_require__(5861)
const { webidl } = __nccwpck_require__(1744)
const { FormData } = __nccwpck_require__(2015)
const { getGlobalOrigin } = __nccwpck_require__(1246)
const { URLSerializer } = __nccwpck_require__(685)
const { kHeadersList } = __nccwpck_require__(2785)
const assert = __nccwpck_require__(9491)
const { types } = __nccwpck_require__(3837)

const ReadableStream = globalThis.ReadableStream || (__nccwpck_require__(4544).ReadableStream)

// https://fetch.spec.whatwg.org/#response-class
class Response {
  // Creates network error Response.
  static error () {
    // TODO
    const relevantRealm = { settingsObject: {} }

    // The static error() method steps are to return the result of creating a
    // Response object, given a new network error, "immutable", and this’s
    // relevant Realm.
    const responseObject = new Response()
    responseObject[kState] = makeNetworkError()
    responseObject[kRealm] = relevantRealm
    responseObject[kHeaders][kHeadersList] = responseObject[kState].headersList
    responseObject[kHeaders][kGuard] = 'immutable'
    responseObject[kHeaders][kRealm] = relevantRealm
    return responseObject
  }

  // https://fetch.spec.whatwg.org/#dom-response-json
  static json (data, init = {}) {
    webidl.argumentLengthCheck(arguments, 1, { header: 'Response.json' })

    if (init !== null) {
      init = webidl.converters.ResponseInit(init)
    }

    // 1. Let bytes the result of running serialize a JavaScript value to JSON bytes on data.
    const bytes = new TextEncoder('utf-8').encode(
      serializeJavascriptValueToJSONString(data)
    )

    // 2. Let body be the result of extracting bytes.
    const body = extractBody(bytes)

    // 3. Let responseObject be the result of creating a Response object, given a new response,
    //    "response", and this’s relevant Realm.
    const relevantRealm = { settingsObject: {} }
    const responseObject = new Response()
    responseObject[kRealm] = relevantRealm
    responseObject[kHeaders][kGuard] = 'response'
    responseObject[kHeaders][kRealm] = relevantRealm

    // 4. Perform initialize a response given responseObject, init, and (body, "application/json").
    initializeResponse(responseObject, init, { body: body[0], type: 'application/json' })

    // 5. Return responseObject.
    return responseObject
  }

  // Creates a redirect Response that redirects to url with status status.
  static redirect (url, status = 302) {
    const relevantRealm = { settingsObject: {} }

    webidl.argumentLengthCheck(arguments, 1, { header: 'Response.redirect' })

    url = webidl.converters.USVString(url)
    status = webidl.converters['unsigned short'](status)

    // 1. Let parsedURL be the result of parsing url with current settings
    // object’s API base URL.
    // 2. If parsedURL is failure, then throw a TypeError.
    // TODO: base-URL?
    let parsedURL
    try {
      parsedURL = new URL(url, getGlobalOrigin())
    } catch (err) {
      throw Object.assign(new TypeError('Failed to parse URL from ' + url), {
        cause: err
      })
    }

    // 3. If status is not a redirect status, then throw a RangeError.
    if (!redirectStatus.includes(status)) {
      throw new RangeError('Invalid status code ' + status)
    }

    // 4. Let responseObject be the result of creating a Response object,
    // given a new response, "immutable", and this’s relevant Realm.
    const responseObject = new Response()
    responseObject[kRealm] = relevantRealm
    responseObject[kHeaders][kGuard] = 'immutable'
    responseObject[kHeaders][kRealm] = relevantRealm

    // 5. Set responseObject’s response’s status to status.
    responseObject[kState].status = status

    // 6. Let value be parsedURL, serialized and isomorphic encoded.
    const value = isomorphicEncode(URLSerializer(parsedURL))

    // 7. Append `Location`/value to responseObject’s response’s header list.
    responseObject[kState].headersList.append('location', value)

    // 8. Return responseObject.
    return responseObject
  }

  // https://fetch.spec.whatwg.org/#dom-response
  constructor (body = null, init = {}) {
    if (body !== null) {
      body = webidl.converters.BodyInit(body)
    }

    init = webidl.converters.ResponseInit(init)

    // TODO
    this[kRealm] = { settingsObject: {} }

    // 1. Set this’s response to a new response.
    this[kState] = makeResponse({})

    // 2. Set this’s headers to a new Headers object with this’s relevant
    // Realm, whose header list is this’s response’s header list and guard
    // is "response".
    this[kHeaders] = new Headers()
    this[kHeaders][kGuard] = 'response'
    this[kHeaders][kHeadersList] = this[kState].headersList
    this[kHeaders][kRealm] = this[kRealm]

    // 3. Let bodyWithType be null.
    let bodyWithType = null

    // 4. If body is non-null, then set bodyWithType to the result of extracting body.
    if (body != null) {
      const [extractedBody, type] = extractBody(body)
      bodyWithType = { body: extractedBody, type }
    }

    // 5. Perform initialize a response given this, init, and bodyWithType.
    initializeResponse(this, init, bodyWithType)
  }

  // Returns response’s type, e.g., "cors".
  get type () {
    webidl.brandCheck(this, Response)

    // The type getter steps are to return this’s response’s type.
    return this[kState].type
  }

  // Returns response’s URL, if it has one; otherwise the empty string.
  get url () {
    webidl.brandCheck(this, Response)

    const urlList = this[kState].urlList

    // The url getter steps are to return the empty string if this’s
    // response’s URL is null; otherwise this’s response’s URL,
    // serialized with exclude fragment set to true.
    const url = urlList[urlList.length - 1] ?? null

    if (url === null) {
      return ''
    }

    return URLSerializer(url, true)
  }

  // Returns whether response was obtained through a redirect.
  get redirected () {
    webidl.brandCheck(this, Response)

    // The redirected getter steps are to return true if this’s response’s URL
    // list has more than one item; otherwise false.
    return this[kState].urlList.length > 1
  }

  // Returns response’s status.
  get status () {
    webidl.brandCheck(this, Response)

    // The status getter steps are to return this’s response’s status.
    return this[kState].status
  }

  // Returns whether response’s status is an ok status.
  get ok () {
    webidl.brandCheck(this, Response)

    // The ok getter steps are to return true if this’s response’s status is an
    // ok status; otherwise false.
    return this[kState].status >= 200 && this[kState].status <= 299
  }

  // Returns response’s status message.
  get statusText () {
    webidl.brandCheck(this, Response)

    // The statusText getter steps are to return this’s response’s status
    // message.
    return this[kState].statusText
  }

  // Returns response’s headers as Headers.
  get headers () {
    webidl.brandCheck(this, Response)

    // The headers getter steps are to return this’s headers.
    return this[kHeaders]
  }

  get body () {
    webidl.brandCheck(this, Response)

    return this[kState].body ? this[kState].body.stream : null
  }

  get bodyUsed () {
    webidl.brandCheck(this, Response)

    return !!this[kState].body && util.isDisturbed(this[kState].body.stream)
  }

  // Returns a clone of response.
  clone () {
    webidl.brandCheck(this, Response)

    // 1. If this is unusable, then throw a TypeError.
    if (this.bodyUsed || (this.body && this.body.locked)) {
      throw webidl.errors.exception({
        header: 'Response.clone',
        message: 'Body has already been consumed.'
      })
    }

    // 2. Let clonedResponse be the result of cloning this’s response.
    const clonedResponse = cloneResponse(this[kState])

    // 3. Return the result of creating a Response object, given
    // clonedResponse, this’s headers’s guard, and this’s relevant Realm.
    const clonedResponseObject = new Response()
    clonedResponseObject[kState] = clonedResponse
    clonedResponseObject[kRealm] = this[kRealm]
    clonedResponseObject[kHeaders][kHeadersList] = clonedResponse.headersList
    clonedResponseObject[kHeaders][kGuard] = this[kHeaders][kGuard]
    clonedResponseObject[kHeaders][kRealm] = this[kHeaders][kRealm]

    return clonedResponseObject
  }
}

mixinBody(Response)

Object.defineProperties(Response.prototype, {
  type: kEnumerableProperty,
  url: kEnumerableProperty,
  status: kEnumerableProperty,
  ok: kEnumerableProperty,
  redirected: kEnumerableProperty,
  statusText: kEnumerableProperty,
  headers: kEnumerableProperty,
  clone: kEnumerableProperty,
  body: kEnumerableProperty,
  bodyUsed: kEnumerableProperty,
  [Symbol.toStringTag]: {
    value: 'Response',
    configurable: true
  }
})

Object.defineProperties(Response, {
  json: kEnumerableProperty,
  redirect: kEnumerableProperty,
  error: kEnumerableProperty
})

// https://fetch.spec.whatwg.org/#concept-response-clone
function cloneResponse (response) {
  // To clone a response response, run these steps:

  // 1. If response is a filtered response, then return a new identical
  // filtered response whose internal response is a clone of response’s
  // internal response.
  if (response.internalResponse) {
    return filterResponse(
      cloneResponse(response.internalResponse),
      response.type
    )
  }

  // 2. Let newResponse be a copy of response, except for its body.
  const newResponse = makeResponse({ ...response, body: null })

  // 3. If response’s body is non-null, then set newResponse’s body to the
  // result of cloning response’s body.
  if (response.body != null) {
    newResponse.body = cloneBody(response.body)
  }

  // 4. Return newResponse.
  return newResponse
}

function makeResponse (init) {
  return {
    aborted: false,
    rangeRequested: false,
    timingAllowPassed: false,
    requestIncludesCredentials: false,
    type: 'default',
    status: 200,
    timingInfo: null,
    cacheState: '',
    statusText: '',
    ...init,
    headersList: init.headersList
      ? new HeadersList(init.headersList)
      : new HeadersList(),
    urlList: init.urlList ? [...init.urlList] : []
  }
}

function makeNetworkError (reason) {
  const isError = isErrorLike(reason)
  return makeResponse({
    type: 'error',
    status: 0,
    error: isError
      ? reason
      : new Error(reason ? String(reason) : reason),
    aborted: reason && reason.name === 'AbortError'
  })
}

function makeFilteredResponse (response, state) {
  state = {
    internalResponse: response,
    ...state
  }

  return new Proxy(response, {
    get (target, p) {
      return p in state ? state[p] : target[p]
    },
    set (target, p, value) {
      assert(!(p in state))
      target[p] = value
      return true
    }
  })
}

// https://fetch.spec.whatwg.org/#concept-filtered-response
function filterResponse (response, type) {
  // Set response to the following filtered response with response as its
  // internal response, depending on request’s response tainting:
  if (type === 'basic') {
    // A basic filtered response is a filtered response whose type is "basic"
    // and header list excludes any headers in internal response’s header list
    // whose name is a forbidden response-header name.

    // Note: undici does not implement forbidden response-header names
    return makeFilteredResponse(response, {
      type: 'basic',
      headersList: response.headersList
    })
  } else if (type === 'cors') {
    // A CORS filtered response is a filtered response whose type is "cors"
    // and header list excludes any headers in internal response’s header
    // list whose name is not a CORS-safelisted response-header name, given
    // internal response’s CORS-exposed header-name list.

    // Note: undici does not implement CORS-safelisted response-header names
    return makeFilteredResponse(response, {
      type: 'cors',
      headersList: response.headersList
    })
  } else if (type === 'opaque') {
    // An opaque filtered response is a filtered response whose type is
    // "opaque", URL list is the empty list, status is 0, status message
    // is the empty byte sequence, header list is empty, and body is null.

    return makeFilteredResponse(response, {
      type: 'opaque',
      urlList: Object.freeze([]),
      status: 0,
      statusText: '',
      body: null
    })
  } else if (type === 'opaqueredirect') {
    // An opaque-redirect filtered response is a filtered response whose type
    // is "opaqueredirect", status is 0, status message is the empty byte
    // sequence, header list is empty, and body is null.

    return makeFilteredResponse(response, {
      type: 'opaqueredirect',
      status: 0,
      statusText: '',
      headersList: [],
      body: null
    })
  } else {
    assert(false)
  }
}

// https://fetch.spec.whatwg.org/#appropriate-network-error
function makeAppropriateNetworkError (fetchParams, err = null) {
  // 1. Assert: fetchParams is canceled.
  assert(isCancelled(fetchParams))

  // 2. Return an aborted network error if fetchParams is aborted;
  // otherwise return a network error.
  return isAborted(fetchParams)
    ? makeNetworkError(Object.assign(new DOMException('The operation was aborted.', 'AbortError'), { cause: err }))
    : makeNetworkError(Object.assign(new DOMException('Request was cancelled.'), { cause: err }))
}

// https://whatpr.org/fetch/1392.html#initialize-a-response
function initializeResponse (response, init, body) {
  // 1. If init["status"] is not in the range 200 to 599, inclusive, then
  //    throw a RangeError.
  if (init.status !== null && (init.status < 200 || init.status > 599)) {
    throw new RangeError('init["status"] must be in the range of 200 to 599, inclusive.')
  }

  // 2. If init["statusText"] does not match the reason-phrase token production,
  //    then throw a TypeError.
  if ('statusText' in init && init.statusText != null) {
    // See, https://datatracker.ietf.org/doc/html/rfc7230#section-3.1.2:
    //   reason-phrase  = *( HTAB / SP / VCHAR / obs-text )
    if (!isValidReasonPhrase(String(init.statusText))) {
      throw new TypeError('Invalid statusText')
    }
  }

  // 3. Set response’s response’s status to init["status"].
  if ('status' in init && init.status != null) {
    response[kState].status = init.status
  }

  // 4. Set response’s response’s status message to init["statusText"].
  if ('statusText' in init && init.statusText != null) {
    response[kState].statusText = init.statusText
  }

  // 5. If init["headers"] exists, then fill response’s headers with init["headers"].
  if ('headers' in init && init.headers != null) {
    fill(response[kHeaders], init.headers)
  }

  // 6. If body was given, then:
  if (body) {
    // 1. If response's status is a null body status, then throw a TypeError.
    if (nullBodyStatus.includes(response.status)) {
      throw webidl.errors.exception({
        header: 'Response constructor',
        message: 'Invalid response status code ' + response.status
      })
    }

    // 2. Set response's body to body's body.
    response[kState].body = body.body

    // 3. If body's type is non-null and response's header list does not contain
    //    `Content-Type`, then append (`Content-Type`, body's type) to response's header list.
    if (body.type != null && !response[kState].headersList.contains('Content-Type')) {
      response[kState].headersList.append('content-type', body.type)
    }
  }
}

webidl.converters.ReadableStream = webidl.interfaceConverter(
  ReadableStream
)

webidl.converters.FormData = webidl.interfaceConverter(
  FormData
)

webidl.converters.URLSearchParams = webidl.interfaceConverter(
  URLSearchParams
)

// https://fetch.spec.whatwg.org/#typedefdef-xmlhttprequestbodyinit
webidl.converters.XMLHttpRequestBodyInit = function (V) {
  if (typeof V === 'string') {
    return webidl.converters.USVString(V)
  }

  if (isBlobLike(V)) {
    return webidl.converters.Blob(V, { strict: false })
  }

  if (
    types.isAnyArrayBuffer(V) ||
    types.isTypedArray(V) ||
    types.isDataView(V)
  ) {
    return webidl.converters.BufferSource(V)
  }

  if (util.isFormDataLike(V)) {
    return webidl.converters.FormData(V, { strict: false })
  }

  if (V instanceof URLSearchParams) {
    return webidl.converters.URLSearchParams(V)
  }

  return webidl.converters.DOMString(V)
}

// https://fetch.spec.whatwg.org/#bodyinit
webidl.converters.BodyInit = function (V) {
  if (V instanceof ReadableStream) {
    return webidl.converters.ReadableStream(V)
  }

  // Note: the spec doesn't include async iterables,
  // this is an undici extension.
  if (V?.[Symbol.asyncIterator]) {
    return V
  }

  return webidl.converters.XMLHttpRequestBodyInit(V)
}

webidl.converters.ResponseInit = webidl.dictionaryConverter([
  {
    key: 'status',
    converter: webidl.converters['unsigned short'],
    defaultValue: 200
  },
  {
    key: 'statusText',
    converter: webidl.converters.ByteString,
    defaultValue: ''
  },
  {
    key: 'headers',
    converter: webidl.converters.HeadersInit
  }
])

module.exports = {
  makeNetworkError,
  makeResponse,
  makeAppropriateNetworkError,
  filterResponse,
  Response,
  cloneResponse
}


/***/ }),

/***/ 5861:
/***/ ((module) => {

"use strict";


module.exports = {
  kUrl: Symbol('url'),
  kHeaders: Symbol('headers'),
  kSignal: Symbol('signal'),
  kState: Symbol('state'),
  kGuard: Symbol('guard'),
  kRealm: Symbol('realm')
}


/***/ }),

/***/ 2538:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { redirectStatus, badPorts, referrerPolicy: referrerPolicyTokens } = __nccwpck_require__(1037)
const { getGlobalOrigin } = __nccwpck_require__(1246)
const { performance } = __nccwpck_require__(4074)
const { isBlobLike, toUSVString, ReadableStreamFrom } = __nccwpck_require__(3983)
const assert = __nccwpck_require__(9491)
const { isUint8Array } = __nccwpck_require__(9830)

// https://nodejs.org/api/crypto.html#determining-if-crypto-support-is-unavailable
/** @type {import('crypto')|undefined} */
let crypto

try {
  crypto = __nccwpck_require__(6113)
} catch {

}

function responseURL (response) {
  // https://fetch.spec.whatwg.org/#responses
  // A response has an associated URL. It is a pointer to the last URL
  // in response’s URL list and null if response’s URL list is empty.
  const urlList = response.urlList
  const length = urlList.length
  return length === 0 ? null : urlList[length - 1].toString()
}

// https://fetch.spec.whatwg.org/#concept-response-location-url
function responseLocationURL (response, requestFragment) {
  // 1. If response’s status is not a redirect status, then return null.
  if (!redirectStatus.includes(response.status)) {
    return null
  }

  // 2. Let location be the result of extracting header list values given
  // `Location` and response’s header list.
  let location = response.headersList.get('location')

  // 3. If location is a header value, then set location to the result of
  //    parsing location with response’s URL.
  if (location !== null && isValidHeaderValue(location)) {
    location = new URL(location, responseURL(response))
  }

  // 4. If location is a URL whose fragment is null, then set location’s
  // fragment to requestFragment.
  if (location && !location.hash) {
    location.hash = requestFragment
  }

  // 5. Return location.
  return location
}

/** @returns {URL} */
function requestCurrentURL (request) {
  return request.urlList[request.urlList.length - 1]
}

function requestBadPort (request) {
  // 1. Let url be request’s current URL.
  const url = requestCurrentURL(request)

  // 2. If url’s scheme is an HTTP(S) scheme and url’s port is a bad port,
  // then return blocked.
  if (urlIsHttpHttpsScheme(url) && badPorts.includes(url.port)) {
    return 'blocked'
  }

  // 3. Return allowed.
  return 'allowed'
}

function isErrorLike (object) {
  return object instanceof Error || (
    object?.constructor?.name === 'Error' ||
    object?.constructor?.name === 'DOMException'
  )
}

// Check whether |statusText| is a ByteString and
// matches the Reason-Phrase token production.
// RFC 2616: https://tools.ietf.org/html/rfc2616
// RFC 7230: https://tools.ietf.org/html/rfc7230
// "reason-phrase = *( HTAB / SP / VCHAR / obs-text )"
// https://github.com/chromium/chromium/blob/94.0.4604.1/third_party/blink/renderer/core/fetch/response.cc#L116
function isValidReasonPhrase (statusText) {
  for (let i = 0; i < statusText.length; ++i) {
    const c = statusText.charCodeAt(i)
    if (
      !(
        (
          c === 0x09 || // HTAB
          (c >= 0x20 && c <= 0x7e) || // SP / VCHAR
          (c >= 0x80 && c <= 0xff)
        ) // obs-text
      )
    ) {
      return false
    }
  }
  return true
}

function isTokenChar (c) {
  return !(
    c >= 0x7f ||
    c <= 0x20 ||
    c === '(' ||
    c === ')' ||
    c === '<' ||
    c === '>' ||
    c === '@' ||
    c === ',' ||
    c === ';' ||
    c === ':' ||
    c === '\\' ||
    c === '"' ||
    c === '/' ||
    c === '[' ||
    c === ']' ||
    c === '?' ||
    c === '=' ||
    c === '{' ||
    c === '}'
  )
}

// See RFC 7230, Section 3.2.6.
// https://github.com/chromium/chromium/blob/d7da0240cae77824d1eda25745c4022757499131/third_party/blink/renderer/platform/network/http_parsers.cc#L321
function isValidHTTPToken (characters) {
  if (!characters || typeof characters !== 'string') {
    return false
  }
  for (let i = 0; i < characters.length; ++i) {
    const c = characters.charCodeAt(i)
    if (c > 0x7f || !isTokenChar(c)) {
      return false
    }
  }
  return true
}

// https://fetch.spec.whatwg.org/#header-name
// https://github.com/chromium/chromium/blob/b3d37e6f94f87d59e44662d6078f6a12de845d17/net/http/http_util.cc#L342
function isValidHeaderName (potentialValue) {
  if (potentialValue.length === 0) {
    return false
  }

  return isValidHTTPToken(potentialValue)
}

/**
 * @see https://fetch.spec.whatwg.org/#header-value
 * @param {string} potentialValue
 */
function isValidHeaderValue (potentialValue) {
  // - Has no leading or trailing HTTP tab or space bytes.
  // - Contains no 0x00 (NUL) or HTTP newline bytes.
  if (
    potentialValue.startsWith('\t') ||
    potentialValue.startsWith(' ') ||
    potentialValue.endsWith('\t') ||
    potentialValue.endsWith(' ')
  ) {
    return false
  }

  if (
    potentialValue.includes('\0') ||
    potentialValue.includes('\r') ||
    potentialValue.includes('\n')
  ) {
    return false
  }

  return true
}

// https://w3c.github.io/webappsec-referrer-policy/#set-requests-referrer-policy-on-redirect
function setRequestReferrerPolicyOnRedirect (request, actualResponse) {
  //  Given a request request and a response actualResponse, this algorithm
  //  updates request’s referrer policy according to the Referrer-Policy
  //  header (if any) in actualResponse.

  // 1. Let policy be the result of executing § 8.1 Parse a referrer policy
  // from a Referrer-Policy header on actualResponse.

  // 8.1 Parse a referrer policy from a Referrer-Policy header
  // 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy` and response’s header list.
  const { headersList } = actualResponse
  // 2. Let policy be the empty string.
  // 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty string, then set policy to token.
  // 4. Return policy.
  const policyHeader = (headersList.get('referrer-policy') ?? '').split(',')

  // Note: As the referrer-policy can contain multiple policies
  // separated by comma, we need to loop through all of them
  // and pick the first valid one.
  // Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy#specify_a_fallback_policy
  let policy = ''
  if (policyHeader.length > 0) {
    // The right-most policy takes precedence.
    // The left-most policy is the fallback.
    for (let i = policyHeader.length; i !== 0; i--) {
      const token = policyHeader[i - 1].trim()
      if (referrerPolicyTokens.includes(token)) {
        policy = token
        break
      }
    }
  }

  // 2. If policy is not the empty string, then set request’s referrer policy to policy.
  if (policy !== '') {
    request.referrerPolicy = policy
  }
}

// https://fetch.spec.whatwg.org/#cross-origin-resource-policy-check
function crossOriginResourcePolicyCheck () {
  // TODO
  return 'allowed'
}

// https://fetch.spec.whatwg.org/#concept-cors-check
function corsCheck () {
  // TODO
  return 'success'
}

// https://fetch.spec.whatwg.org/#concept-tao-check
function TAOCheck () {
  // TODO
  return 'success'
}

function appendFetchMetadata (httpRequest) {
  //  https://w3c.github.io/webappsec-fetch-metadata/#sec-fetch-dest-header
  //  TODO

  //  https://w3c.github.io/webappsec-fetch-metadata/#sec-fetch-mode-header

  //  1. Assert: r’s url is a potentially trustworthy URL.
  //  TODO

  //  2. Let header be a Structured Header whose value is a token.
  let header = null

  //  3. Set header’s value to r’s mode.
  header = httpRequest.mode

  //  4. Set a structured field value `Sec-Fetch-Mode`/header in r’s header list.
  httpRequest.headersList.set('sec-fetch-mode', header)

  //  https://w3c.github.io/webappsec-fetch-metadata/#sec-fetch-site-header
  //  TODO

  //  https://w3c.github.io/webappsec-fetch-metadata/#sec-fetch-user-header
  //  TODO
}

// https://fetch.spec.whatwg.org/#append-a-request-origin-header
function appendRequestOriginHeader (request) {
  // 1. Let serializedOrigin be the result of byte-serializing a request origin with request.
  let serializedOrigin = request.origin

  // 2. If request’s response tainting is "cors" or request’s mode is "websocket", then append (`Origin`, serializedOrigin) to request’s header list.
  if (request.responseTainting === 'cors' || request.mode === 'websocket') {
    if (serializedOrigin) {
      request.headersList.append('origin', serializedOrigin)
    }

  // 3. Otherwise, if request’s method is neither `GET` nor `HEAD`, then:
  } else if (request.method !== 'GET' && request.method !== 'HEAD') {
    // 1. Switch on request’s referrer policy:
    switch (request.referrerPolicy) {
      case 'no-referrer':
        // Set serializedOrigin to `null`.
        serializedOrigin = null
        break
      case 'no-referrer-when-downgrade':
      case 'strict-origin':
      case 'strict-origin-when-cross-origin':
        // If request’s origin is a tuple origin, its scheme is "https", and request’s current URL’s scheme is not "https", then set serializedOrigin to `null`.
        if (request.origin && urlHasHttpsScheme(request.origin) && !urlHasHttpsScheme(requestCurrentURL(request))) {
          serializedOrigin = null
        }
        break
      case 'same-origin':
        // If request’s origin is not same origin with request’s current URL’s origin, then set serializedOrigin to `null`.
        if (!sameOrigin(request, requestCurrentURL(request))) {
          serializedOrigin = null
        }
        break
      default:
        // Do nothing.
    }

    if (serializedOrigin) {
      // 2. Append (`Origin`, serializedOrigin) to request’s header list.
      request.headersList.append('origin', serializedOrigin)
    }
  }
}

function coarsenedSharedCurrentTime (crossOriginIsolatedCapability) {
  // TODO
  return performance.now()
}

// https://fetch.spec.whatwg.org/#create-an-opaque-timing-info
function createOpaqueTimingInfo (timingInfo) {
  return {
    startTime: timingInfo.startTime ?? 0,
    redirectStartTime: 0,
    redirectEndTime: 0,
    postRedirectStartTime: timingInfo.startTime ?? 0,
    finalServiceWorkerStartTime: 0,
    finalNetworkResponseStartTime: 0,
    finalNetworkRequestStartTime: 0,
    endTime: 0,
    encodedBodySize: 0,
    decodedBodySize: 0,
    finalConnectionTimingInfo: null
  }
}

// https://html.spec.whatwg.org/multipage/origin.html#policy-container
function makePolicyContainer () {
  // Note: the fetch spec doesn't make use of embedder policy or CSP list
  return {
    referrerPolicy: 'strict-origin-when-cross-origin'
  }
}

// https://html.spec.whatwg.org/multipage/origin.html#clone-a-policy-container
function clonePolicyContainer (policyContainer) {
  return {
    referrerPolicy: policyContainer.referrerPolicy
  }
}

// https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer
function determineRequestsReferrer (request) {
  // 1. Let policy be request's referrer policy.
  const policy = request.referrerPolicy

  // Note: policy cannot (shouldn't) be null or an empty string.
  assert(policy)

  // 2. Let environment be request’s client.

  let referrerSource = null

  // 3. Switch on request’s referrer:
  if (request.referrer === 'client') {
    // Note: node isn't a browser and doesn't implement document/iframes,
    // so we bypass this step and replace it with our own.

    const globalOrigin = getGlobalOrigin()

    if (!globalOrigin || globalOrigin.origin === 'null') {
      return 'no-referrer'
    }

    // note: we need to clone it as it's mutated
    referrerSource = new URL(globalOrigin)
  } else if (request.referrer instanceof URL) {
    // Let referrerSource be request’s referrer.
    referrerSource = request.referrer
  }

  // 4. Let request’s referrerURL be the result of stripping referrerSource for
  //    use as a referrer.
  let referrerURL = stripURLForReferrer(referrerSource)

  // 5. Let referrerOrigin be the result of stripping referrerSource for use as
  //    a referrer, with the origin-only flag set to true.
  const referrerOrigin = stripURLForReferrer(referrerSource, true)

  // 6. If the result of serializing referrerURL is a string whose length is
  //    greater than 4096, set referrerURL to referrerOrigin.
  if (referrerURL.toString().length > 4096) {
    referrerURL = referrerOrigin
  }

  const areSameOrigin = sameOrigin(request, referrerURL)
  const isNonPotentiallyTrustWorthy = isURLPotentiallyTrustworthy(referrerURL) &&
    !isURLPotentiallyTrustworthy(request.url)

  // 8. Execute the switch statements corresponding to the value of policy:
  switch (policy) {
    case 'origin': return referrerOrigin != null ? referrerOrigin : stripURLForReferrer(referrerSource, true)
    case 'unsafe-url': return referrerURL
    case 'same-origin':
      return areSameOrigin ? referrerOrigin : 'no-referrer'
    case 'origin-when-cross-origin':
      return areSameOrigin ? referrerURL : referrerOrigin
    case 'strict-origin-when-cross-origin': {
      const currentURL = requestCurrentURL(request)

      // 1. If the origin of referrerURL and the origin of request’s current
      //    URL are the same, then return referrerURL.
      if (sameOrigin(referrerURL, currentURL)) {
        return referrerURL
      }

      // 2. If referrerURL is a potentially trustworthy URL and request’s
      //    current URL is not a potentially trustworthy URL, then return no
      //    referrer.
      if (isURLPotentiallyTrustworthy(referrerURL) && !isURLPotentiallyTrustworthy(currentURL)) {
        return 'no-referrer'
      }

      // 3. Return referrerOrigin.
      return referrerOrigin
    }
    case 'strict-origin': // eslint-disable-line
      /**
         * 1. If referrerURL is a potentially trustworthy URL and
         * request’s current URL is not a potentially trustworthy URL,
         * then return no referrer.
         * 2. Return referrerOrigin
        */
    case 'no-referrer-when-downgrade': // eslint-disable-line
      /**
       * 1. If referrerURL is a potentially trustworthy URL and
       * request’s current URL is not a potentially trustworthy URL,
       * then return no referrer.
       * 2. Return referrerOrigin
      */

    default: // eslint-disable-line
      return isNonPotentiallyTrustWorthy ? 'no-referrer' : referrerOrigin
  }
}

/**
 * @see https://w3c.github.io/webappsec-referrer-policy/#strip-url
 * @param {URL} url
 * @param {boolean|undefined} originOnly
 */
function stripURLForReferrer (url, originOnly) {
  // 1. Assert: url is a URL.
  assert(url instanceof URL)

  // 2. If url’s scheme is a local scheme, then return no referrer.
  if (url.protocol === 'file:' || url.protocol === 'about:' || url.protocol === 'blank:') {
    return 'no-referrer'
  }

  // 3. Set url’s username to the empty string.
  url.username = ''

  // 4. Set url’s password to the empty string.
  url.password = ''

  // 5. Set url’s fragment to null.
  url.hash = ''

  // 6. If the origin-only flag is true, then:
  if (originOnly) {
    // 1. Set url’s path to « the empty string ».
    url.pathname = ''

    // 2. Set url’s query to null.
    url.search = ''
  }

  // 7. Return url.
  return url
}

function isURLPotentiallyTrustworthy (url) {
  if (!(url instanceof URL)) {
    return false
  }

  // If child of about, return true
  if (url.href === 'about:blank' || url.href === 'about:srcdoc') {
    return true
  }

  // If scheme is data, return true
  if (url.protocol === 'data:') return true

  // If file, return true
  if (url.protocol === 'file:') return true

  return isOriginPotentiallyTrustworthy(url.origin)

  function isOriginPotentiallyTrustworthy (origin) {
    // If origin is explicitly null, return false
    if (origin == null || origin === 'null') return false

    const originAsURL = new URL(origin)

    // If secure, return true
    if (originAsURL.protocol === 'https:' || originAsURL.protocol === 'wss:') {
      return true
    }

    // If localhost or variants, return true
    if (/^127(?:\.[0-9]+){0,2}\.[0-9]+$|^\[(?:0*:)*?:?0*1\]$/.test(originAsURL.hostname) ||
     (originAsURL.hostname === 'localhost' || originAsURL.hostname.includes('localhost.')) ||
     (originAsURL.hostname.endsWith('.localhost'))) {
      return true
    }

    // If any other, return false
    return false
  }
}

/**
 * @see https://w3c.github.io/webappsec-subresource-integrity/#does-response-match-metadatalist
 * @param {Uint8Array} bytes
 * @param {string} metadataList
 */
function bytesMatch (bytes, metadataList) {
  // If node is not built with OpenSSL support, we cannot check
  // a request's integrity, so allow it by default (the spec will
  // allow requests if an invalid hash is given, as precedence).
  /* istanbul ignore if: only if node is built with --without-ssl */
  if (crypto === undefined) {
    return true
  }

  // 1. Let parsedMetadata be the result of parsing metadataList.
  const parsedMetadata = parseMetadata(metadataList)

  // 2. If parsedMetadata is no metadata, return true.
  if (parsedMetadata === 'no metadata') {
    return true
  }

  // 3. If parsedMetadata is the empty set, return true.
  if (parsedMetadata.length === 0) {
    return true
  }

  // 4. Let metadata be the result of getting the strongest
  //    metadata from parsedMetadata.
  const list = parsedMetadata.sort((c, d) => d.algo.localeCompare(c.algo))
  // get the strongest algorithm
  const strongest = list[0].algo
  // get all entries that use the strongest algorithm; ignore weaker
  const metadata = list.filter((item) => item.algo === strongest)

  // 5. For each item in metadata:
  for (const item of metadata) {
    // 1. Let algorithm be the alg component of item.
    const algorithm = item.algo

    // 2. Let expectedValue be the val component of item.
    let expectedValue = item.hash

    // See https://github.com/web-platform-tests/wpt/commit/e4c5cc7a5e48093220528dfdd1c4012dc3837a0e
    // "be liberal with padding". This is annoying, and it's not even in the spec.

    if (expectedValue.endsWith('==')) {
      expectedValue = expectedValue.slice(0, -2)
    }

    // 3. Let actualValue be the result of applying algorithm to bytes.
    let actualValue = crypto.createHash(algorithm).update(bytes).digest('base64')

    if (actualValue.endsWith('==')) {
      actualValue = actualValue.slice(0, -2)
    }

    // 4. If actualValue is a case-sensitive match for expectedValue,
    //    return true.
    if (actualValue === expectedValue) {
      return true
    }

    let actualBase64URL = crypto.createHash(algorithm).update(bytes).digest('base64url')

    if (actualBase64URL.endsWith('==')) {
      actualBase64URL = actualBase64URL.slice(0, -2)
    }

    if (actualBase64URL === expectedValue) {
      return true
    }
  }

  // 6. Return false.
  return false
}

// https://w3c.github.io/webappsec-subresource-integrity/#grammardef-hash-with-options
// https://www.w3.org/TR/CSP2/#source-list-syntax
// https://www.rfc-editor.org/rfc/rfc5234#appendix-B.1
const parseHashWithOptions = /((?<algo>sha256|sha384|sha512)-(?<hash>[A-z0-9+/]{1}.*={0,2}))( +[\x21-\x7e]?)?/i

/**
 * @see https://w3c.github.io/webappsec-subresource-integrity/#parse-metadata
 * @param {string} metadata
 */
function parseMetadata (metadata) {
  // 1. Let result be the empty set.
  /** @type {{ algo: string, hash: string }[]} */
  const result = []

  // 2. Let empty be equal to true.
  let empty = true

  const supportedHashes = crypto.getHashes()

  // 3. For each token returned by splitting metadata on spaces:
  for (const token of metadata.split(' ')) {
    // 1. Set empty to false.
    empty = false

    // 2. Parse token as a hash-with-options.
    const parsedToken = parseHashWithOptions.exec(token)

    // 3. If token does not parse, continue to the next token.
    if (parsedToken === null || parsedToken.groups === undefined) {
      // Note: Chromium blocks the request at this point, but Firefox
      // gives a warning that an invalid integrity was given. The
      // correct behavior is to ignore these, and subsequently not
      // check the integrity of the resource.
      continue
    }

    // 4. Let algorithm be the hash-algo component of token.
    const algorithm = parsedToken.groups.algo

    // 5. If algorithm is a hash function recognized by the user
    //    agent, add the parsed token to result.
    if (supportedHashes.includes(algorithm.toLowerCase())) {
      result.push(parsedToken.groups)
    }
  }

  // 4. Return no metadata if empty is true, otherwise return result.
  if (empty === true) {
    return 'no metadata'
  }

  return result
}

// https://w3c.github.io/webappsec-upgrade-insecure-requests/#upgrade-request
function tryUpgradeRequestToAPotentiallyTrustworthyURL (request) {
  // TODO
}

/**
 * @link {https://html.spec.whatwg.org/multipage/origin.html#same-origin}
 * @param {URL} A
 * @param {URL} B
 */
function sameOrigin (A, B) {
  // 1. If A and B are the same opaque origin, then return true.
  if (A.origin === B.origin && A.origin === 'null') {
    return true
  }

  // 2. If A and B are both tuple origins and their schemes,
  //    hosts, and port are identical, then return true.
  if (A.protocol === B.protocol && A.hostname === B.hostname && A.port === B.port) {
    return true
  }

  // 3. Return false.
  return false
}

function createDeferredPromise () {
  let res
  let rej
  const promise = new Promise((resolve, reject) => {
    res = resolve
    rej = reject
  })

  return { promise, resolve: res, reject: rej }
}

function isAborted (fetchParams) {
  return fetchParams.controller.state === 'aborted'
}

function isCancelled (fetchParams) {
  return fetchParams.controller.state === 'aborted' ||
    fetchParams.controller.state === 'terminated'
}

// https://fetch.spec.whatwg.org/#concept-method-normalize
function normalizeMethod (method) {
  return /^(DELETE|GET|HEAD|OPTIONS|POST|PUT)$/i.test(method)
    ? method.toUpperCase()
    : method
}

// https://infra.spec.whatwg.org/#serialize-a-javascript-value-to-a-json-string
function serializeJavascriptValueToJSONString (value) {
  // 1. Let result be ? Call(%JSON.stringify%, undefined, « value »).
  const result = JSON.stringify(value)

  // 2. If result is undefined, then throw a TypeError.
  if (result === undefined) {
    throw new TypeError('Value is not JSON serializable')
  }

  // 3. Assert: result is a string.
  assert(typeof result === 'string')

  // 4. Return result.
  return result
}

// https://tc39.es/ecma262/#sec-%25iteratorprototype%25-object
const esIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()))

/**
 * @see https://webidl.spec.whatwg.org/#dfn-iterator-prototype-object
 * @param {() => unknown[]} iterator
 * @param {string} name name of the instance
 * @param {'key'|'value'|'key+value'} kind
 */
function makeIterator (iterator, name, kind) {
  const object = {
    index: 0,
    kind,
    target: iterator
  }

  const i = {
    next () {
      // 1. Let interface be the interface for which the iterator prototype object exists.

      // 2. Let thisValue be the this value.

      // 3. Let object be ? ToObject(thisValue).

      // 4. If object is a platform object, then perform a security
      //    check, passing:

      // 5. If object is not a default iterator object for interface,
      //    then throw a TypeError.
      if (Object.getPrototypeOf(this) !== i) {
        throw new TypeError(
          `'next' called on an object that does not implement interface ${name} Iterator.`
        )
      }

      // 6. Let index be object’s index.
      // 7. Let kind be object’s kind.
      // 8. Let values be object’s target's value pairs to iterate over.
      const { index, kind, target } = object
      const values = target()

      // 9. Let len be the length of values.
      const len = values.length

      // 10. If index is greater than or equal to len, then return
      //     CreateIterResultObject(undefined, true).
      if (index >= len) {
        return { value: undefined, done: true }
      }

      // 11. Let pair be the entry in values at index index.
      const pair = values[index]

      // 12. Set object’s index to index + 1.
      object.index = index + 1

      // 13. Return the iterator result for pair and kind.
      return iteratorResult(pair, kind)
    },
    // The class string of an iterator prototype object for a given interface is the
    // result of concatenating the identifier of the interface and the string " Iterator".
    [Symbol.toStringTag]: `${name} Iterator`
  }

  // The [[Prototype]] internal slot of an iterator prototype object must be %IteratorPrototype%.
  Object.setPrototypeOf(i, esIteratorPrototype)
  // esIteratorPrototype needs to be the prototype of i
  // which is the prototype of an empty object. Yes, it's confusing.
  return Object.setPrototypeOf({}, i)
}

// https://webidl.spec.whatwg.org/#iterator-result
function iteratorResult (pair, kind) {
  let result

  // 1. Let result be a value determined by the value of kind:
  switch (kind) {
    case 'key': {
      // 1. Let idlKey be pair’s key.
      // 2. Let key be the result of converting idlKey to an
      //    ECMAScript value.
      // 3. result is key.
      result = pair[0]
      break
    }
    case 'value': {
      // 1. Let idlValue be pair’s value.
      // 2. Let value be the result of converting idlValue to
      //    an ECMAScript value.
      // 3. result is value.
      result = pair[1]
      break
    }
    case 'key+value': {
      // 1. Let idlKey be pair’s key.
      // 2. Let idlValue be pair’s value.
      // 3. Let key be the result of converting idlKey to an
      //    ECMAScript value.
      // 4. Let value be the result of converting idlValue to
      //    an ECMAScript value.
      // 5. Let array be ! ArrayCreate(2).
      // 6. Call ! CreateDataProperty(array, "0", key).
      // 7. Call ! CreateDataProperty(array, "1", value).
      // 8. result is array.
      result = pair
      break
    }
  }

  // 2. Return CreateIterResultObject(result, false).
  return { value: result, done: false }
}

/**
 * @see https://fetch.spec.whatwg.org/#body-fully-read
 */
async function fullyReadBody (body, processBody, processBodyError) {
  // 1. If taskDestination is null, then set taskDestination to
  //    the result of starting a new parallel queue.

  // 2. Let successSteps given a byte sequence bytes be to queue a
  //    fetch task to run processBody given bytes, with taskDestination.
  const successSteps = processBody

  // 3. Let errorSteps be to queue a fetch task to run processBodyError,
  //    with taskDestination.
  const errorSteps = processBodyError

  // 4. Let reader be the result of getting a reader for body’s stream.
  //    If that threw an exception, then run errorSteps with that
  //    exception and return.
  let reader

  try {
    reader = body.stream.getReader()
  } catch (e) {
    errorSteps(e)
    return
  }

  // 5. Read all bytes from reader, given successSteps and errorSteps.
  try {
    const result = await readAllBytes(reader)
    successSteps(result)
  } catch (e) {
    errorSteps(e)
  }
}

/** @type {ReadableStream} */
let ReadableStream = globalThis.ReadableStream

function isReadableStreamLike (stream) {
  if (!ReadableStream) {
    ReadableStream = (__nccwpck_require__(4544).ReadableStream)
  }

  return stream instanceof ReadableStream || (
    stream[Symbol.toStringTag] === 'ReadableStream' &&
    typeof stream.tee === 'function'
  )
}

const MAXIMUM_ARGUMENT_LENGTH = 65535

/**
 * @see https://infra.spec.whatwg.org/#isomorphic-decode
 * @param {number[]|Uint8Array} input
 */
function isomorphicDecode (input) {
  // 1. To isomorphic decode a byte sequence input, return a string whose code point
  //    length is equal to input’s length and whose code points have the same values
  //    as the values of input’s bytes, in the same order.

  if (input.length < MAXIMUM_ARGUMENT_LENGTH) {
    return String.fromCharCode(...input)
  }

  return input.reduce((previous, current) => previous + String.fromCharCode(current), '')
}

/**
 * @param {ReadableStreamController<Uint8Array>} controller
 */
function readableStreamClose (controller) {
  try {
    controller.close()
  } catch (err) {
    // TODO: add comment explaining why this error occurs.
    if (!err.message.includes('Controller is already closed')) {
      throw err
    }
  }
}

/**
 * @see https://infra.spec.whatwg.org/#isomorphic-encode
 * @param {string} input
 */
function isomorphicEncode (input) {
  // 1. Assert: input contains no code points greater than U+00FF.
  for (let i = 0; i < input.length; i++) {
    assert(input.charCodeAt(i) <= 0xFF)
  }

  // 2. Return a byte sequence whose length is equal to input’s code
  //    point length and whose bytes have the same values as the
  //    values of input’s code points, in the same order
  return input
}

/**
 * @see https://streams.spec.whatwg.org/#readablestreamdefaultreader-read-all-bytes
 * @see https://streams.spec.whatwg.org/#read-loop
 * @param {ReadableStreamDefaultReader} reader
 */
async function readAllBytes (reader) {
  const bytes = []
  let byteLength = 0

  while (true) {
    const { done, value: chunk } = await reader.read()

    if (done) {
      // 1. Call successSteps with bytes.
      return Buffer.concat(bytes, byteLength)
    }

    // 1. If chunk is not a Uint8Array object, call failureSteps
    //    with a TypeError and abort these steps.
    if (!isUint8Array(chunk)) {
      throw new TypeError('Received non-Uint8Array chunk')
    }

    // 2. Append the bytes represented by chunk to bytes.
    bytes.push(chunk)
    byteLength += chunk.length

    // 3. Read-loop given reader, bytes, successSteps, and failureSteps.
  }
}

/**
 * @see https://fetch.spec.whatwg.org/#is-local
 * @param {URL} url
 */
function urlIsLocal (url) {
  assert('protocol' in url) // ensure it's a url object

  const protocol = url.protocol

  return protocol === 'about:' || protocol === 'blob:' || protocol === 'data:'
}

/**
 * @param {string|URL} url
 */
function urlHasHttpsScheme (url) {
  if (typeof url === 'string') {
    return url.startsWith('https:')
  }

  return url.protocol === 'https:'
}

/**
 * @see https://fetch.spec.whatwg.org/#http-scheme
 * @param {URL} url
 */
function urlIsHttpHttpsScheme (url) {
  assert('protocol' in url) // ensure it's a url object

  const protocol = url.protocol

  return protocol === 'http:' || protocol === 'https:'
}

/**
 * Fetch supports node >= 16.8.0, but Object.hasOwn was added in v16.9.0.
 */
const hasOwn = Object.hasOwn || ((dict, key) => Object.prototype.hasOwnProperty.call(dict, key))

module.exports = {
  isAborted,
  isCancelled,
  createDeferredPromise,
  ReadableStreamFrom,
  toUSVString,
  tryUpgradeRequestToAPotentiallyTrustworthyURL,
  coarsenedSharedCurrentTime,
  determineRequestsReferrer,
  makePolicyContainer,
  clonePolicyContainer,
  appendFetchMetadata,
  appendRequestOriginHeader,
  TAOCheck,
  corsCheck,
  crossOriginResourcePolicyCheck,
  createOpaqueTimingInfo,
  setRequestReferrerPolicyOnRedirect,
  isValidHTTPToken,
  requestBadPort,
  requestCurrentURL,
  responseURL,
  responseLocationURL,
  isBlobLike,
  isURLPotentiallyTrustworthy,
  isValidReasonPhrase,
  sameOrigin,
  normalizeMethod,
  serializeJavascriptValueToJSONString,
  makeIterator,
  isValidHeaderName,
  isValidHeaderValue,
  hasOwn,
  isErrorLike,
  fullyReadBody,
  bytesMatch,
  isReadableStreamLike,
  readableStreamClose,
  isomorphicEncode,
  isomorphicDecode,
  urlIsLocal,
  urlHasHttpsScheme,
  urlIsHttpHttpsScheme,
  readAllBytes
}


/***/ }),

/***/ 1744:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { types } = __nccwpck_require__(3837)
const { hasOwn, toUSVString } = __nccwpck_require__(2538)

/** @type {import('../../types/webidl').Webidl} */
const webidl = {}
webidl.converters = {}
webidl.util = {}
webidl.errors = {}

webidl.errors.exception = function (message) {
  return new TypeError(`${message.header}: ${message.message}`)
}

webidl.errors.conversionFailed = function (context) {
  const plural = context.types.length === 1 ? '' : ' one of'
  const message =
    `${context.argument} could not be converted to` +
    `${plural}: ${context.types.join(', ')}.`

  return webidl.errors.exception({
    header: context.prefix,
    message
  })
}

webidl.errors.invalidArgument = function (context) {
  return webidl.errors.exception({
    header: context.prefix,
    message: `"${context.value}" is an invalid ${context.type}.`
  })
}

// https://webidl.spec.whatwg.org/#implements
webidl.brandCheck = function (V, I, opts = undefined) {
  if (opts?.strict !== false && !(V instanceof I)) {
    throw new TypeError('Illegal invocation')
  } else {
    return V?.[Symbol.toStringTag] === I.prototype[Symbol.toStringTag]
  }
}

webidl.argumentLengthCheck = function ({ length }, min, ctx) {
  if (length < min) {
    throw webidl.errors.exception({
      message: `${min} argument${min !== 1 ? 's' : ''} required, ` +
               `but${length ? ' only' : ''} ${length} found.`,
      ...ctx
    })
  }
}

webidl.illegalConstructor = function () {
  throw webidl.errors.exception({
    header: 'TypeError',
    message: 'Illegal constructor'
  })
}

// https://tc39.es/ecma262/#sec-ecmascript-data-types-and-values
webidl.util.Type = function (V) {
  switch (typeof V) {
    case 'undefined': return 'Undefined'
    case 'boolean': return 'Boolean'
    case 'string': return 'String'
    case 'symbol': return 'Symbol'
    case 'number': return 'Number'
    case 'bigint': return 'BigInt'
    case 'function':
    case 'object': {
      if (V === null) {
        return 'Null'
      }

      return 'Object'
    }
  }
}

// https://webidl.spec.whatwg.org/#abstract-opdef-converttoint
webidl.util.ConvertToInt = function (V, bitLength, signedness, opts = {}) {
  let upperBound
  let lowerBound

  // 1. If bitLength is 64, then:
  if (bitLength === 64) {
    // 1. Let upperBound be 2^53 − 1.
    upperBound = Math.pow(2, 53) - 1

    // 2. If signedness is "unsigned", then let lowerBound be 0.
    if (signedness === 'unsigned') {
      lowerBound = 0
    } else {
      // 3. Otherwise let lowerBound be −2^53 + 1.
      lowerBound = Math.pow(-2, 53) + 1
    }
  } else if (signedness === 'unsigned') {
    // 2. Otherwise, if signedness is "unsigned", then:

    // 1. Let lowerBound be 0.
    lowerBound = 0

    // 2. Let upperBound be 2^bitLength − 1.
    upperBound = Math.pow(2, bitLength) - 1
  } else {
    // 3. Otherwise:

    // 1. Let lowerBound be -2^bitLength − 1.
    lowerBound = Math.pow(-2, bitLength) - 1

    // 2. Let upperBound be 2^bitLength − 1 − 1.
    upperBound = Math.pow(2, bitLength - 1) - 1
  }

  // 4. Let x be ? ToNumber(V).
  let x = Number(V)

  // 5. If x is −0, then set x to +0.
  if (x === 0) {
    x = 0
  }

  // 6. If the conversion is to an IDL type associated
  //    with the [EnforceRange] extended attribute, then:
  if (opts.enforceRange === true) {
    // 1. If x is NaN, +∞, or −∞, then throw a TypeError.
    if (
      Number.isNaN(x) ||
      x === Number.POSITIVE_INFINITY ||
      x === Number.NEGATIVE_INFINITY
    ) {
      throw webidl.errors.exception({
        header: 'Integer conversion',
        message: `Could not convert ${V} to an integer.`
      })
    }

    // 2. Set x to IntegerPart(x).
    x = webidl.util.IntegerPart(x)

    // 3. If x < lowerBound or x > upperBound, then
    //    throw a TypeError.
    if (x < lowerBound || x > upperBound) {
      throw webidl.errors.exception({
        header: 'Integer conversion',
        message: `Value must be between ${lowerBound}-${upperBound}, got ${x}.`
      })
    }

    // 4. Return x.
    return x
  }

  // 7. If x is not NaN and the conversion is to an IDL
  //    type associated with the [Clamp] extended
  //    attribute, then:
  if (!Number.isNaN(x) && opts.clamp === true) {
    // 1. Set x to min(max(x, lowerBound), upperBound).
    x = Math.min(Math.max(x, lowerBound), upperBound)

    // 2. Round x to the nearest integer, choosing the
    //    even integer if it lies halfway between two,
    //    and choosing +0 rather than −0.
    if (Math.floor(x) % 2 === 0) {
      x = Math.floor(x)
    } else {
      x = Math.ceil(x)
    }

    // 3. Return x.
    return x
  }

  // 8. If x is NaN, +0, +∞, or −∞, then return +0.
  if (
    Number.isNaN(x) ||
    (x === 0 && Object.is(0, x)) ||
    x === Number.POSITIVE_INFINITY ||
    x === Number.NEGATIVE_INFINITY
  ) {
    return 0
  }

  // 9. Set x to IntegerPart(x).
  x = webidl.util.IntegerPart(x)

  // 10. Set x to x modulo 2^bitLength.
  x = x % Math.pow(2, bitLength)

  // 11. If signedness is "signed" and x ≥ 2^bitLength − 1,
  //    then return x − 2^bitLength.
  if (signedness === 'signed' && x >= Math.pow(2, bitLength) - 1) {
    return x - Math.pow(2, bitLength)
  }

  // 12. Otherwise, return x.
  return x
}

// https://webidl.spec.whatwg.org/#abstract-opdef-integerpart
webidl.util.IntegerPart = function (n) {
  // 1. Let r be floor(abs(n)).
  const r = Math.floor(Math.abs(n))

  // 2. If n < 0, then return -1 × r.
  if (n < 0) {
    return -1 * r
  }

  // 3. Otherwise, return r.
  return r
}

// https://webidl.spec.whatwg.org/#es-sequence
webidl.sequenceConverter = function (converter) {
  return (V) => {
    // 1. If Type(V) is not Object, throw a TypeError.
    if (webidl.util.Type(V) !== 'Object') {
      throw webidl.errors.exception({
        header: 'Sequence',
        message: `Value of type ${webidl.util.Type(V)} is not an Object.`
      })
    }

    // 2. Let method be ? GetMethod(V, @@iterator).
    /** @type {Generator} */
    const method = V?.[Symbol.iterator]?.()
    const seq = []

    // 3. If method is undefined, throw a TypeError.
    if (
      method === undefined ||
      typeof method.next !== 'function'
    ) {
      throw webidl.errors.exception({
        header: 'Sequence',
        message: 'Object is not an iterator.'
      })
    }

    // https://webidl.spec.whatwg.org/#create-sequence-from-iterable
    while (true) {
      const { done, value } = method.next()

      if (done) {
        break
      }

      seq.push(converter(value))
    }

    return seq
  }
}

// https://webidl.spec.whatwg.org/#es-to-record
webidl.recordConverter = function (keyConverter, valueConverter) {
  return (O) => {
    // 1. If Type(O) is not Object, throw a TypeError.
    if (webidl.util.Type(O) !== 'Object') {
      throw webidl.errors.exception({
        header: 'Record',
        message: `Value of type ${webidl.util.Type(O)} is not an Object.`
      })
    }

    // 2. Let result be a new empty instance of record<K, V>.
    const result = {}

    if (!types.isProxy(O)) {
      // Object.keys only returns enumerable properties
      const keys = Object.keys(O)

      for (const key of keys) {
        // 1. Let typedKey be key converted to an IDL value of type K.
        const typedKey = keyConverter(key)

        // 2. Let value be ? Get(O, key).
        // 3. Let typedValue be value converted to an IDL value of type V.
        const typedValue = valueConverter(O[key])

        // 4. Set result[typedKey] to typedValue.
        result[typedKey] = typedValue
      }

      // 5. Return result.
      return result
    }

    // 3. Let keys be ? O.[[OwnPropertyKeys]]().
    const keys = Reflect.ownKeys(O)

    // 4. For each key of keys.
    for (const key of keys) {
      // 1. Let desc be ? O.[[GetOwnProperty]](key).
      const desc = Reflect.getOwnPropertyDescriptor(O, key)

      // 2. If desc is not undefined and desc.[[Enumerable]] is true:
      if (desc?.enumerable) {
        // 1. Let typedKey be key converted to an IDL value of type K.
        const typedKey = keyConverter(key)

        // 2. Let value be ? Get(O, key).
        // 3. Let typedValue be value converted to an IDL value of type V.
        const typedValue = valueConverter(O[key])

        // 4. Set result[typedKey] to typedValue.
        result[typedKey] = typedValue
      }
    }

    // 5. Return result.
    return result
  }
}

webidl.interfaceConverter = function (i) {
  return (V, opts = {}) => {
    if (opts.strict !== false && !(V instanceof i)) {
      throw webidl.errors.exception({
        header: i.name,
        message: `Expected ${V} to be an instance of ${i.name}.`
      })
    }

    return V
  }
}

webidl.dictionaryConverter = function (converters) {
  return (dictionary) => {
    const type = webidl.util.Type(dictionary)
    const dict = {}

    if (type === 'Null' || type === 'Undefined') {
      return dict
    } else if (type !== 'Object') {
      throw webidl.errors.exception({
        header: 'Dictionary',
        message: `Expected ${dictionary} to be one of: Null, Undefined, Object.`
      })
    }

    for (const options of converters) {
      const { key, defaultValue, required, converter } = options

      if (required === true) {
        if (!hasOwn(dictionary, key)) {
          throw webidl.errors.exception({
            header: 'Dictionary',
            message: `Missing required key "${key}".`
          })
        }
      }

      let value = dictionary[key]
      const hasDefault = hasOwn(options, 'defaultValue')

      // Only use defaultValue if value is undefined and
      // a defaultValue options was provided.
      if (hasDefault && value !== null) {
        value = value ?? defaultValue
      }

      // A key can be optional and have no default value.
      // When this happens, do not perform a conversion,
      // and do not assign the key a value.
      if (required || hasDefault || value !== undefined) {
        value = converter(value)

        if (
          options.allowedValues &&
          !options.allowedValues.includes(value)
        ) {
          throw webidl.errors.exception({
            header: 'Dictionary',
            message: `${value} is not an accepted type. Expected one of ${options.allowedValues.join(', ')}.`
          })
        }

        dict[key] = value
      }
    }

    return dict
  }
}

webidl.nullableConverter = function (converter) {
  return (V) => {
    if (V === null) {
      return V
    }

    return converter(V)
  }
}

// https://webidl.spec.whatwg.org/#es-DOMString
webidl.converters.DOMString = function (V, opts = {}) {
  // 1. If V is null and the conversion is to an IDL type
  //    associated with the [LegacyNullToEmptyString]
  //    extended attribute, then return the DOMString value
  //    that represents the empty string.
  if (V === null && opts.legacyNullToEmptyString) {
    return ''
  }

  // 2. Let x be ? ToString(V).
  if (typeof V === 'symbol') {
    throw new TypeError('Could not convert argument of type symbol to string.')
  }

  // 3. Return the IDL DOMString value that represents the
  //    same sequence of code units as the one the
  //    ECMAScript String value x represents.
  return String(V)
}

// https://webidl.spec.whatwg.org/#es-ByteString
webidl.converters.ByteString = function (V) {
  // 1. Let x be ? ToString(V).
  // Note: DOMString converter perform ? ToString(V)
  const x = webidl.converters.DOMString(V)

  // 2. If the value of any element of x is greater than
  //    255, then throw a TypeError.
  for (let index = 0; index < x.length; index++) {
    const charCode = x.charCodeAt(index)

    if (charCode > 255) {
      throw new TypeError(
        'Cannot convert argument to a ByteString because the character at ' +
        `index ${index} has a value of ${charCode} which is greater than 255.`
      )
    }
  }

  // 3. Return an IDL ByteString value whose length is the
  //    length of x, and where the value of each element is
  //    the value of the corresponding element of x.
  return x
}

// https://webidl.spec.whatwg.org/#es-USVString
webidl.converters.USVString = toUSVString

// https://webidl.spec.whatwg.org/#es-boolean
webidl.converters.boolean = function (V) {
  // 1. Let x be the result of computing ToBoolean(V).
  const x = Boolean(V)

  // 2. Return the IDL boolean value that is the one that represents
  //    the same truth value as the ECMAScript Boolean value x.
  return x
}

// https://webidl.spec.whatwg.org/#es-any
webidl.converters.any = function (V) {
  return V
}

// https://webidl.spec.whatwg.org/#es-long-long
webidl.converters['long long'] = function (V) {
  // 1. Let x be ? ConvertToInt(V, 64, "signed").
  const x = webidl.util.ConvertToInt(V, 64, 'signed')

  // 2. Return the IDL long long value that represents
  //    the same numeric value as x.
  return x
}

// https://webidl.spec.whatwg.org/#es-unsigned-long-long
webidl.converters['unsigned long long'] = function (V) {
  // 1. Let x be ? ConvertToInt(V, 64, "unsigned").
  const x = webidl.util.ConvertToInt(V, 64, 'unsigned')

  // 2. Return the IDL unsigned long long value that
  //    represents the same numeric value as x.
  return x
}

// https://webidl.spec.whatwg.org/#es-unsigned-long
webidl.converters['unsigned long'] = function (V) {
  // 1. Let x be ? ConvertToInt(V, 32, "unsigned").
  const x = webidl.util.ConvertToInt(V, 32, 'unsigned')

  // 2. Return the IDL unsigned long value that
  //    represents the same numeric value as x.
  return x
}

// https://webidl.spec.whatwg.org/#es-unsigned-short
webidl.converters['unsigned short'] = function (V, opts) {
  // 1. Let x be ? ConvertToInt(V, 16, "unsigned").
  const x = webidl.util.ConvertToInt(V, 16, 'unsigned', opts)

  // 2. Return the IDL unsigned short value that represents
  //    the same numeric value as x.
  return x
}

// https://webidl.spec.whatwg.org/#idl-ArrayBuffer
webidl.converters.ArrayBuffer = function (V, opts = {}) {
  // 1. If Type(V) is not Object, or V does not have an
  //    [[ArrayBufferData]] internal slot, then throw a
  //    TypeError.
  // see: https://tc39.es/ecma262/#sec-properties-of-the-arraybuffer-instances
  // see: https://tc39.es/ecma262/#sec-properties-of-the-sharedarraybuffer-instances
  if (
    webidl.util.Type(V) !== 'Object' ||
    !types.isAnyArrayBuffer(V)
  ) {
    throw webidl.errors.conversionFailed({
      prefix: `${V}`,
      argument: `${V}`,
      types: ['ArrayBuffer']
    })
  }

  // 2. If the conversion is not to an IDL type associated
  //    with the [AllowShared] extended attribute, and
  //    IsSharedArrayBuffer(V) is true, then throw a
  //    TypeError.
  if (opts.allowShared === false && types.isSharedArrayBuffer(V)) {
    throw webidl.errors.exception({
      header: 'ArrayBuffer',
      message: 'SharedArrayBuffer is not allowed.'
    })
  }

  // 3. If the conversion is not to an IDL type associated
  //    with the [AllowResizable] extended attribute, and
  //    IsResizableArrayBuffer(V) is true, then throw a
  //    TypeError.
  // Note: resizable ArrayBuffers are currently a proposal.

  // 4. Return the IDL ArrayBuffer value that is a
  //    reference to the same object as V.
  return V
}

webidl.converters.TypedArray = function (V, T, opts = {}) {
  // 1. Let T be the IDL type V is being converted to.

  // 2. If Type(V) is not Object, or V does not have a
  //    [[TypedArrayName]] internal slot with a value
  //    equal to T’s name, then throw a TypeError.
  if (
    webidl.util.Type(V) !== 'Object' ||
    !types.isTypedArray(V) ||
    V.constructor.name !== T.name
  ) {
    throw webidl.errors.conversionFailed({
      prefix: `${T.name}`,
      argument: `${V}`,
      types: [T.name]
    })
  }

  // 3. If the conversion is not to an IDL type associated
  //    with the [AllowShared] extended attribute, and
  //    IsSharedArrayBuffer(V.[[ViewedArrayBuffer]]) is
  //    true, then throw a TypeError.
  if (opts.allowShared === false && types.isSharedArrayBuffer(V.buffer)) {
    throw webidl.errors.exception({
      header: 'ArrayBuffer',
      message: 'SharedArrayBuffer is not allowed.'
    })
  }

  // 4. If the conversion is not to an IDL type associated
  //    with the [AllowResizable] extended attribute, and
  //    IsResizableArrayBuffer(V.[[ViewedArrayBuffer]]) is
  //    true, then throw a TypeError.
  // Note: resizable array buffers are currently a proposal

  // 5. Return the IDL value of type T that is a reference
  //    to the same object as V.
  return V
}

webidl.converters.DataView = function (V, opts = {}) {
  // 1. If Type(V) is not Object, or V does not have a
  //    [[DataView]] internal slot, then throw a TypeError.
  if (webidl.util.Type(V) !== 'Object' || !types.isDataView(V)) {
    throw webidl.errors.exception({
      header: 'DataView',
      message: 'Object is not a DataView.'
    })
  }

  // 2. If the conversion is not to an IDL type associated
  //    with the [AllowShared] extended attribute, and
  //    IsSharedArrayBuffer(V.[[ViewedArrayBuffer]]) is true,
  //    then throw a TypeError.
  if (opts.allowShared === false && types.isSharedArrayBuffer(V.buffer)) {
    throw webidl.errors.exception({
      header: 'ArrayBuffer',
      message: 'SharedArrayBuffer is not allowed.'
    })
  }

  // 3. If the conversion is not to an IDL type associated
  //    with the [AllowResizable] extended attribute, and
  //    IsResizableArrayBuffer(V.[[ViewedArrayBuffer]]) is
  //    true, then throw a TypeError.
  // Note: resizable ArrayBuffers are currently a proposal

  // 4. Return the IDL DataView value that is a reference
  //    to the same object as V.
  return V
}

// https://webidl.spec.whatwg.org/#BufferSource
webidl.converters.BufferSource = function (V, opts = {}) {
  if (types.isAnyArrayBuffer(V)) {
    return webidl.converters.ArrayBuffer(V, opts)
  }

  if (types.isTypedArray(V)) {
    return webidl.converters.TypedArray(V, V.constructor)
  }

  if (types.isDataView(V)) {
    return webidl.converters.DataView(V, opts)
  }

  throw new TypeError(`Could not convert ${V} to a BufferSource.`)
}

webidl.converters['sequence<ByteString>'] = webidl.sequenceConverter(
  webidl.converters.ByteString
)

webidl.converters['sequence<sequence<ByteString>>'] = webidl.sequenceConverter(
  webidl.converters['sequence<ByteString>']
)

webidl.converters['record<ByteString, ByteString>'] = webidl.recordConverter(
  webidl.converters.ByteString,
  webidl.converters.ByteString
)

module.exports = {
  webidl
}


/***/ }),

/***/ 4854:
/***/ ((module) => {

"use strict";


/**
 * @see https://encoding.spec.whatwg.org/#concept-encoding-get
 * @param {string|undefined} label
 */
function getEncoding (label) {
  if (!label) {
    return 'failure'
  }

  // 1. Remove any leading and trailing ASCII whitespace from label.
  // 2. If label is an ASCII case-insensitive match for any of the
  //    labels listed in the table below, then return the
  //    corresponding encoding; otherwise return failure.
  switch (label.trim().toLowerCase()) {
    case 'unicode-1-1-utf-8':
    case 'unicode11utf8':
    case 'unicode20utf8':
    case 'utf-8':
    case 'utf8':
    case 'x-unicode20utf8':
      return 'UTF-8'
    case '866':
    case 'cp866':
    case 'csibm866':
    case 'ibm866':
      return 'IBM866'
    case 'csisolatin2':
    case 'iso-8859-2':
    case 'iso-ir-101':
    case 'iso8859-2':
    case 'iso88592':
    case 'iso_8859-2':
    case 'iso_8859-2:1987':
    case 'l2':
    case 'latin2':
      return 'ISO-8859-2'
    case 'csisolatin3':
    case 'iso-8859-3':
    case 'iso-ir-109':
    case 'iso8859-3':
    case 'iso88593':
    case 'iso_8859-3':
    case 'iso_8859-3:1988':
    case 'l3':
    case 'latin3':
      return 'ISO-8859-3'
    case 'csisolatin4':
    case 'iso-8859-4':
    case 'iso-ir-110':
    case 'iso8859-4':
    case 'iso88594':
    case 'iso_8859-4':
    case 'iso_8859-4:1988':
    case 'l4':
    case 'latin4':
      return 'ISO-8859-4'
    case 'csisolatincyrillic':
    case 'cyrillic':
    case 'iso-8859-5':
    case 'iso-ir-144':
    case 'iso8859-5':
    case 'iso88595':
    case 'iso_8859-5':
    case 'iso_8859-5:1988':
      return 'ISO-8859-5'
    case 'arabic':
    case 'asmo-708':
    case 'csiso88596e':
    case 'csiso88596i':
    case 'csisolatinarabic':
    case 'ecma-114':
    case 'iso-8859-6':
    case 'iso-8859-6-e':
    case 'iso-8859-6-i':
    case 'iso-ir-127':
    case 'iso8859-6':
    case 'iso88596':
    case 'iso_8859-6':
    case 'iso_8859-6:1987':
      return 'ISO-8859-6'
    case 'csisolatingreek':
    case 'ecma-118':
    case 'elot_928':
    case 'greek':
    case 'greek8':
    case 'iso-8859-7':
    case 'iso-ir-126':
    case 'iso8859-7':
    case 'iso88597':
    case 'iso_8859-7':
    case 'iso_8859-7:1987':
    case 'sun_eu_greek':
      return 'ISO-8859-7'
    case 'csiso88598e':
    case 'csisolatinhebrew':
    case 'hebrew':
    case 'iso-8859-8':
    case 'iso-8859-8-e':
    case 'iso-ir-138':
    case 'iso8859-8':
    case 'iso88598':
    case 'iso_8859-8':
    case 'iso_8859-8:1988':
    case 'visual':
      return 'ISO-8859-8'
    case 'csiso88598i':
    case 'iso-8859-8-i':
    case 'logical':
      return 'ISO-8859-8-I'
    case 'csisolatin6':
    case 'iso-8859-10':
    case 'iso-ir-157':
    case 'iso8859-10':
    case 'iso885910':
    case 'l6':
    case 'latin6':
      return 'ISO-8859-10'
    case 'iso-8859-13':
    case 'iso8859-13':
    case 'iso885913':
      return 'ISO-8859-13'
    case 'iso-8859-14':
    case 'iso8859-14':
    case 'iso885914':
      return 'ISO-8859-14'
    case 'csisolatin9':
    case 'iso-8859-15':
    case 'iso8859-15':
    case 'iso885915':
    case 'iso_8859-15':
    case 'l9':
      return 'ISO-8859-15'
    case 'iso-8859-16':
      return 'ISO-8859-16'
    case 'cskoi8r':
    case 'koi':
    case 'koi8':
    case 'koi8-r':
    case 'koi8_r':
      return 'KOI8-R'
    case 'koi8-ru':
    case 'koi8-u':
      return 'KOI8-U'
    case 'csmacintosh':
    case 'mac':
    case 'macintosh':
    case 'x-mac-roman':
      return 'macintosh'
    case 'iso-8859-11':
    case 'iso8859-11':
    case 'iso885911':
    case 'tis-620':
    case 'windows-874':
      return 'windows-874'
    case 'cp1250':
    case 'windows-1250':
    case 'x-cp1250':
      return 'windows-1250'
    case 'cp1251':
    case 'windows-1251':
    case 'x-cp1251':
      return 'windows-1251'
    case 'ansi_x3.4-1968':
    case 'ascii':
    case 'cp1252':
    case 'cp819':
    case 'csisolatin1':
    case 'ibm819':
    case 'iso-8859-1':
    case 'iso-ir-100':
    case 'iso8859-1':
    case 'iso88591':
    case 'iso_8859-1':
    case 'iso_8859-1:1987':
    case 'l1':
    case 'latin1':
    case 'us-ascii':
    case 'windows-1252':
    case 'x-cp1252':
      return 'windows-1252'
    case 'cp1253':
    case 'windows-1253':
    case 'x-cp1253':
      return 'windows-1253'
    case 'cp1254':
    case 'csisolatin5':
    case 'iso-8859-9':
    case 'iso-ir-148':
    case 'iso8859-9':
    case 'iso88599':
    case 'iso_8859-9':
    case 'iso_8859-9:1989':
    case 'l5':
    case 'latin5':
    case 'windows-1254':
    case 'x-cp1254':
      return 'windows-1254'
    case 'cp1255':
    case 'windows-1255':
    case 'x-cp1255':
      return 'windows-1255'
    case 'cp1256':
    case 'windows-1256':
    case 'x-cp1256':
      return 'windows-1256'
    case 'cp1257':
    case 'windows-1257':
    case 'x-cp1257':
      return 'windows-1257'
    case 'cp1258':
    case 'windows-1258':
    case 'x-cp1258':
      return 'windows-1258'
    case 'x-mac-cyrillic':
    case 'x-mac-ukrainian':
      return 'x-mac-cyrillic'
    case 'chinese':
    case 'csgb2312':
    case 'csiso58gb231280':
    case 'gb2312':
    case 'gb_2312':
    case 'gb_2312-80':
    case 'gbk':
    case 'iso-ir-58':
    case 'x-gbk':
      return 'GBK'
    case 'gb18030':
      return 'gb18030'
    case 'big5':
    case 'big5-hkscs':
    case 'cn-big5':
    case 'csbig5':
    case 'x-x-big5':
      return 'Big5'
    case 'cseucpkdfmtjapanese':
    case 'euc-jp':
    case 'x-euc-jp':
      return 'EUC-JP'
    case 'csiso2022jp':
    case 'iso-2022-jp':
      return 'ISO-2022-JP'
    case 'csshiftjis':
    case 'ms932':
    case 'ms_kanji':
    case 'shift-jis':
    case 'shift_jis':
    case 'sjis':
    case 'windows-31j':
    case 'x-sjis':
      return 'Shift_JIS'
    case 'cseuckr':
    case 'csksc56011987':
    case 'euc-kr':
    case 'iso-ir-149':
    case 'korean':
    case 'ks_c_5601-1987':
    case 'ks_c_5601-1989':
    case 'ksc5601':
    case 'ksc_5601':
    case 'windows-949':
      return 'EUC-KR'
    case 'csiso2022kr':
    case 'hz-gb-2312':
    case 'iso-2022-cn':
    case 'iso-2022-cn-ext':
    case 'iso-2022-kr':
    case 'replacement':
      return 'replacement'
    case 'unicodefffe':
    case 'utf-16be':
      return 'UTF-16BE'
    case 'csunicode':
    case 'iso-10646-ucs-2':
    case 'ucs-2':
    case 'unicode':
    case 'unicodefeff':
    case 'utf-16':
    case 'utf-16le':
      return 'UTF-16LE'
    case 'x-user-defined':
      return 'x-user-defined'
    default: return 'failure'
  }
}

module.exports = {
  getEncoding
}


/***/ }),

/***/ 1446:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const {
  staticPropertyDescriptors,
  readOperation,
  fireAProgressEvent
} = __nccwpck_require__(7530)
const {
  kState,
  kError,
  kResult,
  kEvents,
  kAborted
} = __nccwpck_require__(9054)
const { webidl } = __nccwpck_require__(1744)
const { kEnumerableProperty } = __nccwpck_require__(3983)

class FileReader extends EventTarget {
  constructor () {
    super()

    this[kState] = 'empty'
    this[kResult] = null
    this[kError] = null
    this[kEvents] = {
      loadend: null,
      error: null,
      abort: null,
      load: null,
      progress: null,
      loadstart: null
    }
  }

  /**
   * @see https://w3c.github.io/FileAPI/#dfn-readAsArrayBuffer
   * @param {import('buffer').Blob} blob
   */
  readAsArrayBuffer (blob) {
    webidl.brandCheck(this, FileReader)

    webidl.argumentLengthCheck(arguments, 1, { header: 'FileReader.readAsArrayBuffer' })

    blob = webidl.converters.Blob(blob, { strict: false })

    // The readAsArrayBuffer(blob) method, when invoked,
    // must initiate a read operation for blob with ArrayBuffer.
    readOperation(this, blob, 'ArrayBuffer')
  }

  /**
   * @see https://w3c.github.io/FileAPI/#readAsBinaryString
   * @param {import('buffer').Blob} blob
   */
  readAsBinaryString (blob) {
    webidl.brandCheck(this, FileReader)

    webidl.argumentLengthCheck(arguments, 1, { header: 'FileReader.readAsBinaryString' })

    blob = webidl.converters.Blob(blob, { strict: false })

    // The readAsBinaryString(blob) method, when invoked,
    // must initiate a read operation for blob with BinaryString.
    readOperation(this, blob, 'BinaryString')
  }

  /**
   * @see https://w3c.github.io/FileAPI/#readAsDataText
   * @param {import('buffer').Blob} blob
   * @param {string?} encoding
   */
  readAsText (blob, encoding = undefined) {
    webidl.brandCheck(this, FileReader)

    webidl.argumentLengthCheck(arguments, 1, { header: 'FileReader.readAsText' })

    blob = webidl.converters.Blob(blob, { strict: false })

    if (encoding !== undefined) {
      encoding = webidl.converters.DOMString(encoding)
    }

    // The readAsText(blob, encoding) method, when invoked,
    // must initiate a read operation for blob with Text and encoding.
    readOperation(this, blob, 'Text', encoding)
  }

  /**
   * @see https://w3c.github.io/FileAPI/#dfn-readAsDataURL
   * @param {import('buffer').Blob} blob
   */
  readAsDataURL (blob) {
    webidl.brandCheck(this, FileReader)

    webidl.argumentLengthCheck(arguments, 1, { header: 'FileReader.readAsDataURL' })

    blob = webidl.converters.Blob(blob, { strict: false })

    // The readAsDataURL(blob) method, when invoked, must
    // initiate a read operation for blob with DataURL.
    readOperation(this, blob, 'DataURL')
  }

  /**
   * @see https://w3c.github.io/FileAPI/#dfn-abort
   */
  abort () {
    // 1. If this's state is "empty" or if this's state is
    //    "done" set this's result to null and terminate
    //    this algorithm.
    if (this[kState] === 'empty' || this[kState] === 'done') {
      this[kResult] = null
      return
    }

    // 2. If this's state is "loading" set this's state to
    //    "done" and set this's result to null.
    if (this[kState] === 'loading') {
      this[kState] = 'done'
      this[kResult] = null
    }

    // 3. If there are any tasks from this on the file reading
    //    task source in an affiliated task queue, then remove
    //    those tasks from that task queue.
    this[kAborted] = true

    // 4. Terminate the algorithm for the read method being processed.
    // TODO

    // 5. Fire a progress event called abort at this.
    fireAProgressEvent('abort', this)

    // 6. If this's state is not "loading", fire a progress
    //    event called loadend at this.
    if (this[kState] !== 'loading') {
      fireAProgressEvent('loadend', this)
    }
  }

  /**
   * @see https://w3c.github.io/FileAPI/#dom-filereader-readystate
   */
  get readyState () {
    webidl.brandCheck(this, FileReader)

    switch (this[kState]) {
      case 'empty': return this.EMPTY
      case 'loading': return this.LOADING
      case 'done': return this.DONE
    }
  }

  /**
   * @see https://w3c.github.io/FileAPI/#dom-filereader-result
   */
  get result () {
    webidl.brandCheck(this, FileReader)

    // The result attribute’s getter, when invoked, must return
    // this's result.
    return this[kResult]
  }

  /**
   * @see https://w3c.github.io/FileAPI/#dom-filereader-error
   */
  get error () {
    webidl.brandCheck(this, FileReader)

    // The error attribute’s getter, when invoked, must return
    // this's error.
    return this[kError]
  }

  get onloadend () {
    webidl.brandCheck(this, FileReader)

    return this[kEvents].loadend
  }

  set onloadend (fn) {
    webidl.brandCheck(this, FileReader)

    if (this[kEvents].loadend) {
      this.removeEventListener('loadend', this[kEvents].loadend)
    }

    if (typeof fn === 'function') {
      this[kEvents].loadend = fn
      this.addEventListener('loadend', fn)
    } else {
      this[kEvents].loadend = null
    }
  }

  get onerror () {
    webidl.brandCheck(this, FileReader)

    return this[kEvents].error
  }

  set onerror (fn) {
    webidl.brandCheck(this, FileReader)

    if (this[kEvents].error) {
      this.removeEventListener('error', this[kEvents].error)
    }

    if (typeof fn === 'function') {
      this[kEvents].error = fn
      this.addEventListener('error', fn)
    } else {
      this[kEvents].error = null
    }
  }

  get onloadstart () {
    webidl.brandCheck(this, FileReader)

    return this[kEvents].loadstart
  }

  set onloadstart (fn) {
    webidl.brandCheck(this, FileReader)

    if (this[kEvents].loadstart) {
      this.removeEventListener('loadstart', this[kEvents].loadstart)
    }

    if (typeof fn === 'function') {
      this[kEvents].loadstart = fn
      this.addEventListener('loadstart', fn)
    } else {
      this[kEvents].loadstart = null
    }
  }

  get onprogress () {
    webidl.brandCheck(this, FileReader)

    return this[kEvents].progress
  }

  set onprogress (fn) {
    webidl.brandCheck(this, FileReader)

    if (this[kEvents].progress) {
      this.removeEventListener('progress', this[kEvents].progress)
    }

    if (typeof fn === 'function') {
      this[kEvents].progress = fn
      this.addEventListener('progress', fn)
    } else {
      this[kEvents].progress = null
    }
  }

  get onload () {
    webidl.brandCheck(this, FileReader)

    return this[kEvents].load
  }

  set onload (fn) {
    webidl.brandCheck(this, FileReader)

    if (this[kEvents].load) {
      this.removeEventListener('load', this[kEvents].load)
    }

    if (typeof fn === 'function') {
      this[kEvents].load = fn
      this.addEventListener('load', fn)
    } else {
      this[kEvents].load = null
    }
  }

  get onabort () {
    webidl.brandCheck(this, FileReader)

    return this[kEvents].abort
  }

  set onabort (fn) {
    webidl.brandCheck(this, FileReader)

    if (this[kEvents].abort) {
      this.removeEventListener('abort', this[kEvents].abort)
    }

    if (typeof fn === 'function') {
      this[kEvents].abort = fn
      this.addEventListener('abort', fn)
    } else {
      this[kEvents].abort = null
    }
  }
}

// https://w3c.github.io/FileAPI/#dom-filereader-empty
FileReader.EMPTY = FileReader.prototype.EMPTY = 0
// https://w3c.github.io/FileAPI/#dom-filereader-loading
FileReader.LOADING = FileReader.prototype.LOADING = 1
// https://w3c.github.io/FileAPI/#dom-filereader-done
FileReader.DONE = FileReader.prototype.DONE = 2

Object.defineProperties(FileReader.prototype, {
  EMPTY: staticPropertyDescriptors,
  LOADING: staticPropertyDescriptors,
  DONE: staticPropertyDescriptors,
  readAsArrayBuffer: kEnumerableProperty,
  readAsBinaryString: kEnumerableProperty,
  readAsText: kEnumerableProperty,
  readAsDataURL: kEnumerableProperty,
  abort: kEnumerableProperty,
  readyState: kEnumerableProperty,
  result: kEnumerableProperty,
  error: kEnumerableProperty,
  onloadstart: kEnumerableProperty,
  onprogress: kEnumerableProperty,
  onload: kEnumerableProperty,
  onabort: kEnumerableProperty,
  onerror: kEnumerableProperty,
  onloadend: kEnumerableProperty,
  [Symbol.toStringTag]: {
    value: 'FileReader',
    writable: false,
    enumerable: false,
    configurable: true
  }
})

Object.defineProperties(FileReader, {
  EMPTY: staticPropertyDescriptors,
  LOADING: staticPropertyDescriptors,
  DONE: staticPropertyDescriptors
})

module.exports = {
  FileReader
}


/***/ }),

/***/ 5504:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { webidl } = __nccwpck_require__(1744)

const kState = Symbol('ProgressEvent state')

/**
 * @see https://xhr.spec.whatwg.org/#progressevent
 */
class ProgressEvent extends Event {
  constructor (type, eventInitDict = {}) {
    type = webidl.converters.DOMString(type)
    eventInitDict = webidl.converters.ProgressEventInit(eventInitDict ?? {})

    super(type, eventInitDict)

    this[kState] = {
      lengthComputable: eventInitDict.lengthComputable,
      loaded: eventInitDict.loaded,
      total: eventInitDict.total
    }
  }

  get lengthComputable () {
    webidl.brandCheck(this, ProgressEvent)

    return this[kState].lengthComputable
  }

  get loaded () {
    webidl.brandCheck(this, ProgressEvent)

    return this[kState].loaded
  }

  get total () {
    webidl.brandCheck(this, ProgressEvent)

    return this[kState].total
  }
}

webidl.converters.ProgressEventInit = webidl.dictionaryConverter([
  {
    key: 'lengthComputable',
    converter: webidl.converters.boolean,
    defaultValue: false
  },
  {
    key: 'loaded',
    converter: webidl.converters['unsigned long long'],
    defaultValue: 0
  },
  {
    key: 'total',
    converter: webidl.converters['unsigned long long'],
    defaultValue: 0
  },
  {
    key: 'bubbles',
    converter: webidl.converters.boolean,
    defaultValue: false
  },
  {
    key: 'cancelable',
    converter: webidl.converters.boolean,
    defaultValue: false
  },
  {
    key: 'composed',
    converter: webidl.converters.boolean,
    defaultValue: false
  }
])

module.exports = {
  ProgressEvent
}


/***/ }),

/***/ 9054:
/***/ ((module) => {

"use strict";


module.exports = {
  kState: Symbol('FileReader state'),
  kResult: Symbol('FileReader result'),
  kError: Symbol('FileReader error'),
  kLastProgressEventFired: Symbol('FileReader last progress event fired timestamp'),
  kEvents: Symbol('FileReader events'),
  kAborted: Symbol('FileReader aborted')
}


/***/ }),

/***/ 7530:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const {
  kState,
  kError,
  kResult,
  kAborted,
  kLastProgressEventFired
} = __nccwpck_require__(9054)
const { ProgressEvent } = __nccwpck_require__(5504)
const { getEncoding } = __nccwpck_require__(4854)
const { DOMException } = __nccwpck_require__(1037)
const { serializeAMimeType, parseMIMEType } = __nccwpck_require__(685)
const { types } = __nccwpck_require__(3837)
const { StringDecoder } = __nccwpck_require__(1576)
const { btoa } = __nccwpck_require__(4300)

/** @type {PropertyDescriptor} */
const staticPropertyDescriptors = {
  enumerable: true,
  writable: false,
  configurable: false
}

/**
 * @see https://w3c.github.io/FileAPI/#readOperation
 * @param {import('./filereader').FileReader} fr
 * @param {import('buffer').Blob} blob
 * @param {string} type
 * @param {string?} encodingName
 */
function readOperation (fr, blob, type, encodingName) {
  // 1. If fr’s state is "loading", throw an InvalidStateError
  //    DOMException.
  if (fr[kState] === 'loading') {
    throw new DOMException('Invalid state', 'InvalidStateError')
  }

  // 2. Set fr’s state to "loading".
  fr[kState] = 'loading'

  // 3. Set fr’s result to null.
  fr[kResult] = null

  // 4. Set fr’s error to null.
  fr[kError] = null

  // 5. Let stream be the result of calling get stream on blob.
  /** @type {import('stream/web').ReadableStream} */
  const stream = blob.stream()

  // 6. Let reader be the result of getting a reader from stream.
  const reader = stream.getReader()

  // 7. Let bytes be an empty byte sequence.
  /** @type {Uint8Array[]} */
  const bytes = []

  // 8. Let chunkPromise be the result of reading a chunk from
  //    stream with reader.
  let chunkPromise = reader.read()

  // 9. Let isFirstChunk be true.
  let isFirstChunk = true

  // 10. In parallel, while true:
  // Note: "In parallel" just means non-blocking
  // Note 2: readOperation itself cannot be async as double
  // reading the body would then reject the promise, instead
  // of throwing an error.
  ;(async () => {
    while (!fr[kAborted]) {
      // 1. Wait for chunkPromise to be fulfilled or rejected.
      try {
        const { done, value } = await chunkPromise

        // 2. If chunkPromise is fulfilled, and isFirstChunk is
        //    true, queue a task to fire a progress event called
        //    loadstart at fr.
        if (isFirstChunk && !fr[kAborted]) {
          queueMicrotask(() => {
            fireAProgressEvent('loadstart', fr)
          })
        }

        // 3. Set isFirstChunk to false.
        isFirstChunk = false

        // 4. If chunkPromise is fulfilled with an object whose
        //    done property is false and whose value property is
        //    a Uint8Array object, run these steps:
        if (!done && types.isUint8Array(value)) {
          // 1. Let bs be the byte sequence represented by the
          //    Uint8Array object.

          // 2. Append bs to bytes.
          bytes.push(value)

          // 3. If roughly 50ms have passed since these steps
          //    were last invoked, queue a task to fire a
          //    progress event called progress at fr.
          if (
            (
              fr[kLastProgressEventFired] === undefined ||
              Date.now() - fr[kLastProgressEventFired] >= 50
            ) &&
            !fr[kAborted]
          ) {
            fr[kLastProgressEventFired] = Date.now()
            queueMicrotask(() => {
              fireAProgressEvent('progress', fr)
            })
          }

          // 4. Set chunkPromise to the result of reading a
          //    chunk from stream with reader.
          chunkPromise = reader.read()
        } else if (done) {
          // 5. Otherwise, if chunkPromise is fulfilled with an
          //    object whose done property is true, queue a task
          //    to run the following steps and abort this algorithm:
          queueMicrotask(() => {
            // 1. Set fr’s state to "done".
            fr[kState] = 'done'

            // 2. Let result be the result of package data given
            //    bytes, type, blob’s type, and encodingName.
            try {
              const result = packageData(bytes, type, blob.type, encodingName)

              // 4. Else:

              if (fr[kAborted]) {
                return
              }

              // 1. Set fr’s result to result.
              fr[kResult] = result

              // 2. Fire a progress event called load at the fr.
              fireAProgressEvent('load', fr)
            } catch (error) {
              // 3. If package data threw an exception error:

              // 1. Set fr’s error to error.
              fr[kError] = error

              // 2. Fire a progress event called error at fr.
              fireAProgressEvent('error', fr)
            }

            // 5. If fr’s state is not "loading", fire a progress
            //    event called loadend at the fr.
            if (fr[kState] !== 'loading') {
              fireAProgressEvent('loadend', fr)
            }
          })

          break
        }
      } catch (error) {
        if (fr[kAborted]) {
          return
        }

        // 6. Otherwise, if chunkPromise is rejected with an
        //    error error, queue a task to run the following
        //    steps and abort this algorithm:
        queueMicrotask(() => {
          // 1. Set fr’s state to "done".
          fr[kState] = 'done'

          // 2. Set fr’s error to error.
          fr[kError] = error

          // 3. Fire a progress event called error at fr.
          fireAProgressEvent('error', fr)

          // 4. If fr’s state is not "loading", fire a progress
          //    event called loadend at fr.
          if (fr[kState] !== 'loading') {
            fireAProgressEvent('loadend', fr)
          }
        })

        break
      }
    }
  })()
}

/**
 * @see https://w3c.github.io/FileAPI/#fire-a-progress-event
 * @see https://dom.spec.whatwg.org/#concept-event-fire
 * @param {string} e The name of the event
 * @param {import('./filereader').FileReader} reader
 */
function fireAProgressEvent (e, reader) {
  // The progress event e does not bubble. e.bubbles must be false
  // The progress event e is NOT cancelable. e.cancelable must be false
  const event = new ProgressEvent(e, {
    bubbles: false,
    cancelable: false
  })

  reader.dispatchEvent(event)
}

/**
 * @see https://w3c.github.io/FileAPI/#blob-package-data
 * @param {Uint8Array[]} bytes
 * @param {string} type
 * @param {string?} mimeType
 * @param {string?} encodingName
 */
function packageData (bytes, type, mimeType, encodingName) {
  // 1. A Blob has an associated package data algorithm, given
  //    bytes, a type, a optional mimeType, and a optional
  //    encodingName, which switches on type and runs the
  //    associated steps:

  switch (type) {
    case 'DataURL': {
      // 1. Return bytes as a DataURL [RFC2397] subject to
      //    the considerations below:
      //  * Use mimeType as part of the Data URL if it is
      //    available in keeping with the Data URL
      //    specification [RFC2397].
      //  * If mimeType is not available return a Data URL
      //    without a media-type. [RFC2397].

      // https://datatracker.ietf.org/doc/html/rfc2397#section-3
      // dataurl    := "data:" [ mediatype ] [ ";base64" ] "," data
      // mediatype  := [ type "/" subtype ] *( ";" parameter )
      // data       := *urlchar
      // parameter  := attribute "=" value
      let dataURL = 'data:'

      const parsed = parseMIMEType(mimeType || 'application/octet-stream')

      if (parsed !== 'failure') {
        dataURL += serializeAMimeType(parsed)
      }

      dataURL += ';base64,'

      const decoder = new StringDecoder('latin1')

      for (const chunk of bytes) {
        dataURL += btoa(decoder.write(chunk))
      }

      dataURL += btoa(decoder.end())

      return dataURL
    }
    case 'Text': {
      // 1. Let encoding be failure
      let encoding = 'failure'

      // 2. If the encodingName is present, set encoding to the
      //    result of getting an encoding from encodingName.
      if (encodingName) {
        encoding = getEncoding(encodingName)
      }

      // 3. If encoding is failure, and mimeType is present:
      if (encoding === 'failure' && mimeType) {
        // 1. Let type be the result of parse a MIME type
        //    given mimeType.
        const type = parseMIMEType(mimeType)

        // 2. If type is not failure, set encoding to the result
        //    of getting an encoding from type’s parameters["charset"].
        if (type !== 'failure') {
          encoding = getEncoding(type.parameters.get('charset'))
        }
      }

      // 4. If encoding is failure, then set encoding to UTF-8.
      if (encoding === 'failure') {
        encoding = 'UTF-8'
      }

      // 5. Decode bytes using fallback encoding encoding, and
      //    return the result.
      return decode(bytes, encoding)
    }
    case 'ArrayBuffer': {
      // Return a new ArrayBuffer whose contents are bytes.
      const sequence = combineByteSequences(bytes)

      return sequence.buffer
    }
    case 'BinaryString': {
      // Return bytes as a binary string, in which every byte
      //  is represented by a code unit of equal value [0..255].
      let binaryString = ''

      const decoder = new StringDecoder('latin1')

      for (const chunk of bytes) {
        binaryString += decoder.write(chunk)
      }

      binaryString += decoder.end()

      return binaryString
    }
  }
}

/**
 * @see https://encoding.spec.whatwg.org/#decode
 * @param {Uint8Array[]} ioQueue
 * @param {string} encoding
 */
function decode (ioQueue, encoding) {
  const bytes = combineByteSequences(ioQueue)

  // 1. Let BOMEncoding be the result of BOM sniffing ioQueue.
  const BOMEncoding = BOMSniffing(bytes)

  let slice = 0

  // 2. If BOMEncoding is non-null:
  if (BOMEncoding !== null) {
    // 1. Set encoding to BOMEncoding.
    encoding = BOMEncoding

    // 2. Read three bytes from ioQueue, if BOMEncoding is
    //    UTF-8; otherwise read two bytes.
    //    (Do nothing with those bytes.)
    slice = BOMEncoding === 'UTF-8' ? 3 : 2
  }

  // 3. Process a queue with an instance of encoding’s
  //    decoder, ioQueue, output, and "replacement".

  // 4. Return output.

  const sliced = bytes.slice(slice)
  return new TextDecoder(encoding).decode(sliced)
}

/**
 * @see https://encoding.spec.whatwg.org/#bom-sniff
 * @param {Uint8Array} ioQueue
 */
function BOMSniffing (ioQueue) {
  // 1. Let BOM be the result of peeking 3 bytes from ioQueue,
  //    converted to a byte sequence.
  const [a, b, c] = ioQueue

  // 2. For each of the rows in the table below, starting with
  //    the first one and going down, if BOM starts with the
  //    bytes given in the first column, then return the
  //    encoding given in the cell in the second column of that
  //    row. Otherwise, return null.
  if (a === 0xEF && b === 0xBB && c === 0xBF) {
    return 'UTF-8'
  } else if (a === 0xFE && b === 0xFF) {
    return 'UTF-16BE'
  } else if (a === 0xFF && b === 0xFE) {
    return 'UTF-16LE'
  }

  return null
}

/**
 * @param {Uint8Array[]} sequences
 */
function combineByteSequences (sequences) {
  const size = sequences.reduce((a, b) => {
    return a + b.byteLength
  }, 0)

  let offset = 0

  return sequences.reduce((a, b) => {
    a.set(b, offset)
    offset += b.byteLength
    return a
  }, new Uint8Array(size))
}

module.exports = {
  staticPropertyDescriptors,
  readOperation,
  fireAProgressEvent
}


/***/ }),

/***/ 1892:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


// We include a version number for the Dispatcher API. In case of breaking changes,
// this version number must be increased to avoid conflicts.
const globalDispatcher = Symbol.for('undici.globalDispatcher.1')
const { InvalidArgumentError } = __nccwpck_require__(8045)
const Agent = __nccwpck_require__(7890)

if (getGlobalDispatcher() === undefined) {
  setGlobalDispatcher(new Agent())
}

function setGlobalDispatcher (agent) {
  if (!agent || typeof agent.dispatch !== 'function') {
    throw new InvalidArgumentError('Argument agent must implement Agent')
  }
  Object.defineProperty(globalThis, globalDispatcher, {
    value: agent,
    writable: true,
    enumerable: false,
    configurable: false
  })
}

function getGlobalDispatcher () {
  return globalThis[globalDispatcher]
}

module.exports = {
  setGlobalDispatcher,
  getGlobalDispatcher
}


/***/ }),

/***/ 6930:
/***/ ((module) => {

"use strict";


module.exports = class DecoratorHandler {
  constructor (handler) {
    this.handler = handler
  }

  onConnect (...args) {
    return this.handler.onConnect(...args)
  }

  onError (...args) {
    return this.handler.onError(...args)
  }

  onUpgrade (...args) {
    return this.handler.onUpgrade(...args)
  }

  onHeaders (...args) {
    return this.handler.onHeaders(...args)
  }

  onData (...args) {
    return this.handler.onData(...args)
  }

  onComplete (...args) {
    return this.handler.onComplete(...args)
  }

  onBodySent (...args) {
    return this.handler.onBodySent(...args)
  }
}


/***/ }),

/***/ 2860:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const util = __nccwpck_require__(3983)
const { kBodyUsed } = __nccwpck_require__(2785)
const assert = __nccwpck_require__(9491)
const { InvalidArgumentError } = __nccwpck_require__(8045)
const EE = __nccwpck_require__(2361)

const redirectableStatusCodes = [300, 301, 302, 303, 307, 308]

const kBody = Symbol('body')

class BodyAsyncIterable {
  constructor (body) {
    this[kBody] = body
    this[kBodyUsed] = false
  }

  async * [Symbol.asyncIterator] () {
    assert(!this[kBodyUsed], 'disturbed')
    this[kBodyUsed] = true
    yield * this[kBody]
  }
}

class RedirectHandler {
  constructor (dispatch, maxRedirections, opts, handler) {
    if (maxRedirections != null && (!Number.isInteger(maxRedirections) || maxRedirections < 0)) {
      throw new InvalidArgumentError('maxRedirections must be a positive number')
    }

    util.validateHandler(handler, opts.method, opts.upgrade)

    this.dispatch = dispatch
    this.location = null
    this.abort = null
    this.opts = { ...opts, maxRedirections: 0 } // opts must be a copy
    this.maxRedirections = maxRedirections
    this.handler = handler
    this.history = []

    if (util.isStream(this.opts.body)) {
      // TODO (fix): Provide some way for the user to cache the file to e.g. /tmp
      // so that it can be dispatched again?
      // TODO (fix): Do we need 100-expect support to provide a way to do this properly?
      if (util.bodyLength(this.opts.body) === 0) {
        this.opts.body
          .on('data', function () {
            assert(false)
          })
      }

      if (typeof this.opts.body.readableDidRead !== 'boolean') {
        this.opts.body[kBodyUsed] = false
        EE.prototype.on.call(this.opts.body, 'data', function () {
          this[kBodyUsed] = true
        })
      }
    } else if (this.opts.body && typeof this.opts.body.pipeTo === 'function') {
      // TODO (fix): We can't access ReadableStream internal state
      // to determine whether or not it has been disturbed. This is just
      // a workaround.
      this.opts.body = new BodyAsyncIterable(this.opts.body)
    } else if (
      this.opts.body &&
      typeof this.opts.body !== 'string' &&
      !ArrayBuffer.isView(this.opts.body) &&
      util.isIterable(this.opts.body)
    ) {
      // TODO: Should we allow re-using iterable if !this.opts.idempotent
      // or through some other flag?
      this.opts.body = new BodyAsyncIterable(this.opts.body)
    }
  }

  onConnect (abort) {
    this.abort = abort
    this.handler.onConnect(abort, { history: this.history })
  }

  onUpgrade (statusCode, headers, socket) {
    this.handler.onUpgrade(statusCode, headers, socket)
  }

  onError (error) {
    this.handler.onError(error)
  }

  onHeaders (statusCode, headers, resume, statusText) {
    this.location = this.history.length >= this.maxRedirections || util.isDisturbed(this.opts.body)
      ? null
      : parseLocation(statusCode, headers)

    if (this.opts.origin) {
      this.history.push(new URL(this.opts.path, this.opts.origin))
    }

    if (!this.location) {
      return this.handler.onHeaders(statusCode, headers, resume, statusText)
    }

    const { origin, pathname, search } = util.parseURL(new URL(this.location, this.opts.origin && new URL(this.opts.path, this.opts.origin)))
    const path = search ? `${pathname}${search}` : pathname

    // Remove headers referring to the original URL.
    // By default it is Host only, unless it's a 303 (see below), which removes also all Content-* headers.
    // https://tools.ietf.org/html/rfc7231#section-6.4
    this.opts.headers = cleanRequestHeaders(this.opts.headers, statusCode === 303, this.opts.origin !== origin)
    this.opts.path = path
    this.opts.origin = origin
    this.opts.maxRedirections = 0
    this.opts.query = null

    // https://tools.ietf.org/html/rfc7231#section-6.4.4
    // In case of HTTP 303, always replace method to be either HEAD or GET
    if (statusCode === 303 && this.opts.method !== 'HEAD') {
      this.opts.method = 'GET'
      this.opts.body = null
    }
  }

  onData (chunk) {
    if (this.location) {
      /*
        https://tools.ietf.org/html/rfc7231#section-6.4

        TLDR: undici always ignores 3xx response bodies.

        Redirection is used to serve the requested resource from another URL, so it is assumes that
        no body is generated (and thus can be ignored). Even though generating a body is not prohibited.

        For status 301, 302, 303, 307 and 308 (the latter from RFC 7238), the specs mention that the body usually
        (which means it's optional and not mandated) contain just an hyperlink to the value of
        the Location response header, so the body can be ignored safely.

        For status 300, which is "Multiple Choices", the spec mentions both generating a Location
        response header AND a response body with the other possible location to follow.
        Since the spec explicitily chooses not to specify a format for such body and leave it to
        servers and browsers implementors, we ignore the body as there is no specified way to eventually parse it.
      */
    } else {
      return this.handler.onData(chunk)
    }
  }

  onComplete (trailers) {
    if (this.location) {
      /*
        https://tools.ietf.org/html/rfc7231#section-6.4

        TLDR: undici always ignores 3xx response trailers as they are not expected in case of redirections
        and neither are useful if present.

        See comment on onData method above for more detailed informations.
      */

      this.location = null
      this.abort = null

      this.dispatch(this.opts, this)
    } else {
      this.handler.onComplete(trailers)
    }
  }

  onBodySent (chunk) {
    if (this.handler.onBodySent) {
      this.handler.onBodySent(chunk)
    }
  }
}

function parseLocation (statusCode, headers) {
  if (redirectableStatusCodes.indexOf(statusCode) === -1) {
    return null
  }

  for (let i = 0; i < headers.length; i += 2) {
    if (headers[i].toString().toLowerCase() === 'location') {
      return headers[i + 1]
    }
  }
}

// https://tools.ietf.org/html/rfc7231#section-6.4.4
function shouldRemoveHeader (header, removeContent, unknownOrigin) {
  return (
    (header.length === 4 && header.toString().toLowerCase() === 'host') ||
    (removeContent && header.toString().toLowerCase().indexOf('content-') === 0) ||
    (unknownOrigin && header.length === 13 && header.toString().toLowerCase() === 'authorization') ||
    (unknownOrigin && header.length === 6 && header.toString().toLowerCase() === 'cookie')
  )
}

// https://tools.ietf.org/html/rfc7231#section-6.4
function cleanRequestHeaders (headers, removeContent, unknownOrigin) {
  const ret = []
  if (Array.isArray(headers)) {
    for (let i = 0; i < headers.length; i += 2) {
      if (!shouldRemoveHeader(headers[i], removeContent, unknownOrigin)) {
        ret.push(headers[i], headers[i + 1])
      }
    }
  } else if (headers && typeof headers === 'object') {
    for (const key of Object.keys(headers)) {
      if (!shouldRemoveHeader(key, removeContent, unknownOrigin)) {
        ret.push(key, headers[key])
      }
    }
  } else {
    assert(headers == null, 'headers must be an object or an array')
  }
  return ret
}

module.exports = RedirectHandler


/***/ }),

/***/ 8861:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const RedirectHandler = __nccwpck_require__(2860)

function createRedirectInterceptor ({ maxRedirections: defaultMaxRedirections }) {
  return (dispatch) => {
    return function Intercept (opts, handler) {
      const { maxRedirections = defaultMaxRedirections } = opts

      if (!maxRedirections) {
        return dispatch(opts, handler)
      }

      const redirectHandler = new RedirectHandler(dispatch, maxRedirections, opts, handler)
      opts = { ...opts, maxRedirections: 0 } // Stop sub dispatcher from also redirecting.
      return dispatch(opts, redirectHandler)
    }
  }
}

module.exports = createRedirectInterceptor


/***/ }),

/***/ 953:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SPECIAL_HEADERS = exports.HEADER_STATE = exports.MINOR = exports.MAJOR = exports.CONNECTION_TOKEN_CHARS = exports.HEADER_CHARS = exports.TOKEN = exports.STRICT_TOKEN = exports.HEX = exports.URL_CHAR = exports.STRICT_URL_CHAR = exports.USERINFO_CHARS = exports.MARK = exports.ALPHANUM = exports.NUM = exports.HEX_MAP = exports.NUM_MAP = exports.ALPHA = exports.FINISH = exports.H_METHOD_MAP = exports.METHOD_MAP = exports.METHODS_RTSP = exports.METHODS_ICE = exports.METHODS_HTTP = exports.METHODS = exports.LENIENT_FLAGS = exports.FLAGS = exports.TYPE = exports.ERROR = void 0;
const utils_1 = __nccwpck_require__(1891);
// C headers
var ERROR;
(function (ERROR) {
    ERROR[ERROR["OK"] = 0] = "OK";
    ERROR[ERROR["INTERNAL"] = 1] = "INTERNAL";
    ERROR[ERROR["STRICT"] = 2] = "STRICT";
    ERROR[ERROR["LF_EXPECTED"] = 3] = "LF_EXPECTED";
    ERROR[ERROR["UNEXPECTED_CONTENT_LENGTH"] = 4] = "UNEXPECTED_CONTENT_LENGTH";
    ERROR[ERROR["CLOSED_CONNECTION"] = 5] = "CLOSED_CONNECTION";
    ERROR[ERROR["INVALID_METHOD"] = 6] = "INVALID_METHOD";
    ERROR[ERROR["INVALID_URL"] = 7] = "INVALID_URL";
    ERROR[ERROR["INVALID_CONSTANT"] = 8] = "INVALID_CONSTANT";
    ERROR[ERROR["INVALID_VERSION"] = 9] = "INVALID_VERSION";
    ERROR[ERROR["INVALID_HEADER_TOKEN"] = 10] = "INVALID_HEADER_TOKEN";
    ERROR[ERROR["INVALID_CONTENT_LENGTH"] = 11] = "INVALID_CONTENT_LENGTH";
    ERROR[ERROR["INVALID_CHUNK_SIZE"] = 12] = "INVALID_CHUNK_SIZE";
    ERROR[ERROR["INVALID_STATUS"] = 13] = "INVALID_STATUS";
    ERROR[ERROR["INVALID_EOF_STATE"] = 14] = "INVALID_EOF_STATE";
    ERROR[ERROR["INVALID_TRANSFER_ENCODING"] = 15] = "INVALID_TRANSFER_ENCODING";
    ERROR[ERROR["CB_MESSAGE_BEGIN"] = 16] = "CB_MESSAGE_BEGIN";
    ERROR[ERROR["CB_HEADERS_COMPLETE"] = 17] = "CB_HEADERS_COMPLETE";
    ERROR[ERROR["CB_MESSAGE_COMPLETE"] = 18] = "CB_MESSAGE_COMPLETE";
    ERROR[ERROR["CB_CHUNK_HEADER"] = 19] = "CB_CHUNK_HEADER";
    ERROR[ERROR["CB_CHUNK_COMPLETE"] = 20] = "CB_CHUNK_COMPLETE";
    ERROR[ERROR["PAUSED"] = 21] = "PAUSED";
    ERROR[ERROR["PAUSED_UPGRADE"] = 22] = "PAUSED_UPGRADE";
    ERROR[ERROR["PAUSED_H2_UPGRADE"] = 23] = "PAUSED_H2_UPGRADE";
    ERROR[ERROR["USER"] = 24] = "USER";
})(ERROR = exports.ERROR || (exports.ERROR = {}));
var TYPE;
(function (TYPE) {
    TYPE[TYPE["BOTH"] = 0] = "BOTH";
    TYPE[TYPE["REQUEST"] = 1] = "REQUEST";
    TYPE[TYPE["RESPONSE"] = 2] = "RESPONSE";
})(TYPE = exports.TYPE || (exports.TYPE = {}));
var FLAGS;
(function (FLAGS) {
    FLAGS[FLAGS["CONNECTION_KEEP_ALIVE"] = 1] = "CONNECTION_KEEP_ALIVE";
    FLAGS[FLAGS["CONNECTION_CLOSE"] = 2] = "CONNECTION_CLOSE";
    FLAGS[FLAGS["CONNECTION_UPGRADE"] = 4] = "CONNECTION_UPGRADE";
    FLAGS[FLAGS["CHUNKED"] = 8] = "CHUNKED";
    FLAGS[FLAGS["UPGRADE"] = 16] = "UPGRADE";
    FLAGS[FLAGS["CONTENT_LENGTH"] = 32] = "CONTENT_LENGTH";
    FLAGS[FLAGS["SKIPBODY"] = 64] = "SKIPBODY";
    FLAGS[FLAGS["TRAILING"] = 128] = "TRAILING";
    // 1 << 8 is unused
    FLAGS[FLAGS["TRANSFER_ENCODING"] = 512] = "TRANSFER_ENCODING";
})(FLAGS = exports.FLAGS || (exports.FLAGS = {}));
var LENIENT_FLAGS;
(function (LENIENT_FLAGS) {
    LENIENT_FLAGS[LENIENT_FLAGS["HEADERS"] = 1] = "HEADERS";
    LENIENT_FLAGS[LENIENT_FLAGS["CHUNKED_LENGTH"] = 2] = "CHUNKED_LENGTH";
    LENIENT_FLAGS[LENIENT_FLAGS["KEEP_ALIVE"] = 4] = "KEEP_ALIVE";
})(LENIENT_FLAGS = exports.LENIENT_FLAGS || (exports.LENIENT_FLAGS = {}));
var METHODS;
(function (METHODS) {
    METHODS[METHODS["DELETE"] = 0] = "DELETE";
    METHODS[METHODS["GET"] = 1] = "GET";
    METHODS[METHODS["HEAD"] = 2] = "HEAD";
    METHODS[METHODS["POST"] = 3] = "POST";
    METHODS[METHODS["PUT"] = 4] = "PUT";
    /* pathological */
    METHODS[METHODS["CONNECT"] = 5] = "CONNECT";
    METHODS[METHODS["OPTIONS"] = 6] = "OPTIONS";
    METHODS[METHODS["TRACE"] = 7] = "TRACE";
    /* WebDAV */
    METHODS[METHODS["COPY"] = 8] = "COPY";
    METHODS[METHODS["LOCK"] = 9] = "LOCK";
    METHODS[METHODS["MKCOL"] = 10] = "MKCOL";
    METHODS[METHODS["MOVE"] = 11] = "MOVE";
    METHODS[METHODS["PROPFIND"] = 12] = "PROPFIND";
    METHODS[METHODS["PROPPATCH"] = 13] = "PROPPATCH";
    METHODS[METHODS["SEARCH"] = 14] = "SEARCH";
    METHODS[METHODS["UNLOCK"] = 15] = "UNLOCK";
    METHODS[METHODS["BIND"] = 16] = "BIND";
    METHODS[METHODS["REBIND"] = 17] = "REBIND";
    METHODS[METHODS["UNBIND"] = 18] = "UNBIND";
    METHODS[METHODS["ACL"] = 19] = "ACL";
    /* subversion */
    METHODS[METHODS["REPORT"] = 20] = "REPORT";
    METHODS[METHODS["MKACTIVITY"] = 21] = "MKACTIVITY";
    METHODS[METHODS["CHECKOUT"] = 22] = "CHECKOUT";
    METHODS[METHODS["MERGE"] = 23] = "MERGE";
    /* upnp */
    METHODS[METHODS["M-SEARCH"] = 24] = "M-SEARCH";
    METHODS[METHODS["NOTIFY"] = 25] = "NOTIFY";
    METHODS[METHODS["SUBSCRIBE"] = 26] = "SUBSCRIBE";
    METHODS[METHODS["UNSUBSCRIBE"] = 27] = "UNSUBSCRIBE";
    /* RFC-5789 */
    METHODS[METHODS["PATCH"] = 28] = "PATCH";
    METHODS[METHODS["PURGE"] = 29] = "PURGE";
    /* CalDAV */
    METHODS[METHODS["MKCALENDAR"] = 30] = "MKCALENDAR";
    /* RFC-2068, section 19.6.1.2 */
    METHODS[METHODS["LINK"] = 31] = "LINK";
    METHODS[METHODS["UNLINK"] = 32] = "UNLINK";
    /* icecast */
    METHODS[METHODS["SOURCE"] = 33] = "SOURCE";
    /* RFC-7540, section 11.6 */
    METHODS[METHODS["PRI"] = 34] = "PRI";
    /* RFC-2326 RTSP */
    METHODS[METHODS["DESCRIBE"] = 35] = "DESCRIBE";
    METHODS[METHODS["ANNOUNCE"] = 36] = "ANNOUNCE";
    METHODS[METHODS["SETUP"] = 37] = "SETUP";
    METHODS[METHODS["PLAY"] = 38] = "PLAY";
    METHODS[METHODS["PAUSE"] = 39] = "PAUSE";
    METHODS[METHODS["TEARDOWN"] = 40] = "TEARDOWN";
    METHODS[METHODS["GET_PARAMETER"] = 41] = "GET_PARAMETER";
    METHODS[METHODS["SET_PARAMETER"] = 42] = "SET_PARAMETER";
    METHODS[METHODS["REDIRECT"] = 43] = "REDIRECT";
    METHODS[METHODS["RECORD"] = 44] = "RECORD";
    /* RAOP */
    METHODS[METHODS["FLUSH"] = 45] = "FLUSH";
})(METHODS = exports.METHODS || (exports.METHODS = {}));
exports.METHODS_HTTP = [
    METHODS.DELETE,
    METHODS.GET,
    METHODS.HEAD,
    METHODS.POST,
    METHODS.PUT,
    METHODS.CONNECT,
    METHODS.OPTIONS,
    METHODS.TRACE,
    METHODS.COPY,
    METHODS.LOCK,
    METHODS.MKCOL,
    METHODS.MOVE,
    METHODS.PROPFIND,
    METHODS.PROPPATCH,
    METHODS.SEARCH,
    METHODS.UNLOCK,
    METHODS.BIND,
    METHODS.REBIND,
    METHODS.UNBIND,
    METHODS.ACL,
    METHODS.REPORT,
    METHODS.MKACTIVITY,
    METHODS.CHECKOUT,
    METHODS.MERGE,
    METHODS['M-SEARCH'],
    METHODS.NOTIFY,
    METHODS.SUBSCRIBE,
    METHODS.UNSUBSCRIBE,
    METHODS.PATCH,
    METHODS.PURGE,
    METHODS.MKCALENDAR,
    METHODS.LINK,
    METHODS.UNLINK,
    METHODS.PRI,
    // TODO(indutny): should we allow it with HTTP?
    METHODS.SOURCE,
];
exports.METHODS_ICE = [
    METHODS.SOURCE,
];
exports.METHODS_RTSP = [
    METHODS.OPTIONS,
    METHODS.DESCRIBE,
    METHODS.ANNOUNCE,
    METHODS.SETUP,
    METHODS.PLAY,
    METHODS.PAUSE,
    METHODS.TEARDOWN,
    METHODS.GET_PARAMETER,
    METHODS.SET_PARAMETER,
    METHODS.REDIRECT,
    METHODS.RECORD,
    METHODS.FLUSH,
    // For AirPlay
    METHODS.GET,
    METHODS.POST,
];
exports.METHOD_MAP = utils_1.enumToMap(METHODS);
exports.H_METHOD_MAP = {};
Object.keys(exports.METHOD_MAP).forEach((key) => {
    if (/^H/.test(key)) {
        exports.H_METHOD_MAP[key] = exports.METHOD_MAP[key];
    }
});
var FINISH;
(function (FINISH) {
    FINISH[FINISH["SAFE"] = 0] = "SAFE";
    FINISH[FINISH["SAFE_WITH_CB"] = 1] = "SAFE_WITH_CB";
    FINISH[FINISH["UNSAFE"] = 2] = "UNSAFE";
})(FINISH = exports.FINISH || (exports.FINISH = {}));
exports.ALPHA = [];
for (let i = 'A'.charCodeAt(0); i <= 'Z'.charCodeAt(0); i++) {
    // Upper case
    exports.ALPHA.push(String.fromCharCode(i));
    // Lower case
    exports.ALPHA.push(String.fromCharCode(i + 0x20));
}
exports.NUM_MAP = {
    0: 0, 1: 1, 2: 2, 3: 3, 4: 4,
    5: 5, 6: 6, 7: 7, 8: 8, 9: 9,
};
exports.HEX_MAP = {
    0: 0, 1: 1, 2: 2, 3: 3, 4: 4,
    5: 5, 6: 6, 7: 7, 8: 8, 9: 9,
    A: 0XA, B: 0XB, C: 0XC, D: 0XD, E: 0XE, F: 0XF,
    a: 0xa, b: 0xb, c: 0xc, d: 0xd, e: 0xe, f: 0xf,
};
exports.NUM = [
    '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
];
exports.ALPHANUM = exports.ALPHA.concat(exports.NUM);
exports.MARK = ['-', '_', '.', '!', '~', '*', '\'', '(', ')'];
exports.USERINFO_CHARS = exports.ALPHANUM
    .concat(exports.MARK)
    .concat(['%', ';', ':', '&', '=', '+', '$', ',']);
// TODO(indutny): use RFC
exports.STRICT_URL_CHAR = [
    '!', '"', '$', '%', '&', '\'',
    '(', ')', '*', '+', ',', '-', '.', '/',
    ':', ';', '<', '=', '>',
    '@', '[', '\\', ']', '^', '_',
    '`',
    '{', '|', '}', '~',
].concat(exports.ALPHANUM);
exports.URL_CHAR = exports.STRICT_URL_CHAR
    .concat(['\t', '\f']);
// All characters with 0x80 bit set to 1
for (let i = 0x80; i <= 0xff; i++) {
    exports.URL_CHAR.push(i);
}
exports.HEX = exports.NUM.concat(['a', 'b', 'c', 'd', 'e', 'f', 'A', 'B', 'C', 'D', 'E', 'F']);
/* Tokens as defined by rfc 2616. Also lowercases them.
 *        token       = 1*<any CHAR except CTLs or separators>
 *     separators     = "(" | ")" | "<" | ">" | "@"
 *                    | "," | ";" | ":" | "\" | <">
 *                    | "/" | "[" | "]" | "?" | "="
 *                    | "{" | "}" | SP | HT
 */
exports.STRICT_TOKEN = [
    '!', '#', '$', '%', '&', '\'',
    '*', '+', '-', '.',
    '^', '_', '`',
    '|', '~',
].concat(exports.ALPHANUM);
exports.TOKEN = exports.STRICT_TOKEN.concat([' ']);
/*
 * Verify that a char is a valid visible (printable) US-ASCII
 * character or %x80-FF
 */
exports.HEADER_CHARS = ['\t'];
for (let i = 32; i <= 255; i++) {
    if (i !== 127) {
        exports.HEADER_CHARS.push(i);
    }
}
// ',' = \x44
exports.CONNECTION_TOKEN_CHARS = exports.HEADER_CHARS.filter((c) => c !== 44);
exports.MAJOR = exports.NUM_MAP;
exports.MINOR = exports.MAJOR;
var HEADER_STATE;
(function (HEADER_STATE) {
    HEADER_STATE[HEADER_STATE["GENERAL"] = 0] = "GENERAL";
    HEADER_STATE[HEADER_STATE["CONNECTION"] = 1] = "CONNECTION";
    HEADER_STATE[HEADER_STATE["CONTENT_LENGTH"] = 2] = "CONTENT_LENGTH";
    HEADER_STATE[HEADER_STATE["TRANSFER_ENCODING"] = 3] = "TRANSFER_ENCODING";
    HEADER_STATE[HEADER_STATE["UPGRADE"] = 4] = "UPGRADE";
    HEADER_STATE[HEADER_STATE["CONNECTION_KEEP_ALIVE"] = 5] = "CONNECTION_KEEP_ALIVE";
    HEADER_STATE[HEADER_STATE["CONNECTION_CLOSE"] = 6] = "CONNECTION_CLOSE";
    HEADER_STATE[HEADER_STATE["CONNECTION_UPGRADE"] = 7] = "CONNECTION_UPGRADE";
    HEADER_STATE[HEADER_STATE["TRANSFER_ENCODING_CHUNKED"] = 8] = "TRANSFER_ENCODING_CHUNKED";
})(HEADER_STATE = exports.HEADER_STATE || (exports.HEADER_STATE = {}));
exports.SPECIAL_HEADERS = {
    'connection': HEADER_STATE.CONNECTION,
    'content-length': HEADER_STATE.CONTENT_LENGTH,
    'proxy-connection': HEADER_STATE.CONNECTION,
    'transfer-encoding': HEADER_STATE.TRANSFER_ENCODING,
    'upgrade': HEADER_STATE.UPGRADE,
};
//# sourceMappingURL=constants.js.map

/***/ }),

/***/ 1145:
/***/ ((module) => {

module.exports = ''


/***/ }),

/***/ 5627:
/***/ ((module) => {

module.exports = ''


/***/ }),

/***/ 1891:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.enumToMap = void 0;
function enumToMap(obj) {
    const res = {};
    Object.keys(obj).forEach((key) => {
        const value = obj[key];
        if (typeof value === 'number') {
            res[key] = value;
        }
    });
    return res;
}
exports.enumToMap = enumToMap;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ 6771:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { kClients } = __nccwpck_require__(2785)
const Agent = __nccwpck_require__(7890)
const {
  kAgent,
  kMockAgentSet,
  kMockAgentGet,
  kDispatches,
  kIsMockActive,
  kNetConnect,
  kGetNetConnect,
  kOptions,
  kFactory
} = __nccwpck_require__(4347)
const MockClient = __nccwpck_require__(8687)
const MockPool = __nccwpck_require__(6193)
const { matchValue, buildMockOptions } = __nccwpck_require__(9323)
const { InvalidArgumentError, UndiciError } = __nccwpck_require__(8045)
const Dispatcher = __nccwpck_require__(412)
const Pluralizer = __nccwpck_require__(8891)
const PendingInterceptorsFormatter = __nccwpck_require__(6823)

class FakeWeakRef {
  constructor (value) {
    this.value = value
  }

  deref () {
    return this.value
  }
}

class MockAgent extends Dispatcher {
  constructor (opts) {
    super(opts)

    this[kNetConnect] = true
    this[kIsMockActive] = true

    // Instantiate Agent and encapsulate
    if ((opts && opts.agent && typeof opts.agent.dispatch !== 'function')) {
      throw new InvalidArgumentError('Argument opts.agent must implement Agent')
    }
    const agent = opts && opts.agent ? opts.agent : new Agent(opts)
    this[kAgent] = agent

    this[kClients] = agent[kClients]
    this[kOptions] = buildMockOptions(opts)
  }

  get (origin) {
    let dispatcher = this[kMockAgentGet](origin)

    if (!dispatcher) {
      dispatcher = this[kFactory](origin)
      this[kMockAgentSet](origin, dispatcher)
    }
    return dispatcher
  }

  dispatch (opts, handler) {
    // Call MockAgent.get to perform additional setup before dispatching as normal
    this.get(opts.origin)
    return this[kAgent].dispatch(opts, handler)
  }

  async close () {
    await this[kAgent].close()
    this[kClients].clear()
  }

  deactivate () {
    this[kIsMockActive] = false
  }

  activate () {
    this[kIsMockActive] = true
  }

  enableNetConnect (matcher) {
    if (typeof matcher === 'string' || typeof matcher === 'function' || matcher instanceof RegExp) {
      if (Array.isArray(this[kNetConnect])) {
        this[kNetConnect].push(matcher)
      } else {
        this[kNetConnect] = [matcher]
      }
    } else if (typeof matcher === 'undefined') {
      this[kNetConnect] = true
    } else {
      throw new InvalidArgumentError('Unsupported matcher. Must be one of String|Function|RegExp.')
    }
  }

  disableNetConnect () {
    this[kNetConnect] = false
  }

  // This is required to bypass issues caused by using global symbols - see:
  // https://github.com/nodejs/undici/issues/1447
  get isMockActive () {
    return this[kIsMockActive]
  }

  [kMockAgentSet] (origin, dispatcher) {
    this[kClients].set(origin, new FakeWeakRef(dispatcher))
  }

  [kFactory] (origin) {
    const mockOptions = Object.assign({ agent: this }, this[kOptions])
    return this[kOptions] && this[kOptions].connections === 1
      ? new MockClient(origin, mockOptions)
      : new MockPool(origin, mockOptions)
  }

  [kMockAgentGet] (origin) {
    // First check if we can immediately find it
    const ref = this[kClients].get(origin)
    if (ref) {
      return ref.deref()
    }

    // If the origin is not a string create a dummy parent pool and return to user
    if (typeof origin !== 'string') {
      const dispatcher = this[kFactory]('http://localhost:9999')
      this[kMockAgentSet](origin, dispatcher)
      return dispatcher
    }

    // If we match, create a pool and assign the same dispatches
    for (const [keyMatcher, nonExplicitRef] of Array.from(this[kClients])) {
      const nonExplicitDispatcher = nonExplicitRef.deref()
      if (nonExplicitDispatcher && typeof keyMatcher !== 'string' && matchValue(keyMatcher, origin)) {
        const dispatcher = this[kFactory](origin)
        this[kMockAgentSet](origin, dispatcher)
        dispatcher[kDispatches] = nonExplicitDispatcher[kDispatches]
        return dispatcher
      }
    }
  }

  [kGetNetConnect] () {
    return this[kNetConnect]
  }

  pendingInterceptors () {
    const mockAgentClients = this[kClients]

    return Array.from(mockAgentClients.entries())
      .flatMap(([origin, scope]) => scope.deref()[kDispatches].map(dispatch => ({ ...dispatch, origin })))
      .filter(({ pending }) => pending)
  }

  assertNoPendingInterceptors ({ pendingInterceptorsFormatter = new PendingInterceptorsFormatter() } = {}) {
    const pending = this.pendingInterceptors()

    if (pending.length === 0) {
      return
    }

    const pluralizer = new Pluralizer('interceptor', 'interceptors').pluralize(pending.length)

    throw new UndiciError(`
${pluralizer.count} ${pluralizer.noun} ${pluralizer.is} pending:

${pendingInterceptorsFormatter.format(pending)}
`.trim())
  }
}

module.exports = MockAgent


/***/ }),

/***/ 8687:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { promisify } = __nccwpck_require__(3837)
const Client = __nccwpck_require__(3598)
const { buildMockDispatch } = __nccwpck_require__(9323)
const {
  kDispatches,
  kMockAgent,
  kClose,
  kOriginalClose,
  kOrigin,
  kOriginalDispatch,
  kConnected
} = __nccwpck_require__(4347)
const { MockInterceptor } = __nccwpck_require__(410)
const Symbols = __nccwpck_require__(2785)
const { InvalidArgumentError } = __nccwpck_require__(8045)

/**
 * MockClient provides an API that extends the Client to influence the mockDispatches.
 */
class MockClient extends Client {
  constructor (origin, opts) {
    super(origin, opts)

    if (!opts || !opts.agent || typeof opts.agent.dispatch !== 'function') {
      throw new InvalidArgumentError('Argument opts.agent must implement Agent')
    }

    this[kMockAgent] = opts.agent
    this[kOrigin] = origin
    this[kDispatches] = []
    this[kConnected] = 1
    this[kOriginalDispatch] = this.dispatch
    this[kOriginalClose] = this.close.bind(this)

    this.dispatch = buildMockDispatch.call(this)
    this.close = this[kClose]
  }

  get [Symbols.kConnected] () {
    return this[kConnected]
  }

  /**
   * Sets up the base interceptor for mocking replies from undici.
   */
  intercept (opts) {
    return new MockInterceptor(opts, this[kDispatches])
  }

  async [kClose] () {
    await promisify(this[kOriginalClose])()
    this[kConnected] = 0
    this[kMockAgent][Symbols.kClients].delete(this[kOrigin])
  }
}

module.exports = MockClient


/***/ }),

/***/ 888:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { UndiciError } = __nccwpck_require__(8045)

class MockNotMatchedError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, MockNotMatchedError)
    this.name = 'MockNotMatchedError'
    this.message = message || 'The request does not match any registered mock dispatches'
    this.code = 'UND_MOCK_ERR_MOCK_NOT_MATCHED'
  }
}

module.exports = {
  MockNotMatchedError
}


/***/ }),

/***/ 410:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { getResponseData, buildKey, addMockDispatch } = __nccwpck_require__(9323)
const {
  kDispatches,
  kDispatchKey,
  kDefaultHeaders,
  kDefaultTrailers,
  kContentLength,
  kMockDispatch
} = __nccwpck_require__(4347)
const { InvalidArgumentError } = __nccwpck_require__(8045)
const { buildURL } = __nccwpck_require__(3983)

/**
 * Defines the scope API for an interceptor reply
 */
class MockScope {
  constructor (mockDispatch) {
    this[kMockDispatch] = mockDispatch
  }

  /**
   * Delay a reply by a set amount in ms.
   */
  delay (waitInMs) {
    if (typeof waitInMs !== 'number' || !Number.isInteger(waitInMs) || waitInMs <= 0) {
      throw new InvalidArgumentError('waitInMs must be a valid integer > 0')
    }

    this[kMockDispatch].delay = waitInMs
    return this
  }

  /**
   * For a defined reply, never mark as consumed.
   */
  persist () {
    this[kMockDispatch].persist = true
    return this
  }

  /**
   * Allow one to define a reply for a set amount of matching requests.
   */
  times (repeatTimes) {
    if (typeof repeatTimes !== 'number' || !Number.isInteger(repeatTimes) || repeatTimes <= 0) {
      throw new InvalidArgumentError('repeatTimes must be a valid integer > 0')
    }

    this[kMockDispatch].times = repeatTimes
    return this
  }
}

/**
 * Defines an interceptor for a Mock
 */
class MockInterceptor {
  constructor (opts, mockDispatches) {
    if (typeof opts !== 'object') {
      throw new InvalidArgumentError('opts must be an object')
    }
    if (typeof opts.path === 'undefined') {
      throw new InvalidArgumentError('opts.path must be defined')
    }
    if (typeof opts.method === 'undefined') {
      opts.method = 'GET'
    }
    // See https://github.com/nodejs/undici/issues/1245
    // As per RFC 3986, clients are not supposed to send URI
    // fragments to servers when they retrieve a document,
    if (typeof opts.path === 'string') {
      if (opts.query) {
        opts.path = buildURL(opts.path, opts.query)
      } else {
        // Matches https://github.com/nodejs/undici/blob/main/lib/fetch/index.js#L1811
        const parsedURL = new URL(opts.path, 'data://')
        opts.path = parsedURL.pathname + parsedURL.search
      }
    }
    if (typeof opts.method === 'string') {
      opts.method = opts.method.toUpperCase()
    }

    this[kDispatchKey] = buildKey(opts)
    this[kDispatches] = mockDispatches
    this[kDefaultHeaders] = {}
    this[kDefaultTrailers] = {}
    this[kContentLength] = false
  }

  createMockScopeDispatchData (statusCode, data, responseOptions = {}) {
    const responseData = getResponseData(data)
    const contentLength = this[kContentLength] ? { 'content-length': responseData.length } : {}
    const headers = { ...this[kDefaultHeaders], ...contentLength, ...responseOptions.headers }
    const trailers = { ...this[kDefaultTrailers], ...responseOptions.trailers }

    return { statusCode, data, headers, trailers }
  }

  validateReplyParameters (statusCode, data, responseOptions) {
    if (typeof statusCode === 'undefined') {
      throw new InvalidArgumentError('statusCode must be defined')
    }
    if (typeof data === 'undefined') {
      throw new InvalidArgumentError('data must be defined')
    }
    if (typeof responseOptions !== 'object') {
      throw new InvalidArgumentError('responseOptions must be an object')
    }
  }

  /**
   * Mock an undici request with a defined reply.
   */
  reply (replyData) {
    // Values of reply aren't available right now as they
    // can only be available when the reply callback is invoked.
    if (typeof replyData === 'function') {
      // We'll first wrap the provided callback in another function,
      // this function will properly resolve the data from the callback
      // when invoked.
      const wrappedDefaultsCallback = (opts) => {
        // Our reply options callback contains the parameter for statusCode, data and options.
        const resolvedData = replyData(opts)

        // Check if it is in the right format
        if (typeof resolvedData !== 'object') {
          throw new InvalidArgumentError('reply options callback must return an object')
        }

        const { statusCode, data = '', responseOptions = {} } = resolvedData
        this.validateReplyParameters(statusCode, data, responseOptions)
        // Since the values can be obtained immediately we return them
        // from this higher order function that will be resolved later.
        return {
          ...this.createMockScopeDispatchData(statusCode, data, responseOptions)
        }
      }

      // Add usual dispatch data, but this time set the data parameter to function that will eventually provide data.
      const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], wrappedDefaultsCallback)
      return new MockScope(newMockDispatch)
    }

    // We can have either one or three parameters, if we get here,
    // we should have 1-3 parameters. So we spread the arguments of
    // this function to obtain the parameters, since replyData will always
    // just be the statusCode.
    const [statusCode, data = '', responseOptions = {}] = [...arguments]
    this.validateReplyParameters(statusCode, data, responseOptions)

    // Send in-already provided data like usual
    const dispatchData = this.createMockScopeDispatchData(statusCode, data, responseOptions)
    const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], dispatchData)
    return new MockScope(newMockDispatch)
  }

  /**
   * Mock an undici request with a defined error.
   */
  replyWithError (error) {
    if (typeof error === 'undefined') {
      throw new InvalidArgumentError('error must be defined')
    }

    const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], { error })
    return new MockScope(newMockDispatch)
  }

  /**
   * Set default reply headers on the interceptor for subsequent replies
   */
  defaultReplyHeaders (headers) {
    if (typeof headers === 'undefined') {
      throw new InvalidArgumentError('headers must be defined')
    }

    this[kDefaultHeaders] = headers
    return this
  }

  /**
   * Set default reply trailers on the interceptor for subsequent replies
   */
  defaultReplyTrailers (trailers) {
    if (typeof trailers === 'undefined') {
      throw new InvalidArgumentError('trailers must be defined')
    }

    this[kDefaultTrailers] = trailers
    return this
  }

  /**
   * Set reply content length header for replies on the interceptor
   */
  replyContentLength () {
    this[kContentLength] = true
    return this
  }
}

module.exports.MockInterceptor = MockInterceptor
module.exports.MockScope = MockScope


/***/ }),

/***/ 6193:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { promisify } = __nccwpck_require__(3837)
const Pool = __nccwpck_require__(4634)
const { buildMockDispatch } = __nccwpck_require__(9323)
const {
  kDispatches,
  kMockAgent,
  kClose,
  kOriginalClose,
  kOrigin,
  kOriginalDispatch,
  kConnected
} = __nccwpck_require__(4347)
const { MockInterceptor } = __nccwpck_require__(410)
const Symbols = __nccwpck_require__(2785)
const { InvalidArgumentError } = __nccwpck_require__(8045)

/**
 * MockPool provides an API that extends the Pool to influence the mockDispatches.
 */
class MockPool extends Pool {
  constructor (origin, opts) {
    super(origin, opts)

    if (!opts || !opts.agent || typeof opts.agent.dispatch !== 'function') {
      throw new InvalidArgumentError('Argument opts.agent must implement Agent')
    }

    this[kMockAgent] = opts.agent
    this[kOrigin] = origin
    this[kDispatches] = []
    this[kConnected] = 1
    this[kOriginalDispatch] = this.dispatch
    this[kOriginalClose] = this.close.bind(this)

    this.dispatch = buildMockDispatch.call(this)
    this.close = this[kClose]
  }

  get [Symbols.kConnected] () {
    return this[kConnected]
  }

  /**
   * Sets up the base interceptor for mocking replies from undici.
   */
  intercept (opts) {
    return new MockInterceptor(opts, this[kDispatches])
  }

  async [kClose] () {
    await promisify(this[kOriginalClose])()
    this[kConnected] = 0
    this[kMockAgent][Symbols.kClients].delete(this[kOrigin])
  }
}

module.exports = MockPool


/***/ }),

/***/ 4347:
/***/ ((module) => {

"use strict";


module.exports = {
  kAgent: Symbol('agent'),
  kOptions: Symbol('options'),
  kFactory: Symbol('factory'),
  kDispatches: Symbol('dispatches'),
  kDispatchKey: Symbol('dispatch key'),
  kDefaultHeaders: Symbol('default headers'),
  kDefaultTrailers: Symbol('default trailers'),
  kContentLength: Symbol('content length'),
  kMockAgent: Symbol('mock agent'),
  kMockAgentSet: Symbol('mock agent set'),
  kMockAgentGet: Symbol('mock agent get'),
  kMockDispatch: Symbol('mock dispatch'),
  kClose: Symbol('close'),
  kOriginalClose: Symbol('original agent close'),
  kOrigin: Symbol('origin'),
  kIsMockActive: Symbol('is mock active'),
  kNetConnect: Symbol('net connect'),
  kGetNetConnect: Symbol('get net connect'),
  kConnected: Symbol('connected')
}


/***/ }),

/***/ 9323:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { MockNotMatchedError } = __nccwpck_require__(888)
const {
  kDispatches,
  kMockAgent,
  kOriginalDispatch,
  kOrigin,
  kGetNetConnect
} = __nccwpck_require__(4347)
const { buildURL, nop } = __nccwpck_require__(3983)
const { STATUS_CODES } = __nccwpck_require__(3685)
const {
  types: {
    isPromise
  }
} = __nccwpck_require__(3837)

function matchValue (match, value) {
  if (typeof match === 'string') {
    return match === value
  }
  if (match instanceof RegExp) {
    return match.test(value)
  }
  if (typeof match === 'function') {
    return match(value) === true
  }
  return false
}

function lowerCaseEntries (headers) {
  return Object.fromEntries(
    Object.entries(headers).map(([headerName, headerValue]) => {
      return [headerName.toLocaleLowerCase(), headerValue]
    })
  )
}

/**
 * @param {import('../../index').Headers|string[]|Record<string, string>} headers
 * @param {string} key
 */
function getHeaderByName (headers, key) {
  if (Array.isArray(headers)) {
    for (let i = 0; i < headers.length; i += 2) {
      if (headers[i].toLocaleLowerCase() === key.toLocaleLowerCase()) {
        return headers[i + 1]
      }
    }

    return undefined
  } else if (typeof headers.get === 'function') {
    return headers.get(key)
  } else {
    return lowerCaseEntries(headers)[key.toLocaleLowerCase()]
  }
}

/** @param {string[]} headers */
function buildHeadersFromArray (headers) { // fetch HeadersList
  const clone = headers.slice()
  const entries = []
  for (let index = 0; index < clone.length; index += 2) {
    entries.push([clone[index], clone[index + 1]])
  }
  return Object.fromEntries(entries)
}

function matchHeaders (mockDispatch, headers) {
  if (typeof mockDispatch.headers === 'function') {
    if (Array.isArray(headers)) { // fetch HeadersList
      headers = buildHeadersFromArray(headers)
    }
    return mockDispatch.headers(headers ? lowerCaseEntries(headers) : {})
  }
  if (typeof mockDispatch.headers === 'undefined') {
    return true
  }
  if (typeof headers !== 'object' || typeof mockDispatch.headers !== 'object') {
    return false
  }

  for (const [matchHeaderName, matchHeaderValue] of Object.entries(mockDispatch.headers)) {
    const headerValue = getHeaderByName(headers, matchHeaderName)

    if (!matchValue(matchHeaderValue, headerValue)) {
      return false
    }
  }
  return true
}

function safeUrl (path) {
  if (typeof path !== 'string') {
    return path
  }

  const pathSegments = path.split('?')

  if (pathSegments.length !== 2) {
    return path
  }

  const qp = new URLSearchParams(pathSegments.pop())
  qp.sort()
  return [...pathSegments, qp.toString()].join('?')
}

function matchKey (mockDispatch, { path, method, body, headers }) {
  const pathMatch = matchValue(mockDispatch.path, path)
  const methodMatch = matchValue(mockDispatch.method, method)
  const bodyMatch = typeof mockDispatch.body !== 'undefined' ? matchValue(mockDispatch.body, body) : true
  const headersMatch = matchHeaders(mockDispatch, headers)
  return pathMatch && methodMatch && bodyMatch && headersMatch
}

function getResponseData (data) {
  if (Buffer.isBuffer(data)) {
    return data
  } else if (typeof data === 'object') {
    return JSON.stringify(data)
  } else {
    return data.toString()
  }
}

function getMockDispatch (mockDispatches, key) {
  const basePath = key.query ? buildURL(key.path, key.query) : key.path
  const resolvedPath = typeof basePath === 'string' ? safeUrl(basePath) : basePath

  // Match path
  let matchedMockDispatches = mockDispatches.filter(({ consumed }) => !consumed).filter(({ path }) => matchValue(safeUrl(path), resolvedPath))
  if (matchedMockDispatches.length === 0) {
    throw new MockNotMatchedError(`Mock dispatch not matched for path '${resolvedPath}'`)
  }

  // Match method
  matchedMockDispatches = matchedMockDispatches.filter(({ method }) => matchValue(method, key.method))
  if (matchedMockDispatches.length === 0) {
    throw new MockNotMatchedError(`Mock dispatch not matched for method '${key.method}'`)
  }

  // Match body
  matchedMockDispatches = matchedMockDispatches.filter(({ body }) => typeof body !== 'undefined' ? matchValue(body, key.body) : true)
  if (matchedMockDispatches.length === 0) {
    throw new MockNotMatchedError(`Mock dispatch not matched for body '${key.body}'`)
  }

  // Match headers
  matchedMockDispatches = matchedMockDispatches.filter((mockDispatch) => matchHeaders(mockDispatch, key.headers))
  if (matchedMockDispatches.length === 0) {
    throw new MockNotMatchedError(`Mock dispatch not matched for headers '${typeof key.headers === 'object' ? JSON.stringify(key.headers) : key.headers}'`)
  }

  return matchedMockDispatches[0]
}

function addMockDispatch (mockDispatches, key, data) {
  const baseData = { timesInvoked: 0, times: 1, persist: false, consumed: false }
  const replyData = typeof data === 'function' ? { callback: data } : { ...data }
  const newMockDispatch = { ...baseData, ...key, pending: true, data: { error: null, ...replyData } }
  mockDispatches.push(newMockDispatch)
  return newMockDispatch
}

function deleteMockDispatch (mockDispatches, key) {
  const index = mockDispatches.findIndex(dispatch => {
    if (!dispatch.consumed) {
      return false
    }
    return matchKey(dispatch, key)
  })
  if (index !== -1) {
    mockDispatches.splice(index, 1)
  }
}

function buildKey (opts) {
  const { path, method, body, headers, query } = opts
  return {
    path,
    method,
    body,
    headers,
    query
  }
}

function generateKeyValues (data) {
  return Object.entries(data).reduce((keyValuePairs, [key, value]) => [
    ...keyValuePairs,
    Buffer.from(`${key}`),
    Array.isArray(value) ? value.map(x => Buffer.from(`${x}`)) : Buffer.from(`${value}`)
  ], [])
}

/**
 * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
 * @param {number} statusCode
 */
function getStatusText (statusCode) {
  return STATUS_CODES[statusCode] || 'unknown'
}

async function getResponse (body) {
  const buffers = []
  for await (const data of body) {
    buffers.push(data)
  }
  return Buffer.concat(buffers).toString('utf8')
}

/**
 * Mock dispatch function used to simulate undici dispatches
 */
function mockDispatch (opts, handler) {
  // Get mock dispatch from built key
  const key = buildKey(opts)
  const mockDispatch = getMockDispatch(this[kDispatches], key)

  mockDispatch.timesInvoked++

  // Here's where we resolve a callback if a callback is present for the dispatch data.
  if (mockDispatch.data.callback) {
    mockDispatch.data = { ...mockDispatch.data, ...mockDispatch.data.callback(opts) }
  }

  // Parse mockDispatch data
  const { data: { statusCode, data, headers, trailers, error }, delay, persist } = mockDispatch
  const { timesInvoked, times } = mockDispatch

  // If it's used up and not persistent, mark as consumed
  mockDispatch.consumed = !persist && timesInvoked >= times
  mockDispatch.pending = timesInvoked < times

  // If specified, trigger dispatch error
  if (error !== null) {
    deleteMockDispatch(this[kDispatches], key)
    handler.onError(error)
    return true
  }

  // Handle the request with a delay if necessary
  if (typeof delay === 'number' && delay > 0) {
    setTimeout(() => {
      handleReply(this[kDispatches])
    }, delay)
  } else {
    handleReply(this[kDispatches])
  }

  function handleReply (mockDispatches, _data = data) {
    // fetch's HeadersList is a 1D string array
    const optsHeaders = Array.isArray(opts.headers)
      ? buildHeadersFromArray(opts.headers)
      : opts.headers
    const body = typeof _data === 'function'
      ? _data({ ...opts, headers: optsHeaders })
      : _data

    // util.types.isPromise is likely needed for jest.
    if (isPromise(body)) {
      // If handleReply is asynchronous, throwing an error
      // in the callback will reject the promise, rather than
      // synchronously throw the error, which breaks some tests.
      // Rather, we wait for the callback to resolve if it is a
      // promise, and then re-run handleReply with the new body.
      body.then((newData) => handleReply(mockDispatches, newData))
      return
    }

    const responseData = getResponseData(body)
    const responseHeaders = generateKeyValues(headers)
    const responseTrailers = generateKeyValues(trailers)

    handler.abort = nop
    handler.onHeaders(statusCode, responseHeaders, resume, getStatusText(statusCode))
    handler.onData(Buffer.from(responseData))
    handler.onComplete(responseTrailers)
    deleteMockDispatch(mockDispatches, key)
  }

  function resume () {}

  return true
}

function buildMockDispatch () {
  const agent = this[kMockAgent]
  const origin = this[kOrigin]
  const originalDispatch = this[kOriginalDispatch]

  return function dispatch (opts, handler) {
    if (agent.isMockActive) {
      try {
        mockDispatch.call(this, opts, handler)
      } catch (error) {
        if (error instanceof MockNotMatchedError) {
          const netConnect = agent[kGetNetConnect]()
          if (netConnect === false) {
            throw new MockNotMatchedError(`${error.message}: subsequent request to origin ${origin} was not allowed (net.connect disabled)`)
          }
          if (checkNetConnect(netConnect, origin)) {
            originalDispatch.call(this, opts, handler)
          } else {
            throw new MockNotMatchedError(`${error.message}: subsequent request to origin ${origin} was not allowed (net.connect is not enabled for this origin)`)
          }
        } else {
          throw error
        }
      }
    } else {
      originalDispatch.call(this, opts, handler)
    }
  }
}

function checkNetConnect (netConnect, origin) {
  const url = new URL(origin)
  if (netConnect === true) {
    return true
  } else if (Array.isArray(netConnect) && netConnect.some((matcher) => matchValue(matcher, url.host))) {
    return true
  }
  return false
}

function buildMockOptions (opts) {
  if (opts) {
    const { agent, ...mockOptions } = opts
    return mockOptions
  }
}

module.exports = {
  getResponseData,
  getMockDispatch,
  addMockDispatch,
  deleteMockDispatch,
  buildKey,
  generateKeyValues,
  matchValue,
  getResponse,
  getStatusText,
  mockDispatch,
  buildMockDispatch,
  checkNetConnect,
  buildMockOptions,
  getHeaderByName
}


/***/ }),

/***/ 6823:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { Transform } = __nccwpck_require__(2781)
const { Console } = __nccwpck_require__(6206)

/**
 * Gets the output of `console.table(…)` as a string.
 */
module.exports = class PendingInterceptorsFormatter {
  constructor ({ disableColors } = {}) {
    this.transform = new Transform({
      transform (chunk, _enc, cb) {
        cb(null, chunk)
      }
    })

    this.logger = new Console({
      stdout: this.transform,
      inspectOptions: {
        colors: !disableColors && !process.env.CI
      }
    })
  }

  format (pendingInterceptors) {
    const withPrettyHeaders = pendingInterceptors.map(
      ({ method, path, data: { statusCode }, persist, times, timesInvoked, origin }) => ({
        Method: method,
        Origin: origin,
        Path: path,
        'Status code': statusCode,
        Persistent: persist ? '✅' : '❌',
        Invocations: timesInvoked,
        Remaining: persist ? Infinity : times - timesInvoked
      }))

    this.logger.table(withPrettyHeaders)
    return this.transform.read().toString()
  }
}


/***/ }),

/***/ 8891:
/***/ ((module) => {

"use strict";


const singulars = {
  pronoun: 'it',
  is: 'is',
  was: 'was',
  this: 'this'
}

const plurals = {
  pronoun: 'they',
  is: 'are',
  was: 'were',
  this: 'these'
}

module.exports = class Pluralizer {
  constructor (singular, plural) {
    this.singular = singular
    this.plural = plural
  }

  pluralize (count) {
    const one = count === 1
    const keys = one ? singulars : plurals
    const noun = one ? this.singular : this.plural
    return { ...keys, count, noun }
  }
}


/***/ }),

/***/ 8266:
/***/ ((module) => {

"use strict";
/* eslint-disable */



// Extracted from node/lib/internal/fixed_queue.js

// Currently optimal queue size, tested on V8 6.0 - 6.6. Must be power of two.
const kSize = 2048;
const kMask = kSize - 1;

// The FixedQueue is implemented as a singly-linked list of fixed-size
// circular buffers. It looks something like this:
//
//  head                                                       tail
//    |                                                          |
//    v                                                          v
// +-----------+ <-----\       +-----------+ <------\         +-----------+
// |  [null]   |        \----- |   next    |         \------- |   next    |
// +-----------+               +-----------+                  +-----------+
// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |
// |   item    |               |   item    |                  |  [empty]  |
// |   item    |               |   item    |                  |  [empty]  |
// |   item    |               |   item    |                  |  [empty]  |
// |   item    |               |   item    |       bottom --> |   item    |
// |   item    |               |   item    |                  |   item    |
// |    ...    |               |    ...    |                  |    ...    |
// |   item    |               |   item    |                  |   item    |
// |   item    |               |   item    |                  |   item    |
// |  [empty]  | <-- top       |   item    |                  |   item    |
// |  [empty]  |               |   item    |                  |   item    |
// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |
// +-----------+               +-----------+                  +-----------+
//
// Or, if there is only one circular buffer, it looks something
// like either of these:
//
//  head   tail                                 head   tail
//    |     |                                     |     |
//    v     v                                     v     v
// +-----------+                               +-----------+
// |  [null]   |                               |  [null]   |
// +-----------+                               +-----------+
// |  [empty]  |                               |   item    |
// |  [empty]  |                               |   item    |
// |   item    | <-- bottom            top --> |  [empty]  |
// |   item    |                               |  [empty]  |
// |  [empty]  | <-- top            bottom --> |   item    |
// |  [empty]  |                               |   item    |
// +-----------+                               +-----------+
//
// Adding a value means moving `top` forward by one, removing means
// moving `bottom` forward by one. After reaching the end, the queue
// wraps around.
//
// When `top === bottom` the current queue is empty and when
// `top + 1 === bottom` it's full. This wastes a single space of storage
// but allows much quicker checks.

class FixedCircularBuffer {
  constructor() {
    this.bottom = 0;
    this.top = 0;
    this.list = new Array(kSize);
    this.next = null;
  }

  isEmpty() {
    return this.top === this.bottom;
  }

  isFull() {
    return ((this.top + 1) & kMask) === this.bottom;
  }

  push(data) {
    this.list[this.top] = data;
    this.top = (this.top + 1) & kMask;
  }

  shift() {
    const nextItem = this.list[this.bottom];
    if (nextItem === undefined)
      return null;
    this.list[this.bottom] = undefined;
    this.bottom = (this.bottom + 1) & kMask;
    return nextItem;
  }
}

module.exports = class FixedQueue {
  constructor() {
    this.head = this.tail = new FixedCircularBuffer();
  }

  isEmpty() {
    return this.head.isEmpty();
  }

  push(data) {
    if (this.head.isFull()) {
      // Head is full: Creates a new queue, sets the old queue's `.next` to it,
      // and sets it as the new main queue.
      this.head = this.head.next = new FixedCircularBuffer();
    }
    this.head.push(data);
  }

  shift() {
    const tail = this.tail;
    const next = tail.shift();
    if (tail.isEmpty() && tail.next !== null) {
      // If there is another queue, it forms the new tail.
      this.tail = tail.next;
    }
    return next;
  }
};


/***/ }),

/***/ 3198:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const DispatcherBase = __nccwpck_require__(4839)
const FixedQueue = __nccwpck_require__(8266)
const { kConnected, kSize, kRunning, kPending, kQueued, kBusy, kFree, kUrl, kClose, kDestroy, kDispatch } = __nccwpck_require__(2785)
const PoolStats = __nccwpck_require__(9689)

const kClients = Symbol('clients')
const kNeedDrain = Symbol('needDrain')
const kQueue = Symbol('queue')
const kClosedResolve = Symbol('closed resolve')
const kOnDrain = Symbol('onDrain')
const kOnConnect = Symbol('onConnect')
const kOnDisconnect = Symbol('onDisconnect')
const kOnConnectionError = Symbol('onConnectionError')
const kGetDispatcher = Symbol('get dispatcher')
const kAddClient = Symbol('add client')
const kRemoveClient = Symbol('remove client')
const kStats = Symbol('stats')

class PoolBase extends DispatcherBase {
  constructor () {
    super()

    this[kQueue] = new FixedQueue()
    this[kClients] = []
    this[kQueued] = 0

    const pool = this

    this[kOnDrain] = function onDrain (origin, targets) {
      const queue = pool[kQueue]

      let needDrain = false

      while (!needDrain) {
        const item = queue.shift()
        if (!item) {
          break
        }
        pool[kQueued]--
        needDrain = !this.dispatch(item.opts, item.handler)
      }

      this[kNeedDrain] = needDrain

      if (!this[kNeedDrain] && pool[kNeedDrain]) {
        pool[kNeedDrain] = false
        pool.emit('drain', origin, [pool, ...targets])
      }

      if (pool[kClosedResolve] && queue.isEmpty()) {
        Promise
          .all(pool[kClients].map(c => c.close()))
          .then(pool[kClosedResolve])
      }
    }

    this[kOnConnect] = (origin, targets) => {
      pool.emit('connect', origin, [pool, ...targets])
    }

    this[kOnDisconnect] = (origin, targets, err) => {
      pool.emit('disconnect', origin, [pool, ...targets], err)
    }

    this[kOnConnectionError] = (origin, targets, err) => {
      pool.emit('connectionError', origin, [pool, ...targets], err)
    }

    this[kStats] = new PoolStats(this)
  }

  get [kBusy] () {
    return this[kNeedDrain]
  }

  get [kConnected] () {
    return this[kClients].filter(client => client[kConnected]).length
  }

  get [kFree] () {
    return this[kClients].filter(client => client[kConnected] && !client[kNeedDrain]).length
  }

  get [kPending] () {
    let ret = this[kQueued]
    for (const { [kPending]: pending } of this[kClients]) {
      ret += pending
    }
    return ret
  }

  get [kRunning] () {
    let ret = 0
    for (const { [kRunning]: running } of this[kClients]) {
      ret += running
    }
    return ret
  }

  get [kSize] () {
    let ret = this[kQueued]
    for (const { [kSize]: size } of this[kClients]) {
      ret += size
    }
    return ret
  }

  get stats () {
    return this[kStats]
  }

  async [kClose] () {
    if (this[kQueue].isEmpty()) {
      return Promise.all(this[kClients].map(c => c.close()))
    } else {
      return new Promise((resolve) => {
        this[kClosedResolve] = resolve
      })
    }
  }

  async [kDestroy] (err) {
    while (true) {
      const item = this[kQueue].shift()
      if (!item) {
        break
      }
      item.handler.onError(err)
    }

    return Promise.all(this[kClients].map(c => c.destroy(err)))
  }

  [kDispatch] (opts, handler) {
    const dispatcher = this[kGetDispatcher]()

    if (!dispatcher) {
      this[kNeedDrain] = true
      this[kQueue].push({ opts, handler })
      this[kQueued]++
    } else if (!dispatcher.dispatch(opts, handler)) {
      dispatcher[kNeedDrain] = true
      this[kNeedDrain] = !this[kGetDispatcher]()
    }

    return !this[kNeedDrain]
  }

  [kAddClient] (client) {
    client
      .on('drain', this[kOnDrain])
      .on('connect', this[kOnConnect])
      .on('disconnect', this[kOnDisconnect])
      .on('connectionError', this[kOnConnectionError])

    this[kClients].push(client)

    if (this[kNeedDrain]) {
      process.nextTick(() => {
        if (this[kNeedDrain]) {
          this[kOnDrain](client[kUrl], [this, client])
        }
      })
    }

    return this
  }

  [kRemoveClient] (client) {
    client.close(() => {
      const idx = this[kClients].indexOf(client)
      if (idx !== -1) {
        this[kClients].splice(idx, 1)
      }
    })

    this[kNeedDrain] = this[kClients].some(dispatcher => (
      !dispatcher[kNeedDrain] &&
      dispatcher.closed !== true &&
      dispatcher.destroyed !== true
    ))
  }
}

module.exports = {
  PoolBase,
  kClients,
  kNeedDrain,
  kAddClient,
  kRemoveClient,
  kGetDispatcher
}


/***/ }),

/***/ 9689:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const { kFree, kConnected, kPending, kQueued, kRunning, kSize } = __nccwpck_require__(2785)
const kPool = Symbol('pool')

class PoolStats {
  constructor (pool) {
    this[kPool] = pool
  }

  get connected () {
    return this[kPool][kConnected]
  }

  get free () {
    return this[kPool][kFree]
  }

  get pending () {
    return this[kPool][kPending]
  }

  get queued () {
    return this[kPool][kQueued]
  }

  get running () {
    return this[kPool][kRunning]
  }

  get size () {
    return this[kPool][kSize]
  }
}

module.exports = PoolStats


/***/ }),

/***/ 4634:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const {
  PoolBase,
  kClients,
  kNeedDrain,
  kAddClient,
  kGetDispatcher
} = __nccwpck_require__(3198)
const Client = __nccwpck_require__(3598)
const {
  InvalidArgumentError
} = __nccwpck_require__(8045)
const util = __nccwpck_require__(3983)
const { kUrl, kInterceptors } = __nccwpck_require__(2785)
const buildConnector = __nccwpck_require__(2067)

const kOptions = Symbol('options')
const kConnections = Symbol('connections')
const kFactory = Symbol('factory')

function defaultFactory (origin, opts) {
  return new Client(origin, opts)
}

class Pool extends PoolBase {
  constructor (origin, {
    connections,
    factory = defaultFactory,
    connect,
    connectTimeout,
    tls,
    maxCachedSessions,
    socketPath,
    autoSelectFamily,
    autoSelectFamilyAttemptTimeout,
    allowH2,
    ...options
  } = {}) {
    super()

    if (connections != null && (!Number.isFinite(connections) || connections < 0)) {
      throw new InvalidArgumentError('invalid connections')
    }

    if (typeof factory !== 'function') {
      throw new InvalidArgumentError('factory must be a function.')
    }

    if (connect != null && typeof connect !== 'function' && typeof connect !== 'object') {
      throw new InvalidArgumentError('connect must be a function or an object')
    }

    if (typeof connect !== 'function') {
      connect = buildConnector({
        ...tls,
        maxCachedSessions,
        allowH2,
        socketPath,
        timeout: connectTimeout == null ? 10e3 : connectTimeout,
        ...(util.nodeHasAutoSelectFamily && autoSelectFamily ? { autoSelectFamily, autoSelectFamilyAttemptTimeout } : undefined),
        ...connect
      })
    }

    this[kInterceptors] = options.interceptors && options.interceptors.Pool && Array.isArray(options.interceptors.Pool)
      ? options.interceptors.Pool
      : []
    this[kConnections] = connections || null
    this[kUrl] = util.parseOrigin(origin)
    this[kOptions] = { ...util.deepClone(options), connect, allowH2 }
    this[kOptions].interceptors = options.interceptors
      ? { ...options.interceptors }
      : undefined
    this[kFactory] = factory
  }

  [kGetDispatcher] () {
    let dispatcher = this[kClients].find(dispatcher => !dispatcher[kNeedDrain])

    if (dispatcher) {
      return dispatcher
    }

    if (!this[kConnections] || this[kClients].length < this[kConnections]) {
      dispatcher = this[kFactory](this[kUrl], this[kOptions])
      this[kAddClient](dispatcher)
    }

    return dispatcher
  }
}

module.exports = Pool


/***/ }),

/***/ 7858:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { kProxy, kClose, kDestroy, kInterceptors } = __nccwpck_require__(2785)
const { URL } = __nccwpck_require__(7310)
const Agent = __nccwpck_require__(7890)
const Pool = __nccwpck_require__(4634)
const DispatcherBase = __nccwpck_require__(4839)
const { InvalidArgumentError, RequestAbortedError } = __nccwpck_require__(8045)
const buildConnector = __nccwpck_require__(2067)

const kAgent = Symbol('proxy agent')
const kClient = Symbol('proxy client')
const kProxyHeaders = Symbol('proxy headers')
const kRequestTls = Symbol('request tls settings')
const kProxyTls = Symbol('proxy tls settings')
const kConnectEndpoint = Symbol('connect endpoint function')

function defaultProtocolPort (protocol) {
  return protocol === 'https:' ? 443 : 80
}

function buildProxyOptions (opts) {
  if (typeof opts === 'string') {
    opts = { uri: opts }
  }

  if (!opts || !opts.uri) {
    throw new InvalidArgumentError('Proxy opts.uri is mandatory')
  }

  return {
    uri: opts.uri,
    protocol: opts.protocol || 'https'
  }
}

function defaultFactory (origin, opts) {
  return new Pool(origin, opts)
}

class ProxyAgent extends DispatcherBase {
  constructor (opts) {
    super(opts)
    this[kProxy] = buildProxyOptions(opts)
    this[kAgent] = new Agent(opts)
    this[kInterceptors] = opts.interceptors && opts.interceptors.ProxyAgent && Array.isArray(opts.interceptors.ProxyAgent)
      ? opts.interceptors.ProxyAgent
      : []

    if (typeof opts === 'string') {
      opts = { uri: opts }
    }

    if (!opts || !opts.uri) {
      throw new InvalidArgumentError('Proxy opts.uri is mandatory')
    }

    const { clientFactory = defaultFactory } = opts

    if (typeof clientFactory !== 'function') {
      throw new InvalidArgumentError('Proxy opts.clientFactory must be a function.')
    }

    this[kRequestTls] = opts.requestTls
    this[kProxyTls] = opts.proxyTls
    this[kProxyHeaders] = opts.headers || {}

    if (opts.auth && opts.token) {
      throw new InvalidArgumentError('opts.auth cannot be used in combination with opts.token')
    } else if (opts.auth) {
      /* @deprecated in favour of opts.token */
      this[kProxyHeaders]['proxy-authorization'] = `Basic ${opts.auth}`
    } else if (opts.token) {
      this[kProxyHeaders]['proxy-authorization'] = opts.token
    }

    const resolvedUrl = new URL(opts.uri)
    const { origin, port, host } = resolvedUrl

    const connect = buildConnector({ ...opts.proxyTls })
    this[kConnectEndpoint] = buildConnector({ ...opts.requestTls })
    this[kClient] = clientFactory(resolvedUrl, { connect })
    this[kAgent] = new Agent({
      ...opts,
      connect: async (opts, callback) => {
        let requestedHost = opts.host
        if (!opts.port) {
          requestedHost += `:${defaultProtocolPort(opts.protocol)}`
        }
        try {
          const { socket, statusCode } = await this[kClient].connect({
            origin,
            port,
            path: requestedHost,
            signal: opts.signal,
            headers: {
              ...this[kProxyHeaders],
              host
            }
          })
          if (statusCode !== 200) {
            socket.on('error', () => {}).destroy()
            callback(new RequestAbortedError('Proxy response !== 200 when HTTP Tunneling'))
          }
          if (opts.protocol !== 'https:') {
            callback(null, socket)
            return
          }
          let servername
          if (this[kRequestTls]) {
            servername = this[kRequestTls].servername
          } else {
            servername = opts.servername
          }
          this[kConnectEndpoint]({ ...opts, servername, httpSocket: socket }, callback)
        } catch (err) {
          callback(err)
        }
      }
    })
  }

  dispatch (opts, handler) {
    const { host } = new URL(opts.origin)
    const headers = buildHeaders(opts.headers)
    throwIfProxyAuthIsSent(headers)
    return this[kAgent].dispatch(
      {
        ...opts,
        headers: {
          ...headers,
          host
        }
      },
      handler
    )
  }

  async [kClose] () {
    await this[kAgent].close()
    await this[kClient].close()
  }

  async [kDestroy] () {
    await this[kAgent].destroy()
    await this[kClient].destroy()
  }
}

/**
 * @param {string[] | Record<string, string>} headers
 * @returns {Record<string, string>}
 */
function buildHeaders (headers) {
  // When using undici.fetch, the headers list is stored
  // as an array.
  if (Array.isArray(headers)) {
    /** @type {Record<string, string>} */
    const headersPair = {}

    for (let i = 0; i < headers.length; i += 2) {
      headersPair[headers[i]] = headers[i + 1]
    }

    return headersPair
  }

  return headers
}

/**
 * @param {Record<string, string>} headers
 *
 * Previous versions of ProxyAgent suggests the Proxy-Authorization in request headers
 * Nevertheless, it was changed and to avoid a security vulnerability by end users
 * this check was created.
 * It should be removed in the next major version for performance reasons
 */
function throwIfProxyAuthIsSent (headers) {
  const existProxyAuth = headers && Object.keys(headers)
    .find((key) => key.toLowerCase() === 'proxy-authorization')
  if (existProxyAuth) {
    throw new InvalidArgumentError('Proxy-Authorization should be sent in ProxyAgent constructor')
  }
}

module.exports = ProxyAgent


/***/ }),

/***/ 9459:
/***/ ((module) => {

"use strict";


let fastNow = Date.now()
let fastNowTimeout

const fastTimers = []

function onTimeout () {
  fastNow = Date.now()

  let len = fastTimers.length
  let idx = 0
  while (idx < len) {
    const timer = fastTimers[idx]

    if (timer.state === 0) {
      timer.state = fastNow + timer.delay
    } else if (timer.state > 0 && fastNow >= timer.state) {
      timer.state = -1
      timer.callback(timer.opaque)
    }

    if (timer.state === -1) {
      timer.state = -2
      if (idx !== len - 1) {
        fastTimers[idx] = fastTimers.pop()
      } else {
        fastTimers.pop()
      }
      len -= 1
    } else {
      idx += 1
    }
  }

  if (fastTimers.length > 0) {
    refreshTimeout()
  }
}

function refreshTimeout () {
  if (fastNowTimeout && fastNowTimeout.refresh) {
    fastNowTimeout.refresh()
  } else {
    clearTimeout(fastNowTimeout)
    fastNowTimeout = setTimeout(onTimeout, 1e3)
    if (fastNowTimeout.unref) {
      fastNowTimeout.unref()
    }
  }
}

class Timeout {
  constructor (callback, delay, opaque) {
    this.callback = callback
    this.delay = delay
    this.opaque = opaque

    //  -2 not in timer list
    //  -1 in timer list but inactive
    //   0 in timer list waiting for time
    // > 0 in timer list waiting for time to expire
    this.state = -2

    this.refresh()
  }

  refresh () {
    if (this.state === -2) {
      fastTimers.push(this)
      if (!fastNowTimeout || fastTimers.length === 1) {
        refreshTimeout()
      }
    }

    this.state = 0
  }

  clear () {
    this.state = -1
  }
}

module.exports = {
  setTimeout (callback, delay, opaque) {
    return delay < 1e3
      ? setTimeout(callback, delay, opaque)
      : new Timeout(callback, delay, opaque)
  },
  clearTimeout (timeout) {
    if (timeout instanceof Timeout) {
      timeout.clear()
    } else {
      clearTimeout(timeout)
    }
  }
}


/***/ }),

/***/ 5354:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const diagnosticsChannel = __nccwpck_require__(7643)
const { uid, states } = __nccwpck_require__(9188)
const {
  kReadyState,
  kSentClose,
  kByteParser,
  kReceivedClose
} = __nccwpck_require__(7578)
const { fireEvent, failWebsocketConnection } = __nccwpck_require__(5515)
const { CloseEvent } = __nccwpck_require__(2611)
const { makeRequest } = __nccwpck_require__(8359)
const { fetching } = __nccwpck_require__(4881)
const { Headers } = __nccwpck_require__(554)
const { getGlobalDispatcher } = __nccwpck_require__(1892)
const { kHeadersList } = __nccwpck_require__(2785)

const channels = {}
channels.open = diagnosticsChannel.channel('undici:websocket:open')
channels.close = diagnosticsChannel.channel('undici:websocket:close')
channels.socketError = diagnosticsChannel.channel('undici:websocket:socket_error')

/** @type {import('crypto')} */
let crypto
try {
  crypto = __nccwpck_require__(6113)
} catch {

}

/**
 * @see https://websockets.spec.whatwg.org/#concept-websocket-establish
 * @param {URL} url
 * @param {string|string[]} protocols
 * @param {import('./websocket').WebSocket} ws
 * @param {(response: any) => void} onEstablish
 * @param {Partial<import('../../types/websocket').WebSocketInit>} options
 */
function establishWebSocketConnection (url, protocols, ws, onEstablish, options) {
  // 1. Let requestURL be a copy of url, with its scheme set to "http", if url’s
  //    scheme is "ws", and to "https" otherwise.
  const requestURL = url

  requestURL.protocol = url.protocol === 'ws:' ? 'http:' : 'https:'

  // 2. Let request be a new request, whose URL is requestURL, client is client,
  //    service-workers mode is "none", referrer is "no-referrer", mode is
  //    "websocket", credentials mode is "include", cache mode is "no-store" ,
  //    and redirect mode is "error".
  const request = makeRequest({
    urlList: [requestURL],
    serviceWorkers: 'none',
    referrer: 'no-referrer',
    mode: 'websocket',
    credentials: 'include',
    cache: 'no-store',
    redirect: 'error'
  })

  // Note: undici extension, allow setting custom headers.
  if (options.headers) {
    const headersList = new Headers(options.headers)[kHeadersList]

    request.headersList = headersList
  }

  // 3. Append (`Upgrade`, `websocket`) to request’s header list.
  // 4. Append (`Connection`, `Upgrade`) to request’s header list.
  // Note: both of these are handled by undici currently.
  // https://github.com/nodejs/undici/blob/68c269c4144c446f3f1220951338daef4a6b5ec4/lib/client.js#L1397

  // 5. Let keyValue be a nonce consisting of a randomly selected
  //    16-byte value that has been forgiving-base64-encoded and
  //    isomorphic encoded.
  const keyValue = crypto.randomBytes(16).toString('base64')

  // 6. Append (`Sec-WebSocket-Key`, keyValue) to request’s
  //    header list.
  request.headersList.append('sec-websocket-key', keyValue)

  // 7. Append (`Sec-WebSocket-Version`, `13`) to request’s
  //    header list.
  request.headersList.append('sec-websocket-version', '13')

  // 8. For each protocol in protocols, combine
  //    (`Sec-WebSocket-Protocol`, protocol) in request’s header
  //    list.
  for (const protocol of protocols) {
    request.headersList.append('sec-websocket-protocol', protocol)
  }

  // 9. Let permessageDeflate be a user-agent defined
  //    "permessage-deflate" extension header value.
  // https://github.com/mozilla/gecko-dev/blob/ce78234f5e653a5d3916813ff990f053510227bc/netwerk/protocol/websocket/WebSocketChannel.cpp#L2673
  // TODO: enable once permessage-deflate is supported
  const permessageDeflate = '' // 'permessage-deflate; 15'

  // 10. Append (`Sec-WebSocket-Extensions`, permessageDeflate) to
  //     request’s header list.
  // request.headersList.append('sec-websocket-extensions', permessageDeflate)

  // 11. Fetch request with useParallelQueue set to true, and
  //     processResponse given response being these steps:
  const controller = fetching({
    request,
    useParallelQueue: true,
    dispatcher: options.dispatcher ?? getGlobalDispatcher(),
    processResponse (response) {
      // 1. If response is a network error or its status is not 101,
      //    fail the WebSocket connection.
      if (response.type === 'error' || response.status !== 101) {
        failWebsocketConnection(ws, 'Received network error or non-101 status code.')
        return
      }

      // 2. If protocols is not the empty list and extracting header
      //    list values given `Sec-WebSocket-Protocol` and response’s
      //    header list results in null, failure, or the empty byte
      //    sequence, then fail the WebSocket connection.
      if (protocols.length !== 0 && !response.headersList.get('Sec-WebSocket-Protocol')) {
        failWebsocketConnection(ws, 'Server did not respond with sent protocols.')
        return
      }

      // 3. Follow the requirements stated step 2 to step 6, inclusive,
      //    of the last set of steps in section 4.1 of The WebSocket
      //    Protocol to validate response. This either results in fail
      //    the WebSocket connection or the WebSocket connection is
      //    established.

      // 2. If the response lacks an |Upgrade| header field or the |Upgrade|
      //    header field contains a value that is not an ASCII case-
      //    insensitive match for the value "websocket", the client MUST
      //    _Fail the WebSocket Connection_.
      if (response.headersList.get('Upgrade')?.toLowerCase() !== 'websocket') {
        failWebsocketConnection(ws, 'Server did not set Upgrade header to "websocket".')
        return
      }

      // 3. If the response lacks a |Connection| header field or the
      //    |Connection| header field doesn't contain a token that is an
      //    ASCII case-insensitive match for the value "Upgrade", the client
      //    MUST _Fail the WebSocket Connection_.
      if (response.headersList.get('Connection')?.toLowerCase() !== 'upgrade') {
        failWebsocketConnection(ws, 'Server did not set Connection header to "upgrade".')
        return
      }

      // 4. If the response lacks a |Sec-WebSocket-Accept| header field or
      //    the |Sec-WebSocket-Accept| contains a value other than the
      //    base64-encoded SHA-1 of the concatenation of the |Sec-WebSocket-
      //    Key| (as a string, not base64-decoded) with the string "258EAFA5-
      //    E914-47DA-95CA-C5AB0DC85B11" but ignoring any leading and
      //    trailing whitespace, the client MUST _Fail the WebSocket
      //    Connection_.
      const secWSAccept = response.headersList.get('Sec-WebSocket-Accept')
      const digest = crypto.createHash('sha1').update(keyValue + uid).digest('base64')
      if (secWSAccept !== digest) {
        failWebsocketConnection(ws, 'Incorrect hash received in Sec-WebSocket-Accept header.')
        return
      }

      // 5. If the response includes a |Sec-WebSocket-Extensions| header
      //    field and this header field indicates the use of an extension
      //    that was not present in the client's handshake (the server has
      //    indicated an extension not requested by the client), the client
      //    MUST _Fail the WebSocket Connection_.  (The parsing of this
      //    header field to determine which extensions are requested is
      //    discussed in Section 9.1.)
      const secExtension = response.headersList.get('Sec-WebSocket-Extensions')

      if (secExtension !== null && secExtension !== permessageDeflate) {
        failWebsocketConnection(ws, 'Received different permessage-deflate than the one set.')
        return
      }

      // 6. If the response includes a |Sec-WebSocket-Protocol| header field
      //    and this header field indicates the use of a subprotocol that was
      //    not present in the client's handshake (the server has indicated a
      //    subprotocol not requested by the client), the client MUST _Fail
      //    the WebSocket Connection_.
      const secProtocol = response.headersList.get('Sec-WebSocket-Protocol')

      if (secProtocol !== null && secProtocol !== request.headersList.get('Sec-WebSocket-Protocol')) {
        failWebsocketConnection(ws, 'Protocol was not set in the opening handshake.')
        return
      }

      response.socket.on('data', onSocketData)
      response.socket.on('close', onSocketClose)
      response.socket.on('error', onSocketError)

      if (channels.open.hasSubscribers) {
        channels.open.publish({
          address: response.socket.address(),
          protocol: secProtocol,
          extensions: secExtension
        })
      }

      onEstablish(response)
    }
  })

  return controller
}

/**
 * @param {Buffer} chunk
 */
function onSocketData (chunk) {
  if (!this.ws[kByteParser].write(chunk)) {
    this.pause()
  }
}

/**
 * @see https://websockets.spec.whatwg.org/#feedback-from-the-protocol
 * @see https://datatracker.ietf.org/doc/html/rfc6455#section-7.1.4
 */
function onSocketClose () {
  const { ws } = this

  // If the TCP connection was closed after the
  // WebSocket closing handshake was completed, the WebSocket connection
  // is said to have been closed _cleanly_.
  const wasClean = ws[kSentClose] && ws[kReceivedClose]

  let code = 1005
  let reason = ''

  const result = ws[kByteParser].closingInfo

  if (result) {
    code = result.code ?? 1005
    reason = result.reason
  } else if (!ws[kSentClose]) {
    // If _The WebSocket
    // Connection is Closed_ and no Close control frame was received by the
    // endpoint (such as could occur if the underlying transport connection
    // is lost), _The WebSocket Connection Close Code_ is considered to be
    // 1006.
    code = 1006
  }

  // 1. Change the ready state to CLOSED (3).
  ws[kReadyState] = states.CLOSED

  // 2. If the user agent was required to fail the WebSocket
  //    connection, or if the WebSocket connection was closed
  //    after being flagged as full, fire an event named error
  //    at the WebSocket object.
  // TODO

  // 3. Fire an event named close at the WebSocket object,
  //    using CloseEvent, with the wasClean attribute
  //    initialized to true if the connection closed cleanly
  //    and false otherwise, the code attribute initialized to
  //    the WebSocket connection close code, and the reason
  //    attribute initialized to the result of applying UTF-8
  //    decode without BOM to the WebSocket connection close
  //    reason.
  fireEvent('close', ws, CloseEvent, {
    wasClean, code, reason
  })

  if (channels.close.hasSubscribers) {
    channels.close.publish({
      websocket: ws,
      code,
      reason
    })
  }
}

function onSocketError (error) {
  const { ws } = this

  ws[kReadyState] = states.CLOSING

  if (channels.socketError.hasSubscribers) {
    channels.socketError.publish(error)
  }

  this.destroy()
}

module.exports = {
  establishWebSocketConnection
}


/***/ }),

/***/ 9188:
/***/ ((module) => {

"use strict";


// This is a Globally Unique Identifier unique used
// to validate that the endpoint accepts websocket
// connections.
// See https://www.rfc-editor.org/rfc/rfc6455.html#section-1.3
const uid = '258EAFA5-E914-47DA-95CA-C5AB0DC85B11'

/** @type {PropertyDescriptor} */
const staticPropertyDescriptors = {
  enumerable: true,
  writable: false,
  configurable: false
}

const states = {
  CONNECTING: 0,
  OPEN: 1,
  CLOSING: 2,
  CLOSED: 3
}

const opcodes = {
  CONTINUATION: 0x0,
  TEXT: 0x1,
  BINARY: 0x2,
  CLOSE: 0x8,
  PING: 0x9,
  PONG: 0xA
}

const maxUnsigned16Bit = 2 ** 16 - 1 // 65535

const parserStates = {
  INFO: 0,
  PAYLOADLENGTH_16: 2,
  PAYLOADLENGTH_64: 3,
  READ_DATA: 4
}

const emptyBuffer = Buffer.allocUnsafe(0)

module.exports = {
  uid,
  staticPropertyDescriptors,
  states,
  opcodes,
  maxUnsigned16Bit,
  parserStates,
  emptyBuffer
}


/***/ }),

/***/ 2611:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { webidl } = __nccwpck_require__(1744)
const { kEnumerableProperty } = __nccwpck_require__(3983)
const { MessagePort } = __nccwpck_require__(1267)

/**
 * @see https://html.spec.whatwg.org/multipage/comms.html#messageevent
 */
class MessageEvent extends Event {
  #eventInit

  constructor (type, eventInitDict = {}) {
    webidl.argumentLengthCheck(arguments, 1, { header: 'MessageEvent constructor' })

    type = webidl.converters.DOMString(type)
    eventInitDict = webidl.converters.MessageEventInit(eventInitDict)

    super(type, eventInitDict)

    this.#eventInit = eventInitDict
  }

  get data () {
    webidl.brandCheck(this, MessageEvent)

    return this.#eventInit.data
  }

  get origin () {
    webidl.brandCheck(this, MessageEvent)

    return this.#eventInit.origin
  }

  get lastEventId () {
    webidl.brandCheck(this, MessageEvent)

    return this.#eventInit.lastEventId
  }

  get source () {
    webidl.brandCheck(this, MessageEvent)

    return this.#eventInit.source
  }

  get ports () {
    webidl.brandCheck(this, MessageEvent)

    if (!Object.isFrozen(this.#eventInit.ports)) {
      Object.freeze(this.#eventInit.ports)
    }

    return this.#eventInit.ports
  }

  initMessageEvent (
    type,
    bubbles = false,
    cancelable = false,
    data = null,
    origin = '',
    lastEventId = '',
    source = null,
    ports = []
  ) {
    webidl.brandCheck(this, MessageEvent)

    webidl.argumentLengthCheck(arguments, 1, { header: 'MessageEvent.initMessageEvent' })

    return new MessageEvent(type, {
      bubbles, cancelable, data, origin, lastEventId, source, ports
    })
  }
}

/**
 * @see https://websockets.spec.whatwg.org/#the-closeevent-interface
 */
class CloseEvent extends Event {
  #eventInit

  constructor (type, eventInitDict = {}) {
    webidl.argumentLengthCheck(arguments, 1, { header: 'CloseEvent constructor' })

    type = webidl.converters.DOMString(type)
    eventInitDict = webidl.converters.CloseEventInit(eventInitDict)

    super(type, eventInitDict)

    this.#eventInit = eventInitDict
  }

  get wasClean () {
    webidl.brandCheck(this, CloseEvent)

    return this.#eventInit.wasClean
  }

  get code () {
    webidl.brandCheck(this, CloseEvent)

    return this.#eventInit.code
  }

  get reason () {
    webidl.brandCheck(this, CloseEvent)

    return this.#eventInit.reason
  }
}

// https://html.spec.whatwg.org/multipage/webappapis.html#the-errorevent-interface
class ErrorEvent extends Event {
  #eventInit

  constructor (type, eventInitDict) {
    webidl.argumentLengthCheck(arguments, 1, { header: 'ErrorEvent constructor' })

    super(type, eventInitDict)

    type = webidl.converters.DOMString(type)
    eventInitDict = webidl.converters.ErrorEventInit(eventInitDict ?? {})

    this.#eventInit = eventInitDict
  }

  get message () {
    webidl.brandCheck(this, ErrorEvent)

    return this.#eventInit.message
  }

  get filename () {
    webidl.brandCheck(this, ErrorEvent)

    return this.#eventInit.filename
  }

  get lineno () {
    webidl.brandCheck(this, ErrorEvent)

    return this.#eventInit.lineno
  }

  get colno () {
    webidl.brandCheck(this, ErrorEvent)

    return this.#eventInit.colno
  }

  get error () {
    webidl.brandCheck(this, ErrorEvent)

    return this.#eventInit.error
  }
}

Object.defineProperties(MessageEvent.prototype, {
  [Symbol.toStringTag]: {
    value: 'MessageEvent',
    configurable: true
  },
  data: kEnumerableProperty,
  origin: kEnumerableProperty,
  lastEventId: kEnumerableProperty,
  source: kEnumerableProperty,
  ports: kEnumerableProperty,
  initMessageEvent: kEnumerableProperty
})

Object.defineProperties(CloseEvent.prototype, {
  [Symbol.toStringTag]: {
    value: 'CloseEvent',
    configurable: true
  },
  reason: kEnumerableProperty,
  code: kEnumerableProperty,
  wasClean: kEnumerableProperty
})

Object.defineProperties(ErrorEvent.prototype, {
  [Symbol.toStringTag]: {
    value: 'ErrorEvent',
    configurable: true
  },
  message: kEnumerableProperty,
  filename: kEnumerableProperty,
  lineno: kEnumerableProperty,
  colno: kEnumerableProperty,
  error: kEnumerableProperty
})

webidl.converters.MessagePort = webidl.interfaceConverter(MessagePort)

webidl.converters['sequence<MessagePort>'] = webidl.sequenceConverter(
  webidl.converters.MessagePort
)

const eventInit = [
  {
    key: 'bubbles',
    converter: webidl.converters.boolean,
    defaultValue: false
  },
  {
    key: 'cancelable',
    converter: webidl.converters.boolean,
    defaultValue: false
  },
  {
    key: 'composed',
    converter: webidl.converters.boolean,
    defaultValue: false
  }
]

webidl.converters.MessageEventInit = webidl.dictionaryConverter([
  ...eventInit,
  {
    key: 'data',
    converter: webidl.converters.any,
    defaultValue: null
  },
  {
    key: 'origin',
    converter: webidl.converters.USVString,
    defaultValue: ''
  },
  {
    key: 'lastEventId',
    converter: webidl.converters.DOMString,
    defaultValue: ''
  },
  {
    key: 'source',
    // Node doesn't implement WindowProxy or ServiceWorker, so the only
    // valid value for source is a MessagePort.
    converter: webidl.nullableConverter(webidl.converters.MessagePort),
    defaultValue: null
  },
  {
    key: 'ports',
    converter: webidl.converters['sequence<MessagePort>'],
    get defaultValue () {
      return []
    }
  }
])

webidl.converters.CloseEventInit = webidl.dictionaryConverter([
  ...eventInit,
  {
    key: 'wasClean',
    converter: webidl.converters.boolean,
    defaultValue: false
  },
  {
    key: 'code',
    converter: webidl.converters['unsigned short'],
    defaultValue: 0
  },
  {
    key: 'reason',
    converter: webidl.converters.USVString,
    defaultValue: ''
  }
])

webidl.converters.ErrorEventInit = webidl.dictionaryConverter([
  ...eventInit,
  {
    key: 'message',
    converter: webidl.converters.DOMString,
    defaultValue: ''
  },
  {
    key: 'filename',
    converter: webidl.converters.USVString,
    defaultValue: ''
  },
  {
    key: 'lineno',
    converter: webidl.converters['unsigned long'],
    defaultValue: 0
  },
  {
    key: 'colno',
    converter: webidl.converters['unsigned long'],
    defaultValue: 0
  },
  {
    key: 'error',
    converter: webidl.converters.any
  }
])

module.exports = {
  MessageEvent,
  CloseEvent,
  ErrorEvent
}


/***/ }),

/***/ 5444:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { maxUnsigned16Bit } = __nccwpck_require__(9188)

/** @type {import('crypto')} */
let crypto
try {
  crypto = __nccwpck_require__(6113)
} catch {

}

class WebsocketFrameSend {
  /**
   * @param {Buffer|undefined} data
   */
  constructor (data) {
    this.frameData = data
    this.maskKey = crypto.randomBytes(4)
  }

  createFrame (opcode) {
    const bodyLength = this.frameData?.byteLength ?? 0

    /** @type {number} */
    let payloadLength = bodyLength // 0-125
    let offset = 6

    if (bodyLength > maxUnsigned16Bit) {
      offset += 8 // payload length is next 8 bytes
      payloadLength = 127
    } else if (bodyLength > 125) {
      offset += 2 // payload length is next 2 bytes
      payloadLength = 126
    }

    const buffer = Buffer.allocUnsafe(bodyLength + offset)

    // Clear first 2 bytes, everything else is overwritten
    buffer[0] = buffer[1] = 0
    buffer[0] |= 0x80 // FIN
    buffer[0] = (buffer[0] & 0xF0) + opcode // opcode

    /*! ws. MIT License. Einar Otto Stangvik <einaros@gmail.com> */
    buffer[offset - 4] = this.maskKey[0]
    buffer[offset - 3] = this.maskKey[1]
    buffer[offset - 2] = this.maskKey[2]
    buffer[offset - 1] = this.maskKey[3]

    buffer[1] = payloadLength

    if (payloadLength === 126) {
      buffer.writeUInt16BE(bodyLength, 2)
    } else if (payloadLength === 127) {
      // Clear extended payload length
      buffer[2] = buffer[3] = 0
      buffer.writeUIntBE(bodyLength, 4, 6)
    }

    buffer[1] |= 0x80 // MASK

    // mask body
    for (let i = 0; i < bodyLength; i++) {
      buffer[offset + i] = this.frameData[i] ^ this.maskKey[i % 4]
    }

    return buffer
  }
}

module.exports = {
  WebsocketFrameSend
}


/***/ }),

/***/ 1688:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { Writable } = __nccwpck_require__(2781)
const diagnosticsChannel = __nccwpck_require__(7643)
const { parserStates, opcodes, states, emptyBuffer } = __nccwpck_require__(9188)
const { kReadyState, kSentClose, kResponse, kReceivedClose } = __nccwpck_require__(7578)
const { isValidStatusCode, failWebsocketConnection, websocketMessageReceived } = __nccwpck_require__(5515)
const { WebsocketFrameSend } = __nccwpck_require__(5444)

// This code was influenced by ws released under the MIT license.
// Copyright (c) 2011 Einar Otto Stangvik <einaros@gmail.com>
// Copyright (c) 2013 Arnout Kazemier and contributors
// Copyright (c) 2016 Luigi Pinca and contributors

const channels = {}
channels.ping = diagnosticsChannel.channel('undici:websocket:ping')
channels.pong = diagnosticsChannel.channel('undici:websocket:pong')

class ByteParser extends Writable {
  #buffers = []
  #byteOffset = 0

  #state = parserStates.INFO

  #info = {}
  #fragments = []

  constructor (ws) {
    super()

    this.ws = ws
  }

  /**
   * @param {Buffer} chunk
   * @param {() => void} callback
   */
  _write (chunk, _, callback) {
    this.#buffers.push(chunk)
    this.#byteOffset += chunk.length

    this.run(callback)
  }

  /**
   * Runs whenever a new chunk is received.
   * Callback is called whenever there are no more chunks buffering,
   * or not enough bytes are buffered to parse.
   */
  run (callback) {
    while (true) {
      if (this.#state === parserStates.INFO) {
        // If there aren't enough bytes to parse the payload length, etc.
        if (this.#byteOffset < 2) {
          return callback()
        }

        const buffer = this.consume(2)

        this.#info.fin = (buffer[0] & 0x80) !== 0
        this.#info.opcode = buffer[0] & 0x0F

        // If we receive a fragmented message, we use the type of the first
        // frame to parse the full message as binary/text, when it's terminated
        this.#info.originalOpcode ??= this.#info.opcode

        this.#info.fragmented = !this.#info.fin && this.#info.opcode !== opcodes.CONTINUATION

        if (this.#info.fragmented && this.#info.opcode !== opcodes.BINARY && this.#info.opcode !== opcodes.TEXT) {
          // Only text and binary frames can be fragmented
          failWebsocketConnection(this.ws, 'Invalid frame type was fragmented.')
          return
        }

        const payloadLength = buffer[1] & 0x7F

        if (payloadLength <= 125) {
          this.#info.payloadLength = payloadLength
          this.#state = parserStates.READ_DATA
        } else if (payloadLength === 126) {
          this.#state = parserStates.PAYLOADLENGTH_16
        } else if (payloadLength === 127) {
          this.#state = parserStates.PAYLOADLENGTH_64
        }

        if (this.#info.fragmented && payloadLength > 125) {
          // A fragmented frame can't be fragmented itself
          failWebsocketConnection(this.ws, 'Fragmented frame exceeded 125 bytes.')
          return
        } else if (
          (this.#info.opcode === opcodes.PING ||
            this.#info.opcode === opcodes.PONG ||
            this.#info.opcode === opcodes.CLOSE) &&
          payloadLength > 125
        ) {
          // Control frames can have a payload length of 125 bytes MAX
          failWebsocketConnection(this.ws, 'Payload length for control frame exceeded 125 bytes.')
          return
        } else if (this.#info.opcode === opcodes.CLOSE) {
          if (payloadLength === 1) {
            failWebsocketConnection(this.ws, 'Received close frame with a 1-byte body.')
            return
          }

          const body = this.consume(payloadLength)

          this.#info.closeInfo = this.parseCloseBody(false, body)

          if (!this.ws[kSentClose]) {
            // If an endpoint receives a Close frame and did not previously send a
            // Close frame, the endpoint MUST send a Close frame in response.  (When
            // sending a Close frame in response, the endpoint typically echos the
            // status code it received.)
            const body = Buffer.allocUnsafe(2)
            body.writeUInt16BE(this.#info.closeInfo.code, 0)
            const closeFrame = new WebsocketFrameSend(body)

            this.ws[kResponse].socket.write(
              closeFrame.createFrame(opcodes.CLOSE),
              (err) => {
                if (!err) {
                  this.ws[kSentClose] = true
                }
              }
            )
          }

          // Upon either sending or receiving a Close control frame, it is said
          // that _The WebSocket Closing Handshake is Started_ and that the
          // WebSocket connection is in the CLOSING state.
          this.ws[kReadyState] = states.CLOSING
          this.ws[kReceivedClose] = true

          this.end()

          return
        } else if (this.#info.opcode === opcodes.PING) {
          // Upon receipt of a Ping frame, an endpoint MUST send a Pong frame in
          // response, unless it already received a Close frame.
          // A Pong frame sent in response to a Ping frame must have identical
          // "Application data"

          const body = this.consume(payloadLength)

          if (!this.ws[kReceivedClose]) {
            const frame = new WebsocketFrameSend(body)

            this.ws[kResponse].socket.write(frame.createFrame(opcodes.PONG))

            if (channels.ping.hasSubscribers) {
              channels.ping.publish({
                payload: body
              })
            }
          }

          this.#state = parserStates.INFO

          if (this.#byteOffset > 0) {
            continue
          } else {
            callback()
            return
          }
        } else if (this.#info.opcode === opcodes.PONG) {
          // A Pong frame MAY be sent unsolicited.  This serves as a
          // unidirectional heartbeat.  A response to an unsolicited Pong frame is
          // not expected.

          const body = this.consume(payloadLength)

          if (channels.pong.hasSubscribers) {
            channels.pong.publish({
              payload: body
            })
          }

          if (this.#byteOffset > 0) {
            continue
          } else {
            callback()
            return
          }
        }
      } else if (this.#state === parserStates.PAYLOADLENGTH_16) {
        if (this.#byteOffset < 2) {
          return callback()
        }

        const buffer = this.consume(2)

        this.#info.payloadLength = buffer.readUInt16BE(0)
        this.#state = parserStates.READ_DATA
      } else if (this.#state === parserStates.PAYLOADLENGTH_64) {
        if (this.#byteOffset < 8) {
          return callback()
        }

        const buffer = this.consume(8)
        const upper = buffer.readUInt32BE(0)

        // 2^31 is the maxinimum bytes an arraybuffer can contain
        // on 32-bit systems. Although, on 64-bit systems, this is
        // 2^53-1 bytes.
        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Invalid_array_length
        // https://source.chromium.org/chromium/chromium/src/+/main:v8/src/common/globals.h;drc=1946212ac0100668f14eb9e2843bdd846e510a1e;bpv=1;bpt=1;l=1275
        // https://source.chromium.org/chromium/chromium/src/+/main:v8/src/objects/js-array-buffer.h;l=34;drc=1946212ac0100668f14eb9e2843bdd846e510a1e
        if (upper > 2 ** 31 - 1) {
          failWebsocketConnection(this.ws, 'Received payload length > 2^31 bytes.')
          return
        }

        const lower = buffer.readUInt32BE(4)

        this.#info.payloadLength = (upper << 8) + lower
        this.#state = parserStates.READ_DATA
      } else if (this.#state === parserStates.READ_DATA) {
        if (this.#byteOffset < this.#info.payloadLength) {
          // If there is still more data in this chunk that needs to be read
          return callback()
        } else if (this.#byteOffset >= this.#info.payloadLength) {
          // If the server sent multiple frames in a single chunk

          const body = this.consume(this.#info.payloadLength)

          this.#fragments.push(body)

          // If the frame is unfragmented, or a fragmented frame was terminated,
          // a message was received
          if (!this.#info.fragmented || (this.#info.fin && this.#info.opcode === opcodes.CONTINUATION)) {
            const fullMessage = Buffer.concat(this.#fragments)

            websocketMessageReceived(this.ws, this.#info.originalOpcode, fullMessage)

            this.#info = {}
            this.#fragments.length = 0
          }

          this.#state = parserStates.INFO
        }
      }

      if (this.#byteOffset > 0) {
        continue
      } else {
        callback()
        break
      }
    }
  }

  /**
   * Take n bytes from the buffered Buffers
   * @param {number} n
   * @returns {Buffer|null}
   */
  consume (n) {
    if (n > this.#byteOffset) {
      return null
    } else if (n === 0) {
      return emptyBuffer
    }

    if (this.#buffers[0].length === n) {
      this.#byteOffset -= this.#buffers[0].length
      return this.#buffers.shift()
    }

    const buffer = Buffer.allocUnsafe(n)
    let offset = 0

    while (offset !== n) {
      const next = this.#buffers[0]
      const { length } = next

      if (length + offset === n) {
        buffer.set(this.#buffers.shift(), offset)
        break
      } else if (length + offset > n) {
        buffer.set(next.subarray(0, n - offset), offset)
        this.#buffers[0] = next.subarray(n - offset)
        break
      } else {
        buffer.set(this.#buffers.shift(), offset)
        offset += next.length
      }
    }

    this.#byteOffset -= n

    return buffer
  }

  parseCloseBody (onlyCode, data) {
    // https://datatracker.ietf.org/doc/html/rfc6455#section-7.1.5
    /** @type {number|undefined} */
    let code

    if (data.length >= 2) {
      // _The WebSocket Connection Close Code_ is
      // defined as the status code (Section 7.4) contained in the first Close
      // control frame received by the application
      code = data.readUInt16BE(0)
    }

    if (onlyCode) {
      if (!isValidStatusCode(code)) {
        return null
      }

      return { code }
    }

    // https://datatracker.ietf.org/doc/html/rfc6455#section-7.1.6
    /** @type {Buffer} */
    let reason = data.subarray(2)

    // Remove BOM
    if (reason[0] === 0xEF && reason[1] === 0xBB && reason[2] === 0xBF) {
      reason = reason.subarray(3)
    }

    if (code !== undefined && !isValidStatusCode(code)) {
      return null
    }

    try {
      // TODO: optimize this
      reason = new TextDecoder('utf-8', { fatal: true }).decode(reason)
    } catch {
      return null
    }

    return { code, reason }
  }

  get closingInfo () {
    return this.#info.closeInfo
  }
}

module.exports = {
  ByteParser
}


/***/ }),

/***/ 7578:
/***/ ((module) => {

"use strict";


module.exports = {
  kWebSocketURL: Symbol('url'),
  kReadyState: Symbol('ready state'),
  kController: Symbol('controller'),
  kResponse: Symbol('response'),
  kBinaryType: Symbol('binary type'),
  kSentClose: Symbol('sent close'),
  kReceivedClose: Symbol('received close'),
  kByteParser: Symbol('byte parser')
}


/***/ }),

/***/ 5515:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { kReadyState, kController, kResponse, kBinaryType, kWebSocketURL } = __nccwpck_require__(7578)
const { states, opcodes } = __nccwpck_require__(9188)
const { MessageEvent, ErrorEvent } = __nccwpck_require__(2611)

/* globals Blob */

/**
 * @param {import('./websocket').WebSocket} ws
 */
function isEstablished (ws) {
  // If the server's response is validated as provided for above, it is
  // said that _The WebSocket Connection is Established_ and that the
  // WebSocket Connection is in the OPEN state.
  return ws[kReadyState] === states.OPEN
}

/**
 * @param {import('./websocket').WebSocket} ws
 */
function isClosing (ws) {
  // Upon either sending or receiving a Close control frame, it is said
  // that _The WebSocket Closing Handshake is Started_ and that the
  // WebSocket connection is in the CLOSING state.
  return ws[kReadyState] === states.CLOSING
}

/**
 * @param {import('./websocket').WebSocket} ws
 */
function isClosed (ws) {
  return ws[kReadyState] === states.CLOSED
}

/**
 * @see https://dom.spec.whatwg.org/#concept-event-fire
 * @param {string} e
 * @param {EventTarget} target
 * @param {EventInit | undefined} eventInitDict
 */
function fireEvent (e, target, eventConstructor = Event, eventInitDict) {
  // 1. If eventConstructor is not given, then let eventConstructor be Event.

  // 2. Let event be the result of creating an event given eventConstructor,
  //    in the relevant realm of target.
  // 3. Initialize event’s type attribute to e.
  const event = new eventConstructor(e, eventInitDict) // eslint-disable-line new-cap

  // 4. Initialize any other IDL attributes of event as described in the
  //    invocation of this algorithm.

  // 5. Return the result of dispatching event at target, with legacy target
  //    override flag set if set.
  target.dispatchEvent(event)
}

/**
 * @see https://websockets.spec.whatwg.org/#feedback-from-the-protocol
 * @param {import('./websocket').WebSocket} ws
 * @param {number} type Opcode
 * @param {Buffer} data application data
 */
function websocketMessageReceived (ws, type, data) {
  // 1. If ready state is not OPEN (1), then return.
  if (ws[kReadyState] !== states.OPEN) {
    return
  }

  // 2. Let dataForEvent be determined by switching on type and binary type:
  let dataForEvent

  if (type === opcodes.TEXT) {
    // -> type indicates that the data is Text
    //      a new DOMString containing data
    try {
      dataForEvent = new TextDecoder('utf-8', { fatal: true }).decode(data)
    } catch {
      failWebsocketConnection(ws, 'Received invalid UTF-8 in text frame.')
      return
    }
  } else if (type === opcodes.BINARY) {
    if (ws[kBinaryType] === 'blob') {
      // -> type indicates that the data is Binary and binary type is "blob"
      //      a new Blob object, created in the relevant Realm of the WebSocket
      //      object, that represents data as its raw data
      dataForEvent = new Blob([data])
    } else {
      // -> type indicates that the data is Binary and binary type is "arraybuffer"
      //      a new ArrayBuffer object, created in the relevant Realm of the
      //      WebSocket object, whose contents are data
      dataForEvent = new Uint8Array(data).buffer
    }
  }

  // 3. Fire an event named message at the WebSocket object, using MessageEvent,
  //    with the origin attribute initialized to the serialization of the WebSocket
  //    object’s url's origin, and the data attribute initialized to dataForEvent.
  fireEvent('message', ws, MessageEvent, {
    origin: ws[kWebSocketURL].origin,
    data: dataForEvent
  })
}

/**
 * @see https://datatracker.ietf.org/doc/html/rfc6455
 * @see https://datatracker.ietf.org/doc/html/rfc2616
 * @see https://bugs.chromium.org/p/chromium/issues/detail?id=398407
 * @param {string} protocol
 */
function isValidSubprotocol (protocol) {
  // If present, this value indicates one
  // or more comma-separated subprotocol the client wishes to speak,
  // ordered by preference.  The elements that comprise this value
  // MUST be non-empty strings with characters in the range U+0021 to
  // U+007E not including separator characters as defined in
  // [RFC2616] and MUST all be unique strings.
  if (protocol.length === 0) {
    return false
  }

  for (const char of protocol) {
    const code = char.charCodeAt(0)

    if (
      code < 0x21 ||
      code > 0x7E ||
      char === '(' ||
      char === ')' ||
      char === '<' ||
      char === '>' ||
      char === '@' ||
      char === ',' ||
      char === ';' ||
      char === ':' ||
      char === '\\' ||
      char === '"' ||
      char === '/' ||
      char === '[' ||
      char === ']' ||
      char === '?' ||
      char === '=' ||
      char === '{' ||
      char === '}' ||
      code === 32 || // SP
      code === 9 // HT
    ) {
      return false
    }
  }

  return true
}

/**
 * @see https://datatracker.ietf.org/doc/html/rfc6455#section-7-4
 * @param {number} code
 */
function isValidStatusCode (code) {
  if (code >= 1000 && code < 1015) {
    return (
      code !== 1004 && // reserved
      code !== 1005 && // "MUST NOT be set as a status code"
      code !== 1006 // "MUST NOT be set as a status code"
    )
  }

  return code >= 3000 && code <= 4999
}

/**
 * @param {import('./websocket').WebSocket} ws
 * @param {string|undefined} reason
 */
function failWebsocketConnection (ws, reason) {
  const { [kController]: controller, [kResponse]: response } = ws

  controller.abort()

  if (response?.socket && !response.socket.destroyed) {
    response.socket.destroy()
  }

  if (reason) {
    fireEvent('error', ws, ErrorEvent, {
      error: new Error(reason)
    })
  }
}

module.exports = {
  isEstablished,
  isClosing,
  isClosed,
  fireEvent,
  isValidSubprotocol,
  isValidStatusCode,
  failWebsocketConnection,
  websocketMessageReceived
}


/***/ }),

/***/ 4284:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { webidl } = __nccwpck_require__(1744)
const { DOMException } = __nccwpck_require__(1037)
const { URLSerializer } = __nccwpck_require__(685)
const { getGlobalOrigin } = __nccwpck_require__(1246)
const { staticPropertyDescriptors, states, opcodes, emptyBuffer } = __nccwpck_require__(9188)
const {
  kWebSocketURL,
  kReadyState,
  kController,
  kBinaryType,
  kResponse,
  kSentClose,
  kByteParser
} = __nccwpck_require__(7578)
const { isEstablished, isClosing, isValidSubprotocol, failWebsocketConnection, fireEvent } = __nccwpck_require__(5515)
const { establishWebSocketConnection } = __nccwpck_require__(5354)
const { WebsocketFrameSend } = __nccwpck_require__(5444)
const { ByteParser } = __nccwpck_require__(1688)
const { kEnumerableProperty, isBlobLike } = __nccwpck_require__(3983)
const { getGlobalDispatcher } = __nccwpck_require__(1892)
const { types } = __nccwpck_require__(3837)

let experimentalWarned = false

// https://websockets.spec.whatwg.org/#interface-definition
class WebSocket extends EventTarget {
  #events = {
    open: null,
    error: null,
    close: null,
    message: null
  }

  #bufferedAmount = 0
  #protocol = ''
  #extensions = ''

  /**
   * @param {string} url
   * @param {string|string[]} protocols
   */
  constructor (url, protocols = []) {
    super()

    webidl.argumentLengthCheck(arguments, 1, { header: 'WebSocket constructor' })

    if (!experimentalWarned) {
      experimentalWarned = true
      process.emitWarning('WebSockets are experimental, expect them to change at any time.', {
        code: 'UNDICI-WS'
      })
    }

    const options = webidl.converters['DOMString or sequence<DOMString> or WebSocketInit'](protocols)

    url = webidl.converters.USVString(url)
    protocols = options.protocols

    // 1. Let baseURL be this's relevant settings object's API base URL.
    const baseURL = getGlobalOrigin()

    // 1. Let urlRecord be the result of applying the URL parser to url with baseURL.
    let urlRecord

    try {
      urlRecord = new URL(url, baseURL)
    } catch (e) {
      // 3. If urlRecord is failure, then throw a "SyntaxError" DOMException.
      throw new DOMException(e, 'SyntaxError')
    }

    // 4. If urlRecord’s scheme is "http", then set urlRecord’s scheme to "ws".
    if (urlRecord.protocol === 'http:') {
      urlRecord.protocol = 'ws:'
    } else if (urlRecord.protocol === 'https:') {
      // 5. Otherwise, if urlRecord’s scheme is "https", set urlRecord’s scheme to "wss".
      urlRecord.protocol = 'wss:'
    }

    // 6. If urlRecord’s scheme is not "ws" or "wss", then throw a "SyntaxError" DOMException.
    if (urlRecord.protocol !== 'ws:' && urlRecord.protocol !== 'wss:') {
      throw new DOMException(
        `Expected a ws: or wss: protocol, got ${urlRecord.protocol}`,
        'SyntaxError'
      )
    }

    // 7. If urlRecord’s fragment is non-null, then throw a "SyntaxError"
    //    DOMException.
    if (urlRecord.hash || urlRecord.href.endsWith('#')) {
      throw new DOMException('Got fragment', 'SyntaxError')
    }

    // 8. If protocols is a string, set protocols to a sequence consisting
    //    of just that string.
    if (typeof protocols === 'string') {
      protocols = [protocols]
    }

    // 9. If any of the values in protocols occur more than once or otherwise
    //    fail to match the requirements for elements that comprise the value
    //    of `Sec-WebSocket-Protocol` fields as defined by The WebSocket
    //    protocol, then throw a "SyntaxError" DOMException.
    if (protocols.length !== new Set(protocols.map(p => p.toLowerCase())).size) {
      throw new DOMException('Invalid Sec-WebSocket-Protocol value', 'SyntaxError')
    }

    if (protocols.length > 0 && !protocols.every(p => isValidSubprotocol(p))) {
      throw new DOMException('Invalid Sec-WebSocket-Protocol value', 'SyntaxError')
    }

    // 10. Set this's url to urlRecord.
    this[kWebSocketURL] = new URL(urlRecord.href)

    // 11. Let client be this's relevant settings object.

    // 12. Run this step in parallel:

    //    1. Establish a WebSocket connection given urlRecord, protocols,
    //       and client.
    this[kController] = establishWebSocketConnection(
      urlRecord,
      protocols,
      this,
      (response) => this.#onConnectionEstablished(response),
      options
    )

    // Each WebSocket object has an associated ready state, which is a
    // number representing the state of the connection. Initially it must
    // be CONNECTING (0).
    this[kReadyState] = WebSocket.CONNECTING

    // The extensions attribute must initially return the empty string.

    // The protocol attribute must initially return the empty string.

    // Each WebSocket object has an associated binary type, which is a
    // BinaryType. Initially it must be "blob".
    this[kBinaryType] = 'blob'
  }

  /**
   * @see https://websockets.spec.whatwg.org/#dom-websocket-close
   * @param {number|undefined} code
   * @param {string|undefined} reason
   */
  close (code = undefined, reason = undefined) {
    webidl.brandCheck(this, WebSocket)

    if (code !== undefined) {
      code = webidl.converters['unsigned short'](code, { clamp: true })
    }

    if (reason !== undefined) {
      reason = webidl.converters.USVString(reason)
    }

    // 1. If code is present, but is neither an integer equal to 1000 nor an
    //    integer in the range 3000 to 4999, inclusive, throw an
    //    "InvalidAccessError" DOMException.
    if (code !== undefined) {
      if (code !== 1000 && (code < 3000 || code > 4999)) {
        throw new DOMException('invalid code', 'InvalidAccessError')
      }
    }

    let reasonByteLength = 0

    // 2. If reason is present, then run these substeps:
    if (reason !== undefined) {
      // 1. Let reasonBytes be the result of encoding reason.
      // 2. If reasonBytes is longer than 123 bytes, then throw a
      //    "SyntaxError" DOMException.
      reasonByteLength = Buffer.byteLength(reason)

      if (reasonByteLength > 123) {
        throw new DOMException(
          `Reason must be less than 123 bytes; received ${reasonByteLength}`,
          'SyntaxError'
        )
      }
    }

    // 3. Run the first matching steps from the following list:
    if (this[kReadyState] === WebSocket.CLOSING || this[kReadyState] === WebSocket.CLOSED) {
      // If this's ready state is CLOSING (2) or CLOSED (3)
      // Do nothing.
    } else if (!isEstablished(this)) {
      // If the WebSocket connection is not yet established
      // Fail the WebSocket connection and set this's ready state
      // to CLOSING (2).
      failWebsocketConnection(this, 'Connection was closed before it was established.')
      this[kReadyState] = WebSocket.CLOSING
    } else if (!isClosing(this)) {
      // If the WebSocket closing handshake has not yet been started
      // Start the WebSocket closing handshake and set this's ready
      // state to CLOSING (2).
      // - If neither code nor reason is present, the WebSocket Close
      //   message must not have a body.
      // - If code is present, then the status code to use in the
      //   WebSocket Close message must be the integer given by code.
      // - If reason is also present, then reasonBytes must be
      //   provided in the Close message after the status code.

      const frame = new WebsocketFrameSend()

      // If neither code nor reason is present, the WebSocket Close
      // message must not have a body.

      // If code is present, then the status code to use in the
      // WebSocket Close message must be the integer given by code.
      if (code !== undefined && reason === undefined) {
        frame.frameData = Buffer.allocUnsafe(2)
        frame.frameData.writeUInt16BE(code, 0)
      } else if (code !== undefined && reason !== undefined) {
        // If reason is also present, then reasonBytes must be
        // provided in the Close message after the status code.
        frame.frameData = Buffer.allocUnsafe(2 + reasonByteLength)
        frame.frameData.writeUInt16BE(code, 0)
        // the body MAY contain UTF-8-encoded data with value /reason/
        frame.frameData.write(reason, 2, 'utf-8')
      } else {
        frame.frameData = emptyBuffer
      }

      /** @type {import('stream').Duplex} */
      const socket = this[kResponse].socket

      socket.write(frame.createFrame(opcodes.CLOSE), (err) => {
        if (!err) {
          this[kSentClose] = true
        }
      })

      // Upon either sending or receiving a Close control frame, it is said
      // that _The WebSocket Closing Handshake is Started_ and that the
      // WebSocket connection is in the CLOSING state.
      this[kReadyState] = states.CLOSING
    } else {
      // Otherwise
      // Set this's ready state to CLOSING (2).
      this[kReadyState] = WebSocket.CLOSING
    }
  }

  /**
   * @see https://websockets.spec.whatwg.org/#dom-websocket-send
   * @param {NodeJS.TypedArray|ArrayBuffer|Blob|string} data
   */
  send (data) {
    webidl.brandCheck(this, WebSocket)

    webidl.argumentLengthCheck(arguments, 1, { header: 'WebSocket.send' })

    data = webidl.converters.WebSocketSendData(data)

    // 1. If this's ready state is CONNECTING, then throw an
    //    "InvalidStateError" DOMException.
    if (this[kReadyState] === WebSocket.CONNECTING) {
      throw new DOMException('Sent before connected.', 'InvalidStateError')
    }

    // 2. Run the appropriate set of steps from the following list:
    // https://datatracker.ietf.org/doc/html/rfc6455#section-6.1
    // https://datatracker.ietf.org/doc/html/rfc6455#section-5.2

    if (!isEstablished(this) || isClosing(this)) {
      return
    }

    /** @type {import('stream').Duplex} */
    const socket = this[kResponse].socket

    // If data is a string
    if (typeof data === 'string') {
      // If the WebSocket connection is established and the WebSocket
      // closing handshake has not yet started, then the user agent
      // must send a WebSocket Message comprised of the data argument
      // using a text frame opcode; if the data cannot be sent, e.g.
      // because it would need to be buffered but the buffer is full,
      // the user agent must flag the WebSocket as full and then close
      // the WebSocket connection. Any invocation of this method with a
      // string argument that does not throw an exception must increase
      // the bufferedAmount attribute by the number of bytes needed to
      // express the argument as UTF-8.

      const value = Buffer.from(data)
      const frame = new WebsocketFrameSend(value)
      const buffer = frame.createFrame(opcodes.TEXT)

      this.#bufferedAmount += value.byteLength
      socket.write(buffer, () => {
        this.#bufferedAmount -= value.byteLength
      })
    } else if (types.isArrayBuffer(data)) {
      // If the WebSocket connection is established, and the WebSocket
      // closing handshake has not yet started, then the user agent must
      // send a WebSocket Message comprised of data using a binary frame
      // opcode; if the data cannot be sent, e.g. because it would need
      // to be buffered but the buffer is full, the user agent must flag
      // the WebSocket as full and then close the WebSocket connection.
      // The data to be sent is the data stored in the buffer described
      // by the ArrayBuffer object. Any invocation of this method with an
      // ArrayBuffer argument that does not throw an exception must
      // increase the bufferedAmount attribute by the length of the
      // ArrayBuffer in bytes.

      const value = Buffer.from(data)
      const frame = new WebsocketFrameSend(value)
      const buffer = frame.createFrame(opcodes.BINARY)

      this.#bufferedAmount += value.byteLength
      socket.write(buffer, () => {
        this.#bufferedAmount -= value.byteLength
      })
    } else if (ArrayBuffer.isView(data)) {
      // If the WebSocket connection is established, and the WebSocket
      // closing handshake has not yet started, then the user agent must
      // send a WebSocket Message comprised of data using a binary frame
      // opcode; if the data cannot be sent, e.g. because it would need to
      // be buffered but the buffer is full, the user agent must flag the
      // WebSocket as full and then close the WebSocket connection. The
      // data to be sent is the data stored in the section of the buffer
      // described by the ArrayBuffer object that data references. Any
      // invocation of this method with this kind of argument that does
      // not throw an exception must increase the bufferedAmount attribute
      // by the length of data’s buffer in bytes.

      const ab = Buffer.from(data, data.byteOffset, data.byteLength)

      const frame = new WebsocketFrameSend(ab)
      const buffer = frame.createFrame(opcodes.BINARY)

      this.#bufferedAmount += ab.byteLength
      socket.write(buffer, () => {
        this.#bufferedAmount -= ab.byteLength
      })
    } else if (isBlobLike(data)) {
      // If the WebSocket connection is established, and the WebSocket
      // closing handshake has not yet started, then the user agent must
      // send a WebSocket Message comprised of data using a binary frame
      // opcode; if the data cannot be sent, e.g. because it would need to
      // be buffered but the buffer is full, the user agent must flag the
      // WebSocket as full and then close the WebSocket connection. The data
      // to be sent is the raw data represented by the Blob object. Any
      // invocation of this method with a Blob argument that does not throw
      // an exception must increase the bufferedAmount attribute by the size
      // of the Blob object’s raw data, in bytes.

      const frame = new WebsocketFrameSend()

      data.arrayBuffer().then((ab) => {
        const value = Buffer.from(ab)
        frame.frameData = value
        const buffer = frame.createFrame(opcodes.BINARY)

        this.#bufferedAmount += value.byteLength
        socket.write(buffer, () => {
          this.#bufferedAmount -= value.byteLength
        })
      })
    }
  }

  get readyState () {
    webidl.brandCheck(this, WebSocket)

    // The readyState getter steps are to return this's ready state.
    return this[kReadyState]
  }

  get bufferedAmount () {
    webidl.brandCheck(this, WebSocket)

    return this.#bufferedAmount
  }

  get url () {
    webidl.brandCheck(this, WebSocket)

    // The url getter steps are to return this's url, serialized.
    return URLSerializer(this[kWebSocketURL])
  }

  get extensions () {
    webidl.brandCheck(this, WebSocket)

    return this.#extensions
  }

  get protocol () {
    webidl.brandCheck(this, WebSocket)

    return this.#protocol
  }

  get onopen () {
    webidl.brandCheck(this, WebSocket)

    return this.#events.open
  }

  set onopen (fn) {
    webidl.brandCheck(this, WebSocket)

    if (this.#events.open) {
      this.removeEventListener('open', this.#events.open)
    }

    if (typeof fn === 'function') {
      this.#events.open = fn
      this.addEventListener('open', fn)
    } else {
      this.#events.open = null
    }
  }

  get onerror () {
    webidl.brandCheck(this, WebSocket)

    return this.#events.error
  }

  set onerror (fn) {
    webidl.brandCheck(this, WebSocket)

    if (this.#events.error) {
      this.removeEventListener('error', this.#events.error)
    }

    if (typeof fn === 'function') {
      this.#events.error = fn
      this.addEventListener('error', fn)
    } else {
      this.#events.error = null
    }
  }

  get onclose () {
    webidl.brandCheck(this, WebSocket)

    return this.#events.close
  }

  set onclose (fn) {
    webidl.brandCheck(this, WebSocket)

    if (this.#events.close) {
      this.removeEventListener('close', this.#events.close)
    }

    if (typeof fn === 'function') {
      this.#events.close = fn
      this.addEventListener('close', fn)
    } else {
      this.#events.close = null
    }
  }

  get onmessage () {
    webidl.brandCheck(this, WebSocket)

    return this.#events.message
  }

  set onmessage (fn) {
    webidl.brandCheck(this, WebSocket)

    if (this.#events.message) {
      this.removeEventListener('message', this.#events.message)
    }

    if (typeof fn === 'function') {
      this.#events.message = fn
      this.addEventListener('message', fn)
    } else {
      this.#events.message = null
    }
  }

  get binaryType () {
    webidl.brandCheck(this, WebSocket)

    return this[kBinaryType]
  }

  set binaryType (type) {
    webidl.brandCheck(this, WebSocket)

    if (type !== 'blob' && type !== 'arraybuffer') {
      this[kBinaryType] = 'blob'
    } else {
      this[kBinaryType] = type
    }
  }

  /**
   * @see https://websockets.spec.whatwg.org/#feedback-from-the-protocol
   */
  #onConnectionEstablished (response) {
    // processResponse is called when the "response’s header list has been received and initialized."
    // once this happens, the connection is open
    this[kResponse] = response

    const parser = new ByteParser(this)
    parser.on('drain', function onParserDrain () {
      this.ws[kResponse].socket.resume()
    })

    response.socket.ws = this
    this[kByteParser] = parser

    // 1. Change the ready state to OPEN (1).
    this[kReadyState] = states.OPEN

    // 2. Change the extensions attribute’s value to the extensions in use, if
    //    it is not the null value.
    // https://datatracker.ietf.org/doc/html/rfc6455#section-9.1
    const extensions = response.headersList.get('sec-websocket-extensions')

    if (extensions !== null) {
      this.#extensions = extensions
    }

    // 3. Change the protocol attribute’s value to the subprotocol in use, if
    //    it is not the null value.
    // https://datatracker.ietf.org/doc/html/rfc6455#section-1.9
    const protocol = response.headersList.get('sec-websocket-protocol')

    if (protocol !== null) {
      this.#protocol = protocol
    }

    // 4. Fire an event named open at the WebSocket object.
    fireEvent('open', this)
  }
}

// https://websockets.spec.whatwg.org/#dom-websocket-connecting
WebSocket.CONNECTING = WebSocket.prototype.CONNECTING = states.CONNECTING
// https://websockets.spec.whatwg.org/#dom-websocket-open
WebSocket.OPEN = WebSocket.prototype.OPEN = states.OPEN
// https://websockets.spec.whatwg.org/#dom-websocket-closing
WebSocket.CLOSING = WebSocket.prototype.CLOSING = states.CLOSING
// https://websockets.spec.whatwg.org/#dom-websocket-closed
WebSocket.CLOSED = WebSocket.prototype.CLOSED = states.CLOSED

Object.defineProperties(WebSocket.prototype, {
  CONNECTING: staticPropertyDescriptors,
  OPEN: staticPropertyDescriptors,
  CLOSING: staticPropertyDescriptors,
  CLOSED: staticPropertyDescriptors,
  url: kEnumerableProperty,
  readyState: kEnumerableProperty,
  bufferedAmount: kEnumerableProperty,
  onopen: kEnumerableProperty,
  onerror: kEnumerableProperty,
  onclose: kEnumerableProperty,
  close: kEnumerableProperty,
  onmessage: kEnumerableProperty,
  binaryType: kEnumerableProperty,
  send: kEnumerableProperty,
  extensions: kEnumerableProperty,
  protocol: kEnumerableProperty,
  [Symbol.toStringTag]: {
    value: 'WebSocket',
    writable: false,
    enumerable: false,
    configurable: true
  }
})

Object.defineProperties(WebSocket, {
  CONNECTING: staticPropertyDescriptors,
  OPEN: staticPropertyDescriptors,
  CLOSING: staticPropertyDescriptors,
  CLOSED: staticPropertyDescriptors
})

webidl.converters['sequence<DOMString>'] = webidl.sequenceConverter(
  webidl.converters.DOMString
)

webidl.converters['DOMString or sequence<DOMString>'] = function (V) {
  if (webidl.util.Type(V) === 'Object' && Symbol.iterator in V) {
    return webidl.converters['sequence<DOMString>'](V)
  }

  return webidl.converters.DOMString(V)
}

// This implements the propsal made in https://github.com/whatwg/websockets/issues/42
webidl.converters.WebSocketInit = webidl.dictionaryConverter([
  {
    key: 'protocols',
    converter: webidl.converters['DOMString or sequence<DOMString>'],
    get defaultValue () {
      return []
    }
  },
  {
    key: 'dispatcher',
    converter: (V) => V,
    get defaultValue () {
      return getGlobalDispatcher()
    }
  },
  {
    key: 'headers',
    converter: webidl.nullableConverter(webidl.converters.HeadersInit)
  }
])

webidl.converters['DOMString or sequence<DOMString> or WebSocketInit'] = function (V) {
  if (webidl.util.Type(V) === 'Object' && !(Symbol.iterator in V)) {
    return webidl.converters.WebSocketInit(V)
  }

  return { protocols: webidl.converters['DOMString or sequence<DOMString>'](V) }
}

webidl.converters.WebSocketSendData = function (V) {
  if (webidl.util.Type(V) === 'Object') {
    if (isBlobLike(V)) {
      return webidl.converters.Blob(V, { strict: false })
    }

    if (ArrayBuffer.isView(V) || types.isAnyArrayBuffer(V)) {
      return webidl.converters.BufferSource(V)
    }
  }

  return webidl.converters.USVString(V)
}

module.exports = {
  WebSocket
}


/***/ }),

/***/ 5840:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "v1", ({
  enumerable: true,
  get: function () {
    return _v.default;
  }
}));
Object.defineProperty(exports, "v3", ({
  enumerable: true,
  get: function () {
    return _v2.default;
  }
}));
Object.defineProperty(exports, "v4", ({
  enumerable: true,
  get: function () {
    return _v3.default;
  }
}));
Object.defineProperty(exports, "v5", ({
  enumerable: true,
  get: function () {
    return _v4.default;
  }
}));
Object.defineProperty(exports, "NIL", ({
  enumerable: true,
  get: function () {
    return _nil.default;
  }
}));
Object.defineProperty(exports, "version", ({
  enumerable: true,
  get: function () {
    return _version.default;
  }
}));
Object.defineProperty(exports, "validate", ({
  enumerable: true,
  get: function () {
    return _validate.default;
  }
}));
Object.defineProperty(exports, "stringify", ({
  enumerable: true,
  get: function () {
    return _stringify.default;
  }
}));
Object.defineProperty(exports, "parse", ({
  enumerable: true,
  get: function () {
    return _parse.default;
  }
}));

var _v = _interopRequireDefault(__nccwpck_require__(8628));

var _v2 = _interopRequireDefault(__nccwpck_require__(6409));

var _v3 = _interopRequireDefault(__nccwpck_require__(5122));

var _v4 = _interopRequireDefault(__nccwpck_require__(9120));

var _nil = _interopRequireDefault(__nccwpck_require__(5332));

var _version = _interopRequireDefault(__nccwpck_require__(1595));

var _validate = _interopRequireDefault(__nccwpck_require__(6900));

var _stringify = _interopRequireDefault(__nccwpck_require__(8950));

var _parse = _interopRequireDefault(__nccwpck_require__(2746));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),

/***/ 4569:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _crypto = _interopRequireDefault(__nccwpck_require__(6113));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function md5(bytes) {
  if (Array.isArray(bytes)) {
    bytes = Buffer.from(bytes);
  } else if (typeof bytes === 'string') {
    bytes = Buffer.from(bytes, 'utf8');
  }

  return _crypto.default.createHash('md5').update(bytes).digest();
}

var _default = md5;
exports["default"] = _default;

/***/ }),

/***/ 5332:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = '00000000-0000-0000-0000-000000000000';
exports["default"] = _default;

/***/ }),

/***/ 2746:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _validate = _interopRequireDefault(__nccwpck_require__(6900));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parse(uuid) {
  if (!(0, _validate.default)(uuid)) {
    throw TypeError('Invalid UUID');
  }

  let v;
  const arr = new Uint8Array(16); // Parse ########-....-....-....-............

  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;
  arr[1] = v >>> 16 & 0xff;
  arr[2] = v >>> 8 & 0xff;
  arr[3] = v & 0xff; // Parse ........-####-....-....-............

  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;
  arr[5] = v & 0xff; // Parse ........-....-####-....-............

  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;
  arr[7] = v & 0xff; // Parse ........-....-....-####-............

  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;
  arr[9] = v & 0xff; // Parse ........-....-....-....-############
  // (Use "/" to avoid 32-bit truncation when bit-shifting high-order bytes)

  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;
  arr[11] = v / 0x100000000 & 0xff;
  arr[12] = v >>> 24 & 0xff;
  arr[13] = v >>> 16 & 0xff;
  arr[14] = v >>> 8 & 0xff;
  arr[15] = v & 0xff;
  return arr;
}

var _default = parse;
exports["default"] = _default;

/***/ }),

/***/ 814:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
exports["default"] = _default;

/***/ }),

/***/ 807:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = rng;

var _crypto = _interopRequireDefault(__nccwpck_require__(6113));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate

let poolPtr = rnds8Pool.length;

function rng() {
  if (poolPtr > rnds8Pool.length - 16) {
    _crypto.default.randomFillSync(rnds8Pool);

    poolPtr = 0;
  }

  return rnds8Pool.slice(poolPtr, poolPtr += 16);
}

/***/ }),

/***/ 5274:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _crypto = _interopRequireDefault(__nccwpck_require__(6113));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function sha1(bytes) {
  if (Array.isArray(bytes)) {
    bytes = Buffer.from(bytes);
  } else if (typeof bytes === 'string') {
    bytes = Buffer.from(bytes, 'utf8');
  }

  return _crypto.default.createHash('sha1').update(bytes).digest();
}

var _default = sha1;
exports["default"] = _default;

/***/ }),

/***/ 8950:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _validate = _interopRequireDefault(__nccwpck_require__(6900));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */
const byteToHex = [];

for (let i = 0; i < 256; ++i) {
  byteToHex.push((i + 0x100).toString(16).substr(1));
}

function stringify(arr, offset = 0) {
  // Note: Be careful editing this code!  It's been tuned for performance
  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one
  // of the following:
  // - One or more input array values don't map to a hex octet (leading to
  // "undefined" in the uuid)
  // - Invalid input values for the RFC `version` or `variant` fields

  if (!(0, _validate.default)(uuid)) {
    throw TypeError('Stringified UUID is invalid');
  }

  return uuid;
}

var _default = stringify;
exports["default"] = _default;

/***/ }),

/***/ 8628:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _rng = _interopRequireDefault(__nccwpck_require__(807));

var _stringify = _interopRequireDefault(__nccwpck_require__(8950));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// **`v1()` - Generate time-based UUID**
//
// Inspired by https://github.com/LiosK/UUID.js
// and http://docs.python.org/library/uuid.html
let _nodeId;

let _clockseq; // Previous uuid creation time


let _lastMSecs = 0;
let _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details

function v1(options, buf, offset) {
  let i = buf && offset || 0;
  const b = buf || new Array(16);
  options = options || {};
  let node = options.node || _nodeId;
  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not
  // specified.  We do this lazily to minimize issues related to insufficient
  // system entropy.  See #189

  if (node == null || clockseq == null) {
    const seedBytes = options.random || (options.rng || _rng.default)();

    if (node == null) {
      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];
    }

    if (clockseq == null) {
      // Per 4.2.2, randomize (14 bit) clockseq
      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;
    }
  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,
  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.


  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock
  // cycle to simulate higher resolution clock

  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)

  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression

  if (dt < 0 && options.clockseq === undefined) {
    clockseq = clockseq + 1 & 0x3fff;
  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
  // time interval


  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
    nsecs = 0;
  } // Per 4.2.1.2 Throw error if too many uuids are requested


  if (nsecs >= 10000) {
    throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
  }

  _lastMSecs = msecs;
  _lastNSecs = nsecs;
  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch

  msecs += 12219292800000; // `time_low`

  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
  b[i++] = tl >>> 24 & 0xff;
  b[i++] = tl >>> 16 & 0xff;
  b[i++] = tl >>> 8 & 0xff;
  b[i++] = tl & 0xff; // `time_mid`

  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;
  b[i++] = tmh >>> 8 & 0xff;
  b[i++] = tmh & 0xff; // `time_high_and_version`

  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version

  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)

  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`

  b[i++] = clockseq & 0xff; // `node`

  for (let n = 0; n < 6; ++n) {
    b[i + n] = node[n];
  }

  return buf || (0, _stringify.default)(b);
}

var _default = v1;
exports["default"] = _default;

/***/ }),

/***/ 6409:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _v = _interopRequireDefault(__nccwpck_require__(5998));

var _md = _interopRequireDefault(__nccwpck_require__(4569));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const v3 = (0, _v.default)('v3', 0x30, _md.default);
var _default = v3;
exports["default"] = _default;

/***/ }),

/***/ 5998:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = _default;
exports.URL = exports.DNS = void 0;

var _stringify = _interopRequireDefault(__nccwpck_require__(8950));

var _parse = _interopRequireDefault(__nccwpck_require__(2746));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function stringToBytes(str) {
  str = unescape(encodeURIComponent(str)); // UTF8 escape

  const bytes = [];

  for (let i = 0; i < str.length; ++i) {
    bytes.push(str.charCodeAt(i));
  }

  return bytes;
}

const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';
exports.DNS = DNS;
const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';
exports.URL = URL;

function _default(name, version, hashfunc) {
  function generateUUID(value, namespace, buf, offset) {
    if (typeof value === 'string') {
      value = stringToBytes(value);
    }

    if (typeof namespace === 'string') {
      namespace = (0, _parse.default)(namespace);
    }

    if (namespace.length !== 16) {
      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');
    } // Compute hash of namespace and value, Per 4.3
    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =
    // hashfunc([...namespace, ... value])`


    let bytes = new Uint8Array(16 + value.length);
    bytes.set(namespace);
    bytes.set(value, namespace.length);
    bytes = hashfunc(bytes);
    bytes[6] = bytes[6] & 0x0f | version;
    bytes[8] = bytes[8] & 0x3f | 0x80;

    if (buf) {
      offset = offset || 0;

      for (let i = 0; i < 16; ++i) {
        buf[offset + i] = bytes[i];
      }

      return buf;
    }

    return (0, _stringify.default)(bytes);
  } // Function#name is not settable on some platforms (#270)


  try {
    generateUUID.name = name; // eslint-disable-next-line no-empty
  } catch (err) {} // For CommonJS default export support


  generateUUID.DNS = DNS;
  generateUUID.URL = URL;
  return generateUUID;
}

/***/ }),

/***/ 5122:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _rng = _interopRequireDefault(__nccwpck_require__(807));

var _stringify = _interopRequireDefault(__nccwpck_require__(8950));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function v4(options, buf, offset) {
  options = options || {};

  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`


  rnds[6] = rnds[6] & 0x0f | 0x40;
  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

  if (buf) {
    offset = offset || 0;

    for (let i = 0; i < 16; ++i) {
      buf[offset + i] = rnds[i];
    }

    return buf;
  }

  return (0, _stringify.default)(rnds);
}

var _default = v4;
exports["default"] = _default;

/***/ }),

/***/ 9120:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _v = _interopRequireDefault(__nccwpck_require__(5998));

var _sha = _interopRequireDefault(__nccwpck_require__(5274));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const v5 = (0, _v.default)('v5', 0x50, _sha.default);
var _default = v5;
exports["default"] = _default;

/***/ }),

/***/ 6900:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _regex = _interopRequireDefault(__nccwpck_require__(814));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function validate(uuid) {
  return typeof uuid === 'string' && _regex.default.test(uuid);
}

var _default = validate;
exports["default"] = _default;

/***/ }),

/***/ 1595:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _validate = _interopRequireDefault(__nccwpck_require__(6900));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function version(uuid) {
  if (!(0, _validate.default)(uuid)) {
    throw TypeError('Invalid UUID');
  }

  return parseInt(uuid.substr(14, 1), 16);
}

var _default = version;
exports["default"] = _default;

/***/ }),

/***/ 4207:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const isWindows = process.platform === 'win32' ||
    process.env.OSTYPE === 'cygwin' ||
    process.env.OSTYPE === 'msys'

const path = __nccwpck_require__(1017)
const COLON = isWindows ? ';' : ':'
const isexe = __nccwpck_require__(7126)

const getNotFoundError = (cmd) =>
  Object.assign(new Error(`not found: ${cmd}`), { code: 'ENOENT' })

const getPathInfo = (cmd, opt) => {
  const colon = opt.colon || COLON

  // If it has a slash, then we don't bother searching the pathenv.
  // just check the file itself, and that's it.
  const pathEnv = cmd.match(/\//) || isWindows && cmd.match(/\\/) ? ['']
    : (
      [
        // windows always checks the cwd first
        ...(isWindows ? [process.cwd()] : []),
        ...(opt.path || process.env.PATH ||
          /* istanbul ignore next: very unusual */ '').split(colon),
      ]
    )
  const pathExtExe = isWindows
    ? opt.pathExt || process.env.PATHEXT || '.EXE;.CMD;.BAT;.COM'
    : ''
  const pathExt = isWindows ? pathExtExe.split(colon) : ['']

  if (isWindows) {
    if (cmd.indexOf('.') !== -1 && pathExt[0] !== '')
      pathExt.unshift('')
  }

  return {
    pathEnv,
    pathExt,
    pathExtExe,
  }
}

const which = (cmd, opt, cb) => {
  if (typeof opt === 'function') {
    cb = opt
    opt = {}
  }
  if (!opt)
    opt = {}

  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)
  const found = []

  const step = i => new Promise((resolve, reject) => {
    if (i === pathEnv.length)
      return opt.all && found.length ? resolve(found)
        : reject(getNotFoundError(cmd))

    const ppRaw = pathEnv[i]
    const pathPart = /^".*"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw

    const pCmd = path.join(pathPart, cmd)
    const p = !pathPart && /^\.[\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd
      : pCmd

    resolve(subStep(p, i, 0))
  })

  const subStep = (p, i, ii) => new Promise((resolve, reject) => {
    if (ii === pathExt.length)
      return resolve(step(i + 1))
    const ext = pathExt[ii]
    isexe(p + ext, { pathExt: pathExtExe }, (er, is) => {
      if (!er && is) {
        if (opt.all)
          found.push(p + ext)
        else
          return resolve(p + ext)
      }
      return resolve(subStep(p, i, ii + 1))
    })
  })

  return cb ? step(0).then(res => cb(null, res), cb) : step(0)
}

const whichSync = (cmd, opt) => {
  opt = opt || {}

  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)
  const found = []

  for (let i = 0; i < pathEnv.length; i ++) {
    const ppRaw = pathEnv[i]
    const pathPart = /^".*"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw

    const pCmd = path.join(pathPart, cmd)
    const p = !pathPart && /^\.[\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd
      : pCmd

    for (let j = 0; j < pathExt.length; j ++) {
      const cur = p + pathExt[j]
      try {
        const is = isexe.sync(cur, { pathExt: pathExtExe })
        if (is) {
          if (opt.all)
            found.push(cur)
          else
            return cur
        }
      } catch (ex) {}
    }
  }

  if (opt.all && found.length)
    return found

  if (opt.nothrow)
    return null

  throw getNotFoundError(cmd)
}

module.exports = which
which.sync = whichSync


/***/ }),

/***/ 633:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const libpkgx_1 = __nccwpck_require__(7995);
const exec_1 = __nccwpck_require__(1514);
const core = __importStar(__nccwpck_require__(2186));
const path = __importStar(__nccwpck_require__(1017));
const os = __importStar(__nccwpck_require__(2037));
const { useConfig, useShellEnv } = libpkgx_1.hooks;
const { install } = libpkgx_1.porcelain;
const { flatmap } = libpkgx_1.utils;
function go() {
    var _a, _b;
    return __awaiter(this, void 0, void 0, function* () {
        const PKGX_DIR = core.getInput('PKGX_DIR') || core.getInput('TEA_DIR');
        let vpkgx = (_a = core.getInput('version')) !== null && _a !== void 0 ? _a : "";
        if (vpkgx && !/^[*^~@=]/.test(vpkgx)) {
            vpkgx = `@${vpkgx}`;
        }
        const pkgs = [`pkgx.sh${vpkgx}`];
        for (let key in process.env) {
            if (key.startsWith("INPUT_+")) {
                const value = process.env[key];
                if (key == 'INPUT_+') {
                    for (const item of value.split(/\s+/)) {
                        if (item.trim()) {
                            pkgs.push(item);
                        }
                    }
                }
                else {
                    key = key.slice(7).toLowerCase();
                    pkgs.push(key + value);
                }
            }
        }
        // we build to /opt and special case this action so people new to
        // building aren’t immediately flumoxed
        if (PKGX_DIR == '/opt' && os.platform() == 'darwin') {
            yield (0, exec_1.exec)('sudo', ['chown', `${os.userInfo().username}:staff`, '/opt']);
        }
        core.info(`fetching ${pkgs.join(", ")}…`);
        const prefix = (_b = flatmap(PKGX_DIR, (x) => new libpkgx_1.Path(x))) !== null && _b !== void 0 ? _b : libpkgx_1.Path.home().join(".pkgx");
        useConfig({
            prefix,
            data: prefix.join(".data"),
            cache: prefix.join(".cache"),
            pantries: [],
            UserAgent: 'pkgx.setup/0.1.0',
            options: { compression: 'gz' }
        });
        const { map, flatten } = useShellEnv();
        yield libpkgx_1.hooks.useSync();
        const pkgrqs = yield Promise.all(pkgs.map(parse));
        const installations = yield install(pkgrqs);
        const env = flatten(yield map({ installations }));
        for (const [key, value] of Object.entries(env)) {
            if (key == 'PATH') {
                core.addPath(value);
            }
            else {
                core.exportVariable(key, value);
            }
        }
        if (PKGX_DIR) {
            core.exportVariable('PKGX_DIR', PKGX_DIR);
        }
        if (os.platform() != 'darwin') {
            // use our installer to install any required pre-requisites from the system packager
            const installer_script = path.join(path.dirname(__filename), "installer.sh");
            if (process.getuid && process.getuid() == 0) {
                yield (0, exec_1.exec)(installer_script, [], { env: Object.assign(Object.assign({}, process.env), { PKGX_ONLY_INSTALL_PREREQS: '1' }) });
            }
            else {
                yield (0, exec_1.exec)('sudo', [installer_script]);
            }
        }
        core.info(`installed ${installations.map(({ pkg }) => libpkgx_1.utils.pkg.str(pkg)).join(', ')}`);
    });
}
go().catch(core.setFailed);
function parse(input) {
    return __awaiter(this, void 0, void 0, function* () {
        const find = libpkgx_1.hooks.usePantry().find;
        const rawpkg = libpkgx_1.utils.pkg.parse(input);
        const projects = yield find(rawpkg.project);
        if (projects.length <= 0)
            throw new Error(`not found ${rawpkg.project}`);
        if (projects.length > 1)
            throw new Error(`ambiguous project ${rawpkg.project}`);
        const project = projects[0].project; //FIXME libpkgx forgets to correctly assign type
        const constraint = rawpkg.constraint;
        return { project, constraint };
    });
}


/***/ }),

/***/ 9491:
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ 852:
/***/ ((module) => {

"use strict";
module.exports = require("async_hooks");

/***/ }),

/***/ 4300:
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ 2081:
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ 6206:
/***/ ((module) => {

"use strict";
module.exports = require("console");

/***/ }),

/***/ 2057:
/***/ ((module) => {

"use strict";
module.exports = require("constants");

/***/ }),

/***/ 6113:
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ 7643:
/***/ ((module) => {

"use strict";
module.exports = require("diagnostics_channel");

/***/ }),

/***/ 9523:
/***/ ((module) => {

"use strict";
module.exports = require("dns");

/***/ }),

/***/ 2361:
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ 7147:
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ 3292:
/***/ ((module) => {

"use strict";
module.exports = require("fs/promises");

/***/ }),

/***/ 3685:
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ 5158:
/***/ ((module) => {

"use strict";
module.exports = require("http2");

/***/ }),

/***/ 5687:
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ 1808:
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ 5673:
/***/ ((module) => {

"use strict";
module.exports = require("node:events");

/***/ }),

/***/ 4492:
/***/ ((module) => {

"use strict";
module.exports = require("node:stream");

/***/ }),

/***/ 7261:
/***/ ((module) => {

"use strict";
module.exports = require("node:util");

/***/ }),

/***/ 2037:
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ 1017:
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ 4074:
/***/ ((module) => {

"use strict";
module.exports = require("perf_hooks");

/***/ }),

/***/ 7282:
/***/ ((module) => {

"use strict";
module.exports = require("process");

/***/ }),

/***/ 3477:
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ 2781:
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ 4544:
/***/ ((module) => {

"use strict";
module.exports = require("stream/web");

/***/ }),

/***/ 1576:
/***/ ((module) => {

"use strict";
module.exports = require("string_decoder");

/***/ }),

/***/ 4784:
/***/ ((module) => {

"use strict";
module.exports = require("timers");

/***/ }),

/***/ 4404:
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ 6224:
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ 7310:
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ 3837:
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ 9830:
/***/ ((module) => {

"use strict";
module.exports = require("util/types");

/***/ }),

/***/ 1267:
/***/ ((module) => {

"use strict";
module.exports = require("worker_threads");

/***/ }),

/***/ 9796:
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ 5190:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
// https://github.com/tc39/proposal-accessible-object-hasownproperty/blob/main/polyfill.js
if (!Object.hasOwn) {
    Object.defineProperty(Object, "hasOwn", {
        value: function (object, property) {
            if (object == null) {
                throw new TypeError("Cannot convert undefined or null to object");
            }
            return Object.prototype.hasOwnProperty.call(Object(object), property);
        },
        configurable: true,
        enumerable: false,
        writable: true,
    });
}


/***/ }),

/***/ 3072:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.dntGlobalThis = exports.ReadableStream = exports.TransformStream = exports.Response = exports.Request = exports.Headers = exports.FormData = exports.File = exports.fetch = exports.crypto = exports.Deno = void 0;
const shim_deno_1 = __nccwpck_require__(4683);
var shim_deno_2 = __nccwpck_require__(4683);
Object.defineProperty(exports, "Deno", ({ enumerable: true, get: function () { return shim_deno_2.Deno; } }));
const shim_crypto_1 = __nccwpck_require__(7229);
var shim_crypto_2 = __nccwpck_require__(7229);
Object.defineProperty(exports, "crypto", ({ enumerable: true, get: function () { return shim_crypto_2.crypto; } }));
const undici_1 = __nccwpck_require__(1773);
var undici_2 = __nccwpck_require__(1773);
Object.defineProperty(exports, "fetch", ({ enumerable: true, get: function () { return undici_2.fetch; } }));
Object.defineProperty(exports, "File", ({ enumerable: true, get: function () { return undici_2.File; } }));
Object.defineProperty(exports, "FormData", ({ enumerable: true, get: function () { return undici_2.FormData; } }));
Object.defineProperty(exports, "Headers", ({ enumerable: true, get: function () { return undici_2.Headers; } }));
Object.defineProperty(exports, "Request", ({ enumerable: true, get: function () { return undici_2.Request; } }));
Object.defineProperty(exports, "Response", ({ enumerable: true, get: function () { return undici_2.Response; } }));
const web_1 = __nccwpck_require__(4544);
var web_2 = __nccwpck_require__(4544);
Object.defineProperty(exports, "TransformStream", ({ enumerable: true, get: function () { return web_2.TransformStream; } }));
Object.defineProperty(exports, "ReadableStream", ({ enumerable: true, get: function () { return web_2.ReadableStream; } }));
const dntGlobals = {
    Deno: shim_deno_1.Deno,
    crypto: shim_crypto_1.crypto,
    fetch: undici_1.fetch,
    File: undici_1.File,
    FormData: undici_1.FormData,
    Headers: undici_1.Headers,
    Request: undici_1.Request,
    Response: undici_1.Response,
    TransformStream: web_1.TransformStream,
    ReadableStream: web_1.ReadableStream,
};
exports.dntGlobalThis = createMergeProxy(globalThis, dntGlobals);
function createMergeProxy(baseObj, extObj) {
    return new Proxy(baseObj, {
        get(_target, prop, _receiver) {
            if (prop in extObj) {
                return extObj[prop];
            }
            else {
                return baseObj[prop];
            }
        },
        set(_target, prop, value) {
            if (prop in extObj) {
                delete extObj[prop];
            }
            baseObj[prop] = value;
            return true;
        },
        deleteProperty(_target, prop) {
            let success = false;
            if (prop in extObj) {
                delete extObj[prop];
                success = true;
            }
            if (prop in baseObj) {
                delete baseObj[prop];
                success = true;
            }
            return success;
        },
        ownKeys(_target) {
            const baseKeys = Reflect.ownKeys(baseObj);
            const extKeys = Reflect.ownKeys(extObj);
            const extKeysSet = new Set(extKeys);
            return [...baseKeys.filter((k) => !extKeysSet.has(k)), ...extKeys];
        },
        defineProperty(_target, prop, desc) {
            if (prop in extObj) {
                delete extObj[prop];
            }
            Reflect.defineProperty(baseObj, prop, desc);
            return true;
        },
        getOwnPropertyDescriptor(_target, prop) {
            if (prop in extObj) {
                return Reflect.getOwnPropertyDescriptor(extObj, prop);
            }
            else {
                return Reflect.getOwnPropertyDescriptor(baseObj, prop);
            }
        },
        has(_target, prop) {
            return prop in extObj || prop in baseObj;
        },
    });
}


/***/ }),

/***/ 4254:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.assert = void 0;
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
const assertion_error_js_1 = __nccwpck_require__(2193);
/** Make an assertion, error will be thrown if `expr` does not have truthy value. */
function assert(expr, msg = "") {
    if (!expr) {
        throw new assertion_error_js_1.AssertionError(msg);
    }
}
exports.assert = assert;


/***/ }),

/***/ 2193:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AssertionError = void 0;
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
class AssertionError extends Error {
    constructor(message) {
        super(message);
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: "AssertionError"
        });
    }
}
exports.AssertionError = AssertionError;


/***/ }),

/***/ 706:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.concat = void 0;
/** Concatenate the given arrays into a new Uint8Array.
 *
 * ```ts
 * import { concat } from "https://deno.land/std@$STD_VERSION/bytes/concat.ts";
 * const a = new Uint8Array([0, 1, 2]);
 * const b = new Uint8Array([3, 4, 5]);
 * console.log(concat(a, b)); // [0, 1, 2, 3, 4, 5]
 */
function concat(...buf) {
    let length = 0;
    for (const b of buf) {
        length += b.length;
    }
    const output = new Uint8Array(length);
    let index = 0;
    for (const b of buf) {
        output.set(b, index);
        index += b.length;
    }
    return output;
}
exports.concat = concat;


/***/ }),

/***/ 4119:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.copy = void 0;
/** Copy bytes from the `src` array to the `dst` array. Returns the number of
 * bytes copied.
 *
 * If the `src` array is larger than what the `dst` array can hold, only the
 * amount of bytes that fit in the `dst` array are copied.
 *
 * An offset can be specified as the third argument that begins the copy at
 * that given index in the `dst` array. The offset defaults to the beginning of
 * the array.
 *
 * ```ts
 * import { copy } from "https://deno.land/std@$STD_VERSION/bytes/copy.ts";
 * const src = new Uint8Array([9, 8, 7]);
 * const dst = new Uint8Array([0, 1, 2, 3, 4, 5]);
 * console.log(copy(src, dst)); // 3
 * console.log(dst); // [9, 8, 7, 3, 4, 5]
 * ```
 *
 * ```ts
 * import { copy } from "https://deno.land/std@$STD_VERSION/bytes/copy.ts";
 * const src = new Uint8Array([1, 1, 1, 1]);
 * const dst = new Uint8Array([0, 0, 0, 0]);
 * console.log(copy(src, dst, 1)); // 3
 * console.log(dst); // [0, 1, 1, 1]
 * ```
 */
function copy(src, dst, off = 0) {
    off = Math.max(0, Math.min(off, dst.byteLength));
    const dstBytesAvailable = dst.byteLength - off;
    if (src.byteLength > dstBytesAvailable) {
        src = src.subarray(0, dstBytesAvailable);
    }
    dst.set(src, off);
    return src.byteLength;
}
exports.copy = copy;


/***/ }),

/***/ 7268:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from Go:
// https://github.com/golang/go/tree/go1.13.10/src/hash/fnv/fnv.go
// Copyright 2011 The Go Authors. All rights reserved. BSD license.
// https://github.com/golang/go/blob/master/LICENSE
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fnv32a = exports.fnv32 = void 0;
const util_js_1 = __nccwpck_require__(3332);
const prime32 = 16777619;
const fnv32 = (data) => {
    let hash = 2166136261;
    data.forEach((c) => {
        hash = (0, util_js_1.mul32)(hash, prime32);
        hash ^= c;
    });
    return Uint32Array.from([(0, util_js_1.swap32)(hash)]).buffer;
};
exports.fnv32 = fnv32;
const fnv32a = (data) => {
    let hash = 2166136261;
    data.forEach((c) => {
        hash ^= c;
        hash = (0, util_js_1.mul32)(hash, prime32);
    });
    return Uint32Array.from([(0, util_js_1.swap32)(hash)]).buffer;
};
exports.fnv32a = fnv32a;


/***/ }),

/***/ 1711:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from Go:
// https://github.com/golang/go/tree/go1.13.10/src/hash/fnv/fnv.go
// Copyright 2011 The Go Authors. All rights reserved. BSD license.
// https://github.com/golang/go/blob/master/LICENSE
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fnv64a = exports.fnv64 = void 0;
const util_js_1 = __nccwpck_require__(3332);
const prime64Lo = 435;
const prime64Hi = 256;
const fnv64 = (data) => {
    let hashLo = 2216829733;
    let hashHi = 3421674724;
    data.forEach((c) => {
        [hashHi, hashLo] = (0, util_js_1.mul64)([hashHi, hashLo], [prime64Hi, prime64Lo]);
        hashLo ^= c;
    });
    return new Uint32Array([(0, util_js_1.swap32)(hashHi >>> 0), (0, util_js_1.swap32)(hashLo >>> 0)]).buffer;
};
exports.fnv64 = fnv64;
const fnv64a = (data) => {
    let hashLo = 2216829733;
    let hashHi = 3421674724;
    data.forEach((c) => {
        hashLo ^= c;
        [hashHi, hashLo] = (0, util_js_1.mul64)([hashHi, hashLo], [prime64Hi, prime64Lo]);
    });
    return new Uint32Array([(0, util_js_1.swap32)(hashHi >>> 0), (0, util_js_1.swap32)(hashLo >>> 0)]).buffer;
};
exports.fnv64a = fnv64a;


/***/ }),

/***/ 4794:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fnv = void 0;
const fnv32_js_1 = __nccwpck_require__(7268);
const fnv64_js_1 = __nccwpck_require__(1711);
function fnv(name, buf) {
    if (!buf) {
        throw new TypeError("no data provided for hashing");
    }
    switch (name) {
        case "FNV32":
            return (0, fnv32_js_1.fnv32)(buf);
        case "FNV64":
            return (0, fnv64_js_1.fnv64)(buf);
        case "FNV32A":
            return (0, fnv32_js_1.fnv32a)(buf);
        case "FNV64A":
            return (0, fnv64_js_1.fnv64a)(buf);
        default:
            throw new TypeError(`unsupported fnv digest: ${name}`);
    }
}
exports.fnv = fnv;


/***/ }),

/***/ 3332:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mul64 = exports.mul32 = exports.swap32 = void 0;
function swap32(val) {
    return (((val & 0xff) << 24) |
        ((val & 0xff00) << 8) |
        ((val >> 8) & 0xff00) |
        ((val >> 24) & 0xff));
}
exports.swap32 = swap32;
function n16(n) {
    return n & 0xffff;
}
function n32(n) {
    return n >>> 0;
}
function add32WithCarry(a, b) {
    const added = n32(a) + n32(b);
    return [n32(added), added > 0xffffffff ? 1 : 0];
}
function mul32WithCarry(a, b) {
    const al = n16(a);
    const ah = n16(a >>> 16);
    const bl = n16(b);
    const bh = n16(b >>> 16);
    const [t, tc] = add32WithCarry(al * bh, ah * bl);
    const [n, nc] = add32WithCarry(al * bl, n32(t << 16));
    const carry = nc + (tc << 16) + n16(t >>> 16) + ah * bh;
    return [n, carry];
}
/**
 * mul32 performs 32-bit multiplication, a * b
 * @param a
 * @param b
 */
function mul32(a, b) {
    // https://stackoverflow.com/a/28151933
    const al = n16(a);
    const ah = a - al;
    return n32(n32(ah * b) + al * b);
}
exports.mul32 = mul32;
/**
 * mul64 performs 64-bit multiplication with two 32-bit words
 * @param [ah, al]
 * @param [bh, bl]
 */
function mul64([ah, al], [bh, bl]) {
    const [n, c] = mul32WithCarry(al, bl);
    return [n32(mul32(al, bh) + mul32(ah, bl) + c), n];
}
exports.mul64 = mul64;


/***/ }),

/***/ 2477:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isInstantiated = exports.instantiateWithInstance = exports.instantiate = exports.DigestContext = exports.digest = void 0;
// @generated file from wasmbuild -- do not edit
// deno-lint-ignore-file
// deno-fmt-ignore-file
// source-hash: d82bd0cc6a4139f431c6218fad456d28fd8644c2
let wasm;
const heap = new Array(32).fill(undefined);
heap.push(undefined, null, true, false);
function getObject(idx) {
    return heap[idx];
}
let heap_next = heap.length;
function dropObject(idx) {
    if (idx < 36)
        return;
    heap[idx] = heap_next;
    heap_next = idx;
}
function takeObject(idx) {
    const ret = getObject(idx);
    dropObject(idx);
    return ret;
}
function addHeapObject(obj) {
    if (heap_next === heap.length)
        heap.push(heap.length + 1);
    const idx = heap_next;
    heap_next = heap[idx];
    heap[idx] = obj;
    return idx;
}
const cachedTextDecoder = new TextDecoder("utf-8", {
    ignoreBOM: true,
    fatal: true,
});
cachedTextDecoder.decode();
let cachedUint8Memory0 = new Uint8Array();
function getUint8Memory0() {
    if (cachedUint8Memory0.byteLength === 0) {
        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);
    }
    return cachedUint8Memory0;
}
function getStringFromWasm0(ptr, len) {
    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));
}
let WASM_VECTOR_LEN = 0;
const cachedTextEncoder = new TextEncoder("utf-8");
const encodeString = function (arg, view) {
    return cachedTextEncoder.encodeInto(arg, view);
};
function passStringToWasm0(arg, malloc, realloc) {
    if (realloc === undefined) {
        const buf = cachedTextEncoder.encode(arg);
        const ptr = malloc(buf.length);
        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);
        WASM_VECTOR_LEN = buf.length;
        return ptr;
    }
    let len = arg.length;
    let ptr = malloc(len);
    const mem = getUint8Memory0();
    let offset = 0;
    for (; offset < len; offset++) {
        const code = arg.charCodeAt(offset);
        if (code > 0x7F)
            break;
        mem[ptr + offset] = code;
    }
    if (offset !== len) {
        if (offset !== 0) {
            arg = arg.slice(offset);
        }
        ptr = realloc(ptr, len, len = offset + arg.length * 3);
        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);
        const ret = encodeString(arg, view);
        offset += ret.written;
    }
    WASM_VECTOR_LEN = offset;
    return ptr;
}
function isLikeNone(x) {
    return x === undefined || x === null;
}
let cachedInt32Memory0 = new Int32Array();
function getInt32Memory0() {
    if (cachedInt32Memory0.byteLength === 0) {
        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);
    }
    return cachedInt32Memory0;
}
function getArrayU8FromWasm0(ptr, len) {
    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);
}
/**
 * Returns the digest of the given `data` using the given hash `algorithm`.
 *
 * `length` will usually be left `undefined` to use the default length for
 * the algorithm. For algorithms with variable-length output, it can be used
 * to specify a non-negative integer number of bytes.
 *
 * An error will be thrown if `algorithm` is not a supported hash algorithm or
 * `length` is not a supported length for the algorithm.
 * @param {string} algorithm
 * @param {Uint8Array} data
 * @param {number | undefined} length
 * @returns {Uint8Array}
 */
function digest(algorithm, data, length) {
    try {
        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
        const ptr0 = passStringToWasm0(algorithm, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);
        const len0 = WASM_VECTOR_LEN;
        wasm.digest(retptr, ptr0, len0, addHeapObject(data), !isLikeNone(length), isLikeNone(length) ? 0 : length);
        var r0 = getInt32Memory0()[retptr / 4 + 0];
        var r1 = getInt32Memory0()[retptr / 4 + 1];
        var r2 = getInt32Memory0()[retptr / 4 + 2];
        var r3 = getInt32Memory0()[retptr / 4 + 3];
        if (r3) {
            throw takeObject(r2);
        }
        var v1 = getArrayU8FromWasm0(r0, r1).slice();
        wasm.__wbindgen_free(r0, r1 * 1);
        return v1;
    }
    finally {
        wasm.__wbindgen_add_to_stack_pointer(16);
    }
}
exports.digest = digest;
const DigestContextFinalization = new FinalizationRegistry((ptr) => wasm.__wbg_digestcontext_free(ptr));
/**
 * A context for incrementally computing a digest using a given hash algorithm.
 */
class DigestContext {
    static __wrap(ptr) {
        const obj = Object.create(DigestContext.prototype);
        obj.ptr = ptr;
        DigestContextFinalization.register(obj, obj.ptr, obj);
        return obj;
    }
    __destroy_into_raw() {
        const ptr = this.ptr;
        this.ptr = 0;
        DigestContextFinalization.unregister(this);
        return ptr;
    }
    free() {
        const ptr = this.__destroy_into_raw();
        wasm.__wbg_digestcontext_free(ptr);
    }
    /**
     * Creates a new context incrementally computing a digest using the given
     * hash algorithm.
     *
     * An error will be thrown if `algorithm` is not a supported hash algorithm.
     * @param {string} algorithm
     */
    constructor(algorithm) {
        try {
            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
            const ptr0 = passStringToWasm0(algorithm, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);
            const len0 = WASM_VECTOR_LEN;
            wasm.digestcontext_new(retptr, ptr0, len0);
            var r0 = getInt32Memory0()[retptr / 4 + 0];
            var r1 = getInt32Memory0()[retptr / 4 + 1];
            var r2 = getInt32Memory0()[retptr / 4 + 2];
            if (r2) {
                throw takeObject(r1);
            }
            return DigestContext.__wrap(r0);
        }
        finally {
            wasm.__wbindgen_add_to_stack_pointer(16);
        }
    }
    /**
     * Update the digest's internal state with the additional input `data`.
     *
     * If the `data` array view is large, it will be split into subarrays (via
     * JavaScript bindings) which will be processed sequentially in order to
     * limit the amount of memory that needs to be allocated in the Wasm heap.
     * @param {Uint8Array} data
     */
    update(data) {
        try {
            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
            wasm.digestcontext_update(retptr, this.ptr, addHeapObject(data));
            var r0 = getInt32Memory0()[retptr / 4 + 0];
            var r1 = getInt32Memory0()[retptr / 4 + 1];
            if (r1) {
                throw takeObject(r0);
            }
        }
        finally {
            wasm.__wbindgen_add_to_stack_pointer(16);
        }
    }
    /**
     * Returns the digest of the input data so far. This may be called repeatedly
     * without side effects.
     *
     * `length` will usually be left `undefined` to use the default length for
     * the algorithm. For algorithms with variable-length output, it can be used
     * to specify a non-negative integer number of bytes.
     *
     * An error will be thrown if `algorithm` is not a supported hash algorithm or
     * `length` is not a supported length for the algorithm.
     * @param {number | undefined} length
     * @returns {Uint8Array}
     */
    digest(length) {
        try {
            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
            wasm.digestcontext_digest(retptr, this.ptr, !isLikeNone(length), isLikeNone(length) ? 0 : length);
            var r0 = getInt32Memory0()[retptr / 4 + 0];
            var r1 = getInt32Memory0()[retptr / 4 + 1];
            var r2 = getInt32Memory0()[retptr / 4 + 2];
            var r3 = getInt32Memory0()[retptr / 4 + 3];
            if (r3) {
                throw takeObject(r2);
            }
            var v0 = getArrayU8FromWasm0(r0, r1).slice();
            wasm.__wbindgen_free(r0, r1 * 1);
            return v0;
        }
        finally {
            wasm.__wbindgen_add_to_stack_pointer(16);
        }
    }
    /**
     * Returns the digest of the input data so far, and resets this context to
     * its initial state, as though it has not yet been provided with any input
     * data. (It will still use the same algorithm.)
     *
     * `length` will usually be left `undefined` to use the default length for
     * the algorithm. For algorithms with variable-length output, it can be used
     * to specify a non-negative integer number of bytes.
     *
     * An error will be thrown if `algorithm` is not a supported hash algorithm or
     * `length` is not a supported length for the algorithm.
     * @param {number | undefined} length
     * @returns {Uint8Array}
     */
    digestAndReset(length) {
        try {
            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
            wasm.digestcontext_digestAndReset(retptr, this.ptr, !isLikeNone(length), isLikeNone(length) ? 0 : length);
            var r0 = getInt32Memory0()[retptr / 4 + 0];
            var r1 = getInt32Memory0()[retptr / 4 + 1];
            var r2 = getInt32Memory0()[retptr / 4 + 2];
            var r3 = getInt32Memory0()[retptr / 4 + 3];
            if (r3) {
                throw takeObject(r2);
            }
            var v0 = getArrayU8FromWasm0(r0, r1).slice();
            wasm.__wbindgen_free(r0, r1 * 1);
            return v0;
        }
        finally {
            wasm.__wbindgen_add_to_stack_pointer(16);
        }
    }
    /**
     * Returns the digest of the input data so far, and then drops the context
     * from memory on the Wasm side. This context must no longer be used, and any
     * further method calls will result in null pointer errors being thrown.
     * https://github.com/rustwasm/wasm-bindgen/blob/bf39cfd8/crates/backend/src/codegen.rs#L186
     *
     * `length` will usually be left `undefined` to use the default length for
     * the algorithm. For algorithms with variable-length output, it can be used
     * to specify a non-negative integer number of bytes.
     *
     * An error will be thrown if `algorithm` is not a supported hash algorithm or
     * `length` is not a supported length for the algorithm.
     * @param {number | undefined} length
     * @returns {Uint8Array}
     */
    digestAndDrop(length) {
        try {
            const ptr = this.__destroy_into_raw();
            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
            wasm.digestcontext_digestAndDrop(retptr, ptr, !isLikeNone(length), isLikeNone(length) ? 0 : length);
            var r0 = getInt32Memory0()[retptr / 4 + 0];
            var r1 = getInt32Memory0()[retptr / 4 + 1];
            var r2 = getInt32Memory0()[retptr / 4 + 2];
            var r3 = getInt32Memory0()[retptr / 4 + 3];
            if (r3) {
                throw takeObject(r2);
            }
            var v0 = getArrayU8FromWasm0(r0, r1).slice();
            wasm.__wbindgen_free(r0, r1 * 1);
            return v0;
        }
        finally {
            wasm.__wbindgen_add_to_stack_pointer(16);
        }
    }
    /**
     * Resets this context to its initial state, as though it has not yet been
     * provided with any input data. (It will still use the same algorithm.)
     */
    reset() {
        try {
            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
            wasm.digestcontext_reset(retptr, this.ptr);
            var r0 = getInt32Memory0()[retptr / 4 + 0];
            var r1 = getInt32Memory0()[retptr / 4 + 1];
            if (r1) {
                throw takeObject(r0);
            }
        }
        finally {
            wasm.__wbindgen_add_to_stack_pointer(16);
        }
    }
    /**
     * Returns a new `DigestContext` that is a copy of this one, i.e., using the
     * same algorithm and with a copy of the same internal state.
     *
     * This may be a more efficient option for computing multiple digests that
     * start with a common prefix.
     * @returns {DigestContext}
     */
    clone() {
        const ret = wasm.digestcontext_clone(this.ptr);
        return DigestContext.__wrap(ret);
    }
}
exports.DigestContext = DigestContext;
const imports = {
    __wbindgen_placeholder__: {
        __wbg_new_db254ae0a1bb0ff5: function (arg0, arg1) {
            const ret = new TypeError(getStringFromWasm0(arg0, arg1));
            return addHeapObject(ret);
        },
        __wbindgen_object_drop_ref: function (arg0) {
            takeObject(arg0);
        },
        __wbg_byteLength_87a0436a74adc26c: function (arg0) {
            const ret = getObject(arg0).byteLength;
            return ret;
        },
        __wbg_byteOffset_4477d54710af6f9b: function (arg0) {
            const ret = getObject(arg0).byteOffset;
            return ret;
        },
        __wbg_buffer_21310ea17257b0b4: function (arg0) {
            const ret = getObject(arg0).buffer;
            return addHeapObject(ret);
        },
        __wbg_newwithbyteoffsetandlength_d9aa266703cb98be: function (arg0, arg1, arg2) {
            const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);
            return addHeapObject(ret);
        },
        __wbg_length_9e1ae1900cb0fbd5: function (arg0) {
            const ret = getObject(arg0).length;
            return ret;
        },
        __wbindgen_memory: function () {
            const ret = wasm.memory;
            return addHeapObject(ret);
        },
        __wbg_buffer_3f3d764d4747d564: function (arg0) {
            const ret = getObject(arg0).buffer;
            return addHeapObject(ret);
        },
        __wbg_new_8c3f0052272a457a: function (arg0) {
            const ret = new Uint8Array(getObject(arg0));
            return addHeapObject(ret);
        },
        __wbg_set_83db9690f9353e79: function (arg0, arg1, arg2) {
            getObject(arg0).set(getObject(arg1), arg2 >>> 0);
        },
        __wbindgen_throw: function (arg0, arg1) {
            throw new Error(getStringFromWasm0(arg0, arg1));
        },
    },
};
/** Instantiates an instance of the Wasm module returning its functions.
 * @remarks It is safe to call this multiple times and once successfully
 * loaded it will always return a reference to the same object.
 */
function instantiate() {
    return instantiateWithInstance().exports;
}
exports.instantiate = instantiate;
let instanceWithExports;
/** Instantiates an instance of the Wasm module along with its exports.
 * @remarks It is safe to call this multiple times and once successfully
 * loaded it will always return a reference to the same object.
 * @returns {{
 *   instance: WebAssembly.Instance;
 *   exports: { digest: typeof digest; DigestContext : typeof DigestContext  }
 * }}
 */
function instantiateWithInstance() {
    if (instanceWithExports == null) {
        const instance = instantiateInstance();
        wasm = instance.exports;
        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);
        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);
        instanceWithExports = {
            instance,
            exports: { digest, DigestContext },
        };
    }
    return instanceWithExports;
}
exports.instantiateWithInstance = instantiateWithInstance;
/** Gets if the Wasm module has been instantiated. */
function isInstantiated() {
    return instanceWithExports != null;
}
exports.isInstantiated = isInstantiated;
function instantiateInstance() {
    const wasmBytes = base64decode("\
AGFzbQEAAAABrIGAgAAZYAAAYAABf2ABfwBgAX8Bf2ABfwF+YAJ/fwBgAn9/AX9gA39/fwBgA39/fw\
F/YAR/f39/AGAEf39/fwF/YAV/f39/fwBgBX9/f39/AX9gBn9/f39/fwBgBn9/f39/fwF/YAV/f39+\
fwBgB39/f35/f38Bf2ADf39+AGAFf39+f38AYAV/f31/fwBgBX9/fH9/AGACf34AYAR/fn9/AGAEf3\
1/fwBgBH98f38AAqSFgIAADBhfX3diaW5kZ2VuX3BsYWNlaG9sZGVyX18aX193YmdfbmV3X2RiMjU0\
YWUwYTFiYjBmZjUABhhfX3diaW5kZ2VuX3BsYWNlaG9sZGVyX18aX193YmluZGdlbl9vYmplY3RfZH\
JvcF9yZWYAAhhfX3diaW5kZ2VuX3BsYWNlaG9sZGVyX18hX193YmdfYnl0ZUxlbmd0aF84N2EwNDM2\
YTc0YWRjMjZjAAMYX193YmluZGdlbl9wbGFjZWhvbGRlcl9fIV9fd2JnX2J5dGVPZmZzZXRfNDQ3N2\
Q1NDcxMGFmNmY5YgADGF9fd2JpbmRnZW5fcGxhY2Vob2xkZXJfXx1fX3diZ19idWZmZXJfMjEzMTBl\
YTE3MjU3YjBiNAADGF9fd2JpbmRnZW5fcGxhY2Vob2xkZXJfXzFfX3diZ19uZXd3aXRoYnl0ZW9mZn\
NldGFuZGxlbmd0aF9kOWFhMjY2NzAzY2I5OGJlAAgYX193YmluZGdlbl9wbGFjZWhvbGRlcl9fHV9f\
d2JnX2xlbmd0aF85ZTFhZTE5MDBjYjBmYmQ1AAMYX193YmluZGdlbl9wbGFjZWhvbGRlcl9fEV9fd2\
JpbmRnZW5fbWVtb3J5AAEYX193YmluZGdlbl9wbGFjZWhvbGRlcl9fHV9fd2JnX2J1ZmZlcl8zZjNk\
NzY0ZDQ3NDdkNTY0AAMYX193YmluZGdlbl9wbGFjZWhvbGRlcl9fGl9fd2JnX25ld184YzNmMDA1Mj\
I3MmE0NTdhAAMYX193YmluZGdlbl9wbGFjZWhvbGRlcl9fGl9fd2JnX3NldF84M2RiOTY5MGY5MzUz\
ZTc5AAcYX193YmluZGdlbl9wbGFjZWhvbGRlcl9fEF9fd2JpbmRnZW5fdGhyb3cABQORgYCAAI8BCw\
cLBwMJEQUHBwUHDwMHBQgFEAUFAgcHBQIGBwYHFQgHDgcHBwEGAQEBAQcIBwcHAQcHBwEIBwcHBwcF\
AgcHBwcHAQEHBwUNCAcJBwkBAQEBAQUBCQ0LCQUFBQUFBQYGBwcHBwICCAcHBQIKAAUCAwICDgwLDA\
sLExQSCQgIBgYFBwcABgMAAAUICAgEAAIEhYCAgAABcAEVFQWDgICAAAEAEQaJgICAAAF/AUGAgMAA\
Cwe5goCAAA4GbWVtb3J5AgAGZGlnZXN0AFMYX193YmdfZGlnZXN0Y29udGV4dF9mcmVlAHARZGlnZX\
N0Y29udGV4dF9uZXcAVxRkaWdlc3Rjb250ZXh0X3VwZGF0ZQBzFGRpZ2VzdGNvbnRleHRfZGlnZXN0\
AFYcZGlnZXN0Y29udGV4dF9kaWdlc3RBbmRSZXNldABYG2RpZ2VzdGNvbnRleHRfZGlnZXN0QW5kRH\
JvcABgE2RpZ2VzdGNvbnRleHRfcmVzZXQAHxNkaWdlc3Rjb250ZXh0X2Nsb25lABAfX193YmluZGdl\
bl9hZGRfdG9fc3RhY2tfcG9pbnRlcgCRARFfX3diaW5kZ2VuX21hbGxvYwB7El9fd2JpbmRnZW5fcm\
VhbGxvYwCIAQ9fX3diaW5kZ2VuX2ZyZWUAjAEJqICAgAABAEEBCxSKAYsBKJABf2GAAYEBfokBhwGC\
AYMBhAGFAYYBmgFrapgBCuSSiYAAjwHWggECEX8CfiMAQcApayIFJAACQAJAAkACQAJAAkACQAJAAk\
ACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQCABDhoAAQIDBAUGBwgJ\
CgsMDQ4PEBESExQVFhcYGQALQdABEBkiBkUNGiAFQdAUakE4aiACQThqKQMANwMAIAVB0BRqQTBqIA\
JBMGopAwA3AwAgBUHQFGpBKGogAkEoaikDADcDACAFQdAUakEgaiACQSBqKQMANwMAIAVB0BRqQRhq\
IAJBGGopAwA3AwAgBUHQFGpBEGogAkEQaikDADcDACAFQdAUakEIaiACQQhqKQMANwMAIAUgAikDAD\
cD0BQgAikDQCEWIAVB0BRqQcgAaiACQcgAahBkIAUgFjcDkBUgBiAFQdAUakHQARCWARoMGQtB0AEQ\
GSIGRQ0ZIAVB0BRqQThqIAJBOGopAwA3AwAgBUHQFGpBMGogAkEwaikDADcDACAFQdAUakEoaiACQS\
hqKQMANwMAIAVB0BRqQSBqIAJBIGopAwA3AwAgBUHQFGpBGGogAkEYaikDADcDACAFQdAUakEQaiAC\
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\
QfAAEJYBGgwFC0HYARAZIgZFDQUgBUHQFGpBOGogAkE4aikDADcDACAFQdAUakEwaiACQTBqKQMANw\
MAIAVB0BRqQShqIAJBKGopAwA3AwAgBUHQFGpBIGogAkEgaikDADcDACAFQdAUakEYaiACQRhqKQMA\
NwMAIAVB0BRqQRBqIAJBEGopAwA3AwAgBUHQFGpBCGogAkEIaikDADcDACAFIAIpAwA3A9AUIAJByA\
BqKQMAIRYgAikDQCEXIAVB0BRqQdAAaiACQdAAahBkIAVB0BRqQcgAaiAWNwMAIAUgFzcDkBUgBiAF\
QdAUakHYARCWARoMBAtB2AEQGSIGRQ0EIAVB0BRqQThqIAJBOGopAwA3AwAgBUHQFGpBMGogAkEwai\
kDADcDACAFQdAUakEoaiACQShqKQMANwMAIAVB0BRqQSBqIAJBIGopAwA3AwAgBUHQFGpBGGogAkEY\
aikDADcDACAFQdAUakEQaiACQRBqKQMANwMAIAVB0BRqQQhqIAJBCGopAwA3AwAgBSACKQMANwPQFC\
ACQcgAaikDACEWIAIpA0AhFyAFQdAUakHQAGogAkHQAGoQZCAFQdAUakHIAGogFjcDACAFIBc3A5AV\
IAYgBUHQFGpB2AEQlgEaDAMLQfgCEBkiBkUNAyAFQdAUaiACQcgBEJYBGiAFQdAUakHIAWogAkHIAW\
oQaSAGIAVB0BRqQfgCEJYBGgwCC0HYAhAZIgZFDQIgBUHQFGogAkHIARCWARogBUHQFGpByAFqIAJB\
yAFqEGYgBiAFQdAUakHYAhCWARoMAQtB6AAQGSIGRQ0BIAVB0BRqQRBqIAJBEGopAwA3AwAgBUHQFG\
pBGGogAkEYaikDADcDACAFIAIpAwg3A9gUIAIpAwAhFiAFQdAUakEgaiACQSBqEFIgBSAWNwPQFCAG\
IAVB0BRqQegAEJYBGgsCQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQA\
JAAkACQAJAAkACQAJAAkACQAJAAkACQCADQQFHDQBBICECAkACQAJAAkACQAJAAkACQAJAAkACQAJA\
AkACQAJAAkACQCABDhoAAQIQAxASBBAFBgcHCAgJEAoLDBANDhISDwALQcAAIQIMDwtBECECDA4LQR\
whAgwNC0EwIQIMDAtBHCECDAsLQTAhAgwKC0HAACECDAkLQRAhAgwIC0EUIQIMBwtBHCECDAYLQTAh\
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\
ASABKQP4DjcD0BQgASABKQLUFDcD+CcgAUHQFGogAUHgAhCWARogAUHQFGogAUGYFmogAUH4J2oQOU\
EcEBkiAkUNGCACIAEpA/gnNwAAIAJBGGogCCgCADYAACACQRBqIAMpAwA3AAAgAkEIaiAJKQMANwAA\
DBcLIAUgBkHYAhCWASIBQfgOakEMakIANwIAIAFB+A5qQRRqQgA3AgAgAUH4DmpBHGpCADcCACABQg\
A3AvwOIAFBADYC+A4gAUH4DmogAUH4DmpBBHJBf3NqQSRqQQdJGkEgIQQgAUEgNgL4DiABQdAUakEQ\
aiABQfgOakEQaikDADcDACABQdAUakEIaiABQfgOakEIaikDADcDACABQdAUakEYaiABQfgOakEYai\
kDADcDACABQdAUakEgaiABQfgOakEgaigCADYCACABQfgnakEIaiIJIAFB0BRqQQxqKQIANwMAIAFB\
+CdqQRBqIgMgAUHQFGpBFGopAgA3AwAgAUH4J2pBGGoiCCABQdAUakEcaikCADcDACABIAEpA/gONw\
PQFCABIAEpAtQUNwP4JyABQdAUaiABQdgCEJYBGiABQdAUaiABQZgWaiABQfgnahBCQSAQGSICRQ0X\
IAIgASkD+Cc3AAAgAkEYaiAIKQMANwAAIAJBEGogAykDADcAACACQQhqIAkpAwA3AAAMFgsgBSAGQb\
gCEJYBIgFB+A5qQQxqQgA3AgAgAUH4DmpBFGpCADcCACABQfgOakEcakIANwIAIAFB+A5qQSRqQgA3\
AgAgAUH4DmpBLGpCADcCACABQgA3AvwOIAFBADYC+A4gAUH4DmogAUH4DmpBBHJBf3NqQTRqQQdJGk\
EwIQQgAUEwNgL4DiABQdAUakEQaiABQfgOakEQaikDADcDACABQdAUakEIaiABQfgOakEIaikDADcD\
ACABQdAUakEYaiABQfgOakEYaikDADcDACABQdAUakEgaiABQfgOakEgaikDADcDACABQdAUakEoai\
ABQfgOakEoaikDADcDACABQdAUakEwaiABQfgOakEwaigCADYCACABQfgnakEIaiIJIAFB0BRqQQxq\
KQIANwMAIAFB+CdqQRBqIgMgAUHQFGpBFGopAgA3AwAgAUH4J2pBGGoiCCABQdAUakEcaikCADcDAC\
ABQfgnakEgaiIHIAFB0BRqQSRqKQIANwMAIAFB+CdqQShqIgwgAUHQFGpBLGopAgA3AwAgASABKQP4\
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\
AvwOIAFBADYC+A5BBCECIAFB+A5qIAFB+A5qQQRyQX9zakEgaiEEA0AgAkF/aiICDQALAkAgBEEHSQ\
0AQRghAgNAIAJBeGoiAg0ACwtBHCEEIAFBHDYC+A4gAUHQFGpBEGogAUH4DmpBEGopAwA3AwAgAUHQ\
FGpBCGogAUH4DmpBCGopAwA3AwAgAUHQFGpBGGogAUH4DmpBGGopAwA3AwAgAUH4J2pBCGoiCSABQd\
wUaikCADcDACABQfgnakEQaiIDIAFB5BRqKQIANwMAIAFB+CdqQRhqIgggAUHQFGpBHGooAgA2AgAg\
ASABKQP4DjcD0BQgASABKQLUFDcD+CcgAUHQFGogAUHgAhCWARogAUHQFGogAUGYFmogAUH4J2oQOk\
EcEBkiAkUNECACIAEpA/gnNwAAIAJBGGogCCgCADYAACACQRBqIAMpAwA3AAAgAkEIaiAJKQMANwAA\
DA8LIAUgBkHYAhCWASIBQfgOakEMakIANwIAIAFB+A5qQRRqQgA3AgAgAUH4DmpBHGpCADcCACABQg\
A3AvwOIAFBADYC+A4gAUH4DmogAUH4DmpBBHJBf3NqQSRqQQdJGkEgIQQgAUEgNgL4DiABQdAUakEQ\
aiABQfgOakEQaikDADcDACABQdAUakEIaiABQfgOakEIaikDADcDACABQdAUakEYaiABQfgOakEYai\
kDADcDACABQdAUakEgaiABQfgOakEgaigCADYCACABQfgnakEIaiIJIAFB0BRqQQxqKQIANwMAIAFB\
+CdqQRBqIgMgAUHQFGpBFGopAgA3AwAgAUH4J2pBGGoiCCABQdAUakEcaikCADcDACABIAEpA/gONw\
PQFCABIAEpAtQUNwP4JyABQdAUaiABQdgCEJYBGiABQdAUaiABQZgWaiABQfgnahBDQSAQGSICRQ0P\
IAIgASkD+Cc3AAAgAkEYaiAIKQMANwAAIAJBEGogAykDADcAACACQQhqIAkpAwA3AAAMDgsgBSAGQb\
gCEJYBIgFB+A5qQQxqQgA3AgAgAUH4DmpBFGpCADcCACABQfgOakEcakIANwIAIAFB+A5qQSRqQgA3\
AgAgAUH4DmpBLGpCADcCACABQgA3AvwOIAFBADYC+A4gAUH4DmogAUH4DmpBBHJBf3NqQTRqQQdJGk\
EwIQQgAUEwNgL4DiABQdAUakEQaiABQfgOakEQaikDADcDACABQdAUakEIaiABQfgOakEIaikDADcD\
ACABQdAUakEYaiABQfgOakEYaikDADcDACABQdAUakEgaiABQfgOakEgaikDADcDACABQdAUakEoai\
ABQfgOakEoaikDADcDACABQdAUakEwaiABQfgOakEwaigCADYCACABQfgnakEIaiIJIAFB0BRqQQxq\
KQIANwMAIAFB+CdqQRBqIgMgAUHQFGpBFGopAgA3AwAgAUH4J2pBGGoiCCABQdAUakEcaikCADcDAC\
ABQfgnakEgaiIHIAFB0BRqQSRqKQIANwMAIAFB+CdqQShqIgwgAUHQFGpBLGopAgA3AwAgASABKQP4\
DjcD0BQgASABKQLUFDcD+CcgAUHQFGogAUG4AhCWARogAUHQFGogAUGYFmogAUH4J2oQS0EwEBkiAk\
UNDiACIAEpA/gnNwAAIAJBKGogDCkDADcAACACQSBqIAcpAwA3AAAgAkEYaiAIKQMANwAAIAJBEGog\
AykDADcAACACQQhqIAkpAwA3AAAMDQsgBSAGQZgCEJYBIgFB+A5qQQxqQgA3AgAgAUH4DmpBFGpCAD\
cCACABQfgOakEcakIANwIAIAFB+A5qQSRqQgA3AgAgAUH4DmpBLGpCADcCACABQfgOakE0akIANwIA\
IAFB+A5qQTxqQgA3AgAgAUIANwL8DiABQQA2AvgOIAFB+A5qIAFB+A5qQQRyQX9zakHEAGpBB0kaQc\
AAIQQgAUHAADYC+A4gAUHQFGogAUH4DmpBxAAQlgEaIAFB+CdqQThqIgkgAUHQFGpBPGopAgA3AwAg\
AUH4J2pBMGoiAyABQdAUakE0aikCADcDACABQfgnakEoaiIIIAFB0BRqQSxqKQIANwMAIAFB+CdqQS\
BqIgcgAUHQFGpBJGopAgA3AwAgAUH4J2pBGGoiDCABQdAUakEcaikCADcDACABQfgnakEQaiILIAFB\
0BRqQRRqKQIANwMAIAFB+CdqQQhqIg0gAUHQFGpBDGopAgA3AwAgASABKQLUFDcD+CcgAUHQFGogAU\
GYAhCWARogAUHQFGogAUGYFmogAUH4J2oQTUHAABAZIgJFDQ0gAiABKQP4JzcAACACQThqIAkpAwA3\
AAAgAkEwaiADKQMANwAAIAJBKGogCCkDADcAACACQSBqIAcpAwA3AAAgAkEYaiAMKQMANwAAIAJBEG\
ogCykDADcAACACQQhqIA0pAwA3AAAMDAsgBSAGQfAAEJYBIQRBBCECA0AgAkF/aiICDQALAkBBG0EH\
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\
ADcDACAFQagHakEoaiIBIAVBgANqQSxqKQIANwMAIAVBqAdqQSBqIgMgBUGAA2pBJGopAgA3AwAgBU\
GoB2pBGGoiBiAFQYADakEcaikCADcDACAFQagHakEQaiIHIAVBgANqQRRqKQIANwMAIAVBqAdqQQhq\
IgggBUGAA2pBDGopAgA3AwAgBSAFKQKEAzcDqAcgAiACQdAAaiAFQagHahAjIAVBgANqQShqIgkgAS\
kDADcDACAFQYADakEgaiIKIAMpAwA3AwAgBUGAA2pBGGoiAyAGKQMANwMAIAVBgANqQRBqIgYgBykD\
ADcDACAFQYADakEIaiIHIAgpAwA3AwAgBSAFKQOoBzcDgAMgAkHIAGpCADcDACACQgA3A0AgAkE4ak\
EAKQPAjkA3AwAgAkEwakEAKQO4jkA3AwAgAkEoakEAKQOwjkA3AwAgAkEgakEAKQOojkA3AwAgAkEY\
akEAKQOgjkA3AwAgAkEQakEAKQOYjkA3AwAgAkEIakEAKQOQjkA3AwAgAkEAKQOIjkA3AwAgAkHQAW\
pBADoAAEEwEBkiAUUNCyABIAUpA4ADNwAAIAFBKGogCSkDADcAACABQSBqIAopAwA3AAAgAUEYaiAD\
KQMANwAAIAFBEGogBikDADcAACABQQhqIAcpAwA3AAAMCgsgBUHYCGpBDGpCADcCACAFQdgIakEUak\
IANwIAIAVB2AhqQRxqQgA3AgAgBUHYCGpBJGpCADcCACAFQdgIakEsakIANwIAIAVB2AhqQTRqQgA3\
AgAgBUHYCGpBPGpCADcCACAFQgA3AtwIIAVBADYC2AggBUHYCGogBUHYCGpBBHJBf3NqQcQAakEHSR\
pBwAAhBCAFQcAANgLYCCAFQYADaiAFQdgIakHEABCWARogBUGoB2pBOGoiASAFQYADakE8aikCADcD\
ACAFQagHakEwaiIDIAVBgANqQTRqKQIANwMAIAVBqAdqQShqIgYgBUGAA2pBLGopAgA3AwAgBUGoB2\
pBIGoiByAFQYADakEkaikCADcDACAFQagHakEYaiIIIAVBgANqQRxqKQIANwMAIAVBqAdqQRBqIgkg\
BUGAA2pBFGopAgA3AwAgBUGoB2pBCGoiCiAFQYADakEMaikCADcDACAFIAUpAoQDNwOoByACIAJB0A\
BqIAVBqAdqECMgBUGAA2pBOGoiCyABKQMANwMAIAVBgANqQTBqIgwgAykDADcDACAFQYADakEoaiID\
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\
d3NqIBsgH0EZdyAfQQ53cyAfQQN2c2ogEWogJEEPdyAkQQ13cyAkQQp2c2ogHmogIiAlaiIbIAIgIX\
NxICFzaiAbQRp3IBtBFXdzIBtBB3dzakHy8cWzfGoiHmohCyAcIApqIQogIyAJaiEJICAgCGohCCAd\
IAdqIB5qIQcgGyAGaiEGIAIgBWohBSAhIARqIQQgAUHAAGoiASAMRw0ACwsgACAENgIcIAAgBTYCGC\
AAIAY2AhQgACAHNgIQIAAgCDYCDCAAIAk2AgggACAKNgIEIAAgCzYCAAvVQwIKfwR+IwBBgA9rIgEk\
AAJAAkACQAJAIABFDQAgACgCACICQX9GDQEgACACQQFqNgIAIABBCGooAgAhAgJAAkACQAJAAkACQA\
JAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQCAAQQRqKAIAIgMOGgABAgME\
BQYHCAkKCwwNDg8QERITFBUWFxgZAAtB0AEQGSIERQ0cIAFBCGpBOGogAkE4aikDADcDACABQQhqQT\
BqIAJBMGopAwA3AwAgAUEIakEoaiACQShqKQMANwMAIAFBCGpBIGogAkEgaikDADcDACABQQhqQRhq\
IAJBGGopAwA3AwAgAUEIakEQaiACQRBqKQMANwMAIAFBCGpBCGogAkEIaikDADcDACABIAIpAwA3Aw\
ggAikDQCELIAFBCGpByABqIAJByABqEGQgASALNwNIIAQgAUEIakHQARCWARoMGQtB0AEQGSIERQ0b\
IAFBCGpBOGogAkE4aikDADcDACABQQhqQTBqIAJBMGopAwA3AwAgAUEIakEoaiACQShqKQMANwMAIA\
FBCGpBIGogAkEgaikDADcDACABQQhqQRhqIAJBGGopAwA3AwAgAUEIakEQaiACQRBqKQMANwMAIAFB\
CGpBCGogAkEIaikDADcDACABIAIpAwA3AwggAikDQCELIAFBCGpByABqIAJByABqEGQgASALNwNIIA\
QgAUEIakHQARCWARoMGAtB0AEQGSIERQ0aIAFBCGpBOGogAkE4aikDADcDACABQQhqQTBqIAJBMGop\
AwA3AwAgAUEIakEoaiACQShqKQMANwMAIAFBCGpBIGogAkEgaikDADcDACABQQhqQRhqIAJBGGopAw\
A3AwAgAUEIakEQaiACQRBqKQMANwMAIAFBCGpBCGogAkEIaikDADcDACABIAIpAwA3AwggAikDQCEL\
IAFBCGpByABqIAJByABqEGQgASALNwNIIAQgAUEIakHQARCWARoMFwtB0AEQGSIERQ0ZIAFBCGpBOG\
ogAkE4aikDADcDACABQQhqQTBqIAJBMGopAwA3AwAgAUEIakEoaiACQShqKQMANwMAIAFBCGpBIGog\
AkEgaikDADcDACABQQhqQRhqIAJBGGopAwA3AwAgAUEIakEQaiACQRBqKQMANwMAIAFBCGpBCGogAk\
EIaikDADcDACABIAIpAwA3AwggAikDQCELIAFBCGpByABqIAJByABqEGQgASALNwNIIAQgAUEIakHQ\
ARCWARoMFgtB0AEQGSIERQ0YIAFBCGpBOGogAkE4aikDADcDACABQQhqQTBqIAJBMGopAwA3AwAgAU\
EIakEoaiACQShqKQMANwMAIAFBCGpBIGogAkEgaikDADcDACABQQhqQRhqIAJBGGopAwA3AwAgAUEI\
akEQaiACQRBqKQMANwMAIAFBCGpBCGogAkEIaikDADcDACABIAIpAwA3AwggAikDQCELIAFBCGpByA\
BqIAJByABqEGQgASALNwNIIAQgAUEIakHQARCWARoMFQtB8AAQGSIERQ0XIAFBCGpBIGogAkEgaikD\
ADcDACABQQhqQRhqIAJBGGopAwA3AwAgAUEIakEQaiACQRBqKQMANwMAIAEgAikDCDcDECACKQMAIQ\
sgAUEIakEoaiACQShqEFIgASALNwMIIAQgAUEIakHwABCWARoMFAtB+A4QGSIERQ0WIAFBCGpBiAFq\
IAJBiAFqKQMANwMAIAFBCGpBgAFqIAJBgAFqKQMANwMAIAFBCGpB+ABqIAJB+ABqKQMANwMAIAEgAi\
kDcDcDeCABQQhqQRBqIAJBEGopAwA3AwAgAUEIakEYaiACQRhqKQMANwMAIAFBCGpBIGogAkEgaikD\
ADcDACABIAIpAwg3AxAgAikDACELIAFBCGpB4ABqIAJB4ABqKQMANwMAIAFBCGpB2ABqIAJB2ABqKQ\
MANwMAIAFBCGpB0ABqIAJB0ABqKQMANwMAIAFBCGpByABqIAJByABqKQMANwMAIAFBCGpBwABqIAJB\
wABqKQMANwMAIAFBCGpBOGogAkE4aikDADcDACABQQhqQTBqIAJBMGopAwA3AwAgASACKQMoNwMwIA\
ItAGohBSACLQBpIQYgAi0AaCEHIAFBADYCmAECQCACKAKQASIIRQ0AIAJBlAFqIglBCGopAAAhDCAJ\
QRBqKQAAIQ0gCSkAACEOIAFBtAFqIAlBGGopAAA3AgAgAUGsAWogDTcCACABQaQBaiAMNwIAIAFBCG\
pBlAFqIA43AgAgAkG0AWoiCiAJIAhBBXRqIglGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4g\
AUHUAWogCkEYaikAADcCACABQcwBaiANNwIAIAFBxAFqIAw3AgAgAUEIakG0AWogDjcCACACQdQBai\
IKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUH0AWogCkEYaikAADcCACABQewBaiAN\
NwIAIAFB5AFqIAw3AgAgAUEIakHUAWogDjcCACACQfQBaiIKIAlGDQAgCkEIaikAACEMIApBEGopAA\
AhDSAKKQAAIQ4gAUGUAmogCkEYaikAADcCACABQYwCaiANNwIAIAFBhAJqIAw3AgAgAUEIakH0AWog\
DjcCACACQZQCaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUG0AmogCkEYaikAAD\
cCACABQawCaiANNwIAIAFBpAJqIAw3AgAgAUEIakGUAmogDjcCACACQbQCaiIKIAlGDQAgCkEIaikA\
ACEMIApBEGopAAAhDSAKKQAAIQ4gAUHUAmogCkEYaikAADcCACABQcwCaiANNwIAIAFBxAJqIAw3Ag\
AgAUEIakG0AmogDjcCACACQdQCaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUH0\
AmogCkEYaikAADcCACABQewCaiANNwIAIAFB5AJqIAw3AgAgAUEIakHUAmogDjcCACACQfQCaiIKIA\
lGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUGUA2ogCkEYaikAADcCACABQYwDaiANNwIA\
IAFBhANqIAw3AgAgAUEIakH0AmogDjcCACACQZQDaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDS\
AKKQAAIQ4gAUG0A2ogCkEYaikAADcCACABQawDaiANNwIAIAFBpANqIAw3AgAgAUEIakGUA2ogDjcC\
ACACQbQDaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUHUA2ogCkEYaikAADcCAC\
ABQcwDaiANNwIAIAFBxANqIAw3AgAgAUEIakG0A2ogDjcCACACQdQDaiIKIAlGDQAgCkEIaikAACEM\
IApBEGopAAAhDSAKKQAAIQ4gAUH0A2ogCkEYaikAADcCACABQewDaiANNwIAIAFB5ANqIAw3AgAgAU\
EIakHUA2ogDjcCACACQfQDaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUGUBGog\
CkEYaikAADcCACABQYwEaiANNwIAIAFBhARqIAw3AgAgAUEIakH0A2ogDjcCACACQZQEaiIKIAlGDQ\
AgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUG0BGogCkEYaikAADcCACABQawEaiANNwIAIAFB\
pARqIAw3AgAgAUEIakGUBGogDjcCACACQbQEaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQ\
AAIQ4gAUHUBGogCkEYaikAADcCACABQcwEaiANNwIAIAFBxARqIAw3AgAgAUEIakG0BGogDjcCACAC\
QdQEaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUH0BGogCkEYaikAADcCACABQe\
wEaiANNwIAIAFB5ARqIAw3AgAgAUEIakHUBGogDjcCACACQfQEaiIKIAlGDQAgCkEIaikAACEMIApB\
EGopAAAhDSAKKQAAIQ4gAUGUBWogCkEYaikAADcCACABQYwFaiANNwIAIAFBhAVqIAw3AgAgAUEIak\
H0BGogDjcCACACQZQFaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUG0BWogCkEY\
aikAADcCACABQawFaiANNwIAIAFBpAVqIAw3AgAgAUEIakGUBWogDjcCACACQbQFaiIKIAlGDQAgCk\
EIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUHUBWogCkEYaikAADcCACABQcwFaiANNwIAIAFBxAVq\
IAw3AgAgAUEIakG0BWogDjcCACACQdQFaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ\
4gAUH0BWogCkEYaikAADcCACABQewFaiANNwIAIAFB5AVqIAw3AgAgAUEIakHUBWogDjcCACACQfQF\
aiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUGUBmogCkEYaikAADcCACABQYwGai\
ANNwIAIAFBhAZqIAw3AgAgAUEIakH0BWogDjcCACACQZQGaiIKIAlGDQAgCkEIaikAACEMIApBEGop\
AAAhDSAKKQAAIQ4gAUG0BmogCkEYaikAADcCACABQawGaiANNwIAIAFBpAZqIAw3AgAgAUEIakGUBm\
ogDjcCACACQbQGaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUHUBmogCkEYaikA\
ADcCACABQcwGaiANNwIAIAFBxAZqIAw3AgAgAUEIakG0BmogDjcCACACQdQGaiIKIAlGDQAgCkEIai\
kAACEMIApBEGopAAAhDSAKKQAAIQ4gAUH0BmogCkEYaikAADcCACABQewGaiANNwIAIAFB5AZqIAw3\
AgAgAUEIakHUBmogDjcCACACQfQGaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAU\
GUB2ogCkEYaikAADcCACABQYwHaiANNwIAIAFBhAdqIAw3AgAgAUEIakH0BmogDjcCACACQZQHaiIK\
IAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUG0B2ogCkEYaikAADcCACABQawHaiANNw\
IAIAFBpAdqIAw3AgAgAUEIakGUB2ogDjcCACACQbQHaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAh\
DSAKKQAAIQ4gAUHUB2ogCkEYaikAADcCACABQcwHaiANNwIAIAFBxAdqIAw3AgAgAUEIakG0B2ogDj\
cCACACQdQHaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUH0B2ogCkEYaikAADcC\
ACABQewHaiANNwIAIAFB5AdqIAw3AgAgAUEIakHUB2ogDjcCACACQfQHaiIKIAlGDQAgCkEIaikAAC\
EMIApBEGopAAAhDSAKKQAAIQ4gAUGUCGogCkEYaikAADcCACABQYwIaiANNwIAIAFBhAhqIAw3AgAg\
AUEIakH0B2ogDjcCACACQZQIaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUG0CG\
ogCkEYaikAADcCACABQawIaiANNwIAIAFBpAhqIAw3AgAgAUEIakGUCGogDjcCACACQbQIaiIKIAlG\
DQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUHUCGogCkEYaikAADcCACABQcwIaiANNwIAIA\
FBxAhqIAw3AgAgAUEIakG0CGogDjcCACACQdQIaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAK\
KQAAIQ4gAUH0CGogCkEYaikAADcCACABQewIaiANNwIAIAFB5AhqIAw3AgAgAUEIakHUCGogDjcCAC\
ACQfQIaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUGUCWogCkEYaikAADcCACAB\
QYwJaiANNwIAIAFBhAlqIAw3AgAgAUEIakH0CGogDjcCACACQZQJaiIKIAlGDQAgCkEIaikAACEMIA\
pBEGopAAAhDSAKKQAAIQ4gAUG0CWogCkEYaikAADcCACABQawJaiANNwIAIAFBpAlqIAw3AgAgAUEI\
akGUCWogDjcCACACQbQJaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUHUCWogCk\
EYaikAADcCACABQcwJaiANNwIAIAFBxAlqIAw3AgAgAUEIakG0CWogDjcCACACQdQJaiIKIAlGDQAg\
CkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUH0CWogCkEYaikAADcCACABQewJaiANNwIAIAFB5A\
lqIAw3AgAgAUEIakHUCWogDjcCACACQfQJaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAA\
IQ4gAUGUCmogCkEYaikAADcCACABQYwKaiANNwIAIAFBhApqIAw3AgAgAUEIakH0CWogDjcCACACQZ\
QKaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUG0CmogCkEYaikAADcCACABQawK\
aiANNwIAIAFBpApqIAw3AgAgAUEIakGUCmogDjcCACACQbQKaiIKIAlGDQAgCkEIaikAACEMIApBEG\
opAAAhDSAKKQAAIQ4gAUHUCmogCkEYaikAADcCACABQcwKaiANNwIAIAFBxApqIAw3AgAgAUEIakG0\
CmogDjcCACACQdQKaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUH0CmogCkEYai\
kAADcCACABQewKaiANNwIAIAFB5ApqIAw3AgAgAUEIakHUCmogDjcCACACQfQKaiIKIAlGDQAgCkEI\
aikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUGUC2ogCkEYaikAADcCACABQYwLaiANNwIAIAFBhAtqIA\
w3AgAgAUEIakH0CmogDjcCACACQZQLaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4g\
AUG0C2ogCkEYaikAADcCACABQawLaiANNwIAIAFBpAtqIAw3AgAgAUEIakGUC2ogDjcCACACQbQLai\
IKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUHUC2ogCkEYaikAADcCACABQcwLaiAN\
NwIAIAFBxAtqIAw3AgAgAUEIakG0C2ogDjcCACACQdQLaiIKIAlGDQAgCkEIaikAACEMIApBEGopAA\
AhDSAKKQAAIQ4gAUH0C2ogCkEYaikAADcCACABQewLaiANNwIAIAFB5AtqIAw3AgAgAUEIakHUC2og\
DjcCACACQfQLaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUGUDGogCkEYaikAAD\
cCACABQYwMaiANNwIAIAFBhAxqIAw3AgAgAUEIakH0C2ogDjcCACACQZQMaiIKIAlGDQAgCkEIaikA\
ACEMIApBEGopAAAhDSAKKQAAIQ4gAUG0DGogCkEYaikAADcCACABQawMaiANNwIAIAFBpAxqIAw3Ag\
AgAUEIakGUDGogDjcCACACQbQMaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUHU\
DGogCkEYaikAADcCACABQcwMaiANNwIAIAFBxAxqIAw3AgAgAUEIakG0DGogDjcCACACQdQMaiIKIA\
lGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUH0DGogCkEYaikAADcCACABQewMaiANNwIA\
IAFB5AxqIAw3AgAgAUEIakHUDGogDjcCACACQfQMaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDS\
AKKQAAIQ4gAUGUDWogCkEYaikAADcCACABQYwNaiANNwIAIAFBhA1qIAw3AgAgAUEIakH0DGogDjcC\
ACACQZQNaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUG0DWogCkEYaikAADcCAC\
ABQawNaiANNwIAIAFBpA1qIAw3AgAgAUEIakGUDWogDjcCACACQbQNaiIKIAlGDQAgCkEIaikAACEM\
IApBEGopAAAhDSAKKQAAIQ4gAUHUDWogCkEYaikAADcCACABQcwNaiANNwIAIAFBxA1qIAw3AgAgAU\
EIakG0DWogDjcCACACQdQNaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUH0DWog\
CkEYaikAADcCACABQewNaiANNwIAIAFB5A1qIAw3AgAgAUEIakHUDWogDjcCACACQfQNaiIKIAlGDQ\
AgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUGUDmogCkEYaikAADcCACABQYwOaiANNwIAIAFB\
hA5qIAw3AgAgAUEIakH0DWogDjcCACACQZQOaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQ\
AAIQ4gAUG0DmogCkEYaikAADcCACABQawOaiANNwIAIAFBpA5qIAw3AgAgAUEIakGUDmogDjcCACAC\
QbQOaiIKIAlGDQAgCkEIaikAACEMIApBEGopAAAhDSAKKQAAIQ4gAUHUDmogCkEYaikAADcCACABQc\
wOaiANNwIAIAFBxA5qIAw3AgAgAUEIakG0DmogDjcCACACQdQOaiIKIAlGDQAgCkEIaikAACEMIApB\
EGopAAAhDSAKKQAAIQ4gAUH0DmogCkEYaikAADcCACABQewOaiANNwIAIAFB5A5qIAw3AgAgAUEIak\
HUDmogDjcCACACQfQOaiAJRw0YCyABIAU6AHIgASAGOgBxIAEgBzoAcCABIAs3AwggASAIQf///z9x\
IgJBNyACQTdJGzYCmAEgBCABQQhqQfgOEJYBGgwTC0HgAhAZIgRFDRUgAUEIaiACQcgBEJYBGiABQQ\
hqQcgBaiACQcgBahBlIAQgAUEIakHgAhCWARoMEgtB2AIQGSIERQ0UIAFBCGogAkHIARCWARogAUEI\
akHIAWogAkHIAWoQZiAEIAFBCGpB2AIQlgEaDBELQbgCEBkiBEUNEyABQQhqIAJByAEQlgEaIAFBCG\
pByAFqIAJByAFqEGcgBCABQQhqQbgCEJYBGgwQC0GYAhAZIgRFDRIgAUEIaiACQcgBEJYBGiABQQhq\
QcgBaiACQcgBahBoIAQgAUEIakGYAhCWARoMDwtB4AAQGSIERQ0RIAFBCGpBEGogAkEQaikDADcDAC\
ABIAIpAwg3AxAgAikDACELIAFBCGpBGGogAkEYahBSIAEgCzcDCCAEIAFBCGpB4AAQlgEaDA4LQeAA\
EBkiBEUNECABQQhqQRBqIAJBEGopAwA3AwAgASACKQMINwMQIAIpAwAhCyABQQhqQRhqIAJBGGoQUi\
ABIAs3AwggBCABQQhqQeAAEJYBGgwNC0HoABAZIgRFDQ8gAUEIakEYaiACQRhqKAIANgIAIAFBCGpB\
EGogAkEQaikDADcDACABIAIpAwg3AxAgAikDACELIAFBCGpBIGogAkEgahBSIAEgCzcDCCAEIAFBCG\
pB6AAQlgEaDAwLQegAEBkiBEUNDiABQQhqQRhqIAJBGGooAgA2AgAgAUEIakEQaiACQRBqKQMANwMA\
IAEgAikDCDcDECACKQMAIQsgAUEIakEgaiACQSBqEFIgASALNwMIIAQgAUEIakHoABCWARoMCwtB4A\
IQGSIERQ0NIAFBCGogAkHIARCWARogAUEIakHIAWogAkHIAWoQZSAEIAFBCGpB4AIQlgEaDAoLQdgC\
EBkiBEUNDCABQQhqIAJByAEQlgEaIAFBCGpByAFqIAJByAFqEGYgBCABQQhqQdgCEJYBGgwJC0G4Ah\
AZIgRFDQsgAUEIaiACQcgBEJYBGiABQQhqQcgBaiACQcgBahBnIAQgAUEIakG4AhCWARoMCAtBmAIQ\
GSIERQ0KIAFBCGogAkHIARCWARogAUEIakHIAWogAkHIAWoQaCAEIAFBCGpBmAIQlgEaDAcLQfAAEB\
kiBEUNCSABQQhqQSBqIAJBIGopAwA3AwAgAUEIakEYaiACQRhqKQMANwMAIAFBCGpBEGogAkEQaikD\
ADcDACABIAIpAwg3AxAgAikDACELIAFBCGpBKGogAkEoahBSIAEgCzcDCCAEIAFBCGpB8AAQlgEaDA\
YLQfAAEBkiBEUNCCABQQhqQSBqIAJBIGopAwA3AwAgAUEIakEYaiACQRhqKQMANwMAIAFBCGpBEGog\
AkEQaikDADcDACABIAIpAwg3AxAgAikDACELIAFBCGpBKGogAkEoahBSIAEgCzcDCCAEIAFBCGpB8A\
AQlgEaDAULQdgBEBkiBEUNByABQQhqQThqIAJBOGopAwA3AwAgAUEIakEwaiACQTBqKQMANwMAIAFB\
CGpBKGogAkEoaikDADcDACABQQhqQSBqIAJBIGopAwA3AwAgAUEIakEYaiACQRhqKQMANwMAIAFBCG\
pBEGogAkEQaikDADcDACABQQhqQQhqIAJBCGopAwA3AwAgASACKQMANwMIIAJByABqKQMAIQsgAikD\
QCEMIAFBCGpB0ABqIAJB0ABqEGQgAUEIakHIAGogCzcDACABIAw3A0ggBCABQQhqQdgBEJYBGgwEC0\
HYARAZIgRFDQYgAUEIakE4aiACQThqKQMANwMAIAFBCGpBMGogAkEwaikDADcDACABQQhqQShqIAJB\
KGopAwA3AwAgAUEIakEgaiACQSBqKQMANwMAIAFBCGpBGGogAkEYaikDADcDACABQQhqQRBqIAJBEG\
opAwA3AwAgAUEIakEIaiACQQhqKQMANwMAIAEgAikDADcDCCACQcgAaikDACELIAIpA0AhDCABQQhq\
QdAAaiACQdAAahBkIAFBCGpByABqIAs3AwAgASAMNwNIIAQgAUEIakHYARCWARoMAwtB+AIQGSIERQ\
0FIAFBCGogAkHIARCWARogAUEIakHIAWogAkHIAWoQaSAEIAFBCGpB+AIQlgEaDAILQdgCEBkiBEUN\
BCABQQhqIAJByAEQlgEaIAFBCGpByAFqIAJByAFqEGYgBCABQQhqQdgCEJYBGgwBC0HoABAZIgRFDQ\
MgAUEIakEQaiACQRBqKQMANwMAIAFBCGpBGGogAkEYaikDADcDACABIAIpAwg3AxAgAikDACELIAFB\
CGpBIGogAkEgahBSIAEgCzcDCCAEIAFBCGpB6AAQlgEaCyAAIAAoAgBBf2o2AgBBDBAZIgBFDQIgAC\
AENgIIIAAgAzYCBCAAQQA2AgAgAUGAD2okACAADwsQkgEACxCTAQALAAsQjwEAC91AAhN/An4jAEGA\
AmsiBCQAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQA\
JAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkAC\
QAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQCAADhoAAQIDBA\
UGBwgJCgsMDQ4PEBESExQVFhcYGQALIAFByABqIQVBgAEgAUHIAWotAAAiAGsiBiADTw0ZAkAgAEUN\
ACAFIABqIAIgBhCWARogASABKQNAQoABfDcDQCABIAVCABASIAMgBmshAyACIAZqIQILIAMgA0EHdi\
ADQQBHIANB/wBxRXFrIgBBB3QiB2shAyAARQ1MIAchBiACIQADQCABIAEpA0BCgAF8NwNAIAEgAEIA\
EBIgAEGAAWohACAGQYB/aiIGDQAMTQsLIAFByABqIQVBgAEgAUHIAWotAAAiAGsiBiADTw0ZAkAgAE\
UNACAFIABqIAIgBhCWARogASABKQNAQoABfDcDQCABIAVCABASIAMgBmshAyACIAZqIQILIAMgA0EH\
diADQQBHIANB/wBxRXFrIgBBB3QiB2shAyAARQ1KIAchBiACIQADQCABIAEpA0BCgAF8NwNAIAEgAE\
IAEBIgAEGAAWohACAGQYB/aiIGDQAMSwsLIAFByABqIQVBgAEgAUHIAWotAAAiAGsiBiADTw0ZAkAg\
AEUNACAFIABqIAIgBhCWARogASABKQNAQoABfDcDQCABIAVCABASIAMgBmshAyACIAZqIQILIAMgA0\
EHdiADQQBHIANB/wBxRXFrIgBBB3QiB2shAyAARQ1IIAchBiACIQADQCABIAEpA0BCgAF8NwNAIAEg\
AEIAEBIgAEGAAWohACAGQYB/aiIGDQAMSQsLIAFByABqIQVBgAEgAUHIAWotAAAiAGsiBiADTw0ZAk\
AgAEUNACAFIABqIAIgBhCWARogASABKQNAQoABfDcDQCABIAVCABASIAMgBmshAyACIAZqIQILIAMg\
A0EHdiADQQBHIANB/wBxRXFrIgBBB3QiB2shAyAARQ1GIAchBiACIQADQCABIAEpA0BCgAF8NwNAIA\
EgAEIAEBIgAEGAAWohACAGQYB/aiIGDQAMRwsLIAFByABqIQVBgAEgAUHIAWotAAAiAGsiBiADTw0Z\
AkAgAEUNACAFIABqIAIgBhCWARogASABKQNAQoABfDcDQCABIAVCABASIAMgBmshAyACIAZqIQILIA\
MgA0EHdiADQQBHIANB/wBxRXFrIgBBB3QiB2shAyAARQ1EIAchBiACIQADQCABIAEpA0BCgAF8NwNA\
IAEgAEIAEBIgAEGAAWohACAGQYB/aiIGDQAMRQsLIAFBKGohBUHAACABQegAai0AACIAayIGIANPDR\
kCQCAARQ0AIAUgAGogAiAGEJYBGiABIAEpAwBCwAB8NwMAIAEgBUEAEBQgAyAGayEDIAIgBmohAgsg\
AyADQQZ2IANBAEcgA0E/cUVxayIAQQZ0IgdrIQMgAEUNQiAHIQYgAiEAA0AgASABKQMAQsAAfDcDAC\
ABIABBABAUIABBwABqIQAgBkFAaiIGDQAMQwsLIAFB6QBqLQAAQQZ0IAEtAGhqIgBFDUAgASACQYAI\
IABrIgAgAyAAIANJGyIFEDghACADIAVrIgNFDUcgBEHwAGpBEGogAEEQaiIGKQMANwMAIARB8ABqQR\
hqIABBGGoiBykDADcDACAEQfAAakEgaiAAQSBqIggpAwA3AwAgBEHwAGpBMGogAEEwaikDADcDACAE\
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\
AU8NACAGIAIgBWogABCWARogASAAOgDQAgwJCyAAQYgBQYCAwAAQjQEACwJAIABBkQFPDQAgBiACIA\
VqIAAQlgEaIAEgADoA2AIMCAsgAEGQAUGAgMAAEI0BAAsCQAJAAkACQAJAAkACQAJAAkAgA0GBCEkN\
ACABQZQBaiEOIAFB8ABqIQcgASkDACEYIARBKGohCiAEQQhqIQwgBEHwAGpBKGohCSAEQfAAakEIai\
ELIARBIGohDQNAIBhCCoYhF0F/IANBAXZndkEBaiEGA0AgBiIAQQF2IQYgFyAAQX9qrYNCAFINAAsg\
AEEKdq0hFwJAAkAgAEGBCEkNACADIABJDQQgAS0AaiEIIARB8ABqQThqIg9CADcDACAEQfAAakEwai\
IQQgA3AwAgCUIANwMAIARB8ABqQSBqIhFCADcDACAEQfAAakEYaiISQgA3AwAgBEHwAGpBEGoiE0IA\
NwMAIAtCADcDACAEQgA3A3AgAiAAIAcgGCAIIARB8ABqQcAAEB4hBiAEQeABakEYakIANwMAIARB4A\
FqQRBqQgA3AwAgBEHgAWpBCGpCADcDACAEQgA3A+ABAkAgBkEDSQ0AA0AgBkEFdCIGQcEATw0HIARB\
8ABqIAYgByAIIARB4AFqQSAQLSIGQQV0IgVBwQBPDQggBUEhTw0JIARB8ABqIARB4AFqIAUQlgEaIA\
ZBAksNAAsLIARBOGogDykDADcDACAEQTBqIBApAwA3AwAgCiAJKQMANwMAIA0gESkDADcDACAEQRhq\
IgggEikDADcDACAEQRBqIg8gEykDADcDACAMIAspAwA3AwAgBCAEKQNwNwMAIAEgASkDABAqIAEoAp\
ABIgVBN08NCCAOIAVBBXRqIgZBGGogCCkDADcAACAGQRBqIA8pAwA3AAAgBkEIaiAMKQMANwAAIAYg\
BCkDADcAACABIAVBAWo2ApABIAEgASkDACAXQgGIfBAqIAEoApABIgVBN08NCSAOIAVBBXRqIgZBGG\
ogDUEYaikAADcAACAGIA0pAAA3AAAgBkEQaiANQRBqKQAANwAAIAZBCGogDUEIaikAADcAACABIAVB\
AWo2ApABDAELIAlCADcDACAJQQhqIg9CADcDACAJQRBqIhBCADcDACAJQRhqIhFCADcDACAJQSBqIh\
JCADcDACAJQShqIhNCADcDACAJQTBqIhRCADcDACAJQThqIhVCADcDACALIAcpAwA3AwAgC0EIaiIG\
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\
IAlBGHZyciILNgIgIAMgASgAGCIJQRh0IAlBCHRBgID8B3FyIAlBCHZBgP4DcSAJQRh2cnIiDDYCGC\
ADKAIAIQ0gAygCBCEOIAMoAgghDyADKAIQIRAgAygCDCERIAMoAhQhEiADIAEoACQiCUEYdCAJQQh0\
QYCA/AdxciAJQQh2QYD+A3EgCUEYdnJyIhM2AiQgAyABKAAoIglBGHQgCUEIdEGAgPwHcXIgCUEIdk\
GA/gNxIAlBGHZyciIUNgIoIAMgASgAMCIJQRh0IAlBCHRBgID8B3FyIAlBCHZBgP4DcSAJQRh2cnIi\
FTYCMCADIAEoACwiCUEYdCAJQQh0QYCA/AdxciAJQQh2QYD+A3EgCUEYdnJyIhY2AiwgAyABKAA0Ig\
lBGHQgCUEIdEGAgPwHcXIgCUEIdkGA/gNxIAlBGHZyciIJNgI0IAMgASgAOCIXQRh0IBdBCHRBgID8\
B3FyIBdBCHZBgP4DcSAXQRh2cnIiFzYCOCADIAEoADwiGEEYdCAYQQh0QYCA/AdxciAYQQh2QYD+A3\
EgGEEYdnJyIhg2AjwgBSATIApzIBhzIAwgEHMgFXMgESAOcyATcyAXc0EBdyIZc0EBdyIac0EBdyIb\
IAogEnMgCXMgECAPcyAUcyAYc0EBdyIcc0EBdyIdcyAYIAlzIB1zIBUgFHMgHHMgG3NBAXciHnNBAX\
ciH3MgGiAccyAecyAZIBhzIBtzIBcgFXMgGnMgFiATcyAZcyALIAxzIBdzIBIgEXMgFnMgDyANcyAL\
cyAJc0EBdyIgc0EBdyIhc0EBdyIic0EBdyIjc0EBdyIkc0EBdyIlc0EBdyImc0EBdyInIB0gIXMgCS\
AWcyAhcyAUIAtzICBzIB1zQQF3IihzQQF3IilzIBwgIHMgKHMgH3NBAXciKnNBAXciK3MgHyApcyAr\
cyAeIChzICpzICdzQQF3IixzQQF3Ii1zICYgKnMgLHMgJSAfcyAncyAkIB5zICZzICMgG3MgJXMgIi\
AacyAkcyAhIBlzICNzICAgF3MgInMgKXNBAXciLnNBAXciL3NBAXciMHNBAXciMXNBAXciMnNBAXci\
M3NBAXciNHNBAXciNSArIC9zICkgI3MgL3MgKCAicyAucyArc0EBdyI2c0EBdyI3cyAqIC5zIDZzIC\
1zQQF3IjhzQQF3IjlzIC0gN3MgOXMgLCA2cyA4cyA1c0EBdyI6c0EBdyI7cyA0IDhzIDpzIDMgLXMg\
NXMgMiAscyA0cyAxICdzIDNzIDAgJnMgMnMgLyAlcyAxcyAuICRzIDBzIDdzQQF3IjxzQQF3Ij1zQQ\
F3Ij5zQQF3Ij9zQQF3IkBzQQF3IkFzQQF3IkJzQQF3IkMgOSA9cyA3IDFzID1zIDYgMHMgPHMgOXNB\
AXciRHNBAXciRXMgOCA8cyBEcyA7c0EBdyJGc0EBdyJHcyA7IEVzIEdzIDogRHMgRnMgQ3NBAXciSH\
NBAXciSXMgQiBGcyBIcyBBIDtzIENzIEAgOnMgQnMgPyA1cyBBcyA+IDRzIEBzID0gM3MgP3MgPCAy\
cyA+cyBFc0EBdyJKc0EBdyJLc0EBdyJMc0EBdyJNc0EBdyJOc0EBdyJPc0EBdyJQc0EBd2ogRiBKcy\
BEID5zIEpzIEdzQQF3IlFzIElzQQF3IlIgRSA/cyBLcyBRc0EBdyJTIEwgQSA6IDkgPCAxICYgHyAo\
ICEgFyATIBAgBUEedyJUaiAOIAcgBkEedyIQIAJzIAVxIAJzamogDSAIIAVBBXdqIAIgB3MgBnEgB3\
NqakGZ84nUBWoiDkEFd2pBmfOJ1AVqIlVBHnciBSAOQR53Ig1zIAIgD2ogDiBUIBBzcSAQc2ogVUEF\
d2pBmfOJ1AVqIg5xIA1zaiAQIBFqIFUgDSBUc3EgVHNqIA5BBXdqQZnzidQFaiIQQQV3akGZ84nUBW\
oiEUEedyIPaiAFIAxqIBEgEEEedyITIA5BHnciDHNxIAxzaiANIBJqIAwgBXMgEHEgBXNqIBFBBXdq\
QZnzidQFaiIRQQV3akGZ84nUBWoiEkEedyIFIBFBHnciEHMgCiAMaiARIA8gE3NxIBNzaiASQQV3ak\
GZ84nUBWoiCnEgEHNqIAsgE2ogECAPcyAScSAPc2ogCkEFd2pBmfOJ1AVqIgxBBXdqQZnzidQFaiIP\
QR53IgtqIBUgCkEedyIXaiALIAxBHnciE3MgFCAQaiAMIBcgBXNxIAVzaiAPQQV3akGZ84nUBWoiFH\
EgE3NqIBYgBWogDyATIBdzcSAXc2ogFEEFd2pBmfOJ1AVqIhVBBXdqQZnzidQFaiIWIBVBHnciFyAU\
QR53IgVzcSAFc2ogCSATaiAFIAtzIBVxIAtzaiAWQQV3akGZ84nUBWoiFEEFd2pBmfOJ1AVqIhVBHn\
ciCWogGSAWQR53IgtqIAkgFEEedyITcyAYIAVqIBQgCyAXc3EgF3NqIBVBBXdqQZnzidQFaiIYcSAT\
c2ogICAXaiATIAtzIBVxIAtzaiAYQQV3akGZ84nUBWoiBUEFd2pBmfOJ1AVqIgsgBUEedyIUIBhBHn\
ciF3NxIBdzaiAcIBNqIAUgFyAJc3EgCXNqIAtBBXdqQZnzidQFaiIJQQV3akGZ84nUBWoiGEEedyIF\
aiAdIBRqIAlBHnciEyALQR53IgtzIBhzaiAaIBdqIAsgFHMgCXNqIBhBBXdqQaHX5/YGaiIJQQV3ak\
Gh1+f2BmoiF0EedyIYIAlBHnciFHMgIiALaiAFIBNzIAlzaiAXQQV3akGh1+f2BmoiCXNqIBsgE2og\
FCAFcyAXc2ogCUEFd2pBodfn9gZqIhdBBXdqQaHX5/YGaiIFQR53IgtqIB4gGGogF0EedyITIAlBHn\
ciCXMgBXNqICMgFGogCSAYcyAXc2ogBUEFd2pBodfn9gZqIhdBBXdqQaHX5/YGaiIYQR53IgUgF0Ee\
dyIUcyApIAlqIAsgE3MgF3NqIBhBBXdqQaHX5/YGaiIJc2ogJCATaiAUIAtzIBhzaiAJQQV3akGh1+\
f2BmoiF0EFd2pBodfn9gZqIhhBHnciC2ogJSAFaiAXQR53IhMgCUEedyIJcyAYc2ogLiAUaiAJIAVz\
IBdzaiAYQQV3akGh1+f2BmoiF0EFd2pBodfn9gZqIhhBHnciBSAXQR53IhRzICogCWogCyATcyAXc2\
ogGEEFd2pBodfn9gZqIglzaiAvIBNqIBQgC3MgGHNqIAlBBXdqQaHX5/YGaiIXQQV3akGh1+f2Bmoi\
GEEedyILaiAwIAVqIBdBHnciEyAJQR53IglzIBhzaiArIBRqIAkgBXMgF3NqIBhBBXdqQaHX5/YGai\
IXQQV3akGh1+f2BmoiGEEedyIFIBdBHnciFHMgJyAJaiALIBNzIBdzaiAYQQV3akGh1+f2BmoiFXNq\
IDYgE2ogFCALcyAYc2ogFUEFd2pBodfn9gZqIgtBBXdqQaHX5/YGaiITQR53IglqIDcgBWogC0Eedy\
IXIBVBHnciGHMgE3EgFyAYcXNqICwgFGogGCAFcyALcSAYIAVxc2ogE0EFd2pB3Pnu+HhqIhNBBXdq\
Qdz57vh4aiIUQR53IgUgE0EedyILcyAyIBhqIBMgCSAXc3EgCSAXcXNqIBRBBXdqQdz57vh4aiIYcS\
AFIAtxc2ogLSAXaiAUIAsgCXNxIAsgCXFzaiAYQQV3akHc+e74eGoiE0EFd2pB3Pnu+HhqIhRBHnci\
CWogOCAFaiAUIBNBHnciFyAYQR53IhhzcSAXIBhxc2ogMyALaiAYIAVzIBNxIBggBXFzaiAUQQV3ak\
Hc+e74eGoiE0EFd2pB3Pnu+HhqIhRBHnciBSATQR53IgtzID0gGGogEyAJIBdzcSAJIBdxc2ogFEEF\
d2pB3Pnu+HhqIhhxIAUgC3FzaiA0IBdqIAsgCXMgFHEgCyAJcXNqIBhBBXdqQdz57vh4aiITQQV3ak\
Hc+e74eGoiFEEedyIJaiBEIBhBHnciF2ogCSATQR53IhhzID4gC2ogEyAXIAVzcSAXIAVxc2ogFEEF\
d2pB3Pnu+HhqIgtxIAkgGHFzaiA1IAVqIBQgGCAXc3EgGCAXcXNqIAtBBXdqQdz57vh4aiITQQV3ak\
Hc+e74eGoiFCATQR53IhcgC0EedyIFc3EgFyAFcXNqID8gGGogBSAJcyATcSAFIAlxc2ogFEEFd2pB\
3Pnu+HhqIhNBBXdqQdz57vh4aiIVQR53IglqIDsgFEEedyIYaiAJIBNBHnciC3MgRSAFaiATIBggF3\
NxIBggF3FzaiAVQQV3akHc+e74eGoiBXEgCSALcXNqIEAgF2ogCyAYcyAVcSALIBhxc2ogBUEFd2pB\
3Pnu+HhqIhNBBXdqQdz57vh4aiIUIBNBHnciGCAFQR53IhdzcSAYIBdxc2ogSiALaiATIBcgCXNxIB\
cgCXFzaiAUQQV3akHc+e74eGoiCUEFd2pB3Pnu+HhqIgVBHnciC2ogSyAYaiAJQR53IhMgFEEedyIU\
cyAFc2ogRiAXaiAUIBhzIAlzaiAFQQV3akHWg4vTfGoiCUEFd2pB1oOL03xqIhdBHnciGCAJQR53Ig\
VzIEIgFGogCyATcyAJc2ogF0EFd2pB1oOL03xqIglzaiBHIBNqIAUgC3MgF3NqIAlBBXdqQdaDi9N8\
aiIXQQV3akHWg4vTfGoiC0EedyITaiBRIBhqIBdBHnciFCAJQR53IglzIAtzaiBDIAVqIAkgGHMgF3\
NqIAtBBXdqQdaDi9N8aiIXQQV3akHWg4vTfGoiGEEedyIFIBdBHnciC3MgTSAJaiATIBRzIBdzaiAY\
QQV3akHWg4vTfGoiCXNqIEggFGogCyATcyAYc2ogCUEFd2pB1oOL03xqIhdBBXdqQdaDi9N8aiIYQR\
53IhNqIEkgBWogF0EedyIUIAlBHnciCXMgGHNqIE4gC2ogCSAFcyAXc2ogGEEFd2pB1oOL03xqIhdB\
BXdqQdaDi9N8aiIYQR53IgUgF0EedyILcyBKIEBzIExzIFNzQQF3IhUgCWogEyAUcyAXc2ogGEEFd2\
pB1oOL03xqIglzaiBPIBRqIAsgE3MgGHNqIAlBBXdqQdaDi9N8aiIXQQV3akHWg4vTfGoiGEEedyIT\
aiBQIAVqIBdBHnciFCAJQR53IglzIBhzaiBLIEFzIE1zIBVzQQF3IhUgC2ogCSAFcyAXc2ogGEEFd2\
pB1oOL03xqIhdBBXdqQdaDi9N8aiIYQR53IhYgF0EedyILcyBHIEtzIFNzIFJzQQF3IAlqIBMgFHMg\
F3NqIBhBBXdqQdaDi9N8aiIJc2ogTCBCcyBOcyAVc0EBdyAUaiALIBNzIBhzaiAJQQV3akHWg4vTfG\
oiF0EFd2pB1oOL03xqIQUgFyAGaiEGIBYgB2ohByAJQR53IAJqIQIgCyAIaiEIIAFBwABqIgEgBEcN\
AAsgACAINgIQIAAgBzYCDCAAIAI2AgggACAGNgIEIAAgBTYCAAu2JAIBfxJ+IwBBwABrIgJBCGogAS\
kACCIDNwMAIAJBEGogASkAECIENwMAIAJBGGogASkAGCIFNwMAIAJBIGogASkAICIGNwMAIAJBKGog\
ASkAKCIHNwMAIAJBMGogASkAMCIINwMAIAJBOGogASkAOCIJNwMAIAIgASkAACIKNwMAIAAgCSAHIA\
UgAyAAKQMAIgsgCiAAKQMQIgyFIg2nIgFBDXZB+A9xQdihwABqKQMAIAFB/wFxQQN0QdiRwABqKQMA\
hSANQiCIp0H/AXFBA3RB2LHAAGopAwCFIA1CMIinQf8BcUEDdEHYwcAAaikDAIV9hSIOpyICQRV2Qf\
gPcUHYscAAaikDACACQQV2QfgPcUHYwcAAaikDAIUgDkIoiKdB/wFxQQN0QdihwABqKQMAhSAOQjiI\
p0EDdEHYkcAAaikDAIUgDXxCBX4gBCABQRV2QfgPcUHYscAAaikDACABQQV2QfgPcUHYwcAAaikDAI\
UgDUIoiKdB/wFxQQN0QdihwABqKQMAhSANQjiIp0EDdEHYkcAAaikDAIUgACkDCCIPfEIFfiACQQ12\
QfgPcUHYocAAaikDACACQf8BcUEDdEHYkcAAaikDAIUgDkIgiKdB/wFxQQN0QdixwABqKQMAhSAOQj\
CIp0H/AXFBA3RB2MHAAGopAwCFfYUiDaciAUENdkH4D3FB2KHAAGopAwAgAUH/AXFBA3RB2JHAAGop\
AwCFIA1CIIinQf8BcUEDdEHYscAAaikDAIUgDUIwiKdB/wFxQQN0QdjBwABqKQMAhX2FIhCnIgJBFX\
ZB+A9xQdixwABqKQMAIAJBBXZB+A9xQdjBwABqKQMAhSAQQiiIp0H/AXFBA3RB2KHAAGopAwCFIBBC\
OIinQQN0QdiRwABqKQMAhSANfEIFfiAGIAFBFXZB+A9xQdixwABqKQMAIAFBBXZB+A9xQdjBwABqKQ\
MAhSANQiiIp0H/AXFBA3RB2KHAAGopAwCFIA1COIinQQN0QdiRwABqKQMAhSAOfEIFfiACQQ12QfgP\
cUHYocAAaikDACACQf8BcUEDdEHYkcAAaikDAIUgEEIgiKdB/wFxQQN0QdixwABqKQMAhSAQQjCIp0\
H/AXFBA3RB2MHAAGopAwCFfYUiDaciAUENdkH4D3FB2KHAAGopAwAgAUH/AXFBA3RB2JHAAGopAwCF\
IA1CIIinQf8BcUEDdEHYscAAaikDAIUgDUIwiKdB/wFxQQN0QdjBwABqKQMAhX2FIg6nIgJBFXZB+A\
9xQdixwABqKQMAIAJBBXZB+A9xQdjBwABqKQMAhSAOQiiIp0H/AXFBA3RB2KHAAGopAwCFIA5COIin\
QQN0QdiRwABqKQMAhSANfEIFfiAIIAFBFXZB+A9xQdixwABqKQMAIAFBBXZB+A9xQdjBwABqKQMAhS\
ANQiiIp0H/AXFBA3RB2KHAAGopAwCFIA1COIinQQN0QdiRwABqKQMAhSAQfEIFfiACQQ12QfgPcUHY\
ocAAaikDACACQf8BcUEDdEHYkcAAaikDAIUgDkIgiKdB/wFxQQN0QdixwABqKQMAhSAOQjCIp0H/AX\
FBA3RB2MHAAGopAwCFfYUiDaciAUENdkH4D3FB2KHAAGopAwAgAUH/AXFBA3RB2JHAAGopAwCFIA1C\
IIinQf8BcUEDdEHYscAAaikDAIUgDUIwiKdB/wFxQQN0QdjBwABqKQMAhX2FIhCnIgJBFXZB+A9xQd\
ixwABqKQMAIAJBBXZB+A9xQdjBwABqKQMAhSAQQiiIp0H/AXFBA3RB2KHAAGopAwCFIBBCOIinQQN0\
QdiRwABqKQMAhSANfEIFfiAJIAggByAGIAUgBCADIAogCULatOnSpcuWrdoAhXxCAXwiCoUiA3wiES\
ADQn+FQhOGhX0iEoUiBHwiEyAEQn+FQheIhX0iFIUiBSAKfCIGIAFBFXZB+A9xQdixwABqKQMAIAFB\
BXZB+A9xQdjBwABqKQMAhSANQiiIp0H/AXFBA3RB2KHAAGopAwCFIA1COIinQQN0QdiRwABqKQMAhS\
AOfEIFfiACQQ12QfgPcUHYocAAaikDACACQf8BcUEDdEHYkcAAaikDAIUgEEIgiKdB/wFxQQN0Qdix\
wABqKQMAhSAQQjCIp0H/AXFBA3RB2MHAAGopAwCFfYUiDaciAUENdkH4D3FB2KHAAGopAwAgAUH/AX\
FBA3RB2JHAAGopAwCFIA1CIIinQf8BcUEDdEHYscAAaikDAIUgDUIwiKdB/wFxQQN0QdjBwABqKQMA\
hX0gAyAGIAVCf4VCE4aFfSIDhSIOpyICQRV2QfgPcUHYscAAaikDACACQQV2QfgPcUHYwcAAaikDAI\
UgDkIoiKdB/wFxQQN0QdihwABqKQMAhSAOQjiIp0EDdEHYkcAAaikDAIUgDXxCB34gAUEVdkH4D3FB\
2LHAAGopAwAgAUEFdkH4D3FB2MHAAGopAwCFIA1CKIinQf8BcUEDdEHYocAAaikDAIUgDUI4iKdBA3\
RB2JHAAGopAwCFIBB8Qgd+IAJBDXZB+A9xQdihwABqKQMAIAJB/wFxQQN0QdiRwABqKQMAhSAOQiCI\
p0H/AXFBA3RB2LHAAGopAwCFIA5CMIinQf8BcUEDdEHYwcAAaikDAIV9IAMgEYUiCYUiDaciAUENdk\
H4D3FB2KHAAGopAwAgAUH/AXFBA3RB2JHAAGopAwCFIA1CIIinQf8BcUEDdEHYscAAaikDAIUgDUIw\
iKdB/wFxQQN0QdjBwABqKQMAhX0gCSASfCIHhSIQpyICQRV2QfgPcUHYscAAaikDACACQQV2QfgPcU\
HYwcAAaikDAIUgEEIoiKdB/wFxQQN0QdihwABqKQMAhSAQQjiIp0EDdEHYkcAAaikDAIUgDXxCB34g\
AUEVdkH4D3FB2LHAAGopAwAgAUEFdkH4D3FB2MHAAGopAwCFIA1CKIinQf8BcUEDdEHYocAAaikDAI\
UgDUI4iKdBA3RB2JHAAGopAwCFIA58Qgd+IAJBDXZB+A9xQdihwABqKQMAIAJB/wFxQQN0QdiRwABq\
KQMAhSAQQiCIp0H/AXFBA3RB2LHAAGopAwCFIBBCMIinQf8BcUEDdEHYwcAAaikDAIV9IAQgByAJQn\
+FQheIhX0iBIUiDaciAUENdkH4D3FB2KHAAGopAwAgAUH/AXFBA3RB2JHAAGopAwCFIA1CIIinQf8B\
cUEDdEHYscAAaikDAIUgDUIwiKdB/wFxQQN0QdjBwABqKQMAhX0gBCAThSIIhSIOpyICQRV2QfgPcU\
HYscAAaikDACACQQV2QfgPcUHYwcAAaikDAIUgDkIoiKdB/wFxQQN0QdihwABqKQMAhSAOQjiIp0ED\
dEHYkcAAaikDAIUgDXxCB34gAUEVdkH4D3FB2LHAAGopAwAgAUEFdkH4D3FB2MHAAGopAwCFIA1CKI\
inQf8BcUEDdEHYocAAaikDAIUgDUI4iKdBA3RB2JHAAGopAwCFIBB8Qgd+IAJBDXZB+A9xQdihwABq\
KQMAIAJB/wFxQQN0QdiRwABqKQMAhSAOQiCIp0H/AXFBA3RB2LHAAGopAwCFIA5CMIinQf8BcUEDdE\
HYwcAAaikDAIV9IAggFHwiCoUiDaciAUENdkH4D3FB2KHAAGopAwAgAUH/AXFBA3RB2JHAAGopAwCF\
IA1CIIinQf8BcUEDdEHYscAAaikDAIUgDUIwiKdB/wFxQQN0QdjBwABqKQMAhX0gBSAKQpDk0LKH06\
7ufoV8QgF8IgWFIhCnIgJBFXZB+A9xQdixwABqKQMAIAJBBXZB+A9xQdjBwABqKQMAhSAQQiiIp0H/\
AXFBA3RB2KHAAGopAwCFIBBCOIinQQN0QdiRwABqKQMAhSANfEIHfiABQRV2QfgPcUHYscAAaikDAC\
ABQQV2QfgPcUHYwcAAaikDAIUgDUIoiKdB/wFxQQN0QdihwABqKQMAhSANQjiIp0EDdEHYkcAAaikD\
AIUgDnxCB34gAkENdkH4D3FB2KHAAGopAwAgAkH/AXFBA3RB2JHAAGopAwCFIBBCIIinQf8BcUEDdE\
HYscAAaikDAIUgEEIwiKdB/wFxQQN0QdjBwABqKQMAhX0gCiAHIAYgBULatOnSpcuWrdoAhXxCAXwi\
DSADhSIOIAl8IgYgDkJ/hUIThoV9IgcgBIUiCSAIfCIIIAlCf4VCF4iFfSIKIAWFIgMgDXwiBIUiDa\
ciAUENdkH4D3FB2KHAAGopAwAgAUH/AXFBA3RB2JHAAGopAwCFIA1CIIinQf8BcUEDdEHYscAAaikD\
AIUgDUIwiKdB/wFxQQN0QdjBwABqKQMAhX0gDiAEIANCf4VCE4aFfSIEhSIOpyICQRV2QfgPcUHYsc\
AAaikDACACQQV2QfgPcUHYwcAAaikDAIUgDkIoiKdB/wFxQQN0QdihwABqKQMAhSAOQjiIp0EDdEHY\
kcAAaikDAIUgDXxCCX4gAUEVdkH4D3FB2LHAAGopAwAgAUEFdkH4D3FB2MHAAGopAwCFIA1CKIinQf\
8BcUEDdEHYocAAaikDAIUgDUI4iKdBA3RB2JHAAGopAwCFIBB8Qgl+IAJBDXZB+A9xQdihwABqKQMA\
IAJB/wFxQQN0QdiRwABqKQMAhSAOQiCIp0H/AXFBA3RB2LHAAGopAwCFIA5CMIinQf8BcUEDdEHYwc\
AAaikDAIV9IAQgBoUiBIUiDaciAUENdkH4D3FB2KHAAGopAwAgAUH/AXFBA3RB2JHAAGopAwCFIA1C\
IIinQf8BcUEDdEHYscAAaikDAIUgDUIwiKdB/wFxQQN0QdjBwABqKQMAhX0gBCAHfCIFhSIQpyICQR\
V2QfgPcUHYscAAaikDACACQQV2QfgPcUHYwcAAaikDAIUgEEIoiKdB/wFxQQN0QdihwABqKQMAhSAQ\
QjiIp0EDdEHYkcAAaikDAIUgDXxCCX4gAUEVdkH4D3FB2LHAAGopAwAgAUEFdkH4D3FB2MHAAGopAw\
CFIA1CKIinQf8BcUEDdEHYocAAaikDAIUgDUI4iKdBA3RB2JHAAGopAwCFIA58Qgl+IAJBDXZB+A9x\
QdihwABqKQMAIAJB/wFxQQN0QdiRwABqKQMAhSAQQiCIp0H/AXFBA3RB2LHAAGopAwCFIBBCMIinQf\
8BcUEDdEHYwcAAaikDAIV9IAkgBSAEQn+FQheIhX0iDoUiDaciAUENdkH4D3FB2KHAAGopAwAgAUH/\
AXFBA3RB2JHAAGopAwCFIA1CIIinQf8BcUEDdEHYscAAaikDAIUgDUIwiKdB/wFxQQN0QdjBwABqKQ\
MAhX0gDiAIhSIJhSIOpyICQRV2QfgPcUHYscAAaikDACACQQV2QfgPcUHYwcAAaikDAIUgDkIoiKdB\
/wFxQQN0QdihwABqKQMAhSAOQjiIp0EDdEHYkcAAaikDAIUgDXxCCX4gAUEVdkH4D3FB2LHAAGopAw\
AgAUEFdkH4D3FB2MHAAGopAwCFIA1CKIinQf8BcUEDdEHYocAAaikDAIUgDUI4iKdBA3RB2JHAAGop\
AwCFIBB8Qgl+IAJBDXZB+A9xQdihwABqKQMAIAJB/wFxQQN0QdiRwABqKQMAhSAOQiCIp0H/AXFBA3\
RB2LHAAGopAwCFIA5CMIinQf8BcUEDdEHYwcAAaikDAIV9IAkgCnwiEIUiDaciAUENdkH4D3FB2KHA\
AGopAwAgAUH/AXFBA3RB2JHAAGopAwCFIA1CIIinQf8BcUEDdEHYscAAaikDAIUgDUIwiKdB/wFxQQ\
N0QdjBwABqKQMAhX0gAyAQQpDk0LKH067ufoV8QgF8hSIQIA99NwMIIAAgDCABQRV2QfgPcUHYscAA\
aikDACABQQV2QfgPcUHYwcAAaikDAIUgDUIoiKdB/wFxQQN0QdihwABqKQMAhSANQjiIp0EDdEHYkc\
AAaikDAIUgDnxCCX58IBCnIgFBDXZB+A9xQdihwABqKQMAIAFB/wFxQQN0QdiRwABqKQMAhSAQQiCI\
p0H/AXFBA3RB2LHAAGopAwCFIBBCMIinQf8BcUEDdEHYwcAAaikDAIV9NwMQIAAgCyABQRV2QfgPcU\
HYscAAaikDACABQQV2QfgPcUHYwcAAaikDAIUgEEIoiKdB/wFxQQN0QdihwABqKQMAhSAQQjiIp0ED\
dEHYkcAAaikDAIUgDXxCCX6FNwMAC4YeAjp/AX4jAEHAAGsiAyQAAkAgAkUNACAAQRBqKAIAIgQgAE\
E4aigCACIFaiAAQSBqKAIAIgZqIgcgAEE8aigCACIIaiAHIAAtAGhzQRB0IAdBEHZyIgdB8ua74wNq\
IgkgBnNBFHciCmoiCyAHc0EYdyIMIAlqIg0gCnNBGXchDiALIABB2ABqKAIAIg9qIABBFGooAgAiEC\
AAQcAAaigCACIRaiAAQSRqKAIAIhJqIgcgAEHEAGooAgAiE2ogByAALQBpQQhyc0EQdCAHQRB2ciIH\
Qbrqv6p6aiIJIBJzQRR3IgpqIgsgB3NBGHciFCAJaiIVIApzQRl3IhZqIhcgAEHcAGooAgAiGGohGS\
ALIABB4ABqKAIAIhpqIRsgACgCCCIcIAAoAigiHWogAEEYaigCACIeaiIfIABBLGooAgAiIGohISAA\
QQxqKAIAIiIgAEEwaigCACIjaiAAQRxqKAIAIiRqIiUgAEE0aigCACImaiEnIABB5ABqKAIAIQcgAE\
HUAGooAgAhCSAAQdAAaigCACEKIABBzABqKAIAIQsgAEHIAGooAgAhKCAALQBwISkgACkDACE9A0Ag\
AyAZIBcgJyAlID1CIIinc0EQdyIqQYXdntt7aiIrICRzQRR3IixqIi0gKnNBGHciKnNBEHciLiAhIB\
8gPadzQRB3Ii9B58yn0AZqIjAgHnNBFHciMWoiMiAvc0EYdyIvIDBqIjBqIjMgFnNBFHciNGoiNSAT\
aiAtIApqIA5qIi0gCWogLSAvc0EQdyItIBVqIi8gDnNBFHciNmoiNyAtc0EYdyItIC9qIi8gNnNBGX\
ciNmoiOCAdaiA4IBsgMCAxc0EZdyIwaiIxIAdqIDEgDHNBEHciMSAqICtqIipqIisgMHNBFHciMGoi\
OSAxc0EYdyIxc0EQdyI4IDIgKGogKiAsc0EZdyIqaiIsIAtqICwgFHNBEHciLCANaiIyICpzQRR3Ii\
pqIjogLHNBGHciLCAyaiIyaiI7IDZzQRR3IjZqIjwgC2ogOSAFaiA1IC5zQRh3Ii4gM2oiMyA0c0EZ\
dyI0aiI1IBhqIDUgLHNBEHciLCAvaiIvIDRzQRR3IjRqIjUgLHNBGHciLCAvaiIvIDRzQRl3IjRqIj\
kgGmogOSA3ICZqIDIgKnNBGXciKmoiMiAKaiAyIC5zQRB3Ii4gMSAraiIraiIxICpzQRR3IipqIjIg\
LnNBGHciLnNBEHciNyA6ICNqICsgMHNBGXciK2oiMCARaiAwIC1zQRB3Ii0gM2oiMCArc0EUdyIrai\
IzIC1zQRh3Ii0gMGoiMGoiOSA0c0EUdyI0aiI6IBhqIDIgD2ogPCA4c0EYdyIyIDtqIjggNnNBGXci\
NmoiOyAIaiA7IC1zQRB3Ii0gL2oiLyA2c0EUdyI2aiI7IC1zQRh3Ii0gL2oiLyA2c0EZdyI2aiI8IC\
NqIDwgNSAHaiAwICtzQRl3IitqIjAgKGogMCAyc0EQdyIwIC4gMWoiLmoiMSArc0EUdyIraiIyIDBz\
QRh3IjBzQRB3IjUgMyAgaiAuICpzQRl3IipqIi4gCWogLiAsc0EQdyIsIDhqIi4gKnNBFHciKmoiMy\
Asc0EYdyIsIC5qIi5qIjggNnNBFHciNmoiPCAJaiAyIBNqIDogN3NBGHciMiA5aiI3IDRzQRl3IjRq\
IjkgGmogOSAsc0EQdyIsIC9qIi8gNHNBFHciNGoiOSAsc0EYdyIsIC9qIi8gNHNBGXciNGoiOiAHai\
A6IDsgCmogLiAqc0EZdyIqaiIuIA9qIC4gMnNBEHciLiAwIDFqIjBqIjEgKnNBFHciKmoiMiAuc0EY\
dyIuc0EQdyI6IDMgJmogMCArc0EZdyIraiIwIAVqIDAgLXNBEHciLSA3aiIwICtzQRR3IitqIjMgLX\
NBGHciLSAwaiIwaiI3IDRzQRR3IjRqIjsgGmogMiALaiA8IDVzQRh3IjIgOGoiNSA2c0EZdyI2aiI4\
IB1qIDggLXNBEHciLSAvaiIvIDZzQRR3IjZqIjggLXNBGHciLSAvaiIvIDZzQRl3IjZqIjwgJmogPC\
A5IChqIDAgK3NBGXciK2oiMCAgaiAwIDJzQRB3IjAgLiAxaiIuaiIxICtzQRR3IitqIjIgMHNBGHci\
MHNBEHciOSAzIBFqIC4gKnNBGXciKmoiLiAIaiAuICxzQRB3IiwgNWoiLiAqc0EUdyIqaiIzICxzQR\
h3IiwgLmoiLmoiNSA2c0EUdyI2aiI8IAhqIDIgGGogOyA6c0EYdyIyIDdqIjcgNHNBGXciNGoiOiAH\
aiA6ICxzQRB3IiwgL2oiLyA0c0EUdyI0aiI6ICxzQRh3IiwgL2oiLyA0c0EZdyI0aiI7IChqIDsgOC\
APaiAuICpzQRl3IipqIi4gC2ogLiAyc0EQdyIuIDAgMWoiMGoiMSAqc0EUdyIqaiIyIC5zQRh3Ii5z\
QRB3IjggMyAKaiAwICtzQRl3IitqIjAgE2ogMCAtc0EQdyItIDdqIjAgK3NBFHciK2oiMyAtc0EYdy\
ItIDBqIjBqIjcgNHNBFHciNGoiOyAHaiAyIAlqIDwgOXNBGHciMiA1aiI1IDZzQRl3IjZqIjkgI2og\
OSAtc0EQdyItIC9qIi8gNnNBFHciNmoiOSAtc0EYdyItIC9qIi8gNnNBGXciNmoiPCAKaiA8IDogIG\
ogMCArc0EZdyIraiIwIBFqIDAgMnNBEHciMCAuIDFqIi5qIjEgK3NBFHciK2oiMiAwc0EYdyIwc0EQ\
dyI6IDMgBWogLiAqc0EZdyIqaiIuIB1qIC4gLHNBEHciLCA1aiIuICpzQRR3IipqIjMgLHNBGHciLC\
AuaiIuaiI1IDZzQRR3IjZqIjwgHWogMiAaaiA7IDhzQRh3IjIgN2oiNyA0c0EZdyI0aiI4IChqIDgg\
LHNBEHciLCAvaiIvIDRzQRR3IjRqIjggLHNBGHciLCAvaiIvIDRzQRl3IjRqIjsgIGogOyA5IAtqIC\
4gKnNBGXciKmoiLiAJaiAuIDJzQRB3Ii4gMCAxaiIwaiIxICpzQRR3IipqIjIgLnNBGHciLnNBEHci\
OSAzIA9qIDAgK3NBGXciK2oiMCAYaiAwIC1zQRB3Ii0gN2oiMCArc0EUdyIraiIzIC1zQRh3Ii0gMG\
oiMGoiNyA0c0EUdyI0aiI7IChqIDIgCGogPCA6c0EYdyIyIDVqIjUgNnNBGXciNmoiOiAmaiA6IC1z\
QRB3Ii0gL2oiLyA2c0EUdyI2aiI6IC1zQRh3Ii0gL2oiLyA2c0EZdyI2aiI8IA9qIDwgOCARaiAwIC\
tzQRl3IitqIjAgBWogMCAyc0EQdyIwIC4gMWoiLmoiMSArc0EUdyIraiIyIDBzQRh3IjBzQRB3Ijgg\
MyATaiAuICpzQRl3IipqIi4gI2ogLiAsc0EQdyIsIDVqIi4gKnNBFHciKmoiMyAsc0EYdyIsIC5qIi\
5qIjUgNnNBFHciNmoiPCAjaiAyIAdqIDsgOXNBGHciMiA3aiI3IDRzQRl3IjRqIjkgIGogOSAsc0EQ\
dyIsIC9qIi8gNHNBFHciNGoiOSAsc0EYdyIsIC9qIi8gNHNBGXciNGoiOyARaiA7IDogCWogLiAqc0\
EZdyIqaiIuIAhqIC4gMnNBEHciLiAwIDFqIjBqIjEgKnNBFHciKmoiMiAuc0EYdyIuc0EQdyI6IDMg\
C2ogMCArc0EZdyIraiIwIBpqIDAgLXNBEHciLSA3aiIwICtzQRR3IitqIjMgLXNBGHciLSAwaiIwai\
I3IDRzQRR3IjRqIjsgIGogMiAdaiA8IDhzQRh3IjIgNWoiNSA2c0EZdyI2aiI4IApqIDggLXNBEHci\
LSAvaiIvIDZzQRR3IjZqIjggLXNBGHciLSAvaiIvIDZzQRl3IjZqIjwgC2ogPCA5IAVqIDAgK3NBGX\
ciK2oiMCATaiAwIDJzQRB3IjAgLiAxaiIuaiIxICtzQRR3IitqIjIgMHNBGHciMHNBEHciOSAzIBhq\
IC4gKnNBGXciKmoiLiAmaiAuICxzQRB3IiwgNWoiLiAqc0EUdyIqaiIzICxzQRh3IiwgLmoiLmoiNS\
A2c0EUdyI2aiI8ICZqIDIgKGogOyA6c0EYdyIyIDdqIjcgNHNBGXciNGoiOiARaiA6ICxzQRB3Iiwg\
L2oiLyA0c0EUdyI0aiI6ICxzQRh3IjsgL2oiLCA0c0EZdyIvaiI0IAVqIDQgOCAIaiAuICpzQRl3Ii\
pqIi4gHWogLiAyc0EQdyIuIDAgMWoiMGoiMSAqc0EUdyIyaiI4IC5zQRh3Ii5zQRB3IiogMyAJaiAw\
ICtzQRl3IitqIjAgB2ogMCAtc0EQdyItIDdqIjAgK3NBFHciM2oiNCAtc0EYdyIrIDBqIjBqIi0gL3\
NBFHciL2oiNyAqc0EYdyIqICRzNgI0IAMgOCAjaiA8IDlzQRh3IjggNWoiNSA2c0EZdyI2aiI5IA9q\
IDkgK3NBEHciKyAsaiIsIDZzQRR3IjZqIjkgK3NBGHciKyAeczYCMCADICsgLGoiLCAQczYCLCADIC\
ogLWoiLSAcczYCICADICwgOiATaiAwIDNzQRl3IjBqIjMgGGogMyA4c0EQdyIzIC4gMWoiLmoiMSAw\
c0EUdyIwaiI4czYCDCADIC0gNCAaaiAuIDJzQRl3Ii5qIjIgCmogMiA7c0EQdyIyIDVqIjQgLnNBFH\
ciNWoiOnM2AgAgAyA4IDNzQRh3Ii4gBnM2AjggAyAsIDZzQRl3IC5zNgIYIAMgOiAyc0EYdyIsIBJz\
NgI8IAMgLiAxaiIuICJzNgIkIAMgLSAvc0EZdyAsczYCHCADIC4gOXM2AgQgAyAsIDRqIiwgBHM2Ai\
ggAyAsIDdzNgIIIAMgLiAwc0EZdyArczYCECADICwgNXNBGXcgKnM2AhQCQAJAIClB/wFxIipBwQBP\
DQAgASADICpqIAJBwAAgKmsiKiACICpJGyIqEJYBISsgACApICpqIik6AHAgAiAqayECIClB/wFxQc\
AARw0BQQAhKSAAQQA6AHAgACA9QgF8Ij03AwAMAQsgKkHAAEGQhsAAEI4BAAsgKyAqaiEBIAINAAsL\
IANBwABqJAALlRsBIH8gACAAKAIAIAEoAAAiBWogACgCECIGaiIHIAEoAAQiCGogByADp3NBEHciCU\
HnzKfQBmoiCiAGc0EUdyILaiIMIAEoACAiBmogACgCBCABKAAIIgdqIAAoAhQiDWoiDiABKAAMIg9q\
IA4gA0IgiKdzQRB3Ig5Bhd2e23tqIhAgDXNBFHciDWoiESAOc0EYdyISIBBqIhMgDXNBGXciFGoiFS\
ABKAAkIg1qIBUgACgCDCABKAAYIg5qIAAoAhwiFmoiFyABKAAcIhBqIBcgBEH/AXFzQRB0IBdBEHZy\
IhdBuuq/qnpqIhggFnNBFHciFmoiGSAXc0EYdyIac0EQdyIbIAAoAgggASgAECIXaiAAKAIYIhxqIh\
UgASgAFCIEaiAVIAJB/wFxc0EQdCAVQRB2ciIVQfLmu+MDaiICIBxzQRR3IhxqIh0gFXNBGHciHiAC\
aiIfaiIgIBRzQRR3IhRqIiEgB2ogGSABKAA4IhVqIAwgCXNBGHciDCAKaiIZIAtzQRl3IglqIgogAS\
gAPCICaiAKIB5zQRB3IgogE2oiCyAJc0EUdyIJaiITIApzQRh3Ih4gC2oiIiAJc0EZdyIjaiILIA5q\
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\
AGohAQJAAkBBACgCzNJAIgVBASACQQN2dCICcUUNACABKAIIIQIMAQtBACAFIAJyNgLM0kAgASECCy\
ABIAA2AgggAiAANgIMIAAgATYCDCAAIAI2AggLIAZBCGoPC0EAQf8fNgKM1kBBACAINgL41UBBACAG\
NgL01UBBAEHU0sAANgLg0kBBAEHc0sAANgLo0kBBAEHU0sAANgLc0kBBAEHk0sAANgLw0kBBAEHc0s\
AANgLk0kBBAEHs0sAANgL40kBBAEHk0sAANgLs0kBBAEH00sAANgKA00BBAEHs0sAANgL00kBBAEH8\
0sAANgKI00BBAEH00sAANgL80kBBAEGE08AANgKQ00BBAEH80sAANgKE00BBAEGM08AANgKY00BBAE\
GE08AANgKM00BBAEEANgKA1kBBAEGU08AANgKg00BBAEGM08AANgKU00BBAEGU08AANgKc00BBAEGc\
08AANgKo00BBAEGc08AANgKk00BBAEGk08AANgKw00BBAEGk08AANgKs00BBAEGs08AANgK400BBAE\
Gs08AANgK000BBAEG008AANgLA00BBAEG008AANgK800BBAEG808AANgLI00BBAEG808AANgLE00BB\
AEHE08AANgLQ00BBAEHE08AANgLM00BBAEHM08AANgLY00BBAEHM08AANgLU00BBAEHU08AANgLg00\
BBAEHc08AANgLo00BBAEHU08AANgLc00BBAEHk08AANgLw00BBAEHc08AANgLk00BBAEHs08AANgL4\
00BBAEHk08AANgLs00BBAEH008AANgKA1EBBAEHs08AANgL000BBAEH808AANgKI1EBBAEH008AANg\
L800BBAEGE1MAANgKQ1EBBAEH808AANgKE1EBBAEGM1MAANgKY1EBBAEGE1MAANgKM1EBBAEGU1MAA\
NgKg1EBBAEGM1MAANgKU1EBBAEGc1MAANgKo1EBBAEGU1MAANgKc1EBBAEGk1MAANgKw1EBBAEGc1M\
AANgKk1EBBAEGs1MAANgK41EBBAEGk1MAANgKs1EBBAEG01MAANgLA1EBBAEGs1MAANgK01EBBAEG8\
1MAANgLI1EBBAEG01MAANgK81EBBAEHE1MAANgLQ1EBBAEG81MAANgLE1EBBAEHM1MAANgLY1EBBAE\
HE1MAANgLM1EBBACAGNgLo1UBBAEHM1MAANgLU1EBBACAIQVhqIgA2AuDVQCAGIABBAXI2AgQgBiAA\
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\
ACgCDCEFIAAoAgQhBiACQcAAayICQRhqIgdCADcDACACQSBqIghCADcDACACQThqIglCADcDACACQT\
BqIgpCADcDACACQShqIgtCADcDACACQQhqIgwgASkACDcDACACQRBqIg0gASkAEDcDACAHIAEoABgi\
DjYCACAIIAEoACAiDzYCACACIAEpAAA3AwAgAiABKAAcIhA2AhwgAiABKAAkIhE2AiQgCyABKAAoIh\
I2AgAgAiABKAAsIgs2AiwgCiABKAAwIhM2AgAgAiABKAA0Igo2AjQgCSABKAA4IhQ2AgAgAiABKAA8\
IhU2AjwgACADIBMgCyAQIAYgAigCDCIWaiAEIAUgBiADIAYgBHFqIAUgBkF/c3FqIAIoAgAiF2pBA3\
ciAXFqIAQgAUF/c3FqIAIoAgQiGGpBB3ciByABcWogBiAHQX9zcWogDCgCACIMakELdyIIIAdxaiAB\
IAhBf3NxakETdyIJaiAOIAkgCHEgAWogByAJQX9zcWogDSgCACINakEDdyIBIAlxIAdqIAggAUF/c3\
FqIAIoAhQiGWpBB3ciAiABcSAIaiAJIAJBf3NxampBC3ciByACcWogASAHQX9zcWpBE3ciCGogEiAR\
IA8gCCAHcSABaiACIAhBf3NxampBA3ciASAIcSACaiAHIAFBf3NxampBB3ciAiABcSAHaiAIIAJBf3\
NxampBC3ciByACcWogASAHQX9zcWpBE3ciCCAHcSABaiACIAhBf3NxampBA3ciASAUIAEgCiABIAhx\
IAJqIAcgAUF/c3FqakEHdyIJcSAHaiAIIAlBf3NxampBC3ciAiAJciAVIAhqIAIgCXEiB2ogASACQX\
9zcWpBE3ciAXEgB3JqIBdqQZnzidQFakEDdyIHIAIgD2ogCSANaiAHIAEgAnJxIAEgAnFyakGZ84nU\
BWpBBXciAiAHIAFycSAHIAFxcmpBmfOJ1AVqQQl3IgggAnIgASATaiAIIAIgB3JxIAIgB3FyakGZ84\
nUBWpBDXciAXEgCCACcXJqIBhqQZnzidQFakEDdyIHIAggEWogAiAZaiAHIAEgCHJxIAEgCHFyakGZ\
84nUBWpBBXciAiAHIAFycSAHIAFxcmpBmfOJ1AVqQQl3IgggAnIgASAKaiAIIAIgB3JxIAIgB3Fyak\
GZ84nUBWpBDXciAXEgCCACcXJqIAxqQZnzidQFakEDdyIHIAggEmogAiAOaiAHIAEgCHJxIAEgCHFy\
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\
ABCWARogAyACQQhqQcgAEJYBQcgBakEAOgAADBULIAFBCGooAgAhAyACQdAAakEIahB8IAJBCGpBIG\
ogAkH4AGopAwAiBTcDACACQQhqQRhqIAJB0ABqQSBqKQMAIgY3AwAgAkEIakEQaiACQdAAakEYaikD\
ACIHNwMAIAJBCGpBCGogAkHQAGpBEGopAwAiCDcDACACIAIpA1giCTcDCCADQSBqIAU3AwAgA0EYai\
AGNwMAIANBEGogBzcDACADQQhqIAg3AwAgAyAJNwMAIANB6ABqQQA6AAAMFAsgAUEIaigCACIDQgA3\
AwAgAyADKQNwNwMIIANBEGogA0H4AGopAwA3AwAgA0EYaiADQYABaikDADcDACADQSBqIANBiAFqKQ\
MANwMAIANBKGpBAEHCABCVARogAygCkAFFDRMgA0EANgKQAQwTCyABQQhqKAIAQQBByAEQlQFB2AJq\
QQA6AAAMEgsgAUEIaigCAEEAQcgBEJUBQdACakEAOgAADBELIAFBCGooAgBBAEHIARCVAUGwAmpBAD\
oAAAwQCyABQQhqKAIAQQBByAEQlQFBkAJqQQA6AAAMDwsgAUEIaigCACIDQv6568XpjpWZEDcDECAD\
QoHGlLqW8ermbzcDCCADQgA3AwAgA0HYAGpBADoAAAwOCyABQQhqKAIAIgNC/rnrxemOlZkQNwMQIA\
NCgcaUupbx6uZvNwMIIANCADcDACADQdgAakEAOgAADA0LIAFBCGooAgAiA0IANwMAIANBACkD8IxA\
NwMIIANBEGpBACkD+IxANwMAIANBGGpBACgCgI1ANgIAIANB4ABqQQA6AAAMDAsgAUEIaigCACIDQf\
DDy558NgIYIANC/rnrxemOlZkQNwMQIANCgcaUupbx6uZvNwMIIANCADcDACADQeAAakEAOgAADAsL\
IAFBCGooAgBBAEHIARCVAUHYAmpBADoAAAwKCyABQQhqKAIAQQBByAEQlQFB0AJqQQA6AAAMCQsgAU\
EIaigCAEEAQcgBEJUBQbACakEAOgAADAgLIAFBCGooAgBBAEHIARCVAUGQAmpBADoAAAwHCyABQQhq\
KAIAIgNCADcDACADQQApA6iNQDcDCCADQRBqQQApA7CNQDcDACADQRhqQQApA7iNQDcDACADQSBqQQ\
ApA8CNQDcDACADQegAakEAOgAADAYLIAFBCGooAgAiA0IANwMAIANBACkDiI1ANwMIIANBEGpBACkD\
kI1ANwMAIANBGGpBACkDmI1ANwMAIANBIGpBACkDoI1ANwMAIANB6ABqQQA6AAAMBQsgAUEIaigCAC\
IDQgA3A0AgA0EAKQOIjkA3AwAgA0HIAGpCADcDACADQQhqQQApA5COQDcDACADQRBqQQApA5iOQDcD\
ACADQRhqQQApA6COQDcDACADQSBqQQApA6iOQDcDACADQShqQQApA7COQDcDACADQTBqQQApA7iOQD\
cDACADQThqQQApA8COQDcDACADQdABakEAOgAADAQLIAFBCGooAgAiA0IANwNAIANBACkDyI1ANwMA\
IANByABqQgA3AwAgA0EIakEAKQPQjUA3AwAgA0EQakEAKQPYjUA3AwAgA0EYakEAKQPgjUA3AwAgA0\
EgakEAKQPojUA3AwAgA0EoakEAKQPwjUA3AwAgA0EwakEAKQP4jUA3AwAgA0E4akEAKQOAjkA3AwAg\
A0HQAWpBADoAAAwDCyABQQhqKAIAQQBByAEQlQFB8AJqQQA6AAAMAgsgAUEIaigCAEEAQcgBEJUBQd\
ACakEAOgAADAELIAFBCGooAgAiA0IANwMAIANBACkDwJFANwMIIANBEGpBACkDyJFANwMAIANBGGpB\
ACkD0JFANwMAIANB4ABqQQA6AAALIAFBADYCACAAQgA3AwAgAkGgAWokAA8LEJIBAAsQkwEAC4MNAh\
J/BH4jAEGwAWsiAiQAAkACQCABKAKQASIDDQAgACABKQMINwMIIAAgASkDKDcDKCAAQRBqIAFBEGop\
AwA3AwAgAEEYaiABQRhqKQMANwMAIABBIGogAUEgaikDADcDACAAQTBqIAFBMGopAwA3AwAgAEE4ai\
ABQThqKQMANwMAIABBwABqIAFBwABqKQMANwMAIABByABqIAFByABqKQMANwMAIABB0ABqIAFB0ABq\
KQMANwMAIABB2ABqIAFB2ABqKQMANwMAIABB4ABqIAFB4ABqKQMANwMAIAFB6QBqLQAAIQQgAS0Aai\
EFIAAgAS0AaDoAaCAAIAEpAwA3AwAgACAFIARFckECcjoAaQwBCwJAAkACQAJAIAFB6QBqLQAAIgRB\
BnRBACABLQBoIgZrRw0AIANBfmohByADQQFNDQIgAS0AaiEIIAJB8ABqQRhqIgkgAUGUAWoiBSAHQQ\
V0aiIEQRhqKQAANwMAIAJB8ABqQRBqIgogBEEQaikAADcDACACQfAAakEIaiILIARBCGopAAA3AwAg\
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\
IANB4ABqQcQAEJYBGiADQdAAaiADQagBakE0aikCADcDACADQcgAaiADQagBakEsaikCADcDACADQc\
AAaiADQagBakEkaikCADcDACADQThqIANBqAFqQRxqKQIANwMAIANBMGogA0GoAWpBFGopAgA3AwAg\
A0EoaiADQagBakEMaikCADcDACADIAMpAqwBNwMgIAMgCDcDWCADQQhqIANBIGpBARAVCyABQQA6AE\
AgAiADKAIIIgFBGHQgAUEIdEGAgPwHcXIgAUEIdkGA/gNxIAFBGHZycjYAACACIAMoAgwiAUEYdCAB\
QQh0QYCA/AdxciABQQh2QYD+A3EgAUEYdnJyNgAEIAIgAygCECIBQRh0IAFBCHRBgID8B3FyIAFBCH\
ZBgP4DcSABQRh2cnI2AAggAiADKAIUIgFBGHQgAUEIdEGAgPwHcXIgAUEIdkGA/gNxIAFBGHZycjYA\
DCACIAMoAhgiAUEYdCABQQh0QYCA/AdxciABQQh2QYD+A3EgAUEYdnJyNgAQIANB8AFqJAAL/wYBF3\
8jAEHQAWsiAiQAAkACQAJAIAAoApABIgMgAXunIgRNDQAgA0F/aiEFIABB8ABqIQYgA0EFdCAAakHU\
AGohByACQSBqQShqIQggAkEgakEIaiEJIAJBkAFqQSBqIQogAkEQaiELIAJBGGohDCADQX5qQTdJIQ\
0DQCAAIAU2ApABIAJBCGoiAyAHQShqKQAANwMAIAsgB0EwaikAADcDACAMIAdBOGopAAA3AwAgAiAH\
QSBqKQAANwMAIAVFDQIgACAFQX9qIg42ApABIAAtAGohDyAKIAIpAwA3AAAgCkEIaiADKQMANwAAIA\
pBEGogCykDADcAACAKQRhqIAwpAwA3AAAgAkGQAWpBGGoiAyAHQRhqIhApAAA3AwAgAkGQAWpBEGoi\
ESAHQRBqIhIpAAA3AwAgAkGQAWpBCGoiEyAHQQhqIhQpAAA3AwAgCSAGKQMANwMAIAlBCGogBkEIai\
IVKQMANwMAIAlBEGogBkEQaiIWKQMANwMAIAlBGGogBkEYaiIXKQMANwMAIAIgBykAADcDkAEgCEE4\
aiACQZABakE4aikDADcAACAIQTBqIAJBkAFqQTBqKQMANwAAIAhBKGogAkGQAWpBKGopAwA3AAAgCE\
EgaiAKKQMANwAAIAhBGGogAykDADcAACAIQRBqIBEpAwA3AAAgCEEIaiATKQMANwAAIAggAikDkAE3\
AAAgAkHAADoAiAEgAiAPQQRyIg86AIkBIAJCADcDICADIBcpAgA3AwAgESAWKQIANwMAIBMgFSkCAD\
cDACACIAYpAgA3A5ABIAJBkAFqIAhBwABCACAPEBggAygCACEDIBEoAgAhESATKAIAIRMgAigCrAEh\
DyACKAKkASEVIAIoApwBIRYgAigClAEhFyACKAKQASEYIA1FDQMgByAYNgIAIAdBHGogDzYCACAQIA\
M2AgAgB0EUaiAVNgIAIBIgETYCACAHQQxqIBY2AgAgFCATNgIAIAdBBGogFzYCACAAIAU2ApABIAdB\
YGohByAOIQUgDiAETw0ACwsgAkHQAWokAA8LQbiQwABBK0HAhcAAEHQACyACIA82AqwBIAIgAzYCqA\
EgAiAVNgKkASACIBE2AqABIAIgFjYCnAEgAiATNgKYASACIBc2ApQBIAIgGDYCkAFBkJHAACACQZAB\
akGoh8AAQYiHwAAQYwALnAUBCn8jAEEwayIDJAAgA0EkaiABNgIAIANBAzoAKCADQoCAgICABDcDCC\
ADIAA2AiBBACEEIANBADYCGCADQQA2AhACQAJAAkACQCACKAIIIgUNACACQRRqKAIAIgBFDQEgAigC\
ECEBIABBA3QhBiAAQX9qQf////8BcUEBaiEEIAIoAgAhAANAAkAgAEEEaigCACIHRQ0AIAMoAiAgAC\
gCACAHIAMoAiQoAgwRCAANBAsgASgCACADQQhqIAFBBGooAgARBgANAyABQQhqIQEgAEEIaiEAIAZB\
eGoiBg0ADAILCyACQQxqKAIAIgFFDQAgAUEFdCEIIAFBf2pB////P3FBAWohBCACKAIAIQBBACEGA0\
ACQCAAQQRqKAIAIgFFDQAgAygCICAAKAIAIAEgAygCJCgCDBEIAA0DCyADIAUgBmoiAUEcai0AADoA\
KCADIAFBBGopAgBCIIk3AwggAUEYaigCACEJIAIoAhAhCkEAIQtBACEHAkACQAJAIAFBFGooAgAOAw\
EAAgELIAlBA3QhDEEAIQcgCiAMaiIMQQRqKAIAQQRHDQEgDCgCACgCACEJC0EBIQcLIAMgCTYCFCAD\
IAc2AhAgAUEQaigCACEHAkACQAJAIAFBDGooAgAOAwEAAgELIAdBA3QhCSAKIAlqIglBBGooAgBBBE\
cNASAJKAIAKAIAIQcLQQEhCwsgAyAHNgIcIAMgCzYCGCAKIAEoAgBBA3RqIgEoAgAgA0EIaiABKAIE\
EQYADQIgAEEIaiEAIAggBkEgaiIGRw0ACwsCQCAEIAIoAgRPDQAgAygCICACKAIAIARBA3RqIgEoAg\
AgASgCBCADKAIkKAIMEQgADQELQQAhAQwBC0EBIQELIANBMGokACABC5oEAgN/An4jAEHwAWsiAyQA\
IAApAwAhBiABIAEtAEAiBGoiBUGAAToAACADQQhqQRBqIABBGGooAgA2AgAgA0EQaiAAQRBqKQIANw\
MAIAMgACkCCDcDCCAGQgmGIQYgBK1CA4YhBwJAIARBP3MiAEUNACAFQQFqQQAgABCVARoLIAYgB4Qh\
BgJAAkAgBEE4cUE4Rg0AIAEgBjcAOCADQQhqIAEQEwwBCyADQQhqIAEQEyADQeAAakEMakIANwIAIA\
NB4ABqQRRqQgA3AgAgA0HgAGpBHGpCADcCACADQeAAakEkakIANwIAIANB4ABqQSxqQgA3AgAgA0Hg\
AGpBNGpCADcCACADQZwBakIANwIAIANCADcCZCADQQA2AmAgA0HgAGogA0HgAGpBBHJBf3NqQcQAak\
EHSRogA0HAADYCYCADQagBaiADQeAAakHEABCWARogA0HQAGogA0GoAWpBNGopAgA3AwAgA0HIAGog\
A0GoAWpBLGopAgA3AwAgA0HAAGogA0GoAWpBJGopAgA3AwAgA0E4aiADQagBakEcaikCADcDACADQT\
BqIANBqAFqQRRqKQIANwMAIANBKGogA0GoAWpBDGopAgA3AwAgAyADKQKsATcDICADIAY3A1ggA0EI\
aiADQSBqEBMLIAFBADoAQCACIAMoAgg2AAAgAiADKQIMNwAEIAIgAykCFDcADCADQfABaiQAC4oEAQ\
p/IwBBMGsiBiQAQQAhByAGQQA2AggCQCABQUBxIghFDQBBASEHIAZBATYCCCAGIAA2AgAgCEHAAEYN\
AEECIQcgBkECNgIIIAYgAEHAAGo2AgQgCEGAAUYNACAGIABBgAFqNgIQQZCRwAAgBkEQakGYh8AAQY\
iHwAAQYwALIAFBP3EhCQJAIAcgBUEFdiIBIAcgAUkbIgFFDQAgA0EEciEKIAFBBXQhC0EAIQMgBiEM\
A0AgDCgCACEBIAZBEGpBGGoiDSACQRhqKQIANwMAIAZBEGpBEGoiDiACQRBqKQIANwMAIAZBEGpBCG\
oiDyACQQhqKQIANwMAIAYgAikCADcDECAGQRBqIAFBwABCACAKEBggBCADaiIBQRhqIA0pAwA3AAAg\
AUEQaiAOKQMANwAAIAFBCGogDykDADcAACABIAYpAxA3AAAgDEEEaiEMIAsgA0EgaiIDRw0ACwsCQA\
JAAkACQCAJRQ0AIAdBBXQiAiAFSw0BIAUgAmsiAUEfTQ0CIAlBIEcNAyAEIAJqIgIgACAIaiIBKQAA\
NwAAIAJBGGogAUEYaikAADcAACACQRBqIAFBEGopAAA3AAAgAkEIaiABQQhqKQAANwAAIAdBAWohBw\
sgBkEwaiQAIAcPCyACIAVBwITAABCOAQALQSAgAUHAhMAAEI0BAAtBICAJQdCEwAAQbAAL8gMCA38C\
fiMAQeABayIDJAAgACkDACEGIAEgAS0AQCIEaiIFQYABOgAAIANBCGogAEEQaikCADcDACADIAApAg\
g3AwAgBkIJhiEGIAStQgOGIQcCQCAEQT9zIgBFDQAgBUEBakEAIAAQlQEaCyAGIAeEIQYCQAJAIARB\
OHFBOEYNACABIAY3ADggAyABEB0MAQsgAyABEB0gA0HQAGpBDGpCADcCACADQdAAakEUakIANwIAIA\
NB0ABqQRxqQgA3AgAgA0HQAGpBJGpCADcCACADQdAAakEsakIANwIAIANB0ABqQTRqQgA3AgAgA0GM\
AWpCADcCACADQgA3AlQgA0EANgJQIANB0ABqIANB0ABqQQRyQX9zakHEAGpBB0kaIANBwAA2AlAgA0\
GYAWogA0HQAGpBxAAQlgEaIANBwABqIANBmAFqQTRqKQIANwMAIANBOGogA0GYAWpBLGopAgA3AwAg\
A0EwaiADQZgBakEkaikCADcDACADQShqIANBmAFqQRxqKQIANwMAIANBIGogA0GYAWpBFGopAgA3Aw\
AgA0EYaiADQZgBakEMaikCADcDACADIAMpApwBNwMQIAMgBjcDSCADIANBEGoQHQsgAUEAOgBAIAIg\
AykDADcAACACIAMpAwg3AAggA0HgAWokAAvyAwIDfwJ+IwBB4AFrIgMkACAAKQMAIQYgASABLQBAIg\
RqIgVBgAE6AAAgA0EIaiAAQRBqKQIANwMAIAMgACkCCDcDACAGQgmGIQYgBK1CA4YhBwJAIARBP3Mi\
AEUNACAFQQFqQQAgABCVARoLIAYgB4QhBgJAAkAgBEE4cUE4Rg0AIAEgBjcAOCADIAEQGwwBCyADIA\
EQGyADQdAAakEMakIANwIAIANB0ABqQRRqQgA3AgAgA0HQAGpBHGpCADcCACADQdAAakEkakIANwIA\
IANB0ABqQSxqQgA3AgAgA0HQAGpBNGpCADcCACADQYwBakIANwIAIANCADcCVCADQQA2AlAgA0HQAG\
ogA0HQAGpBBHJBf3NqQcQAakEHSRogA0HAADYCUCADQZgBaiADQdAAakHEABCWARogA0HAAGogA0GY\
AWpBNGopAgA3AwAgA0E4aiADQZgBakEsaikCADcDACADQTBqIANBmAFqQSRqKQIANwMAIANBKGogA0\
GYAWpBHGopAgA3AwAgA0EgaiADQZgBakEUaikCADcDACADQRhqIANBmAFqQQxqKQIANwMAIAMgAykC\
nAE3AxAgAyAGNwNIIAMgA0EQahAbCyABQQA6AEAgAiADKQMANwAAIAIgAykDCDcACCADQeABaiQAC+\
cDAgR/An4jAEHQAWsiAyQAIAEgAS0AQCIEaiIFQQE6AAAgACkDAEIJhiEHIAStQgOGIQgCQCAEQT9z\
IgZFDQAgBUEBakEAIAYQlQEaCyAHIAiEIQcCQAJAIARBOHFBOEYNACABIAc3ADggAEEIaiABEBYMAQ\
sgAEEIaiIEIAEQFiADQcAAakEMakIANwIAIANBwABqQRRqQgA3AgAgA0HAAGpBHGpCADcCACADQcAA\
akEkakIANwIAIANBwABqQSxqQgA3AgAgA0HAAGpBNGpCADcCACADQfwAakIANwIAIANCADcCRCADQQ\
A2AkAgA0HAAGogA0HAAGpBBHJBf3NqQcQAakEHSRogA0HAADYCQCADQYgBaiADQcAAakHEABCWARog\
A0EwaiADQYgBakE0aikCADcDACADQShqIANBiAFqQSxqKQIANwMAIANBIGogA0GIAWpBJGopAgA3Aw\
AgA0EYaiADQYgBakEcaikCADcDACADQRBqIANBiAFqQRRqKQIANwMAIANBCGogA0GIAWpBDGopAgA3\
AwAgAyADKQKMATcDACADIAc3AzggBCADEBYLIAFBADoAQCACIAApAwg3AAAgAiAAQRBqKQMANwAIIA\
IgAEEYaikDADcAECADQdABaiQAC60DAQJ/IwBBkAFrIgAkAAJAQfAAEBkiAUUNACAAQcgAakEIahB8\
IAFBIGogAEHwAGopAwA3AwAgAUEYaiAAQcgAakEgaikDADcDACABQRBqIABByABqQRhqKQMANwMAIA\
FBCGogAEHIAGpBEGopAwA3AwAgASAAKQNQNwMAIABBDGpCADcCACAAQRRqQgA3AgAgAEEcakIANwIA\
IABBJGpCADcCACAAQSxqQgA3AgAgAEE0akIANwIAIABBPGpCADcCACAAQgA3AgQgAEEANgIAIAAgAE\
EEckF/c2pBxABqQQdJGiAAQcAANgIAIABByABqIABBxAAQlgEaIAFB4ABqIABByABqQTxqKQIANwAA\
IAFB2ABqIABByABqQTRqKQIANwAAIAFB0ABqIABByABqQSxqKQIANwAAIAFByABqIABByABqQSRqKQ\
IANwAAIAFBwABqIABByABqQRxqKQIANwAAIAFBOGogAEHIAGpBFGopAgA3AAAgAUEwaiAAQcgAakEM\
aikCADcAACABIAApAkw3ACggAUHoAGpBADoAACAAQZABaiQAIAEPCwALgAMBBX8CQAJAAkAgAUEJSQ\
0AQQAhAkHN/3sgAUEQIAFBEEsbIgFrIABNDQEgAUEQIABBC2pBeHEgAEELSRsiA2pBDGoQGSIARQ0B\
IABBeGohAgJAAkAgAUF/aiIEIABxDQAgAiEBDAELIABBfGoiBSgCACIGQXhxIAQgAGpBACABa3FBeG\
oiAEEAIAEgACACa0EQSxtqIgEgAmsiAGshBAJAIAZBA3FFDQAgASABKAIEQQFxIARyQQJyNgIEIAEg\
BGoiBCAEKAIEQQFyNgIEIAUgBSgCAEEBcSAAckECcjYCACACIABqIgQgBCgCBEEBcjYCBCACIAAQJA\
wBCyACKAIAIQIgASAENgIEIAEgAiAAajYCAAsgASgCBCIAQQNxRQ0CIABBeHEiAiADQRBqTQ0CIAEg\
AEEBcSADckECcjYCBCABIANqIgAgAiADayIDQQNyNgIEIAEgAmoiAiACKAIEQQFyNgIEIAAgAxAkDA\
ILIAAQGSECCyACDwsgAUEIaguLAwECfyMAQZABayIAJAACQEHwABAZIgFFDQAgAEEMakIANwIAIABB\
FGpCADcCACAAQRxqQgA3AgAgAEEkakIANwIAIABBLGpCADcCACAAQTRqQgA3AgAgAEE8akIANwIAIA\
BCADcCBCAAQQA2AgAgACAAQQRyQX9zakHEAGpBB0kaIABBwAA2AgAgAEHIAGogAEHEABCWARogAUHg\
AGogAEHIAGpBPGopAgA3AAAgAUHYAGogAEHIAGpBNGopAgA3AAAgAUHQAGogAEHIAGpBLGopAgA3AA\
AgAUHIAGogAEHIAGpBJGopAgA3AAAgAUHAAGogAEHIAGpBHGopAgA3AAAgAUE4aiAAQcgAakEUaikC\
ADcAACABQTBqIABByABqQQxqKQIANwAAIAEgACkCTDcAKCABQgA3AwAgAUHoAGpBADoAACABQQApA6\
iNQDcDCCABQRBqQQApA7CNQDcDACABQRhqQQApA7iNQDcDACABQSBqQQApA8CNQDcDACAAQZABaiQA\
IAEPCwALiwMBAn8jAEGQAWsiACQAAkBB8AAQGSIBRQ0AIABBDGpCADcCACAAQRRqQgA3AgAgAEEcak\
IANwIAIABBJGpCADcCACAAQSxqQgA3AgAgAEE0akIANwIAIABBPGpCADcCACAAQgA3AgQgAEEANgIA\
IAAgAEEEckF/c2pBxABqQQdJGiAAQcAANgIAIABByABqIABBxAAQlgEaIAFB4ABqIABByABqQTxqKQ\
IANwAAIAFB2ABqIABByABqQTRqKQIANwAAIAFB0ABqIABByABqQSxqKQIANwAAIAFByABqIABByABq\
QSRqKQIANwAAIAFBwABqIABByABqQRxqKQIANwAAIAFBOGogAEHIAGpBFGopAgA3AAAgAUEwaiAAQc\
gAakEMaikCADcAACABIAApAkw3ACggAUIANwMAIAFB6ABqQQA6AAAgAUEAKQOIjUA3AwggAUEQakEA\
KQOQjUA3AwAgAUEYakEAKQOYjUA3AwAgAUEgakEAKQOgjUA3AwAgAEGQAWokACABDwsAC/sCAQJ/Iw\
BBkAFrIgAkAAJAQegAEBkiAUUNACAAQQxqQgA3AgAgAEEUakIANwIAIABBHGpCADcCACAAQSRqQgA3\
AgAgAEEsakIANwIAIABBNGpCADcCACAAQTxqQgA3AgAgAEIANwIEIABBADYCACAAIABBBHJBf3NqQc\
QAakEHSRogAEHAADYCACAAQcgAaiAAQcQAEJYBGiABQdgAaiAAQcgAakE8aikCADcAACABQdAAaiAA\
QcgAakE0aikCADcAACABQcgAaiAAQcgAakEsaikCADcAACABQcAAaiAAQcgAakEkaikCADcAACABQT\
hqIABByABqQRxqKQIANwAAIAFBMGogAEHIAGpBFGopAgA3AAAgAUEoaiAAQcgAakEMaikCADcAACAB\
IAApAkw3ACAgAUIANwMAIAFB4ABqQQA6AAAgAUEAKQPwjEA3AwggAUEQakEAKQP4jEA3AwAgAUEYak\
EAKAKAjUA2AgAgAEGQAWokACABDwsAC/sCAQJ/IwBBkAFrIgAkAAJAQegAEBkiAUUNACABQgA3AwAg\
AUEAKQPAkUA3AwggAUEQakEAKQPIkUA3AwAgAUEYakEAKQPQkUA3AwAgAEEMakIANwIAIABBFGpCAD\
cCACAAQRxqQgA3AgAgAEEkakIANwIAIABBLGpCADcCACAAQTRqQgA3AgAgAEE8akIANwIAIABCADcC\
BCAAQQA2AgAgACAAQQRyQX9zakHEAGpBB0kaIABBwAA2AgAgAEHIAGogAEHEABCWARogAUHYAGogAE\
HIAGpBPGopAgA3AAAgAUHQAGogAEHIAGpBNGopAgA3AAAgAUHIAGogAEHIAGpBLGopAgA3AAAgAUHA\
AGogAEHIAGpBJGopAgA3AAAgAUE4aiAAQcgAakEcaikCADcAACABQTBqIABByABqQRRqKQIANwAAIA\
FBKGogAEHIAGpBDGopAgA3AAAgASAAKQJMNwAgIAFB4ABqQQA6AAAgAEGQAWokACABDwsAC6kDAQF/\
IAIgAi0AqAEiA2pBAEGoASADaxCVASEDIAJBADoAqAEgA0EfOgAAIAIgAi0ApwFBgAFyOgCnASABIA\
EpAwAgAikAAIU3AwAgASABKQMIIAIpAAiFNwMIIAEgASkDECACKQAQhTcDECABIAEpAxggAikAGIU3\
AxggASABKQMgIAIpACCFNwMgIAEgASkDKCACKQAohTcDKCABIAEpAzAgAikAMIU3AzAgASABKQM4IA\
IpADiFNwM4IAEgASkDQCACKQBAhTcDQCABIAEpA0ggAikASIU3A0ggASABKQNQIAIpAFCFNwNQIAEg\
ASkDWCACKQBYhTcDWCABIAEpA2AgAikAYIU3A2AgASABKQNoIAIpAGiFNwNoIAEgASkDcCACKQBwhT\
cDcCABIAEpA3ggAikAeIU3A3ggASABKQOAASACKQCAAYU3A4ABIAEgASkDiAEgAikAiAGFNwOIASAB\
IAEpA5ABIAIpAJABhTcDkAEgASABKQOYASACKQCYAYU3A5gBIAEgASkDoAEgAikAoAGFNwOgASABEC\
UgACABQcgBEJYBGgvvAgEDfwJAAkACQAJAIAAtAGgiA0UNAAJAIANBwQBPDQAgAEEoaiIEIANqIAFB\
wAAgA2siAyACIAMgAkkbIgMQlgEaIAAgAC0AaCADaiIFOgBoIAEgA2ohAQJAIAIgA2siAg0AQQAhAg\
wDCyAAQQhqIARBwAAgACkDACAALQBqIABB6QBqIgMtAABFchAYIARBAEHBABCVARogAyADLQAAQQFq\
OgAADAELIANBwABBoITAABCOAQALQQAhAyACQcEASQ0BIABBCGohBCAAQekAaiIDLQAAIQUDQCAEIA\
FBwAAgACkDACAALQBqIAVB/wFxRXIQGCADIAMtAABBAWoiBToAACABQcAAaiEBIAJBQGoiAkHAAEsN\
AAsgAC0AaCEFCyAFQf8BcSIDQcEATw0BCyAAIANqQShqIAFBwAAgA2siAyACIAMgAkkbIgIQlgEaIA\
AgAC0AaCACajoAaCAADwsgA0HAAEGghMAAEI4BAAudAwECfyMAQRBrIgMkACABIAEtAJABIgRqQQBB\
kAEgBGsQlQEhBCABQQA6AJABIARBAToAACABIAEtAI8BQYABcjoAjwEgACAAKQMAIAEpAACFNwMAIA\
AgACkDCCABKQAIhTcDCCAAIAApAxAgASkAEIU3AxAgACAAKQMYIAEpABiFNwMYIAAgACkDICABKQAg\
hTcDICAAIAApAyggASkAKIU3AyggACAAKQMwIAEpADCFNwMwIAAgACkDOCABKQA4hTcDOCAAIAApA0\
AgASkAQIU3A0AgACAAKQNIIAEpAEiFNwNIIAAgACkDUCABKQBQhTcDUCAAIAApA1ggASkAWIU3A1gg\
ACAAKQNgIAEpAGCFNwNgIAAgACkDaCABKQBohTcDaCAAIAApA3AgASkAcIU3A3AgACAAKQN4IAEpAH\
iFNwN4IAAgACkDgAEgASkAgAGFNwOAASAAIAApA4gBIAEpAIgBhTcDiAEgABAlIAIgACkDADcAACAC\
IAApAwg3AAggAiAAKQMQNwAQIAIgACkDGD4AGCADQRBqJAALnQMBAn8jAEEQayIDJAAgASABLQCQAS\
IEakEAQZABIARrEJUBIQQgAUEAOgCQASAEQQY6AAAgASABLQCPAUGAAXI6AI8BIAAgACkDACABKQAA\
hTcDACAAIAApAwggASkACIU3AwggACAAKQMQIAEpABCFNwMQIAAgACkDGCABKQAYhTcDGCAAIAApAy\
AgASkAIIU3AyAgACAAKQMoIAEpACiFNwMoIAAgACkDMCABKQAwhTcDMCAAIAApAzggASkAOIU3Azgg\
ACAAKQNAIAEpAECFNwNAIAAgACkDSCABKQBIhTcDSCAAIAApA1AgASkAUIU3A1AgACAAKQNYIAEpAF\
iFNwNYIAAgACkDYCABKQBghTcDYCAAIAApA2ggASkAaIU3A2ggACAAKQNwIAEpAHCFNwNwIAAgACkD\
eCABKQB4hTcDeCAAIAApA4ABIAEpAIABhTcDgAEgACAAKQOIASABKQCIAYU3A4gBIAAQJSACIAApAw\
A3AAAgAiAAKQMINwAIIAIgACkDEDcAECACIAApAxg+ABggA0EQaiQAC5YDAQR/IwBBkARrIgMkAAJA\
IAJFDQAgAkGoAWwhBCADQeACakEEciEFIANBsAFqIANBsAFqQQRyIgZBf3NqQawBakEHSRoDQCAAKA\
IAIQIgA0EANgKwASAGQQBBqAEQlQEaIANBqAE2ArABIANB4AJqIANBsAFqQawBEJYBGiADQQhqIAVB\
qAEQlgEaIAMgAikDADcDCCADIAIpAwg3AxAgAyACKQMQNwMYIAMgAikDGDcDICADIAIpAyA3AyggAy\
ACKQMoNwMwIAMgAikDMDcDOCADIAIpAzg3A0AgAyACKQNANwNIIAMgAikDSDcDUCADIAIpA1A3A1gg\
AyACKQNYNwNgIAMgAikDYDcDaCADIAIpA2g3A3AgAyACKQNwNwN4IAMgAikDeDcDgAEgAyACKQOAAT\
cDiAEgAyACKQOIATcDkAEgAyACKQOQATcDmAEgAyACKQOYATcDoAEgAyACKQOgATcDqAEgAhAlIAEg\
A0EIakGoARCWARogAUGoAWohASAEQdh+aiIEDQALCyADQZAEaiQAC/oCAQJ/IwBBkAFrIgAkAAJAQe\
gAEBkiAUUNACAAQQxqQgA3AgAgAEEUakIANwIAIABBHGpCADcCACAAQSRqQgA3AgAgAEEsakIANwIA\
IABBNGpCADcCACAAQTxqQgA3AgAgAEIANwIEIABBADYCACAAIABBBHJBf3NqQcQAakEHSRogAEHAAD\
YCACAAQcgAaiAAQcQAEJYBGiABQdgAaiAAQcgAakE8aikCADcAACABQdAAaiAAQcgAakE0aikCADcA\
ACABQcgAaiAAQcgAakEsaikCADcAACABQcAAaiAAQcgAakEkaikCADcAACABQThqIABByABqQRxqKQ\
IANwAAIAFBMGogAEHIAGpBFGopAgA3AAAgAUEoaiAAQcgAakEMaikCADcAACABIAApAkw3ACAgAUHw\
w8uefDYCGCABQv6568XpjpWZEDcDECABQoHGlLqW8ermbzcDCCABQgA3AwAgAUHgAGpBADoAACAAQZ\
ABaiQAIAEPCwAL5AIBBH8jAEGQBGsiAyQAIAMgADYCBCAAQcgBaiEEAkACQAJAAkACQCAAQfACai0A\
ACIFRQ0AQagBIAVrIgYgAksNASABIAQgBWogBhCWASAGaiEBIAIgBmshAgsgAiACQagBbiIGQagBbC\
IFSQ0BIANBBGogASAGEDsCQCACIAVrIgINAEEAIQIMBAsgA0EANgKwASADQbABaiADQbABakEEckEA\
QagBEJUBQX9zakGsAWpBB0kaIANBqAE2ArABIANB4AJqIANBsAFqQawBEJYBGiADQQhqIANB4AJqQQ\
RyQagBEJYBGiADQQRqIANBCGpBARA7IAJBqQFPDQIgASAFaiADQQhqIAIQlgEaIAQgA0EIakGoARCW\
ARoMAwsgASAEIAVqIAIQlgEaIAUgAmohAgwCC0HMjMAAQSNBrIzAABB0AAsgAkGoAUG8jMAAEI0BAA\
sgACACOgDwAiADQZAEaiQAC+QCAQR/IwBBsANrIgMkACADIAA2AgQgAEHIAWohBAJAAkACQAJAAkAg\
AEHQAmotAAAiBUUNAEGIASAFayIGIAJLDQEgASAEIAVqIAYQlgEgBmohASACIAZrIQILIAIgAkGIAW\
4iBkGIAWwiBUkNASADQQRqIAEgBhBEAkAgAiAFayICDQBBACECDAQLIANBADYCkAEgA0GQAWogA0GQ\
AWpBBHJBAEGIARCVAUF/c2pBjAFqQQdJGiADQYgBNgKQASADQaACaiADQZABakGMARCWARogA0EIai\
ADQaACakEEckGIARCWARogA0EEaiADQQhqQQEQRCACQYkBTw0CIAEgBWogA0EIaiACEJYBGiAEIANB\
CGpBiAEQlgEaDAMLIAEgBCAFaiACEJYBGiAFIAJqIQIMAgtBzIzAAEEjQayMwAAQdAALIAJBiAFBvI\
zAABCNAQALIAAgAjoA0AIgA0GwA2okAAuRAwEBfwJAIAJFDQAgASACQagBbGohAyAAKAIAIQIDQCAC\
IAIpAwAgASkAAIU3AwAgAiACKQMIIAEpAAiFNwMIIAIgAikDECABKQAQhTcDECACIAIpAxggASkAGI\
U3AxggAiACKQMgIAEpACCFNwMgIAIgAikDKCABKQAohTcDKCACIAIpAzAgASkAMIU3AzAgAiACKQM4\
IAEpADiFNwM4IAIgAikDQCABKQBAhTcDQCACIAIpA0ggASkASIU3A0ggAiACKQNQIAEpAFCFNwNQIA\
IgAikDWCABKQBYhTcDWCACIAIpA2AgASkAYIU3A2AgAiACKQNoIAEpAGiFNwNoIAIgAikDcCABKQBw\
hTcDcCACIAIpA3ggASkAeIU3A3ggAiACKQOAASABKQCAAYU3A4ABIAIgAikDiAEgASkAiAGFNwOIAS\
ACIAIpA5ABIAEpAJABhTcDkAEgAiACKQOYASABKQCYAYU3A5gBIAIgAikDoAEgASkAoAGFNwOgASAC\
ECUgAUGoAWoiASADRw0ACwsL7gIBAn8jAEGQAWsiACQAAkBB4AAQGSIBRQ0AIABBDGpCADcCACAAQR\
RqQgA3AgAgAEEcakIANwIAIABBJGpCADcCACAAQSxqQgA3AgAgAEE0akIANwIAIABBPGpCADcCACAA\
QgA3AgQgAEEANgIAIAAgAEEEckF/c2pBxABqQQdJGiAAQcAANgIAIABByABqIABBxAAQlgEaIAFB0A\
BqIABByABqQTxqKQIANwAAIAFByABqIABByABqQTRqKQIANwAAIAFBwABqIABByABqQSxqKQIANwAA\
IAFBOGogAEHIAGpBJGopAgA3AAAgAUEwaiAAQcgAakEcaikCADcAACABQShqIABByABqQRRqKQIANw\
AAIAFBIGogAEHIAGpBDGopAgA3AAAgASAAKQJMNwAYIAFC/rnrxemOlZkQNwMQIAFCgcaUupbx6uZv\
NwMIIAFCADcDACABQdgAakEAOgAAIABBkAFqJAAgAQ8LAAu8AgEIfwJAAkAgAkEPSw0AIAAhAwwBCy\
AAQQAgAGtBA3EiBGohBQJAIARFDQAgACEDIAEhBgNAIAMgBi0AADoAACAGQQFqIQYgA0EBaiIDIAVJ\
DQALCyAFIAIgBGsiB0F8cSIIaiEDAkACQCABIARqIglBA3EiBkUNACAIQQFIDQEgCUF8cSIKQQRqIQ\
FBACAGQQN0IgJrQRhxIQQgCigCACEGA0AgBSAGIAJ2IAEoAgAiBiAEdHI2AgAgAUEEaiEBIAVBBGoi\
BSADSQ0ADAILCyAIQQFIDQAgCSEBA0AgBSABKAIANgIAIAFBBGohASAFQQRqIgUgA0kNAAsLIAdBA3\
EhAiAJIAhqIQELAkAgAkUNACADIAJqIQUDQCADIAEtAAA6AAAgAUEBaiEBIANBAWoiAyAFSQ0ACwsg\
AAv6AgEBfyABIAEtAIgBIgNqQQBBiAEgA2sQlQEhAyABQQA6AIgBIANBAToAACABIAEtAIcBQYABcj\
oAhwEgACAAKQMAIAEpAACFNwMAIAAgACkDCCABKQAIhTcDCCAAIAApAxAgASkAEIU3AxAgACAAKQMY\
IAEpABiFNwMYIAAgACkDICABKQAghTcDICAAIAApAyggASkAKIU3AyggACAAKQMwIAEpADCFNwMwIA\
AgACkDOCABKQA4hTcDOCAAIAApA0AgASkAQIU3A0AgACAAKQNIIAEpAEiFNwNIIAAgACkDUCABKQBQ\
hTcDUCAAIAApA1ggASkAWIU3A1ggACAAKQNgIAEpAGCFNwNgIAAgACkDaCABKQBohTcDaCAAIAApA3\
AgASkAcIU3A3AgACAAKQN4IAEpAHiFNwN4IAAgACkDgAEgASkAgAGFNwOAASAAECUgAiAAKQMANwAA\
IAIgACkDCDcACCACIAApAxA3ABAgAiAAKQMYNwAYC/oCAQF/IAEgAS0AiAEiA2pBAEGIASADaxCVAS\
EDIAFBADoAiAEgA0EGOgAAIAEgAS0AhwFBgAFyOgCHASAAIAApAwAgASkAAIU3AwAgACAAKQMIIAEp\
AAiFNwMIIAAgACkDECABKQAQhTcDECAAIAApAxggASkAGIU3AxggACAAKQMgIAEpACCFNwMgIAAgAC\
kDKCABKQAohTcDKCAAIAApAzAgASkAMIU3AzAgACAAKQM4IAEpADiFNwM4IAAgACkDQCABKQBAhTcD\
QCAAIAApA0ggASkASIU3A0ggACAAKQNQIAEpAFCFNwNQIAAgACkDWCABKQBYhTcDWCAAIAApA2AgAS\
kAYIU3A2AgACAAKQNoIAEpAGiFNwNoIAAgACkDcCABKQBwhTcDcCAAIAApA3ggASkAeIU3A3ggACAA\
KQOAASABKQCAAYU3A4ABIAAQJSACIAApAwA3AAAgAiAAKQMINwAIIAIgACkDEDcAECACIAApAxg3AB\
gL5gIBBH8jAEGwA2siAyQAAkAgAkUNACACQYgBbCEEIANBoAJqQQRyIQUgA0GQAWogA0GQAWpBBHIi\
BkF/c2pBjAFqQQdJGgNAIAAoAgAhAiADQQA2ApABIAZBAEGIARCVARogA0GIATYCkAEgA0GgAmogA0\
GQAWpBjAEQlgEaIANBCGogBUGIARCWARogAyACKQMANwMIIAMgAikDCDcDECADIAIpAxA3AxggAyAC\
KQMYNwMgIAMgAikDIDcDKCADIAIpAyg3AzAgAyACKQMwNwM4IAMgAikDODcDQCADIAIpA0A3A0ggAy\
ACKQNINwNQIAMgAikDUDcDWCADIAIpA1g3A2AgAyACKQNgNwNoIAMgAikDaDcDcCADIAIpA3A3A3gg\
AyACKQN4NwOAASADIAIpA4ABNwOIASACECUgASADQQhqQYgBEJYBGiABQYgBaiEBIARB+H5qIgQNAA\
sLIANBsANqJAAL2AIBAX8CQCACRQ0AIAEgAkGQAWxqIQMgACgCACECA0AgAiACKQMAIAEpAACFNwMA\
IAIgAikDCCABKQAIhTcDCCACIAIpAxAgASkAEIU3AxAgAiACKQMYIAEpABiFNwMYIAIgAikDICABKQ\
AghTcDICACIAIpAyggASkAKIU3AyggAiACKQMwIAEpADCFNwMwIAIgAikDOCABKQA4hTcDOCACIAIp\
A0AgASkAQIU3A0AgAiACKQNIIAEpAEiFNwNIIAIgAikDUCABKQBQhTcDUCACIAIpA1ggASkAWIU3A1\
ggAiACKQNgIAEpAGCFNwNgIAIgAikDaCABKQBohTcDaCACIAIpA3AgASkAcIU3A3AgAiACKQN4IAEp\
AHiFNwN4IAIgAikDgAEgASkAgAGFNwOAASACIAIpA4gBIAEpAIgBhTcDiAEgAhAlIAFBkAFqIgEgA0\
cNAAsLC90CAQF/IAIgAi0AiAEiA2pBAEGIASADaxCVASEDIAJBADoAiAEgA0EfOgAAIAIgAi0AhwFB\
gAFyOgCHASABIAEpAwAgAikAAIU3AwAgASABKQMIIAIpAAiFNwMIIAEgASkDECACKQAQhTcDECABIA\
EpAxggAikAGIU3AxggASABKQMgIAIpACCFNwMgIAEgASkDKCACKQAohTcDKCABIAEpAzAgAikAMIU3\
AzAgASABKQM4IAIpADiFNwM4IAEgASkDQCACKQBAhTcDQCABIAEpA0ggAikASIU3A0ggASABKQNQIA\
IpAFCFNwNQIAEgASkDWCACKQBYhTcDWCABIAEpA2AgAikAYIU3A2AgASABKQNoIAIpAGiFNwNoIAEg\
ASkDcCACKQBwhTcDcCABIAEpA3ggAikAeIU3A3ggASABKQOAASACKQCAAYU3A4ABIAEQJSAAIAFByA\
EQlgEaC7MCAQR/QR8hAgJAIAFB////B0sNACABQQYgAUEIdmciAmt2QQFxIAJBAXRrQT5qIQILIABC\
ADcCECAAIAI2AhwgAkECdEHc1MAAaiEDAkACQAJAAkACQEEAKALQ0kAiBEEBIAJ0IgVxRQ0AIAMoAg\
AiBCgCBEF4cSABRw0BIAQhAgwCC0EAIAQgBXI2AtDSQCADIAA2AgAgACADNgIYDAMLIAFBAEEZIAJB\
AXZrQR9xIAJBH0YbdCEDA0AgBCADQR12QQRxakEQaiIFKAIAIgJFDQIgA0EBdCEDIAIhBCACKAIEQX\
hxIAFHDQALCyACKAIIIgMgADYCDCACIAA2AgggAEEANgIYIAAgAjYCDCAAIAM2AggPCyAFIAA2AgAg\
ACAENgIYCyAAIAA2AgwgACAANgIIC7oCAQV/IAAoAhghAQJAAkACQCAAKAIMIgIgAEcNACAAQRRBEC\
AAQRRqIgIoAgAiAxtqKAIAIgQNAUEAIQIMAgsgACgCCCIEIAI2AgwgAiAENgIIDAELIAIgAEEQaiAD\
GyEDA0AgAyEFAkAgBCICQRRqIgMoAgAiBA0AIAJBEGohAyACKAIQIQQLIAQNAAsgBUEANgIACwJAIA\
FFDQACQAJAIAAoAhxBAnRB3NTAAGoiBCgCACAARg0AIAFBEEEUIAEoAhAgAEYbaiACNgIAIAINAQwC\
CyAEIAI2AgAgAg0AQQBBACgC0NJAQX4gACgCHHdxNgLQ0kAPCyACIAE2AhgCQCAAKAIQIgRFDQAgAi\
AENgIQIAQgAjYCGAsgAEEUaigCACIERQ0AIAJBFGogBDYCACAEIAI2AhgPCwvFAgEBfwJAIAJFDQAg\
ASACQYgBbGohAyAAKAIAIQIDQCACIAIpAwAgASkAAIU3AwAgAiACKQMIIAEpAAiFNwMIIAIgAikDEC\
ABKQAQhTcDECACIAIpAxggASkAGIU3AxggAiACKQMgIAEpACCFNwMgIAIgAikDKCABKQAohTcDKCAC\
IAIpAzAgASkAMIU3AzAgAiACKQM4IAEpADiFNwM4IAIgAikDQCABKQBAhTcDQCACIAIpA0ggASkASI\
U3A0ggAiACKQNQIAEpAFCFNwNQIAIgAikDWCABKQBYhTcDWCACIAIpA2AgASkAYIU3A2AgAiACKQNo\
IAEpAGiFNwNoIAIgAikDcCABKQBwhTcDcCACIAIpA3ggASkAeIU3A3ggAiACKQOAASABKQCAAYU3A4\
ABIAIQJSABQYgBaiIBIANHDQALCwvHAgEBfyABIAEtAGgiA2pBAEHoACADaxCVASEDIAFBADoAaCAD\
QQE6AAAgASABLQBnQYABcjoAZyAAIAApAwAgASkAAIU3AwAgACAAKQMIIAEpAAiFNwMIIAAgACkDEC\
ABKQAQhTcDECAAIAApAxggASkAGIU3AxggACAAKQMgIAEpACCFNwMgIAAgACkDKCABKQAohTcDKCAA\
IAApAzAgASkAMIU3AzAgACAAKQM4IAEpADiFNwM4IAAgACkDQCABKQBAhTcDQCAAIAApA0ggASkASI\
U3A0ggACAAKQNQIAEpAFCFNwNQIAAgACkDWCABKQBYhTcDWCAAIAApA2AgASkAYIU3A2AgABAlIAIg\
ACkDADcAACACIAApAwg3AAggAiAAKQMQNwAQIAIgACkDGDcAGCACIAApAyA3ACAgAiAAKQMoNwAoC8\
cCAQF/IAEgAS0AaCIDakEAQegAIANrEJUBIQMgAUEAOgBoIANBBjoAACABIAEtAGdBgAFyOgBnIAAg\
ACkDACABKQAAhTcDACAAIAApAwggASkACIU3AwggACAAKQMQIAEpABCFNwMQIAAgACkDGCABKQAYhT\
cDGCAAIAApAyAgASkAIIU3AyAgACAAKQMoIAEpACiFNwMoIAAgACkDMCABKQAwhTcDMCAAIAApAzgg\
ASkAOIU3AzggACAAKQNAIAEpAECFNwNAIAAgACkDSCABKQBIhTcDSCAAIAApA1AgASkAUIU3A1AgAC\
AAKQNYIAEpAFiFNwNYIAAgACkDYCABKQBghTcDYCAAECUgAiAAKQMANwAAIAIgACkDCDcACCACIAAp\
AxA3ABAgAiAAKQMYNwAYIAIgACkDIDcAICACIAApAyg3ACgLmwIBAX8gASABLQBIIgNqQQBByAAgA2\
sQlQEhAyABQQA6AEggA0EBOgAAIAEgAS0AR0GAAXI6AEcgACAAKQMAIAEpAACFNwMAIAAgACkDCCAB\
KQAIhTcDCCAAIAApAxAgASkAEIU3AxAgACAAKQMYIAEpABiFNwMYIAAgACkDICABKQAghTcDICAAIA\
ApAyggASkAKIU3AyggACAAKQMwIAEpADCFNwMwIAAgACkDOCABKQA4hTcDOCAAIAApA0AgASkAQIU3\
A0AgABAlIAIgACkDADcAACACIAApAwg3AAggAiAAKQMQNwAQIAIgACkDGDcAGCACIAApAyA3ACAgAi\
AAKQMoNwAoIAIgACkDMDcAMCACIAApAzg3ADgLmwIBAX8gASABLQBIIgNqQQBByAAgA2sQlQEhAyAB\
QQA6AEggA0EGOgAAIAEgAS0AR0GAAXI6AEcgACAAKQMAIAEpAACFNwMAIAAgACkDCCABKQAIhTcDCC\
AAIAApAxAgASkAEIU3AxAgACAAKQMYIAEpABiFNwMYIAAgACkDICABKQAghTcDICAAIAApAyggASkA\
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\
BCEBDAELIAEgBUECdBAmIgFFDQILIAAgBTYCBCAAIAE2AgAgBkEQaiQADwtByI7AAEEwEJQBAAsAC4\
MBAQF/IwBBEGsiBSQAIAUgASACIAMgBBAOIAVBCGooAgAhBCAFKAIEIQMCQAJAIAUoAgANACAAIAQ2\
AgQgACADNgIADAELIAMgBBAAIQQgAEEANgIAIAAgBDYCBAsCQCABQQZHDQAgAigCkAFFDQAgAkEANg\
KQAQsgAhAhIAVBEGokAAt+AQF/IwBBwABrIgQkACAEQSs2AgwgBCAANgIIIAQgAjYCFCAEIAE2AhAg\
BEEsakECNgIAIARBPGpBATYCACAEQgI3AhwgBEHIiMAANgIYIARBAjYCNCAEIARBMGo2AiggBCAEQR\
BqNgI4IAQgBEEIajYCMCAEQRhqIAMQeQALdQECfyMAQZACayICJABBACEDIAJBADYCAANAIAIgA2pB\
BGogASADaigAADYCACACIANBBGoiAzYCACADQYABRw0ACyACQYgBaiACQYQBEJYBGiAAIAJBiAFqQQ\
RyQYABEJYBIAEtAIABOgCAASACQZACaiQAC3UBAn8jAEGwAmsiAiQAQQAhAyACQQA2AgADQCACIANq\
QQRqIAEgA2ooAAA2AgAgAiADQQRqIgM2AgAgA0GQAUcNAAsgAkGYAWogAkGUARCWARogACACQZgBak\
EEckGQARCWASABLQCQAToAkAEgAkGwAmokAAt1AQJ/IwBBoAJrIgIkAEEAIQMgAkEANgIAA0AgAiAD\
akEEaiABIANqKAAANgIAIAIgA0EEaiIDNgIAIANBiAFHDQALIAJBkAFqIAJBjAEQlgEaIAAgAkGQAW\
pBBHJBiAEQlgEgAS0AiAE6AIgBIAJBoAJqJAALcwECfyMAQeABayICJABBACEDIAJBADYCAANAIAIg\
A2pBBGogASADaigAADYCACACIANBBGoiAzYCACADQegARw0ACyACQfAAaiACQewAEJYBGiAAIAJB8A\
BqQQRyQegAEJYBIAEtAGg6AGggAkHgAWokAAtzAQJ/IwBBoAFrIgIkAEEAIQMgAkEANgIAA0AgAiAD\
akEEaiABIANqKAAANgIAIAIgA0EEaiIDNgIAIANByABHDQALIAJB0ABqIAJBzAAQlgEaIAAgAkHQAG\
pBBHJByAAQlgEgAS0ASDoASCACQaABaiQAC3UBAn8jAEHgAmsiAiQAQQAhAyACQQA2AgADQCACIANq\
QQRqIAEgA2ooAAA2AgAgAiADQQRqIgM2AgAgA0GoAUcNAAsgAkGwAWogAkGsARCWARogACACQbABak\
EEckGoARCWASABLQCoAToAqAEgAkHgAmokAAt7AQJ/IwBBMGsiAiQAIAJBFGpBAjYCACACQeiHwAA2\
AhAgAkECNgIMIAJByIfAADYCCCABQRxqKAIAIQMgASgCGCEBIAJBAjYCLCACQgI3AhwgAkHIiMAANg\
IYIAIgAkEIajYCKCABIAMgAkEYahArIQEgAkEwaiQAIAELewECfyMAQTBrIgIkACACQRRqQQI2AgAg\
AkHoh8AANgIQIAJBAjYCDCACQciHwAA2AgggAUEcaigCACEDIAEoAhghASACQQI2AiwgAkICNwIcIA\
JByIjAADYCGCACIAJBCGo2AiggASADIAJBGGoQKyEBIAJBMGokACABC2wBAX8jAEEwayIDJAAgAyAB\
NgIEIAMgADYCACADQRxqQQI2AgAgA0EsakEDNgIAIANCAzcCDCADQcSLwAA2AgggA0EDNgIkIAMgA0\
EgajYCGCADIAM2AiggAyADQQRqNgIgIANBCGogAhB5AAtsAQF/IwBBMGsiAyQAIAMgATYCBCADIAA2\
AgAgA0EcakECNgIAIANBLGpBAzYCACADQgI3AgwgA0GkiMAANgIIIANBAzYCJCADIANBIGo2AhggAy\
ADNgIoIAMgA0EEajYCICADQQhqIAIQeQALbAEBfyMAQTBrIgMkACADIAE2AgQgAyAANgIAIANBHGpB\
AjYCACADQSxqQQM2AgAgA0ICNwIMIANB1IrAADYCCCADQQM2AiQgAyADQSBqNgIYIAMgA0EEajYCKC\
ADIAM2AiAgA0EIaiACEHkAC2wBAX8jAEEwayIDJAAgAyABNgIEIAMgADYCACADQRxqQQI2AgAgA0Es\
akEDNgIAIANCAjcCDCADQfSKwAA2AgggA0EDNgIkIAMgA0EgajYCGCADIANBBGo2AiggAyADNgIgIA\
NBCGogAhB5AAtXAQJ/AkACQCAARQ0AIAAoAgANASAAQQA2AgAgACgCCCEBIAAoAgQhAiAAECECQCAC\
QQZHDQAgASgCkAFFDQAgAUEANgKQAQsgARAhDwsQkgEACxCTAQALWAECf0EAQQAoAsjSQCIBQQFqNg\
LI0kBBAEEAKAKQ1kBBAWoiAjYCkNZAAkAgAUEASA0AIAJBAksNAEEAKALE0kBBf0wNACACQQFLDQAg\
AEUNABCZAQALAAtKAQN/QQAhAwJAIAJFDQACQANAIAAtAAAiBCABLQAAIgVHDQEgAEEBaiEAIAFBAW\
ohASACQX9qIgJFDQIMAAsLIAQgBWshAwsgAwtGAAJAAkAgAUUNACABKAIADQEgAUF/NgIAIAFBBGoo\
AgAgAUEIaigCACACEFEgAUEANgIAIABCADcDAA8LEJIBAAsQkwEAC0cBAX8jAEEgayIDJAAgA0EUak\
EANgIAIANBuJDAADYCECADQgE3AgQgAyABNgIcIAMgADYCGCADIANBGGo2AgAgAyACEHkAC4sBACAA\
QgA3A0AgAEL5wvibkaOz8NsANwM4IABC6/qG2r+19sEfNwMwIABCn9j52cKR2oKbfzcDKCAAQtGFmu\
/6z5SH0QA3AyAgAELx7fT4paf9p6V/NwMYIABCq/DT9K/uvLc8NwMQIABCu86qptjQ67O7fzcDCCAA\
IAGtQoiS95X/zPmE6gCFNwMAC0UBAn8jAEEQayIBJAACQCAAKAIIIgINAEG4kMAAQStBgJHAABB0AA\
sgASAAKAIMNgIIIAEgADYCBCABIAI2AgAgARB9AAtCAQF/AkACQAJAIAJBgIDEAEYNAEEBIQQgACAC\
IAEoAhARBgANAQsgAw0BQQAhBAsgBA8LIAAgA0EAIAEoAgwRCAALPwEBfyMAQSBrIgAkACAAQRxqQQ\
A2AgAgAEG4kMAANgIYIABCATcCDCAAQayCwAA2AgggAEEIakG0gsAAEHkACz4BAX8jAEEgayICJAAg\
AkEBOgAYIAIgATYCFCACIAA2AhAgAkG0iMAANgIMIAJBuJDAADYCCCACQQhqEHYACz0BAn8gACgCAC\
IBQRRqKAIAIQICQAJAIAEoAgQOAgAAAQsgAg0AIAAoAgQtABAQcQALIAAoAgQtABAQcQALMwACQCAA\
Qfz///8HSw0AAkAgAA0AQQQPCyAAIABB/f///wdJQQJ0EDIiAEUNACAADwsAC1IAIABCx8yj2NbQ67\
O7fzcDCCAAQgA3AwAgAEEgakKrs4/8kaOz8NsANwMAIABBGGpC/6S5iMWR2oKbfzcDACAAQRBqQvLm\
u+Ojp/2npX83AwALLAEBfyMAQRBrIgEkACABQQhqIABBCGooAgA2AgAgASAAKQIANwMAIAEQegALJg\
ACQCAADQBByI7AAEEwEJQBAAsgACACIAMgBCAFIAEoAhARDAALJAACQCAADQBByI7AAEEwEJQBAAsg\
ACACIAMgBCABKAIQEQoACyQAAkAgAA0AQciOwABBMBCUAQALIAAgAiADIAQgASgCEBEJAAskAAJAIA\
ANAEHIjsAAQTAQlAEACyAAIAIgAyAEIAEoAhARCgALJAACQCAADQBByI7AAEEwEJQBAAsgACACIAMg\
BCABKAIQEQkACyQAAkAgAA0AQciOwABBMBCUAQALIAAgAiADIAQgASgCEBEJAAskAAJAIAANAEHIjs\
AAQTAQlAEACyAAIAIgAyAEIAEoAhARFwALJAACQCAADQBByI7AAEEwEJQBAAsgACACIAMgBCABKAIQ\
ERgACyQAAkAgAA0AQciOwABBMBCUAQALIAAgAiADIAQgASgCEBEWAAsiAAJAIAANAEHIjsAAQTAQlA\
EACyAAIAIgAyABKAIQEQcACyAAAkACQCABQfz///8HSw0AIAAgAhAmIgENAQsACyABCyAAAkAgAA0A\
QciOwABBMBCUAQALIAAgAiABKAIQEQYACxQAIAAoAgAgASAAKAIEKAIMEQYACxAAIAEgACgCACAAKA\
IEEBwLDgACQCABRQ0AIAAQIQsLCwAgACABIAIQbwALCwAgACABIAIQbgALEQBBxILAAEEvQcSDwAAQ\
dAALDQAgACgCABoDfwwACwsLACAAIwBqJAAjAAsNAEHY0cAAQRsQlAEACw4AQfPRwABBzwAQlAEACw\
kAIAAgARALAAsKACAAIAEgAhBUCwoAIAAgASACEEELCgAgACABIAIQcgsMAEK4ic+XicbR+EwLAwAA\
CwIACwvM0oCAAAEAQYCAwAALwlLcBRAAUAAAAJUAAAAJAAAAQkxBS0UyQkJMQUtFMkItMTI4QkxBS0\
UyQi0yMjRCTEFLRTJCLTI1NkJMQUtFMkItMzg0QkxBS0UyU0JMQUtFM0tFQ0NBSy0yMjRLRUNDQUst\
MjU2S0VDQ0FLLTM4NEtFQ0NBSy01MTJNRDRNRDVSSVBFTUQtMTYwU0hBLTFTSEEtMjI0U0hBLTI1Nl\
NIQS0zODRTSEEtNTEyVElHRVJ1bnN1cHBvcnRlZCBhbGdvcml0aG1ub24tZGVmYXVsdCBsZW5ndGgg\
c3BlY2lmaWVkIGZvciBub24tZXh0ZW5kYWJsZSBhbGdvcml0aG1saWJyYXJ5L2FsbG9jL3NyYy9yYX\
dfdmVjLnJzY2FwYWNpdHkgb3ZlcmZsb3cAAAAYARAAEQAAAPwAEAAcAAAABgIAAAUAAABBcnJheVZl\
YzogY2FwYWNpdHkgZXhjZWVkZWQgaW4gZXh0ZW5kL2Zyb21faXRlcn4vLmNhcmdvL3JlZ2lzdHJ5L3\
NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvYXJyYXl2ZWMtMC43LjIvc3JjL2FycmF5dmVj\
LnJzAHMBEABQAAAAAQQAAAUAAAB+Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNj\
I5OWRiOWVjODIzL2JsYWtlMy0xLjMuMS9zcmMvbGliLnJzAAAA1AEQAEkAAAC5AQAACQAAANQBEABJ\
AAAAXwIAAAoAAADUARAASQAAAI0CAAAJAAAA1AEQAEkAAACNAgAANAAAANQBEABJAAAAuQIAAB8AAA\
DUARAASQAAAN0CAAAKAAAA1AEQAEkAAADWAgAACQAAANQBEABJAAAAAQMAABkAAADUARAASQAAAAMD\
AAAJAAAA1AEQAEkAAAADAwAAOAAAANQBEABJAAAA+AMAAB4AAADUARAASQAAAKoEAAAWAAAA1AEQAE\
kAAAC8BAAAFgAAANQBEABJAAAA7QQAABIAAADUARAASQAAAPcEAAASAAAA1AEQAEkAAABpBQAAIQAA\
ABEAAAAEAAAABAAAABIAAAB+Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OW\
RiOWVjODIzL2FycmF5dmVjLTAuNy4yL3NyYy9hcnJheXZlY19pbXBsLnJzAAAAMAMQAFUAAAAnAAAA\
CQAAABEAAAAEAAAABAAAABIAAAARAAAAIAAAAAEAAAATAAAAQ2FwYWNpdHlFcnJvcgAAALgDEAANAA\
AAaW5zdWZmaWNpZW50IGNhcGFjaXR5AAAA0AMQABUAAAApaW5kZXggb3V0IG9mIGJvdW5kczogdGhl\
IGxlbiBpcyAgYnV0IHRoZSBpbmRleCBpcyAA8QMQACAAAAARBBAAEgAAABEAAAAAAAAAAQAAABQAAA\
A6IAAAOAgQAAAAAABEBBAAAgAAADAwMDEwMjAzMDQwNTA2MDcwODA5MTAxMTEyMTMxNDE1MTYxNzE4\
MTkyMDIxMjIyMzI0MjUyNjI3MjgyOTMwMzEzMjMzMzQzNTM2MzczODM5NDA0MTQyNDM0NDQ1NDY0Nz\
Q4NDk1MDUxNTI1MzU0NTU1NjU3NTg1OTYwNjE2MjYzNjQ2NTY2Njc2ODY5NzA3MTcyNzM3NDc1NzY3\
Nzc4Nzk4MDgxODI4Mzg0ODU4Njg3ODg4OTkwOTE5MjkzOTQ5NTk2OTc5ODk5cmFuZ2Ugc3RhcnQgaW\
5kZXggIG91dCBvZiByYW5nZSBmb3Igc2xpY2Ugb2YgbGVuZ3RoICAFEAASAAAAMgUQACIAAAByYW5n\
ZSBlbmQgaW5kZXggZAUQABAAAAAyBRAAIgAAAHNvdXJjZSBzbGljZSBsZW5ndGggKCkgZG9lcyBub3\
QgbWF0Y2ggZGVzdGluYXRpb24gc2xpY2UgbGVuZ3RoICiEBRAAFQAAAJkFEAArAAAA8AMQAAEAAAB+\
Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL2Jsb2NrLWJ1Zm\
Zlci0wLjEwLjAvc3JjL2xpYi5yc9wFEABQAAAAPwEAAB4AAADcBRAAUAAAAPwAAAAnAAAAYXNzZXJ0\
aW9uIGZhaWxlZDogbWlkIDw9IHNlbGYubGVuKCkAASNFZ4mrze/+3LqYdlQyEPDh0sMAAAAAZ+YJao\
WuZ7ty8248OvVPpX9SDlGMaAWbq9mDHxnN4FvYngXBB9V8NhfdcDA5WQ73MQvA/xEVWGinj/lkpE/6\
vgjJvPNn5glqO6fKhIWuZ7sr+JT+cvNuPPE2HV869U+l0YLmrX9SDlEfbD4rjGgFm2u9Qfur2YMfeS\
F+ExnN4FvYngXBXZ27ywfVfDYqKZpiF91wMFoBWZE5WQ732OwvFTELwP9nJjNnERVYaIdKtI6nj/lk\
DS4M26RP+r4dSLVHY2xvc3VyZSBpbnZva2VkIHJlY3Vyc2l2ZWx5IG9yIGRlc3Ryb3llZCBhbHJlYW\
R5AQAAAAAAAACCgAAAAAAAAIqAAAAAAACAAIAAgAAAAICLgAAAAAAAAAEAAIAAAAAAgYAAgAAAAIAJ\
gAAAAAAAgIoAAAAAAAAAiAAAAAAAAAAJgACAAAAAAAoAAIAAAAAAi4AAgAAAAACLAAAAAAAAgImAAA\
AAAACAA4AAAAAAAIACgAAAAAAAgIAAAAAAAACACoAAAAAAAAAKAACAAAAAgIGAAIAAAACAgIAAAAAA\
AIABAACAAAAAAAiAAIAAAACAY2FsbGVkIGBPcHRpb246OnVud3JhcCgpYCBvbiBhIGBOb25lYCB2YW\
x1ZWxpYnJhcnkvc3RkL3NyYy9wYW5pY2tpbmcucnMAYwgQABwAAABHAgAADwAAAGNhbGxlZCBgUmVz\
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\
Vuv1ljjcdY+xPY9jqo6A6auNNTmfrHILwJH63reSLUli/UFVa1tNLvno3sZtfuq+xKtXPzXOkFba1m\
lXc4QUOUKmSiMKnQ34KIBQ+fYV8rN6ohnjuE0aNFERnK0xBVjve6UiPHczhpYHGlbHRTa+nSSe2hP5\
aEymeJstZdrvNMM7f6knTPQXa+YgEmJ2C33NmolDd5aCZ+3gylvu8/x5yAA2dZ9Atm2StTma0AaIxX\
oxsK6DbyEfOIZKyuYBJTCf0WI0/2b7O/3dJHwgcuvi7OLTtvZK3gjqx75NmZzEi5qwl+WsSbqXB89m\
R4yzdSp8xXOTGxNYHpNhziyCsQwcugm5VXWd0hF9k92vfxLkkm3GrTvaKbzswlRx1cGiJP72gk0TxV\
hPJ2JbUeM6HCaBywEuyAfpy3/jExkJ7fjJRgDI+dhJMmP7iOPtm8+AnvFsEZpTgRhXJNVr9/MDUaj3\
R6715rcVz5x+1N7G19sauygCQVzlRJlO214l1Ee2MPyquCuIEV0qIdMpu4sJ9bOWAukU6rWPWgLdVy\
GUe2e1rJCjwOdY+wFKvYNMZ9OJO7nzS9+kLZ4pSKuMMh7E/FIsWLqWjPMDsl3Yf7290cqDroJgwUK0\
u7Ca2qVr6F+5P6lxN2cELrLYUjFJyVhThB5UtJeGSCq+ZmmO0y3copUrhTySrBEswHuo8g2ZsYgjvj\
dPG/oIgHwD5VRNyNBwH9RXzn7srZBUOjoG2Sc8KwC/ojCAhKOufsADIO1tMgLGhkCpaX0op4OKevUw\
y196xXnn63nkRGi16bzcBQ+0c6PiDleIbnga16D26L3NupyHL6NkwbzRapeL12aWXuIhqzzD5eWqYx\
CQkI1pSESzGJi7ih4+rodk47TcO4kx+b2vGdW7X9ygRWPKZZSbJv4ohuxRnD9gAV0et0lQoQZA5E2x\
y3b35XBsv+0rVe/yGBJBozZacAgHDMtEYJhPdRRN5w4oqA5D2VbNZVBfU9eRJcGW7wpy8SMyyB+lY3\
NvOaDDbnVsbCBwb2ludGVyIHBhc3NlZCB0byBydXN0cmVjdXJzaXZlIHVzZSBvZiBhbiBvYmplY3Qg\
ZGV0ZWN0ZWQgd2hpY2ggd291bGQgbGVhZCB0byB1bnNhZmUgYWxpYXNpbmcgaW4gcnVzdACF0YCAAA\
RuYW1lAfrQgIAAmwEARWpzX3N5czo6VHlwZUVycm9yOjpuZXc6Ol9fd2JnX25ld19kYjI1NGFlMGEx\
YmIwZmY1OjpoZTVhNWJjYjk3ZTM1ZWU5MQE7d2FzbV9iaW5kZ2VuOjpfX3diaW5kZ2VuX29iamVjdF\
9kcm9wX3JlZjo6aDcwMjgxMDFjNWRkMDMxYzkCVWpzX3N5czo6VWludDhBcnJheTo6Ynl0ZV9sZW5n\
dGg6Ol9fd2JnX2J5dGVMZW5ndGhfODdhMDQzNmE3NGFkYzI2Yzo6aGNkNDQzYjk1MTc0ODVlNDgDVW\
pzX3N5czo6VWludDhBcnJheTo6Ynl0ZV9vZmZzZXQ6Ol9fd2JnX2J5dGVPZmZzZXRfNDQ3N2Q1NDcx\
MGFmNmY5Yjo6aDE5MGFiNTZkZDEyZWJmMTIETGpzX3N5czo6VWludDhBcnJheTo6YnVmZmVyOjpfX3\
diZ19idWZmZXJfMjEzMTBlYTE3MjU3YjBiNDo6aDc1MTM0OGEwNGMyNzVkOTcFeWpzX3N5czo6VWlu\
dDhBcnJheTo6bmV3X3dpdGhfYnl0ZV9vZmZzZXRfYW5kX2xlbmd0aDo6X193YmdfbmV3d2l0aGJ5dG\
VvZmZzZXRhbmRsZW5ndGhfZDlhYTI2NjcwM2NiOThiZTo6aDE0MjEzOThkOGQyMGViNjgGTGpzX3N5\
czo6VWludDhBcnJheTo6bGVuZ3RoOjpfX3diZ19sZW5ndGhfOWUxYWUxOTAwY2IwZmJkNTo6aDMwNG\
FlNTVkMGNiM2RkZDcHMndhc21fYmluZGdlbjo6X193YmluZGdlbl9tZW1vcnk6Omg5OGQwNzFmZGUx\
ZDYzZDdmCFVqc19zeXM6OldlYkFzc2VtYmx5OjpNZW1vcnk6OmJ1ZmZlcjo6X193YmdfYnVmZmVyXz\
NmM2Q3NjRkNDc0N2Q1NjQ6Omg3NjEzZWNlMWI2MjU3ZDBjCUZqc19zeXM6OlVpbnQ4QXJyYXk6Om5l\
dzo6X193YmdfbmV3XzhjM2YwMDUyMjcyYTQ1N2E6Omg5Mzk0Mzk5YjMzMDcyYmRlCkZqc19zeXM6Ol\
VpbnQ4QXJyYXk6OnNldDo6X193Ymdfc2V0XzgzZGI5NjkwZjkzNTNlNzk6OmgyYzNhM2FmNDFiZWU3\
ZTBiCzF3YXNtX2JpbmRnZW46Ol9fd2JpbmRnZW5fdGhyb3c6OmhkMjY2M2Q0ZTVhMGJmNDdiDEBkZW\
5vX3N0ZF93YXNtX2NyeXB0bzo6ZGlnZXN0OjpDb250ZXh0OjpkaWdlc3Q6OmgzNmJhYjZlYmZiZTBk\
NDE4DSxzaGEyOjpzaGE1MTI6OmNvbXByZXNzNTEyOjpoODBiNmMzZTQyNmEwZDVmMw5KZGVub19zdG\
Rfd2FzbV9jcnlwdG86OmRpZ2VzdDo6Q29udGV4dDo6ZGlnZXN0X2FuZF9yZXNldDo6aGM2NGVmYjlm\
NGNiZWMxOWIPLHNoYTI6OnNoYTI1Njo6Y29tcHJlc3MyNTY6OmgwMjEwMTAzYzdiM2RjMjI5EBNkaW\
dlc3Rjb250ZXh0X2Nsb25lEUBkZW5vX3N0ZF93YXNtX2NyeXB0bzo6ZGlnZXN0OjpDb250ZXh0Ojp1\
cGRhdGU6Omg0ZjBiZTFmODZiYjgwODQwEjNibGFrZTI6OkJsYWtlMmJWYXJDb3JlOjpjb21wcmVzcz\
o6aGMyZjMwMTM1MWMzOGE2ZmITKXJpcGVtZDo6YzE2MDo6Y29tcHJlc3M6OmgyN2Q1Y2FkY2U3YmE2\
M2Y3FDNibGFrZTI6OkJsYWtlMnNWYXJDb3JlOjpjb21wcmVzczo6aDM0MjRlNTkyMDg3MzVmMDEVK3\
NoYTE6OmNvbXByZXNzOjpjb21wcmVzczo6aDY4Y2IwZWFhNTRmY2ZkOWMWLHRpZ2VyOjpjb21wcmVz\
czo6Y29tcHJlc3M6OmhhNWZjNDFiMDljYjU1MWNiFy1ibGFrZTM6Ok91dHB1dFJlYWRlcjo6ZmlsbD\
o6aDE0OTg5NmJmMWYzNGM5Y2YYNmJsYWtlMzo6cG9ydGFibGU6OmNvbXByZXNzX2luX3BsYWNlOjpo\
M2IxNzA0MWUzYTJhZDRmMRk6ZGxtYWxsb2M6OmRsbWFsbG9jOjpEbG1hbGxvYzxBPjo6bWFsbG9jOj\
poYTk2ZmNlZmJiNDRkNmRhNRplPGRpZ2VzdDo6Y29yZV9hcGk6OndyYXBwZXI6OkNvcmVXcmFwcGVy\
PFQ+IGFzIGRpZ2VzdDo6VXBkYXRlPjo6dXBkYXRlOjp7e2Nsb3N1cmV9fTo6aDk4YTI2YzdmMDY2NG\
QzMzMbaDxtZDU6Ok1kNUNvcmUgYXMgZGlnZXN0Ojpjb3JlX2FwaTo6Rml4ZWRPdXRwdXRDb3JlPjo6\
ZmluYWxpemVfZml4ZWRfY29yZTo6e3tjbG9zdXJlfX06OmhmNDA4YTg0MmU3NDAzZjRlHCxjb3JlOj\
pmbXQ6OkZvcm1hdHRlcjo6cGFkOjpoOGM3NTNlNDk0ZjdiNTY5ZB0gbWQ0Ojpjb21wcmVzczo6aGVi\
NmVhNzc2ODMwNzkxMmMeMGJsYWtlMzo6Y29tcHJlc3Nfc3VidHJlZV93aWRlOjpoZDFjYjA1ZjQ1MG\
FhNzBlZB8TZGlnZXN0Y29udGV4dF9yZXNldCAvYmxha2UzOjpIYXNoZXI6OmZpbmFsaXplX3hvZjo6\
aDVjNDc0YmE2MjU1ZmE5NTkhOGRsbWFsbG9jOjpkbG1hbGxvYzo6RGxtYWxsb2M8QT46OmZyZWU6Om\
hhNDczN2I3Zjg0OTcwYWRkIj1kZW5vX3N0ZF93YXNtX2NyeXB0bzo6ZGlnZXN0OjpDb250ZXh0Ojpu\
ZXc6Omg3MmM4YzViODM4MmIyYjMxI3I8c2hhMjo6Y29yZV9hcGk6OlNoYTUxMlZhckNvcmUgYXMgZG\
lnZXN0Ojpjb3JlX2FwaTo6VmFyaWFibGVPdXRwdXRDb3JlPjo6ZmluYWxpemVfdmFyaWFibGVfY29y\
ZTo6aDA0NTZjODZiNDc1Y2M5YjEkQWRsbWFsbG9jOjpkbG1hbGxvYzo6RGxtYWxsb2M8QT46OmRpc3\
Bvc2VfY2h1bms6OmgzYjZjNGU3NGZhOGFhMDRiJSBrZWNjYWs6OmYxNjAwOjpoMzRiZGU1MzQwZjc0\
YTZhOCYOX19ydXN0X3JlYWxsb2MncjxzaGEyOjpjb3JlX2FwaTo6U2hhMjU2VmFyQ29yZSBhcyBkaW\
dlc3Q6OmNvcmVfYXBpOjpWYXJpYWJsZU91dHB1dENvcmU+OjpmaW5hbGl6ZV92YXJpYWJsZV9jb3Jl\
OjpoZmEzNTI3MDAzNGVjODJkNShOY29yZTo6Zm10OjpudW06OmltcDo6PGltcGwgY29yZTo6Zm10Oj\
pEaXNwbGF5IGZvciB1MzI+OjpmbXQ6OmhjNTBhMWM5YjgyZWI0NDQ2KV08c2hhMTo6U2hhMUNvcmUg\
YXMgZGlnZXN0Ojpjb3JlX2FwaTo6Rml4ZWRPdXRwdXRDb3JlPjo6ZmluYWxpemVfZml4ZWRfY29yZT\
o6aDk5NmJjZGY0MTYxNTBjMTEqMWJsYWtlMzo6SGFzaGVyOjptZXJnZV9jdl9zdGFjazo6aDcxMzMx\
NGZlZDhiMzEyNzArI2NvcmU6OmZtdDo6d3JpdGU6OmhlZDhmZTdkMDk1NDc5ZWEyLGQ8cmlwZW1kOj\
pSaXBlbWQxNjBDb3JlIGFzIGRpZ2VzdDo6Y29yZV9hcGk6OkZpeGVkT3V0cHV0Q29yZT46OmZpbmFs\
aXplX2ZpeGVkX2NvcmU6OmgzOTFmODVjYmUzNjdiYTQ4LTRibGFrZTM6OmNvbXByZXNzX3BhcmVudH\
NfcGFyYWxsZWw6Omg2Mjc0NjIxMWQwYTRkYWMyLls8bWQ0OjpNZDRDb3JlIGFzIGRpZ2VzdDo6Y29y\
ZV9hcGk6OkZpeGVkT3V0cHV0Q29yZT46OmZpbmFsaXplX2ZpeGVkX2NvcmU6OmhlODE2MDc3Zjg3N2\
FiNGJlL1s8bWQ1OjpNZDVDb3JlIGFzIGRpZ2VzdDo6Y29yZV9hcGk6OkZpeGVkT3V0cHV0Q29yZT46\
OmZpbmFsaXplX2ZpeGVkX2NvcmU6OmhhMjMxYjg4YTg4NzIzZWIyMF88dGlnZXI6OlRpZ2VyQ29yZS\
BhcyBkaWdlc3Q6OmNvcmVfYXBpOjpGaXhlZE91dHB1dENvcmU+OjpmaW5hbGl6ZV9maXhlZF9jb3Jl\
OjpoYmEyNTg3ZjRjZmViNGM2MDFMPGFsbG9jOjpib3hlZDo6Qm94PFQ+IGFzIGNvcmU6OmRlZmF1bH\
Q6OkRlZmF1bHQ+OjpkZWZhdWx0OjpoNTgyNzZmZjBmZTMxMjE4YjIwZGxtYWxsb2M6OkRsbWFsbG9j\
PEE+OjptYWxsb2M6OmgwMDU3MzU2N2EzMzM4ZGY4M0w8YWxsb2M6OmJveGVkOjpCb3g8VD4gYXMgY2\
9yZTo6ZGVmYXVsdDo6RGVmYXVsdD46OmRlZmF1bHQ6Omg2ZDA4ZjVmNWVjNGZhNWYyNEw8YWxsb2M6\
OmJveGVkOjpCb3g8VD4gYXMgY29yZTo6ZGVmYXVsdDo6RGVmYXVsdD46OmRlZmF1bHQ6OmgwNDI3ZW\
NjZjM3OTk1N2JjNUw8YWxsb2M6OmJveGVkOjpCb3g8VD4gYXMgY29yZTo6ZGVmYXVsdDo6RGVmYXVs\
dD46OmRlZmF1bHQ6Omg3ZDAyY2MyYjIzZDU1OWRkNkw8YWxsb2M6OmJveGVkOjpCb3g8VD4gYXMgY2\
9yZTo6ZGVmYXVsdDo6RGVmYXVsdD46OmRlZmF1bHQ6Omg0YzJiMTEwMmQ5MmViODYyN2Q8c2hhMzo6\
U2hha2UxMjhDb3JlIGFzIGRpZ2VzdDo6Y29yZV9hcGk6OkV4dGVuZGFibGVPdXRwdXRDb3JlPjo6Zm\
luYWxpemVfeG9mX2NvcmU6Omg3YWViOTg4NGJmODBkYjlmOC1ibGFrZTM6OkNodW5rU3RhdGU6OnVw\
ZGF0ZTo6aGNhZGVjNTk3Y2I5MmE4OGU5YjxzaGEzOjpLZWNjYWsyMjRDb3JlIGFzIGRpZ2VzdDo6Y2\
9yZV9hcGk6OkZpeGVkT3V0cHV0Q29yZT46OmZpbmFsaXplX2ZpeGVkX2NvcmU6OmgwZjk0MDU2OTNh\
ZjQxOTVkOmE8c2hhMzo6U2hhM18yMjRDb3JlIGFzIGRpZ2VzdDo6Y29yZV9hcGk6OkZpeGVkT3V0cH\
V0Q29yZT46OmZpbmFsaXplX2ZpeGVkX2NvcmU6Omg2NDQ2NzJhYTA5ZDIzNzM0O3I8ZGlnZXN0Ojpj\
b3JlX2FwaTo6eG9mX3JlYWRlcjo6WG9mUmVhZGVyQ29yZVdyYXBwZXI8VD4gYXMgZGlnZXN0OjpYb2\
ZSZWFkZXI+OjpyZWFkOjp7e2Nsb3N1cmV9fTo6aGMwYjE0NmQ4MWM4ZTFhMmU8TDxhbGxvYzo6Ym94\
ZWQ6OkJveDxUPiBhcyBjb3JlOjpkZWZhdWx0OjpEZWZhdWx0Pjo6ZGVmYXVsdDo6aGEwNzkzNTI1ND\
YxNGUwMjk9ZTxkaWdlc3Q6OmNvcmVfYXBpOjp4b2ZfcmVhZGVyOjpYb2ZSZWFkZXJDb3JlV3JhcHBl\
cjxUPiBhcyBkaWdlc3Q6OlhvZlJlYWRlcj46OnJlYWQ6OmgxNTQ2YTdkNzkyM2ViZWY1PmU8ZGlnZX\
N0Ojpjb3JlX2FwaTo6eG9mX3JlYWRlcjo6WG9mUmVhZGVyQ29yZVdyYXBwZXI8VD4gYXMgZGlnZXN0\
OjpYb2ZSZWFkZXI+OjpyZWFkOjpoMTNhYTY0NmRiYmJmMmQzYz9lPGRpZ2VzdDo6Y29yZV9hcGk6On\
dyYXBwZXI6OkNvcmVXcmFwcGVyPFQ+IGFzIGRpZ2VzdDo6VXBkYXRlPjo6dXBkYXRlOjp7e2Nsb3N1\
cmV9fTo6aDQzNjQwNGM2NDU0NjBkZDhATDxhbGxvYzo6Ym94ZWQ6OkJveDxUPiBhcyBjb3JlOjpkZW\
ZhdWx0OjpEZWZhdWx0Pjo6ZGVmYXVsdDo6aDU3NjhiMzFkYTllZWZiOGNBMWNvbXBpbGVyX2J1aWx0\
aW5zOjptZW06Om1lbWNweTo6aDQ1ZWI1MzYwMWQ5ZDZiZjBCYjxzaGEzOjpLZWNjYWsyNTZDb3JlIG\
FzIGRpZ2VzdDo6Y29yZV9hcGk6OkZpeGVkT3V0cHV0Q29yZT46OmZpbmFsaXplX2ZpeGVkX2NvcmU6\
Omg3ZGEzMThkMTI5NzRkN2Q4Q2E8c2hhMzo6U2hhM18yNTZDb3JlIGFzIGRpZ2VzdDo6Y29yZV9hcG\
k6OkZpeGVkT3V0cHV0Q29yZT46OmZpbmFsaXplX2ZpeGVkX2NvcmU6Omg2NjQ2Mzc0NDk2YWI0YjY2\
RHI8ZGlnZXN0Ojpjb3JlX2FwaTo6eG9mX3JlYWRlcjo6WG9mUmVhZGVyQ29yZVdyYXBwZXI8VD4gYX\
MgZGlnZXN0OjpYb2ZSZWFkZXI+OjpyZWFkOjp7e2Nsb3N1cmV9fTo6aDBiZjMxYTUxYzNjNGE1M2NF\
ZTxkaWdlc3Q6OmNvcmVfYXBpOjp3cmFwcGVyOjpDb3JlV3JhcHBlcjxUPiBhcyBkaWdlc3Q6OlVwZG\
F0ZT46OnVwZGF0ZTo6e3tjbG9zdXJlfX06Omg3YTE2ZDE0NzIwNDc1YTRlRmQ8c2hhMzo6U2hha2Uy\
NTZDb3JlIGFzIGRpZ2VzdDo6Y29yZV9hcGk6OkV4dGVuZGFibGVPdXRwdXRDb3JlPjo6ZmluYWxpem\
VfeG9mX2NvcmU6OmgwOTY1NjgyNDVjMTIzMTM5R0ZkbG1hbGxvYzo6ZGxtYWxsb2M6OkRsbWFsbG9j\
PEE+OjppbnNlcnRfbGFyZ2VfY2h1bms6OmhiMTI5OTBmOTI1MzhmYmJmSEZkbG1hbGxvYzo6ZGxtYW\
xsb2M6OkRsbWFsbG9jPEE+Ojp1bmxpbmtfbGFyZ2VfY2h1bms6OmhiZThkMzZhOWY0MDYwY2VlSWU8\
ZGlnZXN0Ojpjb3JlX2FwaTo6d3JhcHBlcjo6Q29yZVdyYXBwZXI8VD4gYXMgZGlnZXN0OjpVcGRhdG\
U+Ojp1cGRhdGU6Ont7Y2xvc3VyZX19OjpoOTBlNzE5OWI2YzljODRkNUpiPHNoYTM6OktlY2NhazM4\
NENvcmUgYXMgZGlnZXN0Ojpjb3JlX2FwaTo6Rml4ZWRPdXRwdXRDb3JlPjo6ZmluYWxpemVfZml4ZW\
RfY29yZTo6aGM3MzE1ZTcyN2I0OThmMmJLYTxzaGEzOjpTaGEzXzM4NENvcmUgYXMgZGlnZXN0Ojpj\
b3JlX2FwaTo6Rml4ZWRPdXRwdXRDb3JlPjo6ZmluYWxpemVfZml4ZWRfY29yZTo6aGIyODFiNmRhYz\
kzMzk3NjFMYjxzaGEzOjpLZWNjYWs1MTJDb3JlIGFzIGRpZ2VzdDo6Y29yZV9hcGk6OkZpeGVkT3V0\
cHV0Q29yZT46OmZpbmFsaXplX2ZpeGVkX2NvcmU6OmgxMThhZWY2MDkxZTI0NzM3TWE8c2hhMzo6U2\
hhM181MTJDb3JlIGFzIGRpZ2VzdDo6Y29yZV9hcGk6OkZpeGVkT3V0cHV0Q29yZT46OmZpbmFsaXpl\
X2ZpeGVkX2NvcmU6OmgxMmQ5YjIxZGE3OTQzYTYxTkw8YWxsb2M6OmJveGVkOjpCb3g8VD4gYXMgY2\
9yZTo6ZGVmYXVsdDo6RGVmYXVsdD46OmRlZmF1bHQ6OmhhMTM3MjMwNzAxZDhhMDg0T0w8YWxsb2M6\
OmJveGVkOjpCb3g8VD4gYXMgY29yZTo6ZGVmYXVsdDo6RGVmYXVsdD46OmRlZmF1bHQ6OmgwYzlhMm\
I0MDg2YTE0OTU5UGU8ZGlnZXN0Ojpjb3JlX2FwaTo6d3JhcHBlcjo6Q29yZVdyYXBwZXI8VD4gYXMg\
ZGlnZXN0OjpVcGRhdGU+Ojp1cGRhdGU6Ont7Y2xvc3VyZX19OjpoMjliZDg1YTgwNTk2OWEwZlE+ZG\
Vub19zdGRfd2FzbV9jcnlwdG86OkRpZ2VzdENvbnRleHQ6OnVwZGF0ZTo6aDZmYzYzNmQxN2RhMjUw\
MzVSWzxibG9ja19idWZmZXI6OkJsb2NrQnVmZmVyPEJsb2NrU2l6ZSxLaW5kPiBhcyBjb3JlOjpjbG\
9uZTo6Q2xvbmU+OjpjbG9uZTo6aDA3MWNhYjg2OWQwOWE3ODNTBmRpZ2VzdFQxY29tcGlsZXJfYnVp\
bHRpbnM6Om1lbTo6bWVtc2V0OjpoNWI4Yjk5OGE0YjJmYjIwNVVlPGRpZ2VzdDo6Y29yZV9hcGk6On\
dyYXBwZXI6OkNvcmVXcmFwcGVyPFQ+IGFzIGRpZ2VzdDo6VXBkYXRlPjo6dXBkYXRlOjp7e2Nsb3N1\
cmV9fTo6aDcyZDM5M2NhN2E0MmMxNDhWFGRpZ2VzdGNvbnRleHRfZGlnZXN0VxFkaWdlc3Rjb250ZX\
h0X25ld1gcZGlnZXN0Y29udGV4dF9kaWdlc3RBbmRSZXNldFlMPGFsbG9jOjpib3hlZDo6Qm94PFQ+\
IGFzIGNvcmU6OmRlZmF1bHQ6OkRlZmF1bHQ+OjpkZWZhdWx0OjpoNTBjZjMwZDA1NThmMzk3M1pMPG\
FsbG9jOjpib3hlZDo6Qm94PFQ+IGFzIGNvcmU6OmRlZmF1bHQ6OkRlZmF1bHQ+OjpkZWZhdWx0Ojpo\
MTBkYjI5ZjczYTI4OGVjY1tMPGFsbG9jOjpib3hlZDo6Qm94PFQ+IGFzIGNvcmU6OmRlZmF1bHQ6Ok\
RlZmF1bHQ+OjpkZWZhdWx0OjpoYjM5ZWFkNjYyOGVhNDY5ZVxMPGFsbG9jOjpib3hlZDo6Qm94PFQ+\
IGFzIGNvcmU6OmRlZmF1bHQ6OkRlZmF1bHQ+OjpkZWZhdWx0OjpoOTE4MzU4Yzc4ZjdlYzA1N11MPG\
FsbG9jOjpib3hlZDo6Qm94PFQ+IGFzIGNvcmU6OmRlZmF1bHQ6OkRlZmF1bHQ+OjpkZWZhdWx0Ojpo\
N2UyOWE4ZDU1ZTE4YWIxMl4tanNfc3lzOjpVaW50OEFycmF5Ojp0b192ZWM6Omg1MTFmZjc0MzU1Mm\
FiZjIzX0w8YWxsb2M6OmJveGVkOjpCb3g8VD4gYXMgY29yZTo6ZGVmYXVsdDo6RGVmYXVsdD46OmRl\
ZmF1bHQ6Omg1NmQ3NmU2ZWUwY2YxMTMwYBtkaWdlc3Rjb250ZXh0X2RpZ2VzdEFuZERyb3BhP3dhc2\
1fYmluZGdlbjo6Y29udmVydDo6Y2xvc3VyZXM6Omludm9rZTNfbXV0OjpoNmY1ZjcwNTc5NDQ0ODYy\
ZWJHZGVub19zdGRfd2FzbV9jcnlwdG86OkRpZ2VzdENvbnRleHQ6OmRpZ2VzdF9hbmRfZHJvcDo6aD\
BjOGNmY2FjYjg3Mzg2MjVjLmNvcmU6OnJlc3VsdDo6dW53cmFwX2ZhaWxlZDo6aDJkYzcwNmQ5NDhj\
MjI5NjBkWzxibG9ja19idWZmZXI6OkJsb2NrQnVmZmVyPEJsb2NrU2l6ZSxLaW5kPiBhcyBjb3JlOj\
pjbG9uZTo6Q2xvbmU+OjpjbG9uZTo6aGEzNzBkZTllZTQ5Nzc5NjllWzxibG9ja19idWZmZXI6OkJs\
b2NrQnVmZmVyPEJsb2NrU2l6ZSxLaW5kPiBhcyBjb3JlOjpjbG9uZTo6Q2xvbmU+OjpjbG9uZTo6aG\
UwNTJkMzJmZmFmNjUwNjVmWzxibG9ja19idWZmZXI6OkJsb2NrQnVmZmVyPEJsb2NrU2l6ZSxLaW5k\
PiBhcyBjb3JlOjpjbG9uZTo6Q2xvbmU+OjpjbG9uZTo6aDA0ZTZjYmMyNjE4NTY2NWZnWzxibG9ja1\
9idWZmZXI6OkJsb2NrQnVmZmVyPEJsb2NrU2l6ZSxLaW5kPiBhcyBjb3JlOjpjbG9uZTo6Q2xvbmU+\
OjpjbG9uZTo6aDJmMDY5ZTQxMzhjZDU3NWRoWzxibG9ja19idWZmZXI6OkJsb2NrQnVmZmVyPEJsb2\
NrU2l6ZSxLaW5kPiBhcyBjb3JlOjpjbG9uZTo6Q2xvbmU+OjpjbG9uZTo6aDYwM2M5YWVlNDAzOTFj\
YjlpWzxibG9ja19idWZmZXI6OkJsb2NrQnVmZmVyPEJsb2NrU2l6ZSxLaW5kPiBhcyBjb3JlOjpjbG\
9uZTo6Q2xvbmU+OjpjbG9uZTo6aDI3ZmM1Zjk3YTI2NTAzYTRqUDxhcnJheXZlYzo6ZXJyb3JzOjpD\
YXBhY2l0eUVycm9yPFQ+IGFzIGNvcmU6OmZtdDo6RGVidWc+OjpmbXQ6OmgyYWFiNDQxNDcxYjE1MG\
Y2a1A8YXJyYXl2ZWM6OmVycm9yczo6Q2FwYWNpdHlFcnJvcjxUPiBhcyBjb3JlOjpmbXQ6OkRlYnVn\
Pjo6Zm10OjpoOTVhN2E1MDJiMWY0OTExM2xOY29yZTo6c2xpY2U6OjxpbXBsIFtUXT46OmNvcHlfZn\
JvbV9zbGljZTo6bGVuX21pc21hdGNoX2ZhaWw6OmhmM2JiYWJjMDIwNDg2NGJjbTZjb3JlOjpwYW5p\
Y2tpbmc6OnBhbmljX2JvdW5kc19jaGVjazo6aDFmYjdhNmRmMTAzMzEyNzluRGNvcmU6OnNsaWNlOj\
ppbmRleDo6c2xpY2Vfc3RhcnRfaW5kZXhfbGVuX2ZhaWxfcnQ6OmhiMzE3Y2E4MzMyMDQ2NWE2b0Jj\
b3JlOjpzbGljZTo6aW5kZXg6OnNsaWNlX2VuZF9pbmRleF9sZW5fZmFpbF9ydDo6aGZjZjkzZGQzNW\
YwMTEyYmRwGF9fd2JnX2RpZ2VzdGNvbnRleHRfZnJlZXE3c3RkOjpwYW5pY2tpbmc6OnJ1c3RfcGFu\
aWNfd2l0aF9ob29rOjpoNzBhMGUxOTVmNGRiMmEyOXIxY29tcGlsZXJfYnVpbHRpbnM6Om1lbTo6bW\
VtY21wOjpoMTI4NWI4NDEyMGRmNWRjZHMUZGlnZXN0Y29udGV4dF91cGRhdGV0KWNvcmU6OnBhbmlj\
a2luZzo6cGFuaWM6Omg4YWYwNDYzOTdhMmJmNjVkdTpibGFrZTI6OkJsYWtlMmJWYXJDb3JlOjpuZX\
dfd2l0aF9wYXJhbXM6OmhmZTdhOGI5NmYxMmJiM2VkdhFydXN0X2JlZ2luX3Vud2luZHdDY29yZTo6\
Zm10OjpGb3JtYXR0ZXI6OnBhZF9pbnRlZ3JhbDo6d3JpdGVfcHJlZml4OjpoNjBiMWI1MDNlNjZmMz\
JiMXg0YWxsb2M6OnJhd192ZWM6OmNhcGFjaXR5X292ZXJmbG93OjpoNGIyNzVjYjNjMTBiMGE3OHkt\
Y29yZTo6cGFuaWNraW5nOjpwYW5pY19mbXQ6Omg3NTFiZTgwNzc5ZDQyYjUzekNzdGQ6OnBhbmlja2\
luZzo6YmVnaW5fcGFuaWNfaGFuZGxlcjo6e3tjbG9zdXJlfX06OmhkY2ZjODE5Y2U4MzY4MjllexFf\
X3diaW5kZ2VuX21hbGxvY3w6Ymxha2UyOjpCbGFrZTJzVmFyQ29yZTo6bmV3X3dpdGhfcGFyYW1zOj\
poN2Q4NGUwZDI3YmI3MWZhYX1Jc3RkOjpzeXNfY29tbW9uOjpiYWNrdHJhY2U6Ol9fcnVzdF9lbmRf\
c2hvcnRfYmFja3RyYWNlOjpoNTNjYWJhZmFiNWIwOWFkYX4/d2FzbV9iaW5kZ2VuOjpjb252ZXJ0Oj\
pjbG9zdXJlczo6aW52b2tlNF9tdXQ6OmgyNWRhZTNkMjAxMzc3MWY2fz93YXNtX2JpbmRnZW46OmNv\
bnZlcnQ6OmNsb3N1cmVzOjppbnZva2UzX211dDo6aDk0NGM3YjUzZGQwMjliYTWAAT93YXNtX2Jpbm\
RnZW46OmNvbnZlcnQ6OmNsb3N1cmVzOjppbnZva2UzX211dDo6aDEwMWI3OGEyODkzYzAxZTWBAT93\
YXNtX2JpbmRnZW46OmNvbnZlcnQ6OmNsb3N1cmVzOjppbnZva2UzX211dDo6aDM4YWRlNGE4NThmNG\
RjNmSCAT93YXNtX2JpbmRnZW46OmNvbnZlcnQ6OmNsb3N1cmVzOjppbnZva2UzX211dDo6aDdkZmM4\
ODhmOGY5ZDM3YjaDAT93YXNtX2JpbmRnZW46OmNvbnZlcnQ6OmNsb3N1cmVzOjppbnZva2UzX211dD\
o6aDA3ZjNlM2I2OWE5OTkyM2GEAT93YXNtX2JpbmRnZW46OmNvbnZlcnQ6OmNsb3N1cmVzOjppbnZv\
a2UzX211dDo6aGI2ZDRkNzUxZTE2ZTI5ODCFAT93YXNtX2JpbmRnZW46OmNvbnZlcnQ6OmNsb3N1cm\
VzOjppbnZva2UzX211dDo6aDlhM2QxNTUyMzVkY2QzZjeGAT93YXNtX2JpbmRnZW46OmNvbnZlcnQ6\
OmNsb3N1cmVzOjppbnZva2UzX211dDo6aGIwOWFiMmQ0MjdkMzBjNWKHAT93YXNtX2JpbmRnZW46Om\
NvbnZlcnQ6OmNsb3N1cmVzOjppbnZva2UyX211dDo6aDQxMzc3NGY1ZjhkZGQyNDiIARJfX3diaW5k\
Z2VuX3JlYWxsb2OJAT93YXNtX2JpbmRnZW46OmNvbnZlcnQ6OmNsb3N1cmVzOjppbnZva2UxX211dD\
o6aDk3NDUyYTI3NWRjMDY3YmaKATA8JlQgYXMgY29yZTo6Zm10OjpEZWJ1Zz46OmZtdDo6aGZmNGFm\
MWI0YTgxMzk5NmGLATI8JlQgYXMgY29yZTo6Zm10OjpEaXNwbGF5Pjo6Zm10OjpoOWFkYTE1Y2ZhZT\
dmNDIxMowBD19fd2JpbmRnZW5fZnJlZY0BP2NvcmU6OnNsaWNlOjppbmRleDo6c2xpY2VfZW5kX2lu\
ZGV4X2xlbl9mYWlsOjpoM2RiNDc2YjBkMDk5OTRkMo4BQWNvcmU6OnNsaWNlOjppbmRleDo6c2xpY2\
Vfc3RhcnRfaW5kZXhfbGVuX2ZhaWw6OmgxMzZjY2FkNzY0MTM2ODEwjwEzYXJyYXl2ZWM6OmFycmF5\
dmVjOjpleHRlbmRfcGFuaWM6OmhkMjU4ZTA5N2FmNDdjNjdjkAE5Y29yZTo6b3BzOjpmdW5jdGlvbj\
o6Rm5PbmNlOjpjYWxsX29uY2U6OmhlMDIxZGJiZjZmYWFhMDZkkQEfX193YmluZGdlbl9hZGRfdG9f\
c3RhY2tfcG9pbnRlcpIBMXdhc21fYmluZGdlbjo6X19ydDo6dGhyb3dfbnVsbDo6aGY1MTcxZjBjZm\
Y5YTE1MjGTATJ3YXNtX2JpbmRnZW46Ol9fcnQ6OmJvcnJvd19mYWlsOjpoOTRiZDgxZjkyOGIzODI5\
OJQBKndhc21fYmluZGdlbjo6dGhyb3dfc3RyOjpoMzBhYzBkOTY4ZWVkMjhkNJUBBm1lbXNldJYBBm\
1lbWNweZcBBm1lbWNtcJgBMTxUIGFzIGNvcmU6OmFueTo6QW55Pjo6dHlwZV9pZDo6aDEzYzc4NTk2\
Njg4ZjY3YjKZAQpydXN0X3BhbmljmgFvY29yZTo6cHRyOjpkcm9wX2luX3BsYWNlPCZjb3JlOjppdG\
VyOjphZGFwdGVyczo6Y29waWVkOjpDb3BpZWQ8Y29yZTo6c2xpY2U6Oml0ZXI6Okl0ZXI8dTg+Pj46\
OmgwNWZhMGY5NzFiNDZiMGU3AO+AgIAACXByb2R1Y2VycwIIbGFuZ3VhZ2UBBFJ1c3QADHByb2Nlc3\
NlZC1ieQMFcnVzdGMdMS42NS4wICg4OTdlMzc1NTMgMjAyMi0xMS0wMikGd2FscnVzBjAuMTkuMAx3\
YXNtLWJpbmRnZW4GMC4yLjgz\
");
    const wasmModule = new WebAssembly.Module(wasmBytes);
    return new WebAssembly.Instance(wasmModule, imports);
}
function base64decode(b64) {
    const binString = atob(b64);
    const size = binString.length;
    const bytes = new Uint8Array(size);
    for (let i = 0; i < size; i++) {
        bytes[i] = binString.charCodeAt(i);
    }
    return bytes;
}


/***/ }),

/***/ 1839:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.digestAlgorithms = exports.instantiateWasm = exports.DigestContext = void 0;
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
var deno_std_wasm_crypto_generated_js_1 = __nccwpck_require__(2477);
Object.defineProperty(exports, "DigestContext", ({ enumerable: true, get: function () { return deno_std_wasm_crypto_generated_js_1.DigestContext; } }));
Object.defineProperty(exports, "instantiateWasm", ({ enumerable: true, get: function () { return deno_std_wasm_crypto_generated_js_1.instantiate; } }));
/**
 * All cryptographic hash/digest algorithms supported by std/crypto/_wasm.
 *
 * For algorithms that are supported by WebCrypto, the name here must match the
 * one used by WebCrypto. Otherwise we should prefer the formatting used in the
 * official specification. All names are uppercase to facilitate case-insensitive
 * comparisons required by the WebCrypto spec.
 */
exports.digestAlgorithms = [
    "BLAKE2B-128",
    "BLAKE2B-224",
    "BLAKE2B-256",
    "BLAKE2B-384",
    "BLAKE2B",
    "BLAKE2S",
    "BLAKE3",
    "KECCAK-224",
    "KECCAK-256",
    "KECCAK-384",
    "KECCAK-512",
    "SHA-384",
    "SHA3-224",
    "SHA3-256",
    "SHA3-384",
    "SHA3-512",
    "SHAKE128",
    "SHAKE256",
    "TIGER",
    // insecure (length-extendable):
    "RIPEMD-160",
    "SHA-224",
    "SHA-256",
    "SHA-512",
    // insecure (collidable and length-extendable):
    "MD4",
    "MD5",
    "SHA-1",
];


/***/ }),

/***/ 4026:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.crypto = void 0;
/**
 * Extensions to the
 * [Web Crypto](https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API)
 * supporting additional encryption APIs, but also delegating to the built-in
 * APIs when possible.
 *
 * Provides additional digest algorithms that are not part of the WebCrypto
 * standard as well as a `subtle.digest` and `subtle.digestSync` methods. It
 * also provides a `subtle.timingSafeEqual()` method to compare array buffers
 * or data views in a way that isn't prone to timing based attacks.
 *
 * The "polyfill" delegates to `WebCrypto` where possible.
 *
 * The {@linkcode KeyStack} export implements the {@linkcode KeyRing} interface
 * for managing rotatable keys for signing data to prevent tampering, like with
 * HTTP cookies.
 *
 * ## Supported algorithms
 *
 * Here is a list of supported algorithms. If the algorithm name in WebCrypto
 * and Wasm/Rust is the same, this library prefers to use algorithms that are
 * supported by WebCrypto.
 *
 * WebCrypto
 *
 * ```ts
 * // https://deno.land/std/crypto/crypto.ts
 * const webCryptoDigestAlgorithms = [
 *   "SHA-384",
 *   "SHA-256",
 *   "SHA-512",
 *   // insecure (length-extendable and collidable):
 *   "SHA-1",
 * ] as const;
 * ```
 *
 * Wasm/Rust
 *
 * ```ts
 * // https://deno.land/std/crypto/_wasm/mod.ts
 * export const digestAlgorithms = [
 *   "BLAKE2B-128",
 *   "BLAKE2B-224",
 *   "BLAKE2B-256",
 *   "BLAKE2B-384",
 *   "BLAKE2B",
 *   "BLAKE2S",
 *   "BLAKE3",
 *   "KECCAK-224",
 *   "KECCAK-256",
 *   "KECCAK-384",
 *   "KECCAK-512",
 *   "SHA-384",
 *   "SHA3-224",
 *   "SHA3-256",
 *   "SHA3-384",
 *   "SHA3-512",
 *   "SHAKE128",
 *   "SHAKE256",
 *   "TIGER",
 *   // insecure (length-extendable):
 *   "RIPEMD-160",
 *   "SHA-224",
 *   "SHA-256",
 *   "SHA-512",
 *   // insecure (collidable and length-extendable):
 *   "MD4",
 *   "MD5",
 *   "SHA-1",
 * ] as const;
 * ```
 *
 * @example
 * ```ts
 * import { crypto } from "https://deno.land/std@$STD_VERSION/crypto/mod.ts";
 *
 * // This will delegate to the runtime's WebCrypto implementation.
 * console.log(
 *   new Uint8Array(
 *     await crypto.subtle.digest(
 *       "SHA-384",
 *       new TextEncoder().encode("hello world"),
 *     ),
 *   ),
 * );
 *
 * // This will use a bundled Wasm/Rust implementation.
 * console.log(
 *   new Uint8Array(
 *     await crypto.subtle.digest(
 *       "BLAKE3",
 *       new TextEncoder().encode("hello world"),
 *     ),
 *   ),
 * );
 * ```
 *
 * @example Convert hash to a string
 *
 * ```ts
 * import {
 *   crypto,
 *   toHashString,
 * } from "https://deno.land/std@$STD_VERSION/crypto/mod.ts";
 *
 * const hash = await crypto.subtle.digest(
 *   "SHA-384",
 *   new TextEncoder().encode("You hear that Mr. Anderson?"),
 * );
 *
 * // Hex encoding by default
 * console.log(toHashString(hash));
 *
 * // Or with base64 encoding
 * console.log(toHashString(hash, "base64"));
 * ```
 *
 * @module
 */
const dntShim = __importStar(__nccwpck_require__(3072));
const mod_js_1 = __nccwpck_require__(1839);
const timing_safe_equal_js_1 = __nccwpck_require__(292);
const mod_js_2 = __nccwpck_require__(4794);
/**
 * A copy of the global WebCrypto interface, with methods bound so they're
 * safe to re-export.
 */
const webCrypto = ((crypto) => ({
    getRandomValues: crypto.getRandomValues?.bind(crypto),
    randomUUID: crypto.randomUUID?.bind(crypto),
    subtle: {
        decrypt: crypto.subtle?.decrypt?.bind(crypto.subtle),
        deriveBits: crypto.subtle?.deriveBits?.bind(crypto.subtle),
        deriveKey: crypto.subtle?.deriveKey?.bind(crypto.subtle),
        digest: crypto.subtle?.digest?.bind(crypto.subtle),
        encrypt: crypto.subtle?.encrypt?.bind(crypto.subtle),
        exportKey: crypto.subtle?.exportKey?.bind(crypto.subtle),
        generateKey: crypto.subtle?.generateKey?.bind(crypto.subtle),
        importKey: crypto.subtle?.importKey?.bind(crypto.subtle),
        sign: crypto.subtle?.sign?.bind(crypto.subtle),
        unwrapKey: crypto.subtle?.unwrapKey?.bind(crypto.subtle),
        verify: crypto.subtle?.verify?.bind(crypto.subtle),
        wrapKey: crypto.subtle?.wrapKey?.bind(crypto.subtle),
    },
}))(dntShim.dntGlobalThis.crypto);
const bufferSourceBytes = (data) => {
    let bytes;
    if (data instanceof Uint8Array) {
        bytes = data;
    }
    else if (ArrayBuffer.isView(data)) {
        bytes = new Uint8Array(data.buffer, data.byteOffset, data.byteLength);
    }
    else if (data instanceof ArrayBuffer) {
        bytes = new Uint8Array(data);
    }
    return bytes;
};
/**
 * An wrapper for WebCrypto adding support for additional non-standard
 * algorithms, but delegating to the runtime WebCrypto implementation whenever
 * possible.
 */
const stdCrypto = ((x) => x)({
    ...webCrypto,
    subtle: {
        ...webCrypto.subtle,
        /**
         * Polyfills stream support until the Web Crypto API does so:
         * @see {@link https://github.com/wintercg/proposal-webcrypto-streams}
         */
        async digest(algorithm, data) {
            const { name, length } = normalizeAlgorithm(algorithm);
            const bytes = bufferSourceBytes(data);
            if (FNVAlgorithms.includes(name)) {
                return (0, mod_js_2.fnv)(name, bytes);
            }
            // We delegate to WebCrypto whenever possible,
            if (
            // if the algorithm is supported by the WebCrypto standard,
            webCryptoDigestAlgorithms.includes(name) &&
                // and the data is a single buffer,
                bytes) {
                return webCrypto.subtle.digest(algorithm, bytes);
            }
            else if (mod_js_1.digestAlgorithms.includes(name)) {
                if (bytes) {
                    // Otherwise, we use our bundled Wasm implementation via digestSync
                    // if it supports the algorithm.
                    return stdCrypto.subtle.digestSync(algorithm, bytes);
                }
                else if (data[Symbol.iterator]) {
                    return stdCrypto.subtle.digestSync(algorithm, data);
                }
                else if (data[Symbol.asyncIterator]) {
                    const wasmCrypto = (0, mod_js_1.instantiateWasm)();
                    const context = new wasmCrypto.DigestContext(name);
                    for await (const chunk of data) {
                        const chunkBytes = bufferSourceBytes(chunk);
                        if (!chunkBytes) {
                            throw new TypeError("data contained chunk of the wrong type");
                        }
                        context.update(chunkBytes);
                    }
                    return context.digestAndDrop(length).buffer;
                }
                else {
                    throw new TypeError("data must be a BufferSource or [Async]Iterable<BufferSource>");
                }
            }
            else if (webCrypto.subtle?.digest) {
                // (TypeScript type definitions prohibit this case.) If they're trying
                // to call an algorithm we don't recognize, pass it along to WebCrypto
                // in case it's a non-standard algorithm supported by the the runtime
                // they're using.
                return webCrypto.subtle.digest(algorithm, data);
            }
            else {
                throw new TypeError(`unsupported digest algorithm: ${algorithm}`);
            }
        },
        digestSync(algorithm, data) {
            algorithm = normalizeAlgorithm(algorithm);
            const bytes = bufferSourceBytes(data);
            if (FNVAlgorithms.includes(algorithm.name)) {
                return (0, mod_js_2.fnv)(algorithm.name, bytes);
            }
            const wasmCrypto = (0, mod_js_1.instantiateWasm)();
            if (bytes) {
                return wasmCrypto.digest(algorithm.name, bytes, algorithm.length)
                    .buffer;
            }
            else if (data[Symbol.iterator]) {
                const context = new wasmCrypto.DigestContext(algorithm.name);
                for (const chunk of data) {
                    const chunkBytes = bufferSourceBytes(chunk);
                    if (!chunkBytes) {
                        throw new TypeError("data contained chunk of the wrong type");
                    }
                    context.update(chunkBytes);
                }
                return context.digestAndDrop(algorithm.length).buffer;
            }
            else {
                throw new TypeError("data must be a BufferSource or Iterable<BufferSource>");
            }
        },
        // TODO(@kitsonk): rework when https://github.com/w3c/webcrypto/issues/270 resolved
        timingSafeEqual: timing_safe_equal_js_1.timingSafeEqual,
    },
});
exports.crypto = stdCrypto;
const FNVAlgorithms = ["FNV32", "FNV32A", "FNV64", "FNV64A"];
/** Digest algorithms supported by WebCrypto. */
const webCryptoDigestAlgorithms = [
    "SHA-384",
    "SHA-256",
    "SHA-512",
    // insecure (length-extendable and collidable):
    "SHA-1",
];
function normalizeAlgorithm(algorithm) {
    return ((typeof algorithm === "string")
        ? { name: algorithm.toUpperCase() }
        : {
            ...algorithm,
            name: algorithm.name.toUpperCase(),
        });
}


/***/ }),

/***/ 4615:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * @deprecated (will be removed after 0.209.0) Import from `std/crypto/unstable/keystack.ts` instead.
 */
__exportStar(__nccwpck_require__(6811), exports);


/***/ }),

/***/ 6499:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * Extensions to the
 * [Web Crypto](https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API)
 * supporting additional encryption APIs, but also delegating to the built-in
 * APIs when possible.
 *
 * @module
 */
__exportStar(__nccwpck_require__(4026), exports);
__exportStar(__nccwpck_require__(4615), exports);
__exportStar(__nccwpck_require__(292), exports);
__exportStar(__nccwpck_require__(9013), exports);


/***/ }),

/***/ 292:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.timingSafeEqual = void 0;
const assert_js_1 = __nccwpck_require__(4254);
/**
 * When checking the values of cryptographic hashes are equal, default
 * comparisons can be susceptible to timing based attacks, where attacker is
 * able to find out information about the host system by repeatedly checking
 * response times to equality comparisons of values.
 *
 * It is likely some form of timing safe equality will make its way to the
 * WebCrypto standard (see:
 * [w3c/webcrypto#270](https://github.com/w3c/webcrypto/issues/270)), but until
 * that time, `timingSafeEqual()` is provided:
 *
 * ```ts
 * import { timingSafeEqual } from "https://deno.land/std@$STD_VERSION/crypto/timing_safe_equal.ts";
 * import { assert } from "https://deno.land/std@$STD_VERSION/assert/assert.ts";
 *
 * const a = await crypto.subtle.digest(
 *   "SHA-384",
 *   new TextEncoder().encode("hello world"),
 * );
 * const b = await crypto.subtle.digest(
 *   "SHA-384",
 *   new TextEncoder().encode("hello world"),
 * );
 *
 * assert(timingSafeEqual(a, b));
 * ```
 */
function timingSafeEqual(a, b) {
    if (a.byteLength !== b.byteLength) {
        return false;
    }
    if (!(a instanceof DataView)) {
        a = ArrayBuffer.isView(a)
            ? new DataView(a.buffer, a.byteOffset, a.byteLength)
            : new DataView(a);
    }
    if (!(b instanceof DataView)) {
        b = ArrayBuffer.isView(b)
            ? new DataView(b.buffer, b.byteOffset, b.byteLength)
            : new DataView(b);
    }
    (0, assert_js_1.assert)(a instanceof DataView);
    (0, assert_js_1.assert)(b instanceof DataView);
    const length = a.byteLength;
    let out = 0;
    let i = -1;
    while (++i < length) {
        out |= a.getUint8(i) ^ b.getUint8(i);
    }
    return out === 0;
}
exports.timingSafeEqual = timingSafeEqual;


/***/ }),

/***/ 9013:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toHashString = void 0;
const hex_js_1 = __nccwpck_require__(4250);
const base64_js_1 = __nccwpck_require__(8326);
const decoder = new TextDecoder();
/**
 * @deprecated (will be removed after 0.209.0) Use `std/encoding/hex.ts` or `std/encoding/base64.ts` instead.
 *
 * Converts a hash to a string with a given encoding.
 * @example
 * ```ts
 * import { crypto } from "https://deno.land/std@$STD_VERSION/crypto/crypto.ts";
 * import { toHashString } from "https://deno.land/std@$STD_VERSION/crypto/to_hash_string.ts"
 *
 * const hash = await crypto.subtle.digest("SHA-384", new TextEncoder().encode("You hear that Mr. Anderson?"));
 *
 * // Hex encoding by default
 * console.log(toHashString(hash));
 *
 * // Or with base64 encoding
 * console.log(toHashString(hash, "base64"));
 * ```
 */
function toHashString(hash, encoding = "hex") {
    switch (encoding) {
        case "hex":
            return decoder.decode((0, hex_js_1.encode)(new Uint8Array(hash)));
        case "base64":
            return (0, base64_js_1.encode)(hash);
    }
}
exports.toHashString = toHashString;


/***/ }),

/***/ 6811:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var _KeyStack_instances, _KeyStack_cryptoKeys, _KeyStack_keys, _KeyStack_toCryptoKey;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeyStack = void 0;
/**
 * Provides the {@linkcode KeyStack} class which implements the
 * {@linkcode KeyRing} interface for managing rotatable keys.
 *
 * @module
 */
const dntShim = __importStar(__nccwpck_require__(3072));
const timing_safe_equal_js_1 = __nccwpck_require__(292);
const base64url = __importStar(__nccwpck_require__(3458));
const encoder = new TextEncoder();
function importKey(key) {
    if (typeof key === "string") {
        key = encoder.encode(key);
    }
    else if (Array.isArray(key)) {
        key = new Uint8Array(key);
    }
    return dntShim.crypto.subtle.importKey("raw", key, {
        name: "HMAC",
        hash: { name: "SHA-256" },
    }, true, ["sign", "verify"]);
}
function sign(data, key) {
    if (typeof data === "string") {
        data = encoder.encode(data);
    }
    else if (Array.isArray(data)) {
        data = Uint8Array.from(data);
    }
    return dntShim.crypto.subtle.sign("HMAC", key, data);
}
/** Compare two strings, Uint8Arrays, ArrayBuffers, or arrays of numbers in a
 * way that avoids timing based attacks on the comparisons on the values.
 *
 * The function will return `true` if the values match, or `false`, if they
 * do not match.
 *
 * This was inspired by https://github.com/suryagh/tsscmp which provides a
 * timing safe string comparison to avoid timing attacks as described in
 * https://codahale.com/a-lesson-in-timing-attacks/.
 */
async function compare(a, b) {
    const key = new Uint8Array(32);
    dntShim.dntGlobalThis.crypto.getRandomValues(key);
    const cryptoKey = await importKey(key);
    const ah = await sign(a, cryptoKey);
    const bh = await sign(b, cryptoKey);
    return (0, timing_safe_equal_js_1.timingSafeEqual)(ah, bh);
}
/** A cryptographic key chain which allows signing of data to prevent tampering,
 * but also allows for easy key rotation without needing to re-sign the data.
 *
 * Data is signed as SHA256 HMAC.
 *
 * This was inspired by [keygrip](https://github.com/crypto-utils/keygrip/).
 *
 * @example
 * ```ts
 * import { KeyStack } from "https://deno.land/std@$STD_VERSION/crypto/keystack.ts";
 *
 * const keyStack = new KeyStack(["hello", "world"]);
 * const digest = await keyStack.sign("some data");
 *
 * const rotatedStack = new KeyStack(["deno", "says", "hello", "world"]);
 * await rotatedStack.verify("some data", digest); // true
 * ```
 */
class KeyStack {
    get length() {
        return __classPrivateFieldGet(this, _KeyStack_keys, "f").length;
    }
    /** A class which accepts an array of keys that are used to sign and verify
     * data and allows easy key rotation without invalidation of previously signed
     * data.
     *
     * @param keys An iterable of keys, of which the index 0 will be used to sign
     *             data, but verification can happen against any key.
     */
    constructor(keys) {
        _KeyStack_instances.add(this);
        _KeyStack_cryptoKeys.set(this, new Map());
        _KeyStack_keys.set(this, void 0);
        const values = Array.isArray(keys) ? keys : [...keys];
        if (!(values.length)) {
            throw new TypeError("keys must contain at least one value");
        }
        __classPrivateFieldSet(this, _KeyStack_keys, values, "f");
    }
    /** Take `data` and return a SHA256 HMAC digest that uses the current 0 index
     * of the `keys` passed to the constructor.  This digest is in the form of a
     * URL safe base64 encoded string. */
    async sign(data) {
        const key = await __classPrivateFieldGet(this, _KeyStack_instances, "m", _KeyStack_toCryptoKey).call(this, __classPrivateFieldGet(this, _KeyStack_keys, "f")[0]);
        return base64url.encode(await sign(data, key));
    }
    /** Given `data` and a `digest`, verify that one of the `keys` provided the
     * constructor was used to generate the `digest`.  Returns `true` if one of
     * the keys was used, otherwise `false`. */
    async verify(data, digest) {
        return (await this.indexOf(data, digest)) > -1;
    }
    /** Given `data` and a `digest`, return the current index of the key in the
     * `keys` passed the constructor that was used to generate the digest.  If no
     * key can be found, the method returns `-1`. */
    async indexOf(data, digest) {
        for (let i = 0; i < __classPrivateFieldGet(this, _KeyStack_keys, "f").length; i++) {
            const cryptoKey = await __classPrivateFieldGet(this, _KeyStack_instances, "m", _KeyStack_toCryptoKey).call(this, __classPrivateFieldGet(this, _KeyStack_keys, "f")[i]);
            if (await compare(digest, base64url.encode(await sign(data, cryptoKey)))) {
                return i;
            }
        }
        return -1;
    }
    [(_KeyStack_cryptoKeys = new WeakMap(), _KeyStack_keys = new WeakMap(), _KeyStack_instances = new WeakSet(), _KeyStack_toCryptoKey = async function _KeyStack_toCryptoKey(key) {
        if (!__classPrivateFieldGet(this, _KeyStack_cryptoKeys, "f").has(key)) {
            __classPrivateFieldGet(this, _KeyStack_cryptoKeys, "f").set(key, await importKey(key));
        }
        return __classPrivateFieldGet(this, _KeyStack_cryptoKeys, "f").get(key);
    }, Symbol.for("Deno.customInspect"))](inspect) {
        const { length } = this;
        return `${this.constructor.name} ${inspect({ length })}`;
    }
    [Symbol.for("nodejs.util.inspect.custom")](depth, 
    // deno-lint-ignore no-explicit-any
    options, inspect) {
        if (depth < 0) {
            return options.stylize(`[${this.constructor.name}]`, "special");
        }
        const newOptions = Object.assign({}, options, {
            depth: options.depth === null ? null : options.depth - 1,
        });
        const { length } = this;
        return `${options.stylize(this.constructor.name, "special")} ${inspect({ length }, newOptions)}`;
    }
}
exports.KeyStack = KeyStack;


/***/ }),

/***/ 521:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.validateBinaryLike = void 0;
const encoder = new TextEncoder();
function getTypeName(value) {
    const type = typeof value;
    if (type !== "object") {
        return type;
    }
    else if (value === null) {
        return "null";
    }
    else {
        return value?.constructor?.name ?? "object";
    }
}
function validateBinaryLike(source) {
    if (typeof source === "string") {
        return encoder.encode(source);
    }
    else if (source instanceof Uint8Array) {
        return source;
    }
    else if (source instanceof ArrayBuffer) {
        return new Uint8Array(source);
    }
    throw new TypeError(`The input must be a Uint8Array, a string, or an ArrayBuffer. Received a value of the type ${getTypeName(source)}.`);
}
exports.validateBinaryLike = validateBinaryLike;


/***/ }),

/***/ 8326:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.decodeBase64 = exports.encodeBase64 = exports.decode = exports.encode = void 0;
const _util_js_1 = __nccwpck_require__(521);
/**
 * {@linkcode encodeBase64} and {@linkcode decodeBase64} for
 * [base64](https://en.wikipedia.org/wiki/Base64) encoding.
 *
 * This module is browser compatible.
 *
 * @example
 * ```ts
 * import {
 *   decodeBase64,
 *   encodeBase64,
 * } from "https://deno.land/std@$STD_VERSION/encoding/base64.ts";
 *
 * const b64Repr = "Zm9vYg==";
 *
 * const binaryData = decodeBase64(b64Repr);
 * console.log(binaryData);
 * // => Uint8Array [ 102, 111, 111, 98 ]
 *
 * console.log(encodeBase64(binaryData));
 * // => Zm9vYg==
 * ```
 *
 * @module
 */
const base64abc = [
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "H",
    "I",
    "J",
    "K",
    "L",
    "M",
    "N",
    "O",
    "P",
    "Q",
    "R",
    "S",
    "T",
    "U",
    "V",
    "W",
    "X",
    "Y",
    "Z",
    "a",
    "b",
    "c",
    "d",
    "e",
    "f",
    "g",
    "h",
    "i",
    "j",
    "k",
    "l",
    "m",
    "n",
    "o",
    "p",
    "q",
    "r",
    "s",
    "t",
    "u",
    "v",
    "w",
    "x",
    "y",
    "z",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "+",
    "/",
];
/**
 * @deprecated (will be removed in 0.210.0) Use a `encodeBase64` instead.
 *
 * CREDIT: https://gist.github.com/enepomnyaschih/72c423f727d395eeaa09697058238727
 * Encodes a given Uint8Array, ArrayBuffer or string into RFC4648 base64 representation
 * @param data
 */
exports.encode = encodeBase64;
/**
 * @deprecated (will be removed in 0.210.0) Use a `decodeBase64` instead.
 *
 * Decodes a given RFC4648 base64 encoded string
 * @param b64
 */
exports.decode = decodeBase64;
/**
 * Encodes a given Uint8Array, ArrayBuffer or string into RFC4648 base64 representation
 */
function encodeBase64(data) {
    // CREDIT: https://gist.github.com/enepomnyaschih/72c423f727d395eeaa09697058238727
    const uint8 = (0, _util_js_1.validateBinaryLike)(data);
    let result = "", i;
    const l = uint8.length;
    for (i = 2; i < l; i += 3) {
        result += base64abc[uint8[i - 2] >> 2];
        result += base64abc[((uint8[i - 2] & 0x03) << 4) | (uint8[i - 1] >> 4)];
        result += base64abc[((uint8[i - 1] & 0x0f) << 2) | (uint8[i] >> 6)];
        result += base64abc[uint8[i] & 0x3f];
    }
    if (i === l + 1) {
        // 1 octet yet to write
        result += base64abc[uint8[i - 2] >> 2];
        result += base64abc[(uint8[i - 2] & 0x03) << 4];
        result += "==";
    }
    if (i === l) {
        // 2 octets yet to write
        result += base64abc[uint8[i - 2] >> 2];
        result += base64abc[((uint8[i - 2] & 0x03) << 4) | (uint8[i - 1] >> 4)];
        result += base64abc[(uint8[i - 1] & 0x0f) << 2];
        result += "=";
    }
    return result;
}
exports.encodeBase64 = encodeBase64;
/**
 * Decodes a given RFC4648 base64 encoded string
 */
function decodeBase64(b64) {
    const binString = atob(b64);
    const size = binString.length;
    const bytes = new Uint8Array(size);
    for (let i = 0; i < size; i++) {
        bytes[i] = binString.charCodeAt(i);
    }
    return bytes;
}
exports.decodeBase64 = decodeBase64;


/***/ }),

/***/ 3458:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.decodeBase64Url = exports.encodeBase64Url = exports.decode = exports.encode = void 0;
/**
 * {@linkcode encodeBase64Url} and {@linkcode decodeBase64Url} for
 * [base64 URL safe](https://en.wikipedia.org/wiki/Base64#URL_applications) encoding.
 *
 * This module is browser compatible.
 *
 * @example
 * ```ts
 * import {
 *   decodeBase64Url,
 *   encodeBase64Url,
 * } from "https://deno.land/std@$STD_VERSION/encoding/base64url.ts";
 *
 * const binary = new TextEncoder().encode("foobar");
 * const encoded = encodeBase64Url(binary);
 * console.log(encoded);
 * // => "Zm9vYmFy"
 *
 * console.log(decodeBase64Url(encoded));
 * // => Uint8Array(6) [ 102, 111, 111, 98, 97, 114 ]
 * ```
 *
 * @module
 */
const base64 = __importStar(__nccwpck_require__(8326));
/*
 * Some variants allow or require omitting the padding '=' signs:
 * https://en.wikipedia.org/wiki/Base64#The_URL_applications
 * @param base64url
 */
function addPaddingToBase64url(base64url) {
    if (base64url.length % 4 === 2)
        return base64url + "==";
    if (base64url.length % 4 === 3)
        return base64url + "=";
    if (base64url.length % 4 === 1) {
        throw new TypeError("Illegal base64url string!");
    }
    return base64url;
}
function convertBase64urlToBase64(b64url) {
    if (!/^[-_A-Z0-9]*?={0,2}$/i.test(b64url)) {
        // Contains characters not part of base64url spec.
        throw new TypeError("Failed to decode base64url: invalid character");
    }
    return addPaddingToBase64url(b64url).replace(/\-/g, "+").replace(/_/g, "/");
}
function convertBase64ToBase64url(b64) {
    return b64.endsWith("=")
        ? b64.endsWith("==")
            ? b64.replace(/\+/g, "-").replace(/\//g, "_").slice(0, -2)
            : b64.replace(/\+/g, "-").replace(/\//g, "_").slice(0, -1)
        : b64.replace(/\+/g, "-").replace(/\//g, "_");
}
/**
 * @deprecated (will be removed in 0.210.0) Use a `encodeBase64Url` instead.
 *
 * Encodes a given ArrayBuffer or string into a base64url representation
 * @param data
 */
exports.encode = encodeBase64Url;
/**
 * @deprecated (will be removed in 0.210.0) Use a `decodeBase64Url` instead.
 *
 * Converts given base64url encoded data back to original
 * @param b64url
 */
exports.decode = decodeBase64Url;
/**
 * Encodes a given ArrayBuffer or string into a base64url representation
 * @param data
 */
function encodeBase64Url(data) {
    return convertBase64ToBase64url(base64.encodeBase64(data));
}
exports.encodeBase64Url = encodeBase64Url;
/**
 * Converts given base64url encoded data back to original
 * @param b64url
 */
function decodeBase64Url(b64url) {
    return base64.decodeBase64(convertBase64urlToBase64(b64url));
}
exports.decodeBase64Url = decodeBase64Url;


/***/ }),

/***/ 4250:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2009 The Go Authors. All rights reserved.
// https://github.com/golang/go/blob/master/LICENSE
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.decodeHex = exports.decode = exports.encodeHex = exports.encode = void 0;
const _util_js_1 = __nccwpck_require__(521);
/** Port of the Go
 * [encoding/hex](https://github.com/golang/go/blob/go1.12.5/src/encoding/hex/hex.go)
 * library.
 *
 * This module is browser compatible.
 *
 * @example
 * ```ts
 * import {
 *   decodeHex,
 *   encodeHex,
 * } from "https://deno.land/std@$STD_VERSION/encoding/hex.ts";
 *
 * const binary = new TextEncoder().encode("abc");
 * const encoded = encodeHex(binary);
 * console.log(encoded);
 * // => "616263"
 *
 * console.log(decodeHex(encoded));
 * // => Uint8Array(3) [ 97, 98, 99 ]
 * ```
 *
 * @module
 */
const hexTable = new TextEncoder().encode("0123456789abcdef");
const textEncoder = new TextEncoder();
const textDecoder = new TextDecoder();
function errInvalidByte(byte) {
    return new TypeError(`Invalid byte '${String.fromCharCode(byte)}'`);
}
function errLength() {
    return new RangeError("Odd length hex string");
}
/** Converts a hex character into its value. */
function fromHexChar(byte) {
    // '0' <= byte && byte <= '9'
    if (48 <= byte && byte <= 57)
        return byte - 48;
    // 'a' <= byte && byte <= 'f'
    if (97 <= byte && byte <= 102)
        return byte - 97 + 10;
    // 'A' <= byte && byte <= 'F'
    if (65 <= byte && byte <= 70)
        return byte - 65 + 10;
    throw errInvalidByte(byte);
}
/**
 * @deprecated (will be removed in 0.210.0) Use a `encodeHex` instead.
 *
 * Encodes `src` into `src.length * 2` bytes.
 */
function encode(src) {
    const dst = new Uint8Array(src.length * 2);
    for (let i = 0; i < dst.length; i++) {
        const v = src[i];
        dst[i * 2] = hexTable[v >> 4];
        dst[i * 2 + 1] = hexTable[v & 0x0f];
    }
    return dst;
}
exports.encode = encode;
/** Encodes the source into hex string. */
function encodeHex(src) {
    const u8 = (0, _util_js_1.validateBinaryLike)(src);
    const dst = new Uint8Array(u8.length * 2);
    for (let i = 0; i < dst.length; i++) {
        const v = u8[i];
        dst[i * 2] = hexTable[v >> 4];
        dst[i * 2 + 1] = hexTable[v & 0x0f];
    }
    return textDecoder.decode(dst);
}
exports.encodeHex = encodeHex;
/**
 * @deprecated (will be removed in 0.210.0) Use a `decodeHex` instead.
 *
 * Decodes `src` into `src.length / 2` bytes.
 * If the input is malformed, an error will be thrown.
 */
function decode(src) {
    const dst = new Uint8Array(src.length / 2);
    for (let i = 0; i < dst.length; i++) {
        const a = fromHexChar(src[i * 2]);
        const b = fromHexChar(src[i * 2 + 1]);
        dst[i] = (a << 4) | b;
    }
    if (src.length % 2 === 1) {
        // Check for invalid char before reporting bad length,
        // since the invalid char (if present) is an earlier problem.
        fromHexChar(src[dst.length * 2]);
        throw errLength();
    }
    return dst;
}
exports.decode = decode;
/** Decodes the given hex string to Uint8Array.
 * If the input is malformed, an error will be thrown. */
function decodeHex(src) {
    const u8 = textEncoder.encode(src);
    const dst = new Uint8Array(u8.length / 2);
    for (let i = 0; i < dst.length; i++) {
        const a = fromHexChar(u8[i * 2]);
        const b = fromHexChar(u8[i * 2 + 1]);
        dst[i] = (a << 4) | b;
    }
    if (u8.length % 2 === 1) {
        // Check for invalid char before reporting bad length,
        // since the invalid char (if present) is an earlier problem.
        fromHexChar(u8[dst.length * 2]);
        throw errLength();
    }
    return dst;
}
exports.decodeHex = decodeHex;


/***/ }),

/***/ 9211:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toPathString = exports.createWalkEntry = exports.createWalkEntrySync = exports.getFileInfoType = exports.isSubdir = exports.isSamePath = void 0;
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
const dntShim = __importStar(__nccwpck_require__(3072));
const path = __importStar(__nccwpck_require__(960));
const mod_js_1 = __nccwpck_require__(960);
/**
 * Test whether `src` and `dest` resolve to the same location
 * @param src src file path
 * @param dest dest file path
 */
function isSamePath(src, dest) {
    src = toPathString(src);
    dest = toPathString(dest);
    return path.resolve(src) === path.resolve(dest);
}
exports.isSamePath = isSamePath;
/**
 * Test whether or not `dest` is a sub-directory of `src`
 * @param src src file path
 * @param dest dest file path
 * @param sep path separator
 */
function isSubdir(src, dest, sep = path.SEP) {
    if (src === dest) {
        return false;
    }
    src = toPathString(src);
    const srcArray = src.split(sep);
    dest = toPathString(dest);
    const destArray = dest.split(sep);
    return srcArray.every((current, i) => destArray[i] === current);
}
exports.isSubdir = isSubdir;
/**
 * Get a human readable file type string.
 *
 * @param fileInfo A FileInfo describes a file and is returned by `stat`,
 *                 `lstat`
 */
function getFileInfoType(fileInfo) {
    return fileInfo.isFile
        ? "file"
        : fileInfo.isDirectory
            ? "dir"
            : fileInfo.isSymlink
                ? "symlink"
                : undefined;
}
exports.getFileInfoType = getFileInfoType;
/** Create WalkEntry for the `path` synchronously */
function createWalkEntrySync(path) {
    path = toPathString(path);
    path = (0, mod_js_1.normalize)(path);
    const name = (0, mod_js_1.basename)(path);
    const info = dntShim.Deno.statSync(path);
    return {
        path,
        name,
        isFile: info.isFile,
        isDirectory: info.isDirectory,
        isSymlink: info.isSymlink,
    };
}
exports.createWalkEntrySync = createWalkEntrySync;
/** Create WalkEntry for the `path` asynchronously */
async function createWalkEntry(path) {
    path = toPathString(path);
    path = (0, mod_js_1.normalize)(path);
    const name = (0, mod_js_1.basename)(path);
    const info = await dntShim.Deno.stat(path);
    return {
        path,
        name,
        isFile: info.isFile,
        isDirectory: info.isDirectory,
        isSymlink: info.isSymlink,
    };
}
exports.createWalkEntry = createWalkEntry;
/**
 * Convert a URL or string to a path
 * @param pathUrl A URL or string to be converted
 */
function toPathString(pathUrl) {
    return pathUrl instanceof URL ? path.fromFileUrl(pathUrl) : pathUrl;
}
exports.toPathString = toPathString;


/***/ }),

/***/ 6141:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.moveSync = exports.move = exports.SubdirectoryMoveError = void 0;
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
const dntShim = __importStar(__nccwpck_require__(3072));
const _util_js_1 = __nccwpck_require__(9211);
const EXISTS_ERROR = new dntShim.Deno.errors.AlreadyExists("dest already exists.");
class SubdirectoryMoveError extends Error {
    constructor(src, dest) {
        super(`Cannot move '${src}' to a subdirectory of itself, '${dest}'.`);
    }
}
exports.SubdirectoryMoveError = SubdirectoryMoveError;
/**
 * Moves a file or directory.
 *
 * @example
 * ```ts
 * import { move } from "https://deno.land/std@$STD_VERSION/fs/mod.ts";
 *
 * move("./foo", "./bar"); // returns a promise
 * ```
 */
async function move(src, dest, { overwrite = false } = {}) {
    const srcStat = await dntShim.Deno.stat(src);
    if (srcStat.isDirectory &&
        ((0, _util_js_1.isSubdir)(src, dest) || (0, _util_js_1.isSamePath)(src, dest))) {
        throw new SubdirectoryMoveError(src, dest);
    }
    if (overwrite) {
        if ((0, _util_js_1.isSamePath)(src, dest))
            return;
        try {
            await dntShim.Deno.remove(dest, { recursive: true });
        }
        catch (error) {
            if (!(error instanceof dntShim.Deno.errors.NotFound)) {
                throw error;
            }
        }
    }
    else {
        try {
            await dntShim.Deno.lstat(dest);
            return Promise.reject(EXISTS_ERROR);
        }
        catch {
            // Do nothing...
        }
    }
    await dntShim.Deno.rename(src, dest);
}
exports.move = move;
/**
 * Moves a file or directory synchronously.
 * @example
 * ```ts
 * import { moveSync } from "https://deno.land/std@$STD_VERSION/fs/mod.ts";
 *
 * moveSync("./foo", "./bar"); // void
 * ```
 */
function moveSync(src, dest, { overwrite = false } = {}) {
    const srcStat = dntShim.Deno.statSync(src);
    if (srcStat.isDirectory &&
        ((0, _util_js_1.isSubdir)(src, dest) || (0, _util_js_1.isSamePath)(src, dest))) {
        throw new SubdirectoryMoveError(src, dest);
    }
    if (overwrite) {
        if ((0, _util_js_1.isSamePath)(src, dest))
            return;
        try {
            dntShim.Deno.removeSync(dest, { recursive: true });
        }
        catch (error) {
            if (!(error instanceof dntShim.Deno.errors.NotFound)) {
                throw error;
            }
        }
    }
    else {
        try {
            dntShim.Deno.lstatSync(dest);
            throw EXISTS_ERROR;
        }
        catch (error) {
            if (error === EXISTS_ERROR) {
                throw error;
            }
        }
    }
    dntShim.Deno.renameSync(src, dest);
}
exports.moveSync = moveSync;


/***/ }),

/***/ 2617:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var _BufReader_buf, _BufReader_rd, _BufReader_r, _BufReader_w, _BufReader_eof, _BufReader_fill, _BufReader_reset;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BufReader = exports.PartialReadError = exports.BufferFullError = void 0;
/**
 * @module
 * @deprecated (will be removed after 1.0.0) Use Web Streams instead.
 */
const assert_js_1 = __nccwpck_require__(4254);
const copy_js_1 = __nccwpck_require__(4119);
const DEFAULT_BUF_SIZE = 4096;
const MIN_BUF_SIZE = 16;
const MAX_CONSECUTIVE_EMPTY_READS = 100;
const CR = "\r".charCodeAt(0);
const LF = "\n".charCodeAt(0);
/**
 * @deprecated (will be removed after 1.0.0) Use Web Streams instead.
 */
class BufferFullError extends Error {
    constructor(partial) {
        super("Buffer full");
        Object.defineProperty(this, "partial", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: partial
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: "BufferFullError"
        });
    }
}
exports.BufferFullError = BufferFullError;
/**
 * @deprecated (will be removed after 1.0.0) Use Web Streams instead.
 */
class PartialReadError extends Error {
    constructor() {
        super("Encountered UnexpectedEof, data only partially read");
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: "PartialReadError"
        });
        Object.defineProperty(this, "partial", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
    }
}
exports.PartialReadError = PartialReadError;
/**
 * @deprecated (will be removed after 1.0.0) Use Web Streams instead.
 */
class BufReader {
    // private lastByte: number;
    // private lastCharSize: number;
    /** return new BufReader unless r is BufReader */
    static create(r, size = DEFAULT_BUF_SIZE) {
        return r instanceof BufReader ? r : new BufReader(r, size);
    }
    constructor(rd, size = DEFAULT_BUF_SIZE) {
        _BufReader_buf.set(this, void 0);
        _BufReader_rd.set(this, void 0); // Reader provided by caller.
        _BufReader_r.set(this, 0); // buf read position.
        _BufReader_w.set(this, 0); // buf write position.
        _BufReader_eof.set(this, false);
        // Reads a new chunk into the buffer.
        _BufReader_fill.set(this, async () => {
            // Slide existing data to beginning.
            if (__classPrivateFieldGet(this, _BufReader_r, "f") > 0) {
                __classPrivateFieldGet(this, _BufReader_buf, "f").copyWithin(0, __classPrivateFieldGet(this, _BufReader_r, "f"), __classPrivateFieldGet(this, _BufReader_w, "f"));
                __classPrivateFieldSet(this, _BufReader_w, __classPrivateFieldGet(this, _BufReader_w, "f") - __classPrivateFieldGet(this, _BufReader_r, "f"), "f");
                __classPrivateFieldSet(this, _BufReader_r, 0, "f");
            }
            if (__classPrivateFieldGet(this, _BufReader_w, "f") >= __classPrivateFieldGet(this, _BufReader_buf, "f").byteLength) {
                throw Error("bufio: tried to fill full buffer");
            }
            // Read new data: try a limited number of times.
            for (let i = MAX_CONSECUTIVE_EMPTY_READS; i > 0; i--) {
                const rr = await __classPrivateFieldGet(this, _BufReader_rd, "f").read(__classPrivateFieldGet(this, _BufReader_buf, "f").subarray(__classPrivateFieldGet(this, _BufReader_w, "f")));
                if (rr === null) {
                    __classPrivateFieldSet(this, _BufReader_eof, true, "f");
                    return;
                }
                (0, assert_js_1.assert)(rr >= 0, "negative read");
                __classPrivateFieldSet(this, _BufReader_w, __classPrivateFieldGet(this, _BufReader_w, "f") + rr, "f");
                if (rr > 0) {
                    return;
                }
            }
            throw new Error(`No progress after ${MAX_CONSECUTIVE_EMPTY_READS} read() calls`);
        });
        _BufReader_reset.set(this, (buf, rd) => {
            __classPrivateFieldSet(this, _BufReader_buf, buf, "f");
            __classPrivateFieldSet(this, _BufReader_rd, rd, "f");
            __classPrivateFieldSet(this, _BufReader_eof, false, "f");
            // this.lastByte = -1;
            // this.lastCharSize = -1;
        });
        if (size < MIN_BUF_SIZE) {
            size = MIN_BUF_SIZE;
        }
        __classPrivateFieldGet(this, _BufReader_reset, "f").call(this, new Uint8Array(size), rd);
    }
    /** Returns the size of the underlying buffer in bytes. */
    size() {
        return __classPrivateFieldGet(this, _BufReader_buf, "f").byteLength;
    }
    buffered() {
        return __classPrivateFieldGet(this, _BufReader_w, "f") - __classPrivateFieldGet(this, _BufReader_r, "f");
    }
    /** Discards any buffered data, resets all state, and switches
     * the buffered reader to read from r.
     */
    reset(r) {
        __classPrivateFieldGet(this, _BufReader_reset, "f").call(this, __classPrivateFieldGet(this, _BufReader_buf, "f"), r);
    }
    /** reads data into p.
     * It returns the number of bytes read into p.
     * The bytes are taken from at most one Read on the underlying Reader,
     * hence n may be less than len(p).
     * To read exactly len(p) bytes, use io.ReadFull(b, p).
     */
    async read(p) {
        let rr = p.byteLength;
        if (p.byteLength === 0)
            return rr;
        if (__classPrivateFieldGet(this, _BufReader_r, "f") === __classPrivateFieldGet(this, _BufReader_w, "f")) {
            if (p.byteLength >= __classPrivateFieldGet(this, _BufReader_buf, "f").byteLength) {
                // Large read, empty buffer.
                // Read directly into p to avoid copy.
                const rr = await __classPrivateFieldGet(this, _BufReader_rd, "f").read(p);
                const nread = rr ?? 0;
                (0, assert_js_1.assert)(nread >= 0, "negative read");
                // if (rr.nread > 0) {
                //   this.lastByte = p[rr.nread - 1];
                //   this.lastCharSize = -1;
                // }
                return rr;
            }
            // One read.
            // Do not use this.fill, which will loop.
            __classPrivateFieldSet(this, _BufReader_r, 0, "f");
            __classPrivateFieldSet(this, _BufReader_w, 0, "f");
            rr = await __classPrivateFieldGet(this, _BufReader_rd, "f").read(__classPrivateFieldGet(this, _BufReader_buf, "f"));
            if (rr === 0 || rr === null)
                return rr;
            (0, assert_js_1.assert)(rr >= 0, "negative read");
            __classPrivateFieldSet(this, _BufReader_w, __classPrivateFieldGet(this, _BufReader_w, "f") + rr, "f");
        }
        // copy as much as we can
        const copied = (0, copy_js_1.copy)(__classPrivateFieldGet(this, _BufReader_buf, "f").subarray(__classPrivateFieldGet(this, _BufReader_r, "f"), __classPrivateFieldGet(this, _BufReader_w, "f")), p, 0);
        __classPrivateFieldSet(this, _BufReader_r, __classPrivateFieldGet(this, _BufReader_r, "f") + copied, "f");
        // this.lastByte = this.buf[this.r - 1];
        // this.lastCharSize = -1;
        return copied;
    }
    /** reads exactly `p.length` bytes into `p`.
     *
     * If successful, `p` is returned.
     *
     * If the end of the underlying stream has been reached, and there are no more
     * bytes available in the buffer, `readFull()` returns `null` instead.
     *
     * An error is thrown if some bytes could be read, but not enough to fill `p`
     * entirely before the underlying stream reported an error or EOF. Any error
     * thrown will have a `partial` property that indicates the slice of the
     * buffer that has been successfully filled with data.
     *
     * Ported from https://golang.org/pkg/io/#ReadFull
     */
    async readFull(p) {
        let bytesRead = 0;
        while (bytesRead < p.length) {
            try {
                const rr = await this.read(p.subarray(bytesRead));
                if (rr === null) {
                    if (bytesRead === 0) {
                        return null;
                    }
                    else {
                        throw new PartialReadError();
                    }
                }
                bytesRead += rr;
            }
            catch (err) {
                if (err instanceof PartialReadError) {
                    err.partial = p.subarray(0, bytesRead);
                }
                throw err;
            }
        }
        return p;
    }
    /** Returns the next byte [0, 255] or `null`. */
    async readByte() {
        var _a;
        while (__classPrivateFieldGet(this, _BufReader_r, "f") === __classPrivateFieldGet(this, _BufReader_w, "f")) {
            if (__classPrivateFieldGet(this, _BufReader_eof, "f"))
                return null;
            await __classPrivateFieldGet(this, _BufReader_fill, "f").call(this); // buffer is empty.
        }
        const c = __classPrivateFieldGet(this, _BufReader_buf, "f")[__classPrivateFieldGet(this, _BufReader_r, "f")];
        __classPrivateFieldSet(this, _BufReader_r, (_a = __classPrivateFieldGet(this, _BufReader_r, "f"), _a++, _a), "f");
        // this.lastByte = c;
        return c;
    }
    /** readString() reads until the first occurrence of delim in the input,
     * returning a string containing the data up to and including the delimiter.
     * If ReadString encounters an error before finding a delimiter,
     * it returns the data read before the error and the error itself
     * (often `null`).
     * ReadString returns err !== null if and only if the returned data does not end
     * in delim.
     * For simple uses, a Scanner may be more convenient.
     */
    async readString(delim) {
        if (delim.length !== 1) {
            throw new Error("Delimiter should be a single character");
        }
        const buffer = await this.readSlice(delim.charCodeAt(0));
        if (buffer === null)
            return null;
        return new TextDecoder().decode(buffer);
    }
    /** `readLine()` is a low-level line-reading primitive. Most callers should
     * use `readString('\n')` instead or use a Scanner.
     *
     * `readLine()` tries to return a single line, not including the end-of-line
     * bytes. If the line was too long for the buffer then `more` is set and the
     * beginning of the line is returned. The rest of the line will be returned
     * from future calls. `more` will be false when returning the last fragment
     * of the line. The returned buffer is only valid until the next call to
     * `readLine()`.
     *
     * The text returned from ReadLine does not include the line end ("\r\n" or
     * "\n").
     *
     * When the end of the underlying stream is reached, the final bytes in the
     * stream are returned. No indication or error is given if the input ends
     * without a final line end. When there are no more trailing bytes to read,
     * `readLine()` returns `null`.
     *
     * Calling `unreadByte()` after `readLine()` will always unread the last byte
     * read (possibly a character belonging to the line end) even if that byte is
     * not part of the line returned by `readLine()`.
     */
    async readLine() {
        var _a;
        let line = null;
        try {
            line = await this.readSlice(LF);
        }
        catch (err) {
            let partial;
            if (err instanceof PartialReadError) {
                partial = err.partial;
                (0, assert_js_1.assert)(partial instanceof Uint8Array, "bufio: caught error from `readSlice()` without `partial` property");
            }
            // Don't throw if `readSlice()` failed with `BufferFullError`, instead we
            // just return whatever is available and set the `more` flag.
            if (!(err instanceof BufferFullError)) {
                throw err;
            }
            partial = err.partial;
            // Handle the case where "\r\n" straddles the buffer.
            if (!__classPrivateFieldGet(this, _BufReader_eof, "f") && partial &&
                partial.byteLength > 0 &&
                partial[partial.byteLength - 1] === CR) {
                // Put the '\r' back on buf and drop it from line.
                // Let the next call to ReadLine check for "\r\n".
                (0, assert_js_1.assert)(__classPrivateFieldGet(this, _BufReader_r, "f") > 0, "bufio: tried to rewind past start of buffer");
                __classPrivateFieldSet(this, _BufReader_r, (_a = __classPrivateFieldGet(this, _BufReader_r, "f"), _a--, _a), "f");
                partial = partial.subarray(0, partial.byteLength - 1);
            }
            if (partial) {
                return { line: partial, more: !__classPrivateFieldGet(this, _BufReader_eof, "f") };
            }
        }
        if (line === null) {
            return null;
        }
        if (line.byteLength === 0) {
            return { line, more: false };
        }
        if (line[line.byteLength - 1] === LF) {
            let drop = 1;
            if (line.byteLength > 1 && line[line.byteLength - 2] === CR) {
                drop = 2;
            }
            line = line.subarray(0, line.byteLength - drop);
        }
        return { line, more: false };
    }
    /** `readSlice()` reads until the first occurrence of `delim` in the input,
     * returning a slice pointing at the bytes in the buffer. The bytes stop
     * being valid at the next read.
     *
     * If `readSlice()` encounters an error before finding a delimiter, or the
     * buffer fills without finding a delimiter, it throws an error with a
     * `partial` property that contains the entire buffer.
     *
     * If `readSlice()` encounters the end of the underlying stream and there are
     * any bytes left in the buffer, the rest of the buffer is returned. In other
     * words, EOF is always treated as a delimiter. Once the buffer is empty,
     * it returns `null`.
     *
     * Because the data returned from `readSlice()` will be overwritten by the
     * next I/O operation, most clients should use `readString()` instead.
     */
    async readSlice(delim) {
        let s = 0; // search start index
        let slice;
        while (true) {
            // Search buffer.
            let i = __classPrivateFieldGet(this, _BufReader_buf, "f").subarray(__classPrivateFieldGet(this, _BufReader_r, "f") + s, __classPrivateFieldGet(this, _BufReader_w, "f")).indexOf(delim);
            if (i >= 0) {
                i += s;
                slice = __classPrivateFieldGet(this, _BufReader_buf, "f").subarray(__classPrivateFieldGet(this, _BufReader_r, "f"), __classPrivateFieldGet(this, _BufReader_r, "f") + i + 1);
                __classPrivateFieldSet(this, _BufReader_r, __classPrivateFieldGet(this, _BufReader_r, "f") + (i + 1), "f");
                break;
            }
            // EOF?
            if (__classPrivateFieldGet(this, _BufReader_eof, "f")) {
                if (__classPrivateFieldGet(this, _BufReader_r, "f") === __classPrivateFieldGet(this, _BufReader_w, "f")) {
                    return null;
                }
                slice = __classPrivateFieldGet(this, _BufReader_buf, "f").subarray(__classPrivateFieldGet(this, _BufReader_r, "f"), __classPrivateFieldGet(this, _BufReader_w, "f"));
                __classPrivateFieldSet(this, _BufReader_r, __classPrivateFieldGet(this, _BufReader_w, "f"), "f");
                break;
            }
            // Buffer full?
            if (this.buffered() >= __classPrivateFieldGet(this, _BufReader_buf, "f").byteLength) {
                __classPrivateFieldSet(this, _BufReader_r, __classPrivateFieldGet(this, _BufReader_w, "f"), "f");
                // #4521 The internal buffer should not be reused across reads because it causes corruption of data.
                const oldbuf = __classPrivateFieldGet(this, _BufReader_buf, "f");
                const newbuf = __classPrivateFieldGet(this, _BufReader_buf, "f").slice(0);
                __classPrivateFieldSet(this, _BufReader_buf, newbuf, "f");
                throw new BufferFullError(oldbuf);
            }
            s = __classPrivateFieldGet(this, _BufReader_w, "f") - __classPrivateFieldGet(this, _BufReader_r, "f"); // do not rescan area we scanned before
            // Buffer is not full.
            try {
                await __classPrivateFieldGet(this, _BufReader_fill, "f").call(this);
            }
            catch (err) {
                if (err instanceof PartialReadError) {
                    err.partial = slice;
                }
                throw err;
            }
        }
        // Handle last byte, if any.
        // const i = slice.byteLength - 1;
        // if (i >= 0) {
        //   this.lastByte = slice[i];
        //   this.lastCharSize = -1
        // }
        return slice;
    }
    /** `peek()` returns the next `n` bytes without advancing the reader. The
     * bytes stop being valid at the next read call.
     *
     * When the end of the underlying stream is reached, but there are unread
     * bytes left in the buffer, those bytes are returned. If there are no bytes
     * left in the buffer, it returns `null`.
     *
     * If an error is encountered before `n` bytes are available, `peek()` throws
     * an error with the `partial` property set to a slice of the buffer that
     * contains the bytes that were available before the error occurred.
     */
    async peek(n) {
        if (n < 0) {
            throw Error("negative count");
        }
        let avail = __classPrivateFieldGet(this, _BufReader_w, "f") - __classPrivateFieldGet(this, _BufReader_r, "f");
        while (avail < n && avail < __classPrivateFieldGet(this, _BufReader_buf, "f").byteLength && !__classPrivateFieldGet(this, _BufReader_eof, "f")) {
            try {
                await __classPrivateFieldGet(this, _BufReader_fill, "f").call(this);
            }
            catch (err) {
                if (err instanceof PartialReadError) {
                    err.partial = __classPrivateFieldGet(this, _BufReader_buf, "f").subarray(__classPrivateFieldGet(this, _BufReader_r, "f"), __classPrivateFieldGet(this, _BufReader_w, "f"));
                }
                throw err;
            }
            avail = __classPrivateFieldGet(this, _BufReader_w, "f") - __classPrivateFieldGet(this, _BufReader_r, "f");
        }
        if (avail === 0 && __classPrivateFieldGet(this, _BufReader_eof, "f")) {
            return null;
        }
        else if (avail < n && __classPrivateFieldGet(this, _BufReader_eof, "f")) {
            return __classPrivateFieldGet(this, _BufReader_buf, "f").subarray(__classPrivateFieldGet(this, _BufReader_r, "f"), __classPrivateFieldGet(this, _BufReader_r, "f") + avail);
        }
        else if (avail < n) {
            throw new BufferFullError(__classPrivateFieldGet(this, _BufReader_buf, "f").subarray(__classPrivateFieldGet(this, _BufReader_r, "f"), __classPrivateFieldGet(this, _BufReader_w, "f")));
        }
        return __classPrivateFieldGet(this, _BufReader_buf, "f").subarray(__classPrivateFieldGet(this, _BufReader_r, "f"), __classPrivateFieldGet(this, _BufReader_r, "f") + n);
    }
}
exports.BufReader = BufReader;
_BufReader_buf = new WeakMap(), _BufReader_rd = new WeakMap(), _BufReader_r = new WeakMap(), _BufReader_w = new WeakMap(), _BufReader_eof = new WeakMap(), _BufReader_fill = new WeakMap(), _BufReader_reset = new WeakMap();


/***/ }),

/***/ 9619:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.readLines = void 0;
const buf_reader_js_1 = __nccwpck_require__(2617);
const concat_js_1 = __nccwpck_require__(706);
/**
 * Read strings line-by-line from a Reader.
 *
 *  @example
 * ```ts
 * import { readLines } from "https://deno.land/std@$STD_VERSION/io/read_lines.ts";
 * import * as path from "https://deno.land/std@$STD_VERSION/path/mod.ts";
 *
 * const filename = path.join(Deno.cwd(), "std/io/README.md");
 * let fileReader = await Deno.open(filename);
 *
 * for await (let line of readLines(fileReader)) {
 *   console.log(line);
 * }
 * ```
 *
 * @deprecated (will be removed after 1.0.0) Use Web Streams instead.
 */
async function* readLines(reader, decoderOpts) {
    const bufReader = new buf_reader_js_1.BufReader(reader);
    let chunks = [];
    const decoder = new TextDecoder(decoderOpts?.encoding, decoderOpts);
    while (true) {
        const res = await bufReader.readLine();
        if (!res) {
            if (chunks.length > 0) {
                yield decoder.decode((0, concat_js_1.concat)(...chunks));
            }
            break;
        }
        chunks.push(res.line);
        if (!res.more) {
            yield decoder.decode((0, concat_js_1.concat)(...chunks));
            chunks = [];
        }
    }
}
exports.readLines = readLines;


/***/ }),

/***/ 8030:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// Copyright the Browserify authors. MIT License.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.assertPath = void 0;
function assertPath(path) {
    if (typeof path !== "string") {
        throw new TypeError(`Path must be a string. Received ${JSON.stringify(path)}`);
    }
}
exports.assertPath = assertPath;


/***/ }),

/***/ 4761:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.assertArgs = exports.lastPathSegment = exports.stripSuffix = void 0;
const assert_path_js_1 = __nccwpck_require__(8030);
function stripSuffix(name, suffix) {
    if (suffix.length >= name.length) {
        return name;
    }
    const lenDiff = name.length - suffix.length;
    for (let i = suffix.length - 1; i >= 0; --i) {
        if (name.charCodeAt(lenDiff + i) !== suffix.charCodeAt(i)) {
            return name;
        }
    }
    return name.slice(0, -suffix.length);
}
exports.stripSuffix = stripSuffix;
function lastPathSegment(path, isSep, start = 0) {
    let matchedNonSeparator = false;
    let end = path.length;
    for (let i = path.length - 1; i >= start; --i) {
        if (isSep(path.charCodeAt(i))) {
            if (matchedNonSeparator) {
                start = i + 1;
                break;
            }
        }
        else if (!matchedNonSeparator) {
            matchedNonSeparator = true;
            end = i + 1;
        }
    }
    return path.slice(start, end);
}
exports.lastPathSegment = lastPathSegment;
function assertArgs(path, suffix) {
    (0, assert_path_js_1.assertPath)(path);
    if (path.length === 0)
        return path;
    if (typeof suffix !== "string") {
        throw new TypeError(`Suffix must be a string. Received ${JSON.stringify(suffix)}`);
    }
}
exports.assertArgs = assertArgs;


/***/ }),

/***/ 4348:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports._common = void 0;
function _common(paths, sep) {
    const [first = "", ...remaining] = paths;
    if (first === "" || remaining.length === 0) {
        return first.substring(0, first.lastIndexOf(sep) + 1);
    }
    const parts = first.split(sep);
    let endOfPrefix = parts.length;
    for (const path of remaining) {
        const compare = path.split(sep);
        for (let i = 0; i < endOfPrefix; i++) {
            if (compare[i] !== parts[i]) {
                endOfPrefix = i;
            }
        }
        if (endOfPrefix === 0) {
            return "";
        }
    }
    const prefix = parts.slice(0, endOfPrefix).join(sep);
    return prefix.endsWith(sep) ? prefix : `${prefix}${sep}`;
}
exports._common = _common;


/***/ }),

/***/ 6149:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// Copyright the Browserify authors. MIT License.
// Ported from https://github.com/browserify/path-browserify/
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHAR_9 = exports.CHAR_0 = exports.CHAR_EQUAL = exports.CHAR_AMPERSAND = exports.CHAR_AT = exports.CHAR_GRAVE_ACCENT = exports.CHAR_CIRCUMFLEX_ACCENT = exports.CHAR_SEMICOLON = exports.CHAR_PERCENT = exports.CHAR_SINGLE_QUOTE = exports.CHAR_DOUBLE_QUOTE = exports.CHAR_PLUS = exports.CHAR_HYPHEN_MINUS = exports.CHAR_RIGHT_CURLY_BRACKET = exports.CHAR_LEFT_CURLY_BRACKET = exports.CHAR_RIGHT_ANGLE_BRACKET = exports.CHAR_LEFT_ANGLE_BRACKET = exports.CHAR_RIGHT_SQUARE_BRACKET = exports.CHAR_LEFT_SQUARE_BRACKET = exports.CHAR_ZERO_WIDTH_NOBREAK_SPACE = exports.CHAR_NO_BREAK_SPACE = exports.CHAR_SPACE = exports.CHAR_HASH = exports.CHAR_EXCLAMATION_MARK = exports.CHAR_FORM_FEED = exports.CHAR_TAB = exports.CHAR_CARRIAGE_RETURN = exports.CHAR_LINE_FEED = exports.CHAR_UNDERSCORE = exports.CHAR_QUESTION_MARK = exports.CHAR_COLON = exports.CHAR_VERTICAL_LINE = exports.CHAR_BACKWARD_SLASH = exports.CHAR_FORWARD_SLASH = exports.CHAR_DOT = exports.CHAR_LOWERCASE_Z = exports.CHAR_UPPERCASE_Z = exports.CHAR_LOWERCASE_A = exports.CHAR_UPPERCASE_A = void 0;
// Alphabet chars.
exports.CHAR_UPPERCASE_A = 65; /* A */
exports.CHAR_LOWERCASE_A = 97; /* a */
exports.CHAR_UPPERCASE_Z = 90; /* Z */
exports.CHAR_LOWERCASE_Z = 122; /* z */
// Non-alphabetic chars.
exports.CHAR_DOT = 46; /* . */
exports.CHAR_FORWARD_SLASH = 47; /* / */
exports.CHAR_BACKWARD_SLASH = 92; /* \ */
exports.CHAR_VERTICAL_LINE = 124; /* | */
exports.CHAR_COLON = 58; /* : */
exports.CHAR_QUESTION_MARK = 63; /* ? */
exports.CHAR_UNDERSCORE = 95; /* _ */
exports.CHAR_LINE_FEED = 10; /* \n */
exports.CHAR_CARRIAGE_RETURN = 13; /* \r */
exports.CHAR_TAB = 9; /* \t */
exports.CHAR_FORM_FEED = 12; /* \f */
exports.CHAR_EXCLAMATION_MARK = 33; /* ! */
exports.CHAR_HASH = 35; /* # */
exports.CHAR_SPACE = 32; /*   */
exports.CHAR_NO_BREAK_SPACE = 160; /* \u00A0 */
exports.CHAR_ZERO_WIDTH_NOBREAK_SPACE = 65279; /* \uFEFF */
exports.CHAR_LEFT_SQUARE_BRACKET = 91; /* [ */
exports.CHAR_RIGHT_SQUARE_BRACKET = 93; /* ] */
exports.CHAR_LEFT_ANGLE_BRACKET = 60; /* < */
exports.CHAR_RIGHT_ANGLE_BRACKET = 62; /* > */
exports.CHAR_LEFT_CURLY_BRACKET = 123; /* { */
exports.CHAR_RIGHT_CURLY_BRACKET = 125; /* } */
exports.CHAR_HYPHEN_MINUS = 45; /* - */
exports.CHAR_PLUS = 43; /* + */
exports.CHAR_DOUBLE_QUOTE = 34; /* " */
exports.CHAR_SINGLE_QUOTE = 39; /* ' */
exports.CHAR_PERCENT = 37; /* % */
exports.CHAR_SEMICOLON = 59; /* ; */
exports.CHAR_CIRCUMFLEX_ACCENT = 94; /* ^ */
exports.CHAR_GRAVE_ACCENT = 96; /* ` */
exports.CHAR_AT = 64; /* @ */
exports.CHAR_AMPERSAND = 38; /* & */
exports.CHAR_EQUAL = 61; /* = */
// Digits
exports.CHAR_0 = 48; /* 0 */
exports.CHAR_9 = 57; /* 9 */


/***/ }),

/***/ 5667:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.assertArg = void 0;
const assert_path_js_1 = __nccwpck_require__(8030);
function assertArg(path) {
    (0, assert_path_js_1.assertPath)(path);
    if (path.length === 0)
        return ".";
}
exports.assertArg = assertArg;


/***/ }),

/***/ 2874:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.assertArg = exports._format = void 0;
function _format(sep, pathObject) {
    const dir = pathObject.dir || pathObject.root;
    const base = pathObject.base ||
        (pathObject.name || "") + (pathObject.ext || "");
    if (!dir)
        return base;
    if (base === sep)
        return dir;
    if (dir === pathObject.root)
        return dir + base;
    return dir + sep + base;
}
exports._format = _format;
function assertArg(pathObject) {
    if (pathObject === null || typeof pathObject !== "object") {
        throw new TypeError(`The "pathObject" argument must be of type Object. Received type ${typeof pathObject}`);
    }
}
exports.assertArg = assertArg;


/***/ }),

/***/ 6617:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.assertArg = void 0;
function assertArg(url) {
    url = url instanceof URL ? url : new URL(url);
    if (url.protocol !== "file:") {
        throw new TypeError("Must be a file URL.");
    }
    return url;
}
exports.assertArg = assertArg;


/***/ }),

/***/ 3610:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports._globToRegExp = void 0;
const regExpEscapeChars = [
    "!",
    "$",
    "(",
    ")",
    "*",
    "+",
    ".",
    "=",
    "?",
    "[",
    "\\",
    "^",
    "{",
    "|",
];
const rangeEscapeChars = ["-", "\\", "]"];
function _globToRegExp(c, glob, { extended = true, globstar: globstarOption = true, 
// os = osType,
caseInsensitive = false, } = {}) {
    if (glob === "") {
        return /(?!)/;
    }
    // Remove trailing separators.
    let newLength = glob.length;
    for (; newLength > 1 && c.seps.includes(glob[newLength - 1]); newLength--)
        ;
    glob = glob.slice(0, newLength);
    let regExpString = "";
    // Terminates correctly. Trust that `j` is incremented every iteration.
    for (let j = 0; j < glob.length;) {
        let segment = "";
        const groupStack = [];
        let inRange = false;
        let inEscape = false;
        let endsWithSep = false;
        let i = j;
        // Terminates with `i` at the non-inclusive end of the current segment.
        for (; i < glob.length && !c.seps.includes(glob[i]); i++) {
            if (inEscape) {
                inEscape = false;
                const escapeChars = inRange ? rangeEscapeChars : regExpEscapeChars;
                segment += escapeChars.includes(glob[i]) ? `\\${glob[i]}` : glob[i];
                continue;
            }
            if (glob[i] === c.escapePrefix) {
                inEscape = true;
                continue;
            }
            if (glob[i] === "[") {
                if (!inRange) {
                    inRange = true;
                    segment += "[";
                    if (glob[i + 1] === "!") {
                        i++;
                        segment += "^";
                    }
                    else if (glob[i + 1] === "^") {
                        i++;
                        segment += "\\^";
                    }
                    continue;
                }
                else if (glob[i + 1] === ":") {
                    let k = i + 1;
                    let value = "";
                    while (glob[k + 1] !== undefined && glob[k + 1] !== ":") {
                        value += glob[k + 1];
                        k++;
                    }
                    if (glob[k + 1] === ":" && glob[k + 2] === "]") {
                        i = k + 2;
                        if (value === "alnum")
                            segment += "\\dA-Za-z";
                        else if (value === "alpha")
                            segment += "A-Za-z";
                        else if (value === "ascii")
                            segment += "\x00-\x7F";
                        else if (value === "blank")
                            segment += "\t ";
                        else if (value === "cntrl")
                            segment += "\x00-\x1F\x7F";
                        else if (value === "digit")
                            segment += "\\d";
                        else if (value === "graph")
                            segment += "\x21-\x7E";
                        else if (value === "lower")
                            segment += "a-z";
                        else if (value === "print")
                            segment += "\x20-\x7E";
                        else if (value === "punct") {
                            segment += "!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_‘{|}~";
                        }
                        else if (value === "space")
                            segment += "\\s\v";
                        else if (value === "upper")
                            segment += "A-Z";
                        else if (value === "word")
                            segment += "\\w";
                        else if (value === "xdigit")
                            segment += "\\dA-Fa-f";
                        continue;
                    }
                }
            }
            if (glob[i] === "]" && inRange) {
                inRange = false;
                segment += "]";
                continue;
            }
            if (inRange) {
                if (glob[i] === "\\") {
                    segment += `\\\\`;
                }
                else {
                    segment += glob[i];
                }
                continue;
            }
            if (glob[i] === ")" && groupStack.length > 0 &&
                groupStack[groupStack.length - 1] !== "BRACE") {
                segment += ")";
                const type = groupStack.pop();
                if (type === "!") {
                    segment += c.wildcard;
                }
                else if (type !== "@") {
                    segment += type;
                }
                continue;
            }
            if (glob[i] === "|" && groupStack.length > 0 &&
                groupStack[groupStack.length - 1] !== "BRACE") {
                segment += "|";
                continue;
            }
            if (glob[i] === "+" && extended && glob[i + 1] === "(") {
                i++;
                groupStack.push("+");
                segment += "(?:";
                continue;
            }
            if (glob[i] === "@" && extended && glob[i + 1] === "(") {
                i++;
                groupStack.push("@");
                segment += "(?:";
                continue;
            }
            if (glob[i] === "?") {
                if (extended && glob[i + 1] === "(") {
                    i++;
                    groupStack.push("?");
                    segment += "(?:";
                }
                else {
                    segment += ".";
                }
                continue;
            }
            if (glob[i] === "!" && extended && glob[i + 1] === "(") {
                i++;
                groupStack.push("!");
                segment += "(?!";
                continue;
            }
            if (glob[i] === "{") {
                groupStack.push("BRACE");
                segment += "(?:";
                continue;
            }
            if (glob[i] === "}" && groupStack[groupStack.length - 1] === "BRACE") {
                groupStack.pop();
                segment += ")";
                continue;
            }
            if (glob[i] === "," && groupStack[groupStack.length - 1] === "BRACE") {
                segment += "|";
                continue;
            }
            if (glob[i] === "*") {
                if (extended && glob[i + 1] === "(") {
                    i++;
                    groupStack.push("*");
                    segment += "(?:";
                }
                else {
                    const prevChar = glob[i - 1];
                    let numStars = 1;
                    while (glob[i + 1] === "*") {
                        i++;
                        numStars++;
                    }
                    const nextChar = glob[i + 1];
                    if (globstarOption && numStars === 2 &&
                        [...c.seps, undefined].includes(prevChar) &&
                        [...c.seps, undefined].includes(nextChar)) {
                        segment += c.globstar;
                        endsWithSep = true;
                    }
                    else {
                        segment += c.wildcard;
                    }
                }
                continue;
            }
            segment += regExpEscapeChars.includes(glob[i]) ? `\\${glob[i]}` : glob[i];
        }
        // Check for unclosed groups or a dangling backslash.
        if (groupStack.length > 0 || inRange || inEscape) {
            // Parse failure. Take all characters from this segment literally.
            segment = "";
            for (const c of glob.slice(j, i)) {
                segment += regExpEscapeChars.includes(c) ? `\\${c}` : c;
                endsWithSep = false;
            }
        }
        regExpString += segment;
        if (!endsWithSep) {
            regExpString += i < glob.length ? c.sep : c.sepMaybe;
            endsWithSep = true;
        }
        // Terminates with `i` at the start of the next segment.
        while (c.seps.includes(glob[i]))
            i++;
        // Check that the next value of `j` is indeed higher than the current value.
        if (!(i > j)) {
            throw new Error("Assertion failure: i > j (potential infinite loop)");
        }
        j = i;
    }
    regExpString = `^${regExpString}$`;
    return new RegExp(regExpString, caseInsensitive ? "i" : "");
}
exports._globToRegExp = _globToRegExp;


/***/ }),

/***/ 5193:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isGlob = void 0;
/** Test whether the given string is a glob */
function isGlob(str) {
    const chars = { "{": "}", "(": ")", "[": "]" };
    const regex = /\\(.)|(^!|\*|\?|[\].+)]\?|\[[^\\\]]+\]|\{[^\\}]+\}|\(\?[:!=][^\\)]+\)|\([^|]+\|[^\\)]+\))/;
    if (str === "") {
        return false;
    }
    let match;
    while ((match = regex.exec(str))) {
        if (match[2])
            return true;
        let idx = match.index + match[0].length;
        // if an open bracket/brace/paren is escaped,
        // set the index to the next closing character
        const open = match[1];
        const close = open ? chars[open] : null;
        if (open && close) {
            const n = str.indexOf(close, idx);
            if (n !== -1) {
                idx = n + 1;
            }
        }
        str = str.slice(idx);
    }
    return false;
}
exports.isGlob = isGlob;


/***/ }),

/***/ 3082:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.assertArg = void 0;
const assert_path_js_1 = __nccwpck_require__(8030);
function assertArg(path) {
    (0, assert_path_js_1.assertPath)(path);
    if (path.length === 0)
        return ".";
}
exports.assertArg = assertArg;


/***/ }),

/***/ 7165:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// Copyright the Browserify authors. MIT License.
// Ported from https://github.com/browserify/path-browserify/
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.normalizeString = void 0;
const constants_js_1 = __nccwpck_require__(6149);
// Resolves . and .. elements in a path with directory names
function normalizeString(path, allowAboveRoot, separator, isPathSeparator) {
    let res = "";
    let lastSegmentLength = 0;
    let lastSlash = -1;
    let dots = 0;
    let code;
    for (let i = 0, len = path.length; i <= len; ++i) {
        if (i < len)
            code = path.charCodeAt(i);
        else if (isPathSeparator(code))
            break;
        else
            code = constants_js_1.CHAR_FORWARD_SLASH;
        if (isPathSeparator(code)) {
            if (lastSlash === i - 1 || dots === 1) {
                // NOOP
            }
            else if (lastSlash !== i - 1 && dots === 2) {
                if (res.length < 2 ||
                    lastSegmentLength !== 2 ||
                    res.charCodeAt(res.length - 1) !== constants_js_1.CHAR_DOT ||
                    res.charCodeAt(res.length - 2) !== constants_js_1.CHAR_DOT) {
                    if (res.length > 2) {
                        const lastSlashIndex = res.lastIndexOf(separator);
                        if (lastSlashIndex === -1) {
                            res = "";
                            lastSegmentLength = 0;
                        }
                        else {
                            res = res.slice(0, lastSlashIndex);
                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);
                        }
                        lastSlash = i;
                        dots = 0;
                        continue;
                    }
                    else if (res.length === 2 || res.length === 1) {
                        res = "";
                        lastSegmentLength = 0;
                        lastSlash = i;
                        dots = 0;
                        continue;
                    }
                }
                if (allowAboveRoot) {
                    if (res.length > 0)
                        res += `${separator}..`;
                    else
                        res = "..";
                    lastSegmentLength = 2;
                }
            }
            else {
                if (res.length > 0)
                    res += separator + path.slice(lastSlash + 1, i);
                else
                    res = path.slice(lastSlash + 1, i);
                lastSegmentLength = i - lastSlash - 1;
            }
            lastSlash = i;
            dots = 0;
        }
        else if (code === constants_js_1.CHAR_DOT && dots !== -1) {
            ++dots;
        }
        else {
            dots = -1;
        }
    }
    return res;
}
exports.normalizeString = normalizeString;


/***/ }),

/***/ 2114:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.assertArgs = void 0;
const assert_path_js_1 = __nccwpck_require__(8030);
function assertArgs(from, to) {
    (0, assert_path_js_1.assertPath)(from);
    (0, assert_path_js_1.assertPath)(to);
    if (from === to)
        return "";
}
exports.assertArgs = assertArgs;


/***/ }),

/***/ 1749:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// Copyright the Browserify authors. MIT License.
// Ported from https://github.com/browserify/path-browserify/
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stripTrailingSeparators = void 0;
function stripTrailingSeparators(segment, isSep) {
    if (segment.length <= 1) {
        return segment;
    }
    let end = segment.length;
    for (let i = segment.length - 1; i > 0; i--) {
        if (isSep(segment.charCodeAt(i))) {
            end = i;
        }
        else {
            break;
        }
    }
    return segment.slice(0, end);
}
exports.stripTrailingSeparators = stripTrailingSeparators;


/***/ }),

/***/ 7349:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.encodeWhitespace = void 0;
const WHITESPACE_ENCODINGS = {
    "\u0009": "%09",
    "\u000A": "%0A",
    "\u000B": "%0B",
    "\u000C": "%0C",
    "\u000D": "%0D",
    "\u0020": "%20",
};
function encodeWhitespace(string) {
    return string.replaceAll(/[\s]/g, (c) => {
        return WHITESPACE_ENCODINGS[c] ?? c;
    });
}
exports.encodeWhitespace = encodeWhitespace;


/***/ }),

/***/ 2169:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 8178:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isWindows = exports.osType = void 0;
// Keep this up-to-date with Deno.build.os
const dntShim = __importStar(__nccwpck_require__(3072));
exports.osType = (() => {
    // deno-lint-ignore no-explicit-any
    const { Deno } = dntShim.dntGlobalThis;
    if (typeof Deno?.build?.os === "string") {
        return Deno.build.os;
    }
    // deno-lint-ignore no-explicit-any
    const { navigator } = dntShim.dntGlobalThis;
    if (navigator?.appVersion?.includes?.("Win")) {
        return "windows";
    }
    return "linux";
})();
exports.isWindows = exports.osType === "windows";


/***/ }),

/***/ 1352:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.basename = void 0;
const _os_js_1 = __nccwpck_require__(8178);
const basename_js_1 = __nccwpck_require__(5845);
const basename_js_2 = __nccwpck_require__(132);
/**
 * Return the last portion of a `path`.
 * Trailing directory separators are ignored, and optional suffix is removed.
 *
 * @param path - path to extract the name from.
 * @param [suffix] - suffix to remove from extracted name.
 */
function basename(path, suffix = "") {
    return _os_js_1.isWindows
        ? (0, basename_js_2.basename)(path, suffix)
        : (0, basename_js_1.basename)(path, suffix);
}
exports.basename = basename;


/***/ }),

/***/ 6533:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.common = void 0;
const common_js_1 = __nccwpck_require__(4348);
const separator_js_1 = __nccwpck_require__(9653);
/** Determines the common path from a set of paths, using an optional separator,
 * which defaults to the OS default separator.
 *
 * ```ts
 *       import { common } from "https://deno.land/std@$STD_VERSION/path/mod.ts";
 *       const p = common([
 *         "./deno/std/path/mod.ts",
 *         "./deno/std/fs/mod.ts",
 *       ]);
 *       console.log(p); // "./deno/std/"
 * ```
 */
function common(paths, sep = separator_js_1.SEP) {
    return (0, common_js_1._common)(paths, sep);
}
exports.common = common;


/***/ }),

/***/ 1013:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.dirname = void 0;
const _os_js_1 = __nccwpck_require__(8178);
const dirname_js_1 = __nccwpck_require__(9099);
const dirname_js_2 = __nccwpck_require__(5885);
/**
 * Return the directory path of a `path`.
 * @param path - path to extract the directory from.
 */
function dirname(path) {
    return _os_js_1.isWindows ? (0, dirname_js_2.dirname)(path) : (0, dirname_js_1.dirname)(path);
}
exports.dirname = dirname;


/***/ }),

/***/ 4416:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.extname = void 0;
const _os_js_1 = __nccwpck_require__(8178);
const extname_js_1 = __nccwpck_require__(7343);
const extname_js_2 = __nccwpck_require__(7343);
/**
 * Return the extension of the `path` with leading period.
 * @param path with extension
 * @returns extension (ex. for `file.ts` returns `.ts`)
 */
function extname(path) {
    return _os_js_1.isWindows ? (0, extname_js_2.extname)(path) : (0, extname_js_1.extname)(path);
}
exports.extname = extname;


/***/ }),

/***/ 5558:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.format = void 0;
const _os_js_1 = __nccwpck_require__(8178);
const format_js_1 = __nccwpck_require__(3281);
const format_js_2 = __nccwpck_require__(3550);
/**
 * Generate a path from `FormatInputPathObject` object.
 * @param pathObject with path
 */
function format(pathObject) {
    return _os_js_1.isWindows ? (0, format_js_2.format)(pathObject) : (0, format_js_1.format)(pathObject);
}
exports.format = format;


/***/ }),

/***/ 1704:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fromFileUrl = void 0;
const _os_js_1 = __nccwpck_require__(8178);
const from_file_url_js_1 = __nccwpck_require__(1644);
const from_file_url_js_2 = __nccwpck_require__(4674);
/**
 * Converts a file URL to a path string.
 *
 * ```ts
 * import { fromFileUrl } from "https://deno.land/std@$STD_VERSION/path/from_file_url.ts";
 *
 * // posix
 * fromFileUrl("file:///home/foo"); // "/home/foo"
 *
 * // win32
 * fromFileUrl("file:///home/foo"); // "\\home\\foo"
 * fromFileUrl("file:///C:/Users/foo"); // "C:\\Users\\foo"
 * fromFileUrl("file://localhost/home/foo"); // "\\\\localhost\\home\\foo"
 * ```
 * @param url of a file URL
 */
function fromFileUrl(url) {
    return _os_js_1.isWindows ? (0, from_file_url_js_2.fromFileUrl)(url) : (0, from_file_url_js_1.fromFileUrl)(url);
}
exports.fromFileUrl = fromFileUrl;


/***/ }),

/***/ 3914:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.joinGlobs = exports.normalizeGlob = exports.globToRegExp = exports.isGlob = void 0;
const _os_js_1 = __nccwpck_require__(8178);
const glob_js_1 = __nccwpck_require__(1671);
const glob_js_2 = __nccwpck_require__(4036);
var is_glob_js_1 = __nccwpck_require__(5193);
Object.defineProperty(exports, "isGlob", ({ enumerable: true, get: function () { return is_glob_js_1.isGlob; } }));
/** Convert a glob string to a regular expression.
 *
 * Tries to match bash glob expansion as closely as possible.
 *
 * Basic glob syntax:
 * - `*` - Matches everything without leaving the path segment.
 * - `?` - Matches any single character.
 * - `{foo,bar}` - Matches `foo` or `bar`.
 * - `[abcd]` - Matches `a`, `b`, `c` or `d`.
 * - `[a-d]` - Matches `a`, `b`, `c` or `d`.
 * - `[!abcd]` - Matches any single character besides `a`, `b`, `c` or `d`.
 * - `[[:<class>:]]` - Matches any character belonging to `<class>`.
 *     - `[[:alnum:]]` - Matches any digit or letter.
 *     - `[[:digit:]abc]` - Matches any digit, `a`, `b` or `c`.
 *     - See https://facelessuser.github.io/wcmatch/glob/#posix-character-classes
 *       for a complete list of supported character classes.
 * - `\` - Escapes the next character for an `os` other than `"windows"`.
 * - \` - Escapes the next character for `os` set to `"windows"`.
 * - `/` - Path separator.
 * - `\` - Additional path separator only for `os` set to `"windows"`.
 *
 * Extended syntax:
 * - Requires `{ extended: true }`.
 * - `?(foo|bar)` - Matches 0 or 1 instance of `{foo,bar}`.
 * - `@(foo|bar)` - Matches 1 instance of `{foo,bar}`. They behave the same.
 * - `*(foo|bar)` - Matches _n_ instances of `{foo,bar}`.
 * - `+(foo|bar)` - Matches _n > 0_ instances of `{foo,bar}`.
 * - `!(foo|bar)` - Matches anything other than `{foo,bar}`.
 * - See https://www.linuxjournal.com/content/bash-extended-globbing.
 *
 * Globstar syntax:
 * - Requires `{ globstar: true }`.
 * - `**` - Matches any number of any path segments.
 *     - Must comprise its entire path segment in the provided glob.
 * - See https://www.linuxjournal.com/content/globstar-new-bash-globbing-option.
 *
 * Note the following properties:
 * - The generated `RegExp` is anchored at both start and end.
 * - Repeating and trailing separators are tolerated. Trailing separators in the
 *   provided glob have no meaning and are discarded.
 * - Absolute globs will only match absolute paths, etc.
 * - Empty globs will match nothing.
 * - Any special glob syntax must be contained to one path segment. For example,
 *   `?(foo|bar/baz)` is invalid. The separator will take precedence and the
 *   first segment ends with an unclosed group.
 * - If a path segment ends with unclosed groups or a dangling escape prefix, a
 *   parse error has occurred. Every character for that segment is taken
 *   literally in this event.
 *
 * Limitations:
 * - A negative group like `!(foo|bar)` will wrongly be converted to a negative
 *   look-ahead followed by a wildcard. This means that `!(foo).js` will wrongly
 *   fail to match `foobar.js`, even though `foobar` is not `foo`. Effectively,
 *   `!(foo|bar)` is treated like `!(@(foo|bar)*)`. This will work correctly if
 *   the group occurs not nested at the end of the segment. */
function globToRegExp(glob, options = {}) {
    return options.os === "windows" || (!options.os && _os_js_1.isWindows)
        ? (0, glob_js_2.globToRegExp)(glob, options)
        : (0, glob_js_1.globToRegExp)(glob, options);
}
exports.globToRegExp = globToRegExp;
/** Like normalize(), but doesn't collapse "**\/.." when `globstar` is true. */
function normalizeGlob(glob, options = {}) {
    return _os_js_1.isWindows
        ? (0, glob_js_2.normalizeGlob)(glob, options)
        : (0, glob_js_1.normalizeGlob)(glob, options);
}
exports.normalizeGlob = normalizeGlob;
/** Like join(), but doesn't collapse "**\/.." when `globstar` is true. */
function joinGlobs(globs, options = {}) {
    return _os_js_1.isWindows
        ? (0, glob_js_2.joinGlobs)(globs, options)
        : (0, glob_js_1.joinGlobs)(globs, options);
}
exports.joinGlobs = joinGlobs;


/***/ }),

/***/ 4131:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isAbsolute = void 0;
const _os_js_1 = __nccwpck_require__(8178);
const is_absolute_js_1 = __nccwpck_require__(757);
const is_absolute_js_2 = __nccwpck_require__(1174);
/**
 * Verifies whether provided path is absolute
 * @param path to be verified as absolute
 */
function isAbsolute(path) {
    return _os_js_1.isWindows ? (0, is_absolute_js_2.isAbsolute)(path) : (0, is_absolute_js_1.isAbsolute)(path);
}
exports.isAbsolute = isAbsolute;


/***/ }),

/***/ 1011:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.join = void 0;
const _os_js_1 = __nccwpck_require__(8178);
const join_js_1 = __nccwpck_require__(1759);
const join_js_2 = __nccwpck_require__(6080);
/**
 * Join all given a sequence of `paths`,then normalizes the resulting path.
 * @param paths to be joined and normalized
 */
function join(...paths) {
    return _os_js_1.isWindows ? (0, join_js_2.join)(...paths) : (0, join_js_1.join)(...paths);
}
exports.join = join;


/***/ }),

/***/ 960:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// Copyright the Browserify authors. MIT License.
// Ported mostly from https://github.com/browserify/path-browserify/
// This module is browser compatible.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.delimiter = exports.sep = exports.posix = exports.win32 = void 0;
/**
 * Utilities for working with OS-specific file paths.
 *
 * Functions from this module will automatically switch to support the path style
 * of the current OS, either `windows` for Microsoft Windows, or `posix` for
 * every other operating system, eg. Linux, MacOS, BSD etc.
 *
 * To use functions for a specific path style regardless of the current OS
 * import the modules from the platform sub directory instead.
 *
 * Example, for `posix`:
 *
 * ```ts
 * import { fromFileUrl } from "https://deno.land/std@$STD_VERSION/path/posix/from_file_url.ts";
 * const p = fromFileUrl("file:///home/foo");
 * console.log(p); // "/home/foo"
 * ```
 *
 * or, for `windows`:
 *
 * ```ts
 * import { fromFileUrl } from "https://deno.land/std@$STD_VERSION/path/windows/from_file_url.ts";
 * const p = fromFileUrl("file:///home/foo");
 * console.log(p); // "\\home\\foo"
 * ```
 *
 * This module is browser compatible.
 *
 * @module
 */
const _os_js_1 = __nccwpck_require__(8178);
const _windows = __importStar(__nccwpck_require__(7948));
const _posix = __importStar(__nccwpck_require__(1637));
/** @deprecated (will be removed after 1.0.0) Import from `path/windows/mod.ts` instead. */
exports.win32 = _windows;
/** @deprecated (will be removed after 1.0.0) Import from `path/posix/mod.ts` instead. */
exports.posix = _posix;
exports.sep = _os_js_1.isWindows ? _windows.sep : _posix.sep;
exports.delimiter = _os_js_1.isWindows ? _windows.delimiter : _posix.delimiter;
__exportStar(__nccwpck_require__(1352), exports);
__exportStar(__nccwpck_require__(1013), exports);
__exportStar(__nccwpck_require__(4416), exports);
__exportStar(__nccwpck_require__(5558), exports);
__exportStar(__nccwpck_require__(1704), exports);
__exportStar(__nccwpck_require__(4131), exports);
__exportStar(__nccwpck_require__(1011), exports);
__exportStar(__nccwpck_require__(2598), exports);
__exportStar(__nccwpck_require__(7839), exports);
__exportStar(__nccwpck_require__(2942), exports);
__exportStar(__nccwpck_require__(7811), exports);
__exportStar(__nccwpck_require__(3492), exports);
__exportStar(__nccwpck_require__(3536), exports);
__exportStar(__nccwpck_require__(6533), exports);
__exportStar(__nccwpck_require__(9653), exports);
__exportStar(__nccwpck_require__(2169), exports);
__exportStar(__nccwpck_require__(3914), exports);


/***/ }),

/***/ 2598:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.normalize = void 0;
const _os_js_1 = __nccwpck_require__(8178);
const normalize_js_1 = __nccwpck_require__(6222);
const normalize_js_2 = __nccwpck_require__(6932);
/**
 * Normalize the `path`, resolving `'..'` and `'.'` segments.
 * Note that resolving these segments does not necessarily mean that all will be eliminated.
 * A `'..'` at the top-level will be preserved, and an empty path is canonically `'.'`.
 * @param path to be normalized
 */
function normalize(path) {
    return _os_js_1.isWindows ? (0, normalize_js_2.normalize)(path) : (0, normalize_js_1.normalize)(path);
}
exports.normalize = normalize;


/***/ }),

/***/ 7839:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.parse = void 0;
const _os_js_1 = __nccwpck_require__(8178);
const parse_js_1 = __nccwpck_require__(351);
const parse_js_2 = __nccwpck_require__(9152);
/**
 * Return a `ParsedPath` object of the `path`.
 * @param path to process
 */
function parse(path) {
    return _os_js_1.isWindows ? (0, parse_js_2.parse)(path) : (0, parse_js_1.parse)(path);
}
exports.parse = parse;


/***/ }),

/***/ 1547:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// Copyright the Browserify authors. MIT License.
// Ported from https://github.com/browserify/path-browserify/
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isPosixPathSeparator = void 0;
const constants_js_1 = __nccwpck_require__(6149);
function isPosixPathSeparator(code) {
    return code === constants_js_1.CHAR_FORWARD_SLASH;
}
exports.isPosixPathSeparator = isPosixPathSeparator;


/***/ }),

/***/ 5845:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.basename = void 0;
const basename_js_1 = __nccwpck_require__(4761);
const strip_trailing_separators_js_1 = __nccwpck_require__(1749);
const _util_js_1 = __nccwpck_require__(1547);
/**
 * Return the last portion of a `path`.
 * Trailing directory separators are ignored, and optional suffix is removed.
 *
 * @param path - path to extract the name from.
 * @param [suffix] - suffix to remove from extracted name.
 */
function basename(path, suffix = "") {
    (0, basename_js_1.assertArgs)(path, suffix);
    const lastSegment = (0, basename_js_1.lastPathSegment)(path, _util_js_1.isPosixPathSeparator);
    const strippedSegment = (0, strip_trailing_separators_js_1.stripTrailingSeparators)(lastSegment, _util_js_1.isPosixPathSeparator);
    return suffix ? (0, basename_js_1.stripSuffix)(strippedSegment, suffix) : strippedSegment;
}
exports.basename = basename;


/***/ }),

/***/ 8286:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.common = void 0;
const common_js_1 = __nccwpck_require__(4348);
const separator_js_1 = __nccwpck_require__(3936);
/** Determines the common path from a set of paths, using an optional separator,
 * which defaults to the OS default separator.
 *
 * ```ts
 *       import { common } from "https://deno.land/std@$STD_VERSION/path/mod.ts";
 *       const p = common([
 *         "./deno/std/path/mod.ts",
 *         "./deno/std/fs/mod.ts",
 *       ]);
 *       console.log(p); // "./deno/std/"
 * ```
 */
function common(paths, sep = separator_js_1.SEP) {
    return (0, common_js_1._common)(paths, sep);
}
exports.common = common;


/***/ }),

/***/ 9099:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.dirname = void 0;
const dirname_js_1 = __nccwpck_require__(5667);
const strip_trailing_separators_js_1 = __nccwpck_require__(1749);
const _util_js_1 = __nccwpck_require__(1547);
/**
 * Return the directory path of a `path`.
 * @param path - path to extract the directory from.
 */
function dirname(path) {
    (0, dirname_js_1.assertArg)(path);
    let end = -1;
    let matchedNonSeparator = false;
    for (let i = path.length - 1; i >= 1; --i) {
        if ((0, _util_js_1.isPosixPathSeparator)(path.charCodeAt(i))) {
            if (matchedNonSeparator) {
                end = i;
                break;
            }
        }
        else {
            matchedNonSeparator = true;
        }
    }
    // No matches. Fallback based on provided path:
    //
    // - leading slashes paths
    //     "/foo" => "/"
    //     "///foo" => "/"
    // - no slash path
    //     "foo" => "."
    if (end === -1) {
        return (0, _util_js_1.isPosixPathSeparator)(path.charCodeAt(0)) ? "/" : ".";
    }
    return (0, strip_trailing_separators_js_1.stripTrailingSeparators)(path.slice(0, end), _util_js_1.isPosixPathSeparator);
}
exports.dirname = dirname;


/***/ }),

/***/ 7343:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.extname = void 0;
const constants_js_1 = __nccwpck_require__(6149);
const assert_path_js_1 = __nccwpck_require__(8030);
const _util_js_1 = __nccwpck_require__(1547);
/**
 * Return the extension of the `path` with leading period.
 * @param path with extension
 * @returns extension (ex. for `file.ts` returns `.ts`)
 */
function extname(path) {
    (0, assert_path_js_1.assertPath)(path);
    let startDot = -1;
    let startPart = 0;
    let end = -1;
    let matchedSlash = true;
    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    let preDotState = 0;
    for (let i = path.length - 1; i >= 0; --i) {
        const code = path.charCodeAt(i);
        if ((0, _util_js_1.isPosixPathSeparator)(code)) {
            // If we reached a path separator that was not part of a set of path
            // separators at the end of the string, stop now
            if (!matchedSlash) {
                startPart = i + 1;
                break;
            }
            continue;
        }
        if (end === -1) {
            // We saw the first non-path separator, mark this as the end of our
            // extension
            matchedSlash = false;
            end = i + 1;
        }
        if (code === constants_js_1.CHAR_DOT) {
            // If this is our first dot, mark it as the start of our extension
            if (startDot === -1)
                startDot = i;
            else if (preDotState !== 1)
                preDotState = 1;
        }
        else if (startDot !== -1) {
            // We saw a non-dot and non-path separator before our dot, so we should
            // have a good chance at having a non-empty extension
            preDotState = -1;
        }
    }
    if (startDot === -1 ||
        end === -1 ||
        // We saw a non-dot character immediately before the dot
        preDotState === 0 ||
        // The (right-most) trimmed path component is exactly '..'
        (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {
        return "";
    }
    return path.slice(startDot, end);
}
exports.extname = extname;


/***/ }),

/***/ 3281:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.format = void 0;
const format_js_1 = __nccwpck_require__(2874);
/**
 * Generate a path from `FormatInputPathObject` object.
 * @param pathObject with path
 */
function format(pathObject) {
    (0, format_js_1.assertArg)(pathObject);
    return (0, format_js_1._format)("/", pathObject);
}
exports.format = format;


/***/ }),

/***/ 1644:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fromFileUrl = void 0;
const from_file_url_js_1 = __nccwpck_require__(6617);
/**
 * Converts a file URL to a path string.
 *
 * ```ts
 * import { fromFileUrl } from "https://deno.land/std@$STD_VERSION/path/posix.ts";
 *
 * fromFileUrl("file:///home/foo"); // "/home/foo"
 * ```
 * @param url of a file URL
 */
function fromFileUrl(url) {
    url = (0, from_file_url_js_1.assertArg)(url);
    return decodeURIComponent(url.pathname.replace(/%(?![0-9A-Fa-f]{2})/g, "%25"));
}
exports.fromFileUrl = fromFileUrl;


/***/ }),

/***/ 1671:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.joinGlobs = exports.normalizeGlob = exports.globToRegExp = exports.isGlob = void 0;
const glob_to_reg_exp_js_1 = __nccwpck_require__(3610);
const normalize_js_1 = __nccwpck_require__(6222);
const join_js_1 = __nccwpck_require__(1759);
const separator_js_1 = __nccwpck_require__(3936);
var is_glob_js_1 = __nccwpck_require__(5193);
Object.defineProperty(exports, "isGlob", ({ enumerable: true, get: function () { return is_glob_js_1.isGlob; } }));
const constants = {
    sep: "/+",
    sepMaybe: "/*",
    seps: ["/"],
    globstar: "(?:[^/]*(?:/|$)+)*",
    wildcard: "[^/]*",
    escapePrefix: "\\",
};
/** Convert a glob string to a regular expression.
 *
 * Tries to match bash glob expansion as closely as possible.
 *
 * Basic glob syntax:
 * - `*` - Matches everything without leaving the path segment.
 * - `?` - Matches any single character.
 * - `{foo,bar}` - Matches `foo` or `bar`.
 * - `[abcd]` - Matches `a`, `b`, `c` or `d`.
 * - `[a-d]` - Matches `a`, `b`, `c` or `d`.
 * - `[!abcd]` - Matches any single character besides `a`, `b`, `c` or `d`.
 * - `[[:<class>:]]` - Matches any character belonging to `<class>`.
 *     - `[[:alnum:]]` - Matches any digit or letter.
 *     - `[[:digit:]abc]` - Matches any digit, `a`, `b` or `c`.
 *     - See https://facelessuser.github.io/wcmatch/glob/#posix-character-classes
 *       for a complete list of supported character classes.
 * - `\` - Escapes the next character for an `os` other than `"windows"`.
 * - \` - Escapes the next character for `os` set to `"windows"`.
 * - `/` - Path separator.
 * - `\` - Additional path separator only for `os` set to `"windows"`.
 *
 * Extended syntax:
 * - Requires `{ extended: true }`.
 * - `?(foo|bar)` - Matches 0 or 1 instance of `{foo,bar}`.
 * - `@(foo|bar)` - Matches 1 instance of `{foo,bar}`. They behave the same.
 * - `*(foo|bar)` - Matches _n_ instances of `{foo,bar}`.
 * - `+(foo|bar)` - Matches _n > 0_ instances of `{foo,bar}`.
 * - `!(foo|bar)` - Matches anything other than `{foo,bar}`.
 * - See https://www.linuxjournal.com/content/bash-extended-globbing.
 *
 * Globstar syntax:
 * - Requires `{ globstar: true }`.
 * - `**` - Matches any number of any path segments.
 *     - Must comprise its entire path segment in the provided glob.
 * - See https://www.linuxjournal.com/content/globstar-new-bash-globbing-option.
 *
 * Note the following properties:
 * - The generated `RegExp` is anchored at both start and end.
 * - Repeating and trailing separators are tolerated. Trailing separators in the
 *   provided glob have no meaning and are discarded.
 * - Absolute globs will only match absolute paths, etc.
 * - Empty globs will match nothing.
 * - Any special glob syntax must be contained to one path segment. For example,
 *   `?(foo|bar/baz)` is invalid. The separator will take precedence and the
 *   first segment ends with an unclosed group.
 * - If a path segment ends with unclosed groups or a dangling escape prefix, a
 *   parse error has occurred. Every character for that segment is taken
 *   literally in this event.
 *
 * Limitations:
 * - A negative group like `!(foo|bar)` will wrongly be converted to a negative
 *   look-ahead followed by a wildcard. This means that `!(foo).js` will wrongly
 *   fail to match `foobar.js`, even though `foobar` is not `foo`. Effectively,
 *   `!(foo|bar)` is treated like `!(@(foo|bar)*)`. This will work correctly if
 *   the group occurs not nested at the end of the segment. */
function globToRegExp(glob, options = {}) {
    return (0, glob_to_reg_exp_js_1._globToRegExp)(constants, glob, options);
}
exports.globToRegExp = globToRegExp;
/** Like normalize(), but doesn't collapse "**\/.." when `globstar` is true. */
function normalizeGlob(glob, { globstar = false } = {}) {
    if (glob.match(/\0/g)) {
        throw new Error(`Glob contains invalid characters: "${glob}"`);
    }
    if (!globstar) {
        return (0, normalize_js_1.normalize)(glob);
    }
    const s = separator_js_1.SEP_PATTERN.source;
    const badParentPattern = new RegExp(`(?<=(${s}|^)\\*\\*${s})\\.\\.(?=${s}|$)`, "g");
    return (0, normalize_js_1.normalize)(glob.replace(badParentPattern, "\0")).replace(/\0/g, "..");
}
exports.normalizeGlob = normalizeGlob;
/** Like join(), but doesn't collapse "**\/.." when `globstar` is true. */
function joinGlobs(globs, { extended = true, globstar = false } = {}) {
    if (!globstar || globs.length === 0) {
        return (0, join_js_1.join)(...globs);
    }
    if (globs.length === 0)
        return ".";
    let joined;
    for (const glob of globs) {
        const path = glob;
        if (path.length > 0) {
            if (!joined)
                joined = path;
            else
                joined += `${separator_js_1.SEP}${path}`;
        }
    }
    if (!joined)
        return ".";
    return normalizeGlob(joined, { extended, globstar });
}
exports.joinGlobs = joinGlobs;


/***/ }),

/***/ 757:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isAbsolute = void 0;
const assert_path_js_1 = __nccwpck_require__(8030);
const _util_js_1 = __nccwpck_require__(1547);
/**
 * Verifies whether provided path is absolute
 * @param path to be verified as absolute
 */
function isAbsolute(path) {
    (0, assert_path_js_1.assertPath)(path);
    return path.length > 0 && (0, _util_js_1.isPosixPathSeparator)(path.charCodeAt(0));
}
exports.isAbsolute = isAbsolute;


/***/ }),

/***/ 1759:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.join = void 0;
const assert_path_js_1 = __nccwpck_require__(8030);
const normalize_js_1 = __nccwpck_require__(6222);
/**
 * Join all given a sequence of `paths`,then normalizes the resulting path.
 * @param paths to be joined and normalized
 */
function join(...paths) {
    if (paths.length === 0)
        return ".";
    let joined;
    for (let i = 0, len = paths.length; i < len; ++i) {
        const path = paths[i];
        (0, assert_path_js_1.assertPath)(path);
        if (path.length > 0) {
            if (!joined)
                joined = path;
            else
                joined += `/${path}`;
        }
    }
    if (!joined)
        return ".";
    return (0, normalize_js_1.normalize)(joined);
}
exports.join = join;


/***/ }),

/***/ 1637:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// Copyright the Browserify authors. MIT License.
// Ported mostly from https://github.com/browserify/path-browserify/
// This module is browser compatible.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.delimiter = exports.sep = void 0;
/**
 * Utilities for working with OS-specific file paths.
 *
 * Codes in the examples uses POSIX path but it automatically use Windows path
 * on Windows. Use methods under `posix` or `win32` object instead to handle non
 * platform specific path like:
 * ```ts
 * import { posix, win32 } from "https://deno.land/std@$STD_VERSION/path/mod.ts";
 * const p1 = posix.fromFileUrl("file:///home/foo");
 * const p2 = win32.fromFileUrl("file:///home/foo");
 * console.log(p1); // "/home/foo"
 * console.log(p2); // "\\home\\foo"
 * ```
 *
 * This module is browser compatible.
 *
 * @module
 */
exports.sep = "/";
exports.delimiter = ":";
__exportStar(__nccwpck_require__(5845), exports);
__exportStar(__nccwpck_require__(9099), exports);
__exportStar(__nccwpck_require__(7343), exports);
__exportStar(__nccwpck_require__(3281), exports);
__exportStar(__nccwpck_require__(1644), exports);
__exportStar(__nccwpck_require__(757), exports);
__exportStar(__nccwpck_require__(1759), exports);
__exportStar(__nccwpck_require__(6222), exports);
__exportStar(__nccwpck_require__(351), exports);
__exportStar(__nccwpck_require__(1876), exports);
__exportStar(__nccwpck_require__(7324), exports);
__exportStar(__nccwpck_require__(6491), exports);
__exportStar(__nccwpck_require__(4271), exports);
__exportStar(__nccwpck_require__(8286), exports);
__exportStar(__nccwpck_require__(3936), exports);
__exportStar(__nccwpck_require__(2169), exports);
__exportStar(__nccwpck_require__(3914), exports);


/***/ }),

/***/ 6222:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.normalize = void 0;
const normalize_js_1 = __nccwpck_require__(3082);
const normalize_string_js_1 = __nccwpck_require__(7165);
const _util_js_1 = __nccwpck_require__(1547);
/**
 * Normalize the `path`, resolving `'..'` and `'.'` segments.
 * Note that resolving these segments does not necessarily mean that all will be eliminated.
 * A `'..'` at the top-level will be preserved, and an empty path is canonically `'.'`.
 * @param path to be normalized
 */
function normalize(path) {
    (0, normalize_js_1.assertArg)(path);
    const isAbsolute = (0, _util_js_1.isPosixPathSeparator)(path.charCodeAt(0));
    const trailingSeparator = (0, _util_js_1.isPosixPathSeparator)(path.charCodeAt(path.length - 1));
    // Normalize the path
    path = (0, normalize_string_js_1.normalizeString)(path, !isAbsolute, "/", _util_js_1.isPosixPathSeparator);
    if (path.length === 0 && !isAbsolute)
        path = ".";
    if (path.length > 0 && trailingSeparator)
        path += "/";
    if (isAbsolute)
        return `/${path}`;
    return path;
}
exports.normalize = normalize;


/***/ }),

/***/ 351:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.parse = void 0;
const constants_js_1 = __nccwpck_require__(6149);
const strip_trailing_separators_js_1 = __nccwpck_require__(1749);
const assert_path_js_1 = __nccwpck_require__(8030);
const _util_js_1 = __nccwpck_require__(1547);
/**
 * Return a `ParsedPath` object of the `path`.
 * @param path to process
 */
function parse(path) {
    (0, assert_path_js_1.assertPath)(path);
    const ret = { root: "", dir: "", base: "", ext: "", name: "" };
    if (path.length === 0)
        return ret;
    const isAbsolute = (0, _util_js_1.isPosixPathSeparator)(path.charCodeAt(0));
    let start;
    if (isAbsolute) {
        ret.root = "/";
        start = 1;
    }
    else {
        start = 0;
    }
    let startDot = -1;
    let startPart = 0;
    let end = -1;
    let matchedSlash = true;
    let i = path.length - 1;
    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    let preDotState = 0;
    // Get non-dir info
    for (; i >= start; --i) {
        const code = path.charCodeAt(i);
        if ((0, _util_js_1.isPosixPathSeparator)(code)) {
            // If we reached a path separator that was not part of a set of path
            // separators at the end of the string, stop now
            if (!matchedSlash) {
                startPart = i + 1;
                break;
            }
            continue;
        }
        if (end === -1) {
            // We saw the first non-path separator, mark this as the end of our
            // extension
            matchedSlash = false;
            end = i + 1;
        }
        if (code === constants_js_1.CHAR_DOT) {
            // If this is our first dot, mark it as the start of our extension
            if (startDot === -1)
                startDot = i;
            else if (preDotState !== 1)
                preDotState = 1;
        }
        else if (startDot !== -1) {
            // We saw a non-dot and non-path separator before our dot, so we should
            // have a good chance at having a non-empty extension
            preDotState = -1;
        }
    }
    if (startDot === -1 ||
        end === -1 ||
        // We saw a non-dot character immediately before the dot
        preDotState === 0 ||
        // The (right-most) trimmed path component is exactly '..'
        (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {
        if (end !== -1) {
            if (startPart === 0 && isAbsolute) {
                ret.base = ret.name = path.slice(1, end);
            }
            else {
                ret.base = ret.name = path.slice(startPart, end);
            }
        }
        // Fallback to '/' in case there is no basename
        ret.base = ret.base || "/";
    }
    else {
        if (startPart === 0 && isAbsolute) {
            ret.name = path.slice(1, startDot);
            ret.base = path.slice(1, end);
        }
        else {
            ret.name = path.slice(startPart, startDot);
            ret.base = path.slice(startPart, end);
        }
        ret.ext = path.slice(startDot, end);
    }
    if (startPart > 0) {
        ret.dir = (0, strip_trailing_separators_js_1.stripTrailingSeparators)(path.slice(0, startPart - 1), _util_js_1.isPosixPathSeparator);
    }
    else if (isAbsolute)
        ret.dir = "/";
    return ret;
}
exports.parse = parse;


/***/ }),

/***/ 1876:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.relative = void 0;
const _util_js_1 = __nccwpck_require__(1547);
const resolve_js_1 = __nccwpck_require__(7324);
const relative_js_1 = __nccwpck_require__(2114);
/**
 * Return the relative path from `from` to `to` based on current working directory.
 *
 * @param from path in current working directory
 * @param to path in current working directory
 */
function relative(from, to) {
    (0, relative_js_1.assertArgs)(from, to);
    from = (0, resolve_js_1.resolve)(from);
    to = (0, resolve_js_1.resolve)(to);
    if (from === to)
        return "";
    // Trim any leading backslashes
    let fromStart = 1;
    const fromEnd = from.length;
    for (; fromStart < fromEnd; ++fromStart) {
        if (!(0, _util_js_1.isPosixPathSeparator)(from.charCodeAt(fromStart)))
            break;
    }
    const fromLen = fromEnd - fromStart;
    // Trim any leading backslashes
    let toStart = 1;
    const toEnd = to.length;
    for (; toStart < toEnd; ++toStart) {
        if (!(0, _util_js_1.isPosixPathSeparator)(to.charCodeAt(toStart)))
            break;
    }
    const toLen = toEnd - toStart;
    // Compare paths to find the longest common path from root
    const length = fromLen < toLen ? fromLen : toLen;
    let lastCommonSep = -1;
    let i = 0;
    for (; i <= length; ++i) {
        if (i === length) {
            if (toLen > length) {
                if ((0, _util_js_1.isPosixPathSeparator)(to.charCodeAt(toStart + i))) {
                    // We get here if `from` is the exact base path for `to`.
                    // For example: from='/foo/bar'; to='/foo/bar/baz'
                    return to.slice(toStart + i + 1);
                }
                else if (i === 0) {
                    // We get here if `from` is the root
                    // For example: from='/'; to='/foo'
                    return to.slice(toStart + i);
                }
            }
            else if (fromLen > length) {
                if ((0, _util_js_1.isPosixPathSeparator)(from.charCodeAt(fromStart + i))) {
                    // We get here if `to` is the exact base path for `from`.
                    // For example: from='/foo/bar/baz'; to='/foo/bar'
                    lastCommonSep = i;
                }
                else if (i === 0) {
                    // We get here if `to` is the root.
                    // For example: from='/foo'; to='/'
                    lastCommonSep = 0;
                }
            }
            break;
        }
        const fromCode = from.charCodeAt(fromStart + i);
        const toCode = to.charCodeAt(toStart + i);
        if (fromCode !== toCode)
            break;
        else if ((0, _util_js_1.isPosixPathSeparator)(fromCode))
            lastCommonSep = i;
    }
    let out = "";
    // Generate the relative path based on the path difference between `to`
    // and `from`
    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {
        if (i === fromEnd || (0, _util_js_1.isPosixPathSeparator)(from.charCodeAt(i))) {
            if (out.length === 0)
                out += "..";
            else
                out += "/..";
        }
    }
    // Lastly, append the rest of the destination (`to`) path that comes after
    // the common path parts
    if (out.length > 0)
        return out + to.slice(toStart + lastCommonSep);
    else {
        toStart += lastCommonSep;
        if ((0, _util_js_1.isPosixPathSeparator)(to.charCodeAt(toStart)))
            ++toStart;
        return to.slice(toStart);
    }
}
exports.relative = relative;


/***/ }),

/***/ 7324:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.resolve = void 0;
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
const dntShim = __importStar(__nccwpck_require__(3072));
const normalize_string_js_1 = __nccwpck_require__(7165);
const assert_path_js_1 = __nccwpck_require__(8030);
const _util_js_1 = __nccwpck_require__(1547);
/**
 * Resolves path segments into a `path`
 * @param pathSegments to process to path
 */
function resolve(...pathSegments) {
    let resolvedPath = "";
    let resolvedAbsolute = false;
    for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
        let path;
        if (i >= 0)
            path = pathSegments[i];
        else {
            // deno-lint-ignore no-explicit-any
            const { Deno } = dntShim.dntGlobalThis;
            if (typeof Deno?.cwd !== "function") {
                throw new TypeError("Resolved a relative path without a CWD.");
            }
            path = Deno.cwd();
        }
        (0, assert_path_js_1.assertPath)(path);
        // Skip empty entries
        if (path.length === 0) {
            continue;
        }
        resolvedPath = `${path}/${resolvedPath}`;
        resolvedAbsolute = (0, _util_js_1.isPosixPathSeparator)(path.charCodeAt(0));
    }
    // At this point the path should be resolved to a full absolute path, but
    // handle relative paths to be safe (might happen when Deno.cwd() fails)
    // Normalize the path
    resolvedPath = (0, normalize_string_js_1.normalizeString)(resolvedPath, !resolvedAbsolute, "/", _util_js_1.isPosixPathSeparator);
    if (resolvedAbsolute) {
        if (resolvedPath.length > 0)
            return `/${resolvedPath}`;
        else
            return "/";
    }
    else if (resolvedPath.length > 0)
        return resolvedPath;
    else
        return ".";
}
exports.resolve = resolve;


/***/ }),

/***/ 3936:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SEP_PATTERN = exports.SEP = void 0;
exports.SEP = "/";
exports.SEP_PATTERN = /\/+/;


/***/ }),

/***/ 6491:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toFileUrl = void 0;
const to_file_url_js_1 = __nccwpck_require__(7349);
const is_absolute_js_1 = __nccwpck_require__(757);
/**
 * Converts a path string to a file URL.
 *
 * ```ts
 * import { toFileUrl } from "https://deno.land/std@$STD_VERSION/path/posix.ts";
 *
 * toFileUrl("/home/foo"); // new URL("file:///home/foo")
 * ```
 * @param path to convert to file URL
 */
function toFileUrl(path) {
    if (!(0, is_absolute_js_1.isAbsolute)(path)) {
        throw new TypeError("Must be an absolute path.");
    }
    const url = new URL("file:///");
    url.pathname = (0, to_file_url_js_1.encodeWhitespace)(path.replace(/%/g, "%25").replace(/\\/g, "%5C"));
    return url;
}
exports.toFileUrl = toFileUrl;


/***/ }),

/***/ 4271:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toNamespacedPath = void 0;
/**
 * Resolves path to a namespace path
 * @param path to resolve to namespace
 */
function toNamespacedPath(path) {
    // Non-op on posix systems
    return path;
}
exports.toNamespacedPath = toNamespacedPath;


/***/ }),

/***/ 2942:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.relative = void 0;
const _os_js_1 = __nccwpck_require__(8178);
const relative_js_1 = __nccwpck_require__(1876);
const relative_js_2 = __nccwpck_require__(2153);
/**
 * Return the relative path from `from` to `to` based on current working directory.
 *
 * An example in windws, for instance:
 *  from = 'C:\\orandea\\test\\aaa'
 *  to = 'C:\\orandea\\impl\\bbb'
 * The output of the function should be: '..\\..\\impl\\bbb'
 *
 * @param from path in current working directory
 * @param to path in current working directory
 */
function relative(from, to) {
    return _os_js_1.isWindows ? (0, relative_js_2.relative)(from, to) : (0, relative_js_1.relative)(from, to);
}
exports.relative = relative;


/***/ }),

/***/ 7811:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.resolve = void 0;
const _os_js_1 = __nccwpck_require__(8178);
const resolve_js_1 = __nccwpck_require__(7324);
const resolve_js_2 = __nccwpck_require__(4713);
/**
 * Resolves path segments into a `path`
 * @param pathSegments to process to path
 */
function resolve(...pathSegments) {
    return _os_js_1.isWindows
        ? (0, resolve_js_2.resolve)(...pathSegments)
        : (0, resolve_js_1.resolve)(...pathSegments);
}
exports.resolve = resolve;


/***/ }),

/***/ 9653:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SEP_PATTERN = exports.SEP = void 0;
const _os_js_1 = __nccwpck_require__(8178);
exports.SEP = _os_js_1.isWindows ? "\\" : "/";
exports.SEP_PATTERN = _os_js_1.isWindows ? /[\\/]+/ : /\/+/;


/***/ }),

/***/ 3492:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toFileUrl = void 0;
const _os_js_1 = __nccwpck_require__(8178);
const to_file_url_js_1 = __nccwpck_require__(6491);
const to_file_url_js_2 = __nccwpck_require__(9261);
/**
 * Converts a path string to a file URL.
 *
 * ```ts
 * import { toFileUrl } from "https://deno.land/std@$STD_VERSION/path/to_file_url.ts";
 *
 * // posix
 * toFileUrl("/home/foo"); // new URL("file:///home/foo")
 *
 * // win32
 * toFileUrl("\\home\\foo"); // new URL("file:///home/foo")
 * toFileUrl("C:\\Users\\foo"); // new URL("file:///C:/Users/foo")
 * toFileUrl("\\\\127.0.0.1\\home\\foo"); // new URL("file://127.0.0.1/home/foo")
 * ```
 * @param path to convert to file URL
 */
function toFileUrl(path) {
    return _os_js_1.isWindows ? (0, to_file_url_js_2.toFileUrl)(path) : (0, to_file_url_js_1.toFileUrl)(path);
}
exports.toFileUrl = toFileUrl;


/***/ }),

/***/ 3536:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toNamespacedPath = void 0;
const _os_js_1 = __nccwpck_require__(8178);
const to_namespaced_path_js_1 = __nccwpck_require__(4271);
const to_namespaced_path_js_2 = __nccwpck_require__(1910);
/**
 * Resolves path to a namespace path
 * @param path to resolve to namespace
 */
function toNamespacedPath(path) {
    return _os_js_1.isWindows
        ? (0, to_namespaced_path_js_2.toNamespacedPath)(path)
        : (0, to_namespaced_path_js_1.toNamespacedPath)(path);
}
exports.toNamespacedPath = toNamespacedPath;


/***/ }),

/***/ 7065:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// Copyright the Browserify authors. MIT License.
// Ported from https://github.com/browserify/path-browserify/
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isWindowsDeviceRoot = exports.isPathSeparator = exports.isPosixPathSeparator = void 0;
const constants_js_1 = __nccwpck_require__(6149);
function isPosixPathSeparator(code) {
    return code === constants_js_1.CHAR_FORWARD_SLASH;
}
exports.isPosixPathSeparator = isPosixPathSeparator;
function isPathSeparator(code) {
    return code === constants_js_1.CHAR_FORWARD_SLASH || code === constants_js_1.CHAR_BACKWARD_SLASH;
}
exports.isPathSeparator = isPathSeparator;
function isWindowsDeviceRoot(code) {
    return ((code >= constants_js_1.CHAR_LOWERCASE_A && code <= constants_js_1.CHAR_LOWERCASE_Z) ||
        (code >= constants_js_1.CHAR_UPPERCASE_A && code <= constants_js_1.CHAR_UPPERCASE_Z));
}
exports.isWindowsDeviceRoot = isWindowsDeviceRoot;


/***/ }),

/***/ 132:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.basename = void 0;
const basename_js_1 = __nccwpck_require__(4761);
const constants_js_1 = __nccwpck_require__(6149);
const strip_trailing_separators_js_1 = __nccwpck_require__(1749);
const _util_js_1 = __nccwpck_require__(7065);
/**
 * Return the last portion of a `path`.
 * Trailing directory separators are ignored, and optional suffix is removed.
 *
 * @param path - path to extract the name from.
 * @param [suffix] - suffix to remove from extracted name.
 */
function basename(path, suffix = "") {
    (0, basename_js_1.assertArgs)(path, suffix);
    // Check for a drive letter prefix so as not to mistake the following
    // path separator as an extra separator at the end of the path that can be
    // disregarded
    let start = 0;
    if (path.length >= 2) {
        const drive = path.charCodeAt(0);
        if ((0, _util_js_1.isWindowsDeviceRoot)(drive)) {
            if (path.charCodeAt(1) === constants_js_1.CHAR_COLON)
                start = 2;
        }
    }
    const lastSegment = (0, basename_js_1.lastPathSegment)(path, _util_js_1.isPathSeparator, start);
    const strippedSegment = (0, strip_trailing_separators_js_1.stripTrailingSeparators)(lastSegment, _util_js_1.isPathSeparator);
    return suffix ? (0, basename_js_1.stripSuffix)(strippedSegment, suffix) : strippedSegment;
}
exports.basename = basename;


/***/ }),

/***/ 8452:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.common = void 0;
const common_js_1 = __nccwpck_require__(4348);
const separator_js_1 = __nccwpck_require__(8094);
/** Determines the common path from a set of paths, using an optional separator,
 * which defaults to the OS default separator.
 *
 * ```ts
 *       import { common } from "https://deno.land/std@$STD_VERSION/path/mod.ts";
 *       const p = common([
 *         "./deno/std/path/mod.ts",
 *         "./deno/std/fs/mod.ts",
 *       ]);
 *       console.log(p); // "./deno/std/"
 * ```
 */
function common(paths, sep = separator_js_1.SEP) {
    return (0, common_js_1._common)(paths, sep);
}
exports.common = common;


/***/ }),

/***/ 5885:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.dirname = void 0;
const dirname_js_1 = __nccwpck_require__(5667);
const constants_js_1 = __nccwpck_require__(6149);
const strip_trailing_separators_js_1 = __nccwpck_require__(1749);
const _util_js_1 = __nccwpck_require__(7065);
/**
 * Return the directory path of a `path`.
 * @param path - path to extract the directory from.
 */
function dirname(path) {
    (0, dirname_js_1.assertArg)(path);
    const len = path.length;
    let rootEnd = -1;
    let end = -1;
    let matchedSlash = true;
    let offset = 0;
    const code = path.charCodeAt(0);
    // Try to match a root
    if (len > 1) {
        if ((0, _util_js_1.isPathSeparator)(code)) {
            // Possible UNC root
            rootEnd = offset = 1;
            if ((0, _util_js_1.isPathSeparator)(path.charCodeAt(1))) {
                // Matched double path separator at beginning
                let j = 2;
                let last = j;
                // Match 1 or more non-path separators
                for (; j < len; ++j) {
                    if ((0, _util_js_1.isPathSeparator)(path.charCodeAt(j)))
                        break;
                }
                if (j < len && j !== last) {
                    // Matched!
                    last = j;
                    // Match 1 or more path separators
                    for (; j < len; ++j) {
                        if (!(0, _util_js_1.isPathSeparator)(path.charCodeAt(j)))
                            break;
                    }
                    if (j < len && j !== last) {
                        // Matched!
                        last = j;
                        // Match 1 or more non-path separators
                        for (; j < len; ++j) {
                            if ((0, _util_js_1.isPathSeparator)(path.charCodeAt(j)))
                                break;
                        }
                        if (j === len) {
                            // We matched a UNC root only
                            return path;
                        }
                        if (j !== last) {
                            // We matched a UNC root with leftovers
                            // Offset by 1 to include the separator after the UNC root to
                            // treat it as a "normal root" on top of a (UNC) root
                            rootEnd = offset = j + 1;
                        }
                    }
                }
            }
        }
        else if ((0, _util_js_1.isWindowsDeviceRoot)(code)) {
            // Possible device root
            if (path.charCodeAt(1) === constants_js_1.CHAR_COLON) {
                rootEnd = offset = 2;
                if (len > 2) {
                    if ((0, _util_js_1.isPathSeparator)(path.charCodeAt(2)))
                        rootEnd = offset = 3;
                }
            }
        }
    }
    else if ((0, _util_js_1.isPathSeparator)(code)) {
        // `path` contains just a path separator, exit early to avoid
        // unnecessary work
        return path;
    }
    for (let i = len - 1; i >= offset; --i) {
        if ((0, _util_js_1.isPathSeparator)(path.charCodeAt(i))) {
            if (!matchedSlash) {
                end = i;
                break;
            }
        }
        else {
            // We saw the first non-path separator
            matchedSlash = false;
        }
    }
    if (end === -1) {
        if (rootEnd === -1)
            return ".";
        else
            end = rootEnd;
    }
    return (0, strip_trailing_separators_js_1.stripTrailingSeparators)(path.slice(0, end), _util_js_1.isPosixPathSeparator);
}
exports.dirname = dirname;


/***/ }),

/***/ 6137:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.extname = void 0;
const constants_js_1 = __nccwpck_require__(6149);
const assert_path_js_1 = __nccwpck_require__(8030);
const _util_js_1 = __nccwpck_require__(7065);
/**
 * Return the extension of the `path` with leading period.
 * @param path with extension
 * @returns extension (ex. for `file.ts` returns `.ts`)
 */
function extname(path) {
    (0, assert_path_js_1.assertPath)(path);
    let start = 0;
    let startDot = -1;
    let startPart = 0;
    let end = -1;
    let matchedSlash = true;
    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    let preDotState = 0;
    // Check for a drive letter prefix so as not to mistake the following
    // path separator as an extra separator at the end of the path that can be
    // disregarded
    if (path.length >= 2 &&
        path.charCodeAt(1) === constants_js_1.CHAR_COLON &&
        (0, _util_js_1.isWindowsDeviceRoot)(path.charCodeAt(0))) {
        start = startPart = 2;
    }
    for (let i = path.length - 1; i >= start; --i) {
        const code = path.charCodeAt(i);
        if ((0, _util_js_1.isPathSeparator)(code)) {
            // If we reached a path separator that was not part of a set of path
            // separators at the end of the string, stop now
            if (!matchedSlash) {
                startPart = i + 1;
                break;
            }
            continue;
        }
        if (end === -1) {
            // We saw the first non-path separator, mark this as the end of our
            // extension
            matchedSlash = false;
            end = i + 1;
        }
        if (code === constants_js_1.CHAR_DOT) {
            // If this is our first dot, mark it as the start of our extension
            if (startDot === -1)
                startDot = i;
            else if (preDotState !== 1)
                preDotState = 1;
        }
        else if (startDot !== -1) {
            // We saw a non-dot and non-path separator before our dot, so we should
            // have a good chance at having a non-empty extension
            preDotState = -1;
        }
    }
    if (startDot === -1 ||
        end === -1 ||
        // We saw a non-dot character immediately before the dot
        preDotState === 0 ||
        // The (right-most) trimmed path component is exactly '..'
        (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {
        return "";
    }
    return path.slice(startDot, end);
}
exports.extname = extname;


/***/ }),

/***/ 3550:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.format = void 0;
const format_js_1 = __nccwpck_require__(2874);
/**
 * Generate a path from `FormatInputPathObject` object.
 * @param pathObject with path
 */
function format(pathObject) {
    (0, format_js_1.assertArg)(pathObject);
    return (0, format_js_1._format)("\\", pathObject);
}
exports.format = format;


/***/ }),

/***/ 4674:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fromFileUrl = void 0;
const from_file_url_js_1 = __nccwpck_require__(6617);
/**
 * Converts a file URL to a path string.
 *
 * ```ts
 * import { fromFileUrl } from "https://deno.land/std@$STD_VERSION/path/win32.ts";
 *
 * fromFileUrl("file:///home/foo"); // "\\home\\foo"
 * fromFileUrl("file:///C:/Users/foo"); // "C:\\Users\\foo"
 * fromFileUrl("file://localhost/home/foo"); // "\\\\localhost\\home\\foo"
 * ```
 * @param url of a file URL
 */
function fromFileUrl(url) {
    url = (0, from_file_url_js_1.assertArg)(url);
    let path = decodeURIComponent(url.pathname.replace(/\//g, "\\").replace(/%(?![0-9A-Fa-f]{2})/g, "%25")).replace(/^\\*([A-Za-z]:)(\\|$)/, "$1\\");
    if (url.hostname !== "") {
        // Note: The `URL` implementation guarantees that the drive letter and
        // hostname are mutually exclusive. Otherwise it would not have been valid
        // to append the hostname and path like this.
        path = `\\\\${url.hostname}${path}`;
    }
    return path;
}
exports.fromFileUrl = fromFileUrl;


/***/ }),

/***/ 4036:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.joinGlobs = exports.normalizeGlob = exports.globToRegExp = exports.isGlob = void 0;
const glob_to_reg_exp_js_1 = __nccwpck_require__(3610);
const normalize_js_1 = __nccwpck_require__(6932);
const join_js_1 = __nccwpck_require__(6080);
const separator_js_1 = __nccwpck_require__(8094);
var is_glob_js_1 = __nccwpck_require__(5193);
Object.defineProperty(exports, "isGlob", ({ enumerable: true, get: function () { return is_glob_js_1.isGlob; } }));
const constants = {
    sep: "(?:\\\\|/)+",
    sepMaybe: "(?:\\\\|/)*",
    seps: ["\\", "/"],
    globstar: "(?:[^\\\\/]*(?:\\\\|/|$)+)*",
    wildcard: "[^\\\\/]*",
    escapePrefix: "`",
};
/** Convert a glob string to a regular expression.
 *
 * Tries to match bash glob expansion as closely as possible.
 *
 * Basic glob syntax:
 * - `*` - Matches everything without leaving the path segment.
 * - `?` - Matches any single character.
 * - `{foo,bar}` - Matches `foo` or `bar`.
 * - `[abcd]` - Matches `a`, `b`, `c` or `d`.
 * - `[a-d]` - Matches `a`, `b`, `c` or `d`.
 * - `[!abcd]` - Matches any single character besides `a`, `b`, `c` or `d`.
 * - `[[:<class>:]]` - Matches any character belonging to `<class>`.
 *     - `[[:alnum:]]` - Matches any digit or letter.
 *     - `[[:digit:]abc]` - Matches any digit, `a`, `b` or `c`.
 *     - See https://facelessuser.github.io/wcmatch/glob/#posix-character-classes
 *       for a complete list of supported character classes.
 * - `\` - Escapes the next character for an `os` other than `"windows"`.
 * - \` - Escapes the next character for `os` set to `"windows"`.
 * - `/` - Path separator.
 * - `\` - Additional path separator only for `os` set to `"windows"`.
 *
 * Extended syntax:
 * - Requires `{ extended: true }`.
 * - `?(foo|bar)` - Matches 0 or 1 instance of `{foo,bar}`.
 * - `@(foo|bar)` - Matches 1 instance of `{foo,bar}`. They behave the same.
 * - `*(foo|bar)` - Matches _n_ instances of `{foo,bar}`.
 * - `+(foo|bar)` - Matches _n > 0_ instances of `{foo,bar}`.
 * - `!(foo|bar)` - Matches anything other than `{foo,bar}`.
 * - See https://www.linuxjournal.com/content/bash-extended-globbing.
 *
 * Globstar syntax:
 * - Requires `{ globstar: true }`.
 * - `**` - Matches any number of any path segments.
 *     - Must comprise its entire path segment in the provided glob.
 * - See https://www.linuxjournal.com/content/globstar-new-bash-globbing-option.
 *
 * Note the following properties:
 * - The generated `RegExp` is anchored at both start and end.
 * - Repeating and trailing separators are tolerated. Trailing separators in the
 *   provided glob have no meaning and are discarded.
 * - Absolute globs will only match absolute paths, etc.
 * - Empty globs will match nothing.
 * - Any special glob syntax must be contained to one path segment. For example,
 *   `?(foo|bar/baz)` is invalid. The separator will take precedence and the
 *   first segment ends with an unclosed group.
 * - If a path segment ends with unclosed groups or a dangling escape prefix, a
 *   parse error has occurred. Every character for that segment is taken
 *   literally in this event.
 *
 * Limitations:
 * - A negative group like `!(foo|bar)` will wrongly be converted to a negative
 *   look-ahead followed by a wildcard. This means that `!(foo).js` will wrongly
 *   fail to match `foobar.js`, even though `foobar` is not `foo`. Effectively,
 *   `!(foo|bar)` is treated like `!(@(foo|bar)*)`. This will work correctly if
 *   the group occurs not nested at the end of the segment. */
function globToRegExp(glob, options = {}) {
    return (0, glob_to_reg_exp_js_1._globToRegExp)(constants, glob, options);
}
exports.globToRegExp = globToRegExp;
/** Like normalize(), but doesn't collapse "**\/.." when `globstar` is true. */
function normalizeGlob(glob, { globstar = false } = {}) {
    if (glob.match(/\0/g)) {
        throw new Error(`Glob contains invalid characters: "${glob}"`);
    }
    if (!globstar) {
        return (0, normalize_js_1.normalize)(glob);
    }
    const s = separator_js_1.SEP_PATTERN.source;
    const badParentPattern = new RegExp(`(?<=(${s}|^)\\*\\*${s})\\.\\.(?=${s}|$)`, "g");
    return (0, normalize_js_1.normalize)(glob.replace(badParentPattern, "\0")).replace(/\0/g, "..");
}
exports.normalizeGlob = normalizeGlob;
/** Like join(), but doesn't collapse "**\/.." when `globstar` is true. */
function joinGlobs(globs, { extended = true, globstar = false } = {}) {
    if (!globstar || globs.length === 0) {
        return (0, join_js_1.join)(...globs);
    }
    if (globs.length === 0)
        return ".";
    let joined;
    for (const glob of globs) {
        const path = glob;
        if (path.length > 0) {
            if (!joined)
                joined = path;
            else
                joined += `${separator_js_1.SEP}${path}`;
        }
    }
    if (!joined)
        return ".";
    return normalizeGlob(joined, { extended, globstar });
}
exports.joinGlobs = joinGlobs;


/***/ }),

/***/ 1174:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isAbsolute = void 0;
const constants_js_1 = __nccwpck_require__(6149);
const assert_path_js_1 = __nccwpck_require__(8030);
const _util_js_1 = __nccwpck_require__(7065);
/**
 * Verifies whether provided path is absolute
 * @param path to be verified as absolute
 */
function isAbsolute(path) {
    (0, assert_path_js_1.assertPath)(path);
    const len = path.length;
    if (len === 0)
        return false;
    const code = path.charCodeAt(0);
    if ((0, _util_js_1.isPathSeparator)(code)) {
        return true;
    }
    else if ((0, _util_js_1.isWindowsDeviceRoot)(code)) {
        // Possible device root
        if (len > 2 && path.charCodeAt(1) === constants_js_1.CHAR_COLON) {
            if ((0, _util_js_1.isPathSeparator)(path.charCodeAt(2)))
                return true;
        }
    }
    return false;
}
exports.isAbsolute = isAbsolute;


/***/ }),

/***/ 6080:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.join = void 0;
const assert_js_1 = __nccwpck_require__(4254);
const assert_path_js_1 = __nccwpck_require__(8030);
const _util_js_1 = __nccwpck_require__(7065);
const normalize_js_1 = __nccwpck_require__(6932);
/**
 * Join all given a sequence of `paths`,then normalizes the resulting path.
 * @param paths to be joined and normalized
 */
function join(...paths) {
    if (paths.length === 0)
        return ".";
    let joined;
    let firstPart = null;
    for (let i = 0; i < paths.length; ++i) {
        const path = paths[i];
        (0, assert_path_js_1.assertPath)(path);
        if (path.length > 0) {
            if (joined === undefined)
                joined = firstPart = path;
            else
                joined += `\\${path}`;
        }
    }
    if (joined === undefined)
        return ".";
    // Make sure that the joined path doesn't start with two slashes, because
    // normalize() will mistake it for an UNC path then.
    //
    // This step is skipped when it is very clear that the user actually
    // intended to point at an UNC path. This is assumed when the first
    // non-empty string arguments starts with exactly two slashes followed by
    // at least one more non-slash character.
    //
    // Note that for normalize() to treat a path as an UNC path it needs to
    // have at least 2 components, so we don't filter for that here.
    // This means that the user can use join to construct UNC paths from
    // a server name and a share name; for example:
    //   path.join('//server', 'share') -> '\\\\server\\share\\')
    let needsReplace = true;
    let slashCount = 0;
    (0, assert_js_1.assert)(firstPart !== null);
    if ((0, _util_js_1.isPathSeparator)(firstPart.charCodeAt(0))) {
        ++slashCount;
        const firstLen = firstPart.length;
        if (firstLen > 1) {
            if ((0, _util_js_1.isPathSeparator)(firstPart.charCodeAt(1))) {
                ++slashCount;
                if (firstLen > 2) {
                    if ((0, _util_js_1.isPathSeparator)(firstPart.charCodeAt(2)))
                        ++slashCount;
                    else {
                        // We matched a UNC path in the first part
                        needsReplace = false;
                    }
                }
            }
        }
    }
    if (needsReplace) {
        // Find any more consecutive slashes we need to replace
        for (; slashCount < joined.length; ++slashCount) {
            if (!(0, _util_js_1.isPathSeparator)(joined.charCodeAt(slashCount)))
                break;
        }
        // Replace the slashes if needed
        if (slashCount >= 2)
            joined = `\\${joined.slice(slashCount)}`;
    }
    return (0, normalize_js_1.normalize)(joined);
}
exports.join = join;


/***/ }),

/***/ 7948:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// Copyright the Browserify authors. MIT License.
// Ported mostly from https://github.com/browserify/path-browserify/
// This module is browser compatible.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.delimiter = exports.sep = void 0;
/**
 * Utilities for working with OS-specific file paths.
 *
 * Codes in the examples uses POSIX path but it automatically use Windows path
 * on Windows. Use methods under `posix` or `win32` object instead to handle non
 * platform specific path like:
 * ```ts
 * import { posix, win32 } from "https://deno.land/std@$STD_VERSION/path/mod.ts";
 * const p1 = posix.fromFileUrl("file:///home/foo");
 * const p2 = win32.fromFileUrl("file:///home/foo");
 * console.log(p1); // "/home/foo"
 * console.log(p2); // "\\home\\foo"
 * ```
 *
 * This module is browser compatible.
 *
 * @module
 */
exports.sep = "\\";
exports.delimiter = ";";
__exportStar(__nccwpck_require__(132), exports);
__exportStar(__nccwpck_require__(5885), exports);
__exportStar(__nccwpck_require__(6137), exports);
__exportStar(__nccwpck_require__(3550), exports);
__exportStar(__nccwpck_require__(4674), exports);
__exportStar(__nccwpck_require__(1174), exports);
__exportStar(__nccwpck_require__(6080), exports);
__exportStar(__nccwpck_require__(6932), exports);
__exportStar(__nccwpck_require__(9152), exports);
__exportStar(__nccwpck_require__(2153), exports);
__exportStar(__nccwpck_require__(4713), exports);
__exportStar(__nccwpck_require__(9261), exports);
__exportStar(__nccwpck_require__(1910), exports);
__exportStar(__nccwpck_require__(8452), exports);
__exportStar(__nccwpck_require__(8094), exports);
__exportStar(__nccwpck_require__(2169), exports);
__exportStar(__nccwpck_require__(3914), exports);


/***/ }),

/***/ 6932:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.normalize = void 0;
const normalize_js_1 = __nccwpck_require__(3082);
const constants_js_1 = __nccwpck_require__(6149);
const normalize_string_js_1 = __nccwpck_require__(7165);
const _util_js_1 = __nccwpck_require__(7065);
/**
 * Normalize the `path`, resolving `'..'` and `'.'` segments.
 * Note that resolving these segments does not necessarily mean that all will be eliminated.
 * A `'..'` at the top-level will be preserved, and an empty path is canonically `'.'`.
 * @param path to be normalized
 */
function normalize(path) {
    (0, normalize_js_1.assertArg)(path);
    const len = path.length;
    let rootEnd = 0;
    let device;
    let isAbsolute = false;
    const code = path.charCodeAt(0);
    // Try to match a root
    if (len > 1) {
        if ((0, _util_js_1.isPathSeparator)(code)) {
            // Possible UNC root
            // If we started with a separator, we know we at least have an absolute
            // path of some kind (UNC or otherwise)
            isAbsolute = true;
            if ((0, _util_js_1.isPathSeparator)(path.charCodeAt(1))) {
                // Matched double path separator at beginning
                let j = 2;
                let last = j;
                // Match 1 or more non-path separators
                for (; j < len; ++j) {
                    if ((0, _util_js_1.isPathSeparator)(path.charCodeAt(j)))
                        break;
                }
                if (j < len && j !== last) {
                    const firstPart = path.slice(last, j);
                    // Matched!
                    last = j;
                    // Match 1 or more path separators
                    for (; j < len; ++j) {
                        if (!(0, _util_js_1.isPathSeparator)(path.charCodeAt(j)))
                            break;
                    }
                    if (j < len && j !== last) {
                        // Matched!
                        last = j;
                        // Match 1 or more non-path separators
                        for (; j < len; ++j) {
                            if ((0, _util_js_1.isPathSeparator)(path.charCodeAt(j)))
                                break;
                        }
                        if (j === len) {
                            // We matched a UNC root only
                            // Return the normalized version of the UNC root since there
                            // is nothing left to process
                            return `\\\\${firstPart}\\${path.slice(last)}\\`;
                        }
                        else if (j !== last) {
                            // We matched a UNC root with leftovers
                            device = `\\\\${firstPart}\\${path.slice(last, j)}`;
                            rootEnd = j;
                        }
                    }
                }
            }
            else {
                rootEnd = 1;
            }
        }
        else if ((0, _util_js_1.isWindowsDeviceRoot)(code)) {
            // Possible device root
            if (path.charCodeAt(1) === constants_js_1.CHAR_COLON) {
                device = path.slice(0, 2);
                rootEnd = 2;
                if (len > 2) {
                    if ((0, _util_js_1.isPathSeparator)(path.charCodeAt(2))) {
                        // Treat separator following drive name as an absolute path
                        // indicator
                        isAbsolute = true;
                        rootEnd = 3;
                    }
                }
            }
        }
    }
    else if ((0, _util_js_1.isPathSeparator)(code)) {
        // `path` contains just a path separator, exit early to avoid unnecessary
        // work
        return "\\";
    }
    let tail;
    if (rootEnd < len) {
        tail = (0, normalize_string_js_1.normalizeString)(path.slice(rootEnd), !isAbsolute, "\\", _util_js_1.isPathSeparator);
    }
    else {
        tail = "";
    }
    if (tail.length === 0 && !isAbsolute)
        tail = ".";
    if (tail.length > 0 && (0, _util_js_1.isPathSeparator)(path.charCodeAt(len - 1))) {
        tail += "\\";
    }
    if (device === undefined) {
        if (isAbsolute) {
            if (tail.length > 0)
                return `\\${tail}`;
            else
                return "\\";
        }
        else if (tail.length > 0) {
            return tail;
        }
        else {
            return "";
        }
    }
    else if (isAbsolute) {
        if (tail.length > 0)
            return `${device}\\${tail}`;
        else
            return `${device}\\`;
    }
    else if (tail.length > 0) {
        return device + tail;
    }
    else {
        return device;
    }
}
exports.normalize = normalize;


/***/ }),

/***/ 9152:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.parse = void 0;
const constants_js_1 = __nccwpck_require__(6149);
const assert_path_js_1 = __nccwpck_require__(8030);
const _util_js_1 = __nccwpck_require__(7065);
/**
 * Return a `ParsedPath` object of the `path`.
 * @param path to process
 */
function parse(path) {
    (0, assert_path_js_1.assertPath)(path);
    const ret = { root: "", dir: "", base: "", ext: "", name: "" };
    const len = path.length;
    if (len === 0)
        return ret;
    let rootEnd = 0;
    let code = path.charCodeAt(0);
    // Try to match a root
    if (len > 1) {
        if ((0, _util_js_1.isPathSeparator)(code)) {
            // Possible UNC root
            rootEnd = 1;
            if ((0, _util_js_1.isPathSeparator)(path.charCodeAt(1))) {
                // Matched double path separator at beginning
                let j = 2;
                let last = j;
                // Match 1 or more non-path separators
                for (; j < len; ++j) {
                    if ((0, _util_js_1.isPathSeparator)(path.charCodeAt(j)))
                        break;
                }
                if (j < len && j !== last) {
                    // Matched!
                    last = j;
                    // Match 1 or more path separators
                    for (; j < len; ++j) {
                        if (!(0, _util_js_1.isPathSeparator)(path.charCodeAt(j)))
                            break;
                    }
                    if (j < len && j !== last) {
                        // Matched!
                        last = j;
                        // Match 1 or more non-path separators
                        for (; j < len; ++j) {
                            if ((0, _util_js_1.isPathSeparator)(path.charCodeAt(j)))
                                break;
                        }
                        if (j === len) {
                            // We matched a UNC root only
                            rootEnd = j;
                        }
                        else if (j !== last) {
                            // We matched a UNC root with leftovers
                            rootEnd = j + 1;
                        }
                    }
                }
            }
        }
        else if ((0, _util_js_1.isWindowsDeviceRoot)(code)) {
            // Possible device root
            if (path.charCodeAt(1) === constants_js_1.CHAR_COLON) {
                rootEnd = 2;
                if (len > 2) {
                    if ((0, _util_js_1.isPathSeparator)(path.charCodeAt(2))) {
                        if (len === 3) {
                            // `path` contains just a drive root, exit early to avoid
                            // unnecessary work
                            ret.root = ret.dir = path;
                            ret.base = "\\";
                            return ret;
                        }
                        rootEnd = 3;
                    }
                }
                else {
                    // `path` contains just a relative drive root, exit early to avoid
                    // unnecessary work
                    ret.root = ret.dir = path;
                    return ret;
                }
            }
        }
    }
    else if ((0, _util_js_1.isPathSeparator)(code)) {
        // `path` contains just a path separator, exit early to avoid
        // unnecessary work
        ret.root = ret.dir = path;
        ret.base = "\\";
        return ret;
    }
    if (rootEnd > 0)
        ret.root = path.slice(0, rootEnd);
    let startDot = -1;
    let startPart = rootEnd;
    let end = -1;
    let matchedSlash = true;
    let i = path.length - 1;
    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    let preDotState = 0;
    // Get non-dir info
    for (; i >= rootEnd; --i) {
        code = path.charCodeAt(i);
        if ((0, _util_js_1.isPathSeparator)(code)) {
            // If we reached a path separator that was not part of a set of path
            // separators at the end of the string, stop now
            if (!matchedSlash) {
                startPart = i + 1;
                break;
            }
            continue;
        }
        if (end === -1) {
            // We saw the first non-path separator, mark this as the end of our
            // extension
            matchedSlash = false;
            end = i + 1;
        }
        if (code === constants_js_1.CHAR_DOT) {
            // If this is our first dot, mark it as the start of our extension
            if (startDot === -1)
                startDot = i;
            else if (preDotState !== 1)
                preDotState = 1;
        }
        else if (startDot !== -1) {
            // We saw a non-dot and non-path separator before our dot, so we should
            // have a good chance at having a non-empty extension
            preDotState = -1;
        }
    }
    if (startDot === -1 ||
        end === -1 ||
        // We saw a non-dot character immediately before the dot
        preDotState === 0 ||
        // The (right-most) trimmed path component is exactly '..'
        (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {
        if (end !== -1) {
            ret.base = ret.name = path.slice(startPart, end);
        }
    }
    else {
        ret.name = path.slice(startPart, startDot);
        ret.base = path.slice(startPart, end);
        ret.ext = path.slice(startDot, end);
    }
    // Fallback to '\' in case there is no basename
    ret.base = ret.base || "\\";
    // If the directory is the root, use the entire root as the `dir` including
    // the trailing slash if any (`C:\abc` -> `C:\`). Otherwise, strip out the
    // trailing slash (`C:\abc\def` -> `C:\abc`).
    if (startPart > 0 && startPart !== rootEnd) {
        ret.dir = path.slice(0, startPart - 1);
    }
    else
        ret.dir = ret.root;
    return ret;
}
exports.parse = parse;


/***/ }),

/***/ 2153:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.relative = void 0;
const constants_js_1 = __nccwpck_require__(6149);
const resolve_js_1 = __nccwpck_require__(4713);
const relative_js_1 = __nccwpck_require__(2114);
/**
 * Return the relative path from `from` to `to` based on current working directory.
 *
 * An example in windws, for instance:
 *  from = 'C:\\orandea\\test\\aaa'
 *  to = 'C:\\orandea\\impl\\bbb'
 * The output of the function should be: '..\\..\\impl\\bbb'
 *
 * @param from path in current working directory
 * @param to path in current working directory
 */
function relative(from, to) {
    (0, relative_js_1.assertArgs)(from, to);
    const fromOrig = (0, resolve_js_1.resolve)(from);
    const toOrig = (0, resolve_js_1.resolve)(to);
    if (fromOrig === toOrig)
        return "";
    from = fromOrig.toLowerCase();
    to = toOrig.toLowerCase();
    if (from === to)
        return "";
    // Trim any leading backslashes
    let fromStart = 0;
    let fromEnd = from.length;
    for (; fromStart < fromEnd; ++fromStart) {
        if (from.charCodeAt(fromStart) !== constants_js_1.CHAR_BACKWARD_SLASH)
            break;
    }
    // Trim trailing backslashes (applicable to UNC paths only)
    for (; fromEnd - 1 > fromStart; --fromEnd) {
        if (from.charCodeAt(fromEnd - 1) !== constants_js_1.CHAR_BACKWARD_SLASH)
            break;
    }
    const fromLen = fromEnd - fromStart;
    // Trim any leading backslashes
    let toStart = 0;
    let toEnd = to.length;
    for (; toStart < toEnd; ++toStart) {
        if (to.charCodeAt(toStart) !== constants_js_1.CHAR_BACKWARD_SLASH)
            break;
    }
    // Trim trailing backslashes (applicable to UNC paths only)
    for (; toEnd - 1 > toStart; --toEnd) {
        if (to.charCodeAt(toEnd - 1) !== constants_js_1.CHAR_BACKWARD_SLASH)
            break;
    }
    const toLen = toEnd - toStart;
    // Compare paths to find the longest common path from root
    const length = fromLen < toLen ? fromLen : toLen;
    let lastCommonSep = -1;
    let i = 0;
    for (; i <= length; ++i) {
        if (i === length) {
            if (toLen > length) {
                if (to.charCodeAt(toStart + i) === constants_js_1.CHAR_BACKWARD_SLASH) {
                    // We get here if `from` is the exact base path for `to`.
                    // For example: from='C:\\foo\\bar'; to='C:\\foo\\bar\\baz'
                    return toOrig.slice(toStart + i + 1);
                }
                else if (i === 2) {
                    // We get here if `from` is the device root.
                    // For example: from='C:\\'; to='C:\\foo'
                    return toOrig.slice(toStart + i);
                }
            }
            if (fromLen > length) {
                if (from.charCodeAt(fromStart + i) === constants_js_1.CHAR_BACKWARD_SLASH) {
                    // We get here if `to` is the exact base path for `from`.
                    // For example: from='C:\\foo\\bar'; to='C:\\foo'
                    lastCommonSep = i;
                }
                else if (i === 2) {
                    // We get here if `to` is the device root.
                    // For example: from='C:\\foo\\bar'; to='C:\\'
                    lastCommonSep = 3;
                }
            }
            break;
        }
        const fromCode = from.charCodeAt(fromStart + i);
        const toCode = to.charCodeAt(toStart + i);
        if (fromCode !== toCode)
            break;
        else if (fromCode === constants_js_1.CHAR_BACKWARD_SLASH)
            lastCommonSep = i;
    }
    // We found a mismatch before the first common path separator was seen, so
    // return the original `to`.
    if (i !== length && lastCommonSep === -1) {
        return toOrig;
    }
    let out = "";
    if (lastCommonSep === -1)
        lastCommonSep = 0;
    // Generate the relative path based on the path difference between `to` and
    // `from`
    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {
        if (i === fromEnd || from.charCodeAt(i) === constants_js_1.CHAR_BACKWARD_SLASH) {
            if (out.length === 0)
                out += "..";
            else
                out += "\\..";
        }
    }
    // Lastly, append the rest of the destination (`to`) path that comes after
    // the common path parts
    if (out.length > 0) {
        return out + toOrig.slice(toStart + lastCommonSep, toEnd);
    }
    else {
        toStart += lastCommonSep;
        if (toOrig.charCodeAt(toStart) === constants_js_1.CHAR_BACKWARD_SLASH)
            ++toStart;
        return toOrig.slice(toStart, toEnd);
    }
}
exports.relative = relative;


/***/ }),

/***/ 4713:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.resolve = void 0;
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
const dntShim = __importStar(__nccwpck_require__(3072));
const constants_js_1 = __nccwpck_require__(6149);
const normalize_string_js_1 = __nccwpck_require__(7165);
const assert_path_js_1 = __nccwpck_require__(8030);
const _util_js_1 = __nccwpck_require__(7065);
/**
 * Resolves path segments into a `path`
 * @param pathSegments to process to path
 */
function resolve(...pathSegments) {
    let resolvedDevice = "";
    let resolvedTail = "";
    let resolvedAbsolute = false;
    for (let i = pathSegments.length - 1; i >= -1; i--) {
        let path;
        // deno-lint-ignore no-explicit-any
        const { Deno } = dntShim.dntGlobalThis;
        if (i >= 0) {
            path = pathSegments[i];
        }
        else if (!resolvedDevice) {
            if (typeof Deno?.cwd !== "function") {
                throw new TypeError("Resolved a drive-letter-less path without a CWD.");
            }
            path = Deno.cwd();
        }
        else {
            if (typeof Deno?.env?.get !== "function" || typeof Deno?.cwd !== "function") {
                throw new TypeError("Resolved a relative path without a CWD.");
            }
            path = Deno.cwd();
            // Verify that a cwd was found and that it actually points
            // to our drive. If not, default to the drive's root.
            if (path === undefined ||
                path.slice(0, 3).toLowerCase() !== `${resolvedDevice.toLowerCase()}\\`) {
                path = `${resolvedDevice}\\`;
            }
        }
        (0, assert_path_js_1.assertPath)(path);
        const len = path.length;
        // Skip empty entries
        if (len === 0)
            continue;
        let rootEnd = 0;
        let device = "";
        let isAbsolute = false;
        const code = path.charCodeAt(0);
        // Try to match a root
        if (len > 1) {
            if ((0, _util_js_1.isPathSeparator)(code)) {
                // Possible UNC root
                // If we started with a separator, we know we at least have an
                // absolute path of some kind (UNC or otherwise)
                isAbsolute = true;
                if ((0, _util_js_1.isPathSeparator)(path.charCodeAt(1))) {
                    // Matched double path separator at beginning
                    let j = 2;
                    let last = j;
                    // Match 1 or more non-path separators
                    for (; j < len; ++j) {
                        if ((0, _util_js_1.isPathSeparator)(path.charCodeAt(j)))
                            break;
                    }
                    if (j < len && j !== last) {
                        const firstPart = path.slice(last, j);
                        // Matched!
                        last = j;
                        // Match 1 or more path separators
                        for (; j < len; ++j) {
                            if (!(0, _util_js_1.isPathSeparator)(path.charCodeAt(j)))
                                break;
                        }
                        if (j < len && j !== last) {
                            // Matched!
                            last = j;
                            // Match 1 or more non-path separators
                            for (; j < len; ++j) {
                                if ((0, _util_js_1.isPathSeparator)(path.charCodeAt(j)))
                                    break;
                            }
                            if (j === len) {
                                // We matched a UNC root only
                                device = `\\\\${firstPart}\\${path.slice(last)}`;
                                rootEnd = j;
                            }
                            else if (j !== last) {
                                // We matched a UNC root with leftovers
                                device = `\\\\${firstPart}\\${path.slice(last, j)}`;
                                rootEnd = j;
                            }
                        }
                    }
                }
                else {
                    rootEnd = 1;
                }
            }
            else if ((0, _util_js_1.isWindowsDeviceRoot)(code)) {
                // Possible device root
                if (path.charCodeAt(1) === constants_js_1.CHAR_COLON) {
                    device = path.slice(0, 2);
                    rootEnd = 2;
                    if (len > 2) {
                        if ((0, _util_js_1.isPathSeparator)(path.charCodeAt(2))) {
                            // Treat separator following drive name as an absolute path
                            // indicator
                            isAbsolute = true;
                            rootEnd = 3;
                        }
                    }
                }
            }
        }
        else if ((0, _util_js_1.isPathSeparator)(code)) {
            // `path` contains just a path separator
            rootEnd = 1;
            isAbsolute = true;
        }
        if (device.length > 0 &&
            resolvedDevice.length > 0 &&
            device.toLowerCase() !== resolvedDevice.toLowerCase()) {
            // This path points to another device so it is not applicable
            continue;
        }
        if (resolvedDevice.length === 0 && device.length > 0) {
            resolvedDevice = device;
        }
        if (!resolvedAbsolute) {
            resolvedTail = `${path.slice(rootEnd)}\\${resolvedTail}`;
            resolvedAbsolute = isAbsolute;
        }
        if (resolvedAbsolute && resolvedDevice.length > 0)
            break;
    }
    // At this point the path should be resolved to a full absolute path,
    // but handle relative paths to be safe (might happen when Deno.cwd()
    // fails)
    // Normalize the tail path
    resolvedTail = (0, normalize_string_js_1.normalizeString)(resolvedTail, !resolvedAbsolute, "\\", _util_js_1.isPathSeparator);
    return resolvedDevice + (resolvedAbsolute ? "\\" : "") + resolvedTail || ".";
}
exports.resolve = resolve;


/***/ }),

/***/ 8094:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SEP_PATTERN = exports.SEP = void 0;
exports.SEP = "\\";
exports.SEP_PATTERN = /[\\/]+/;


/***/ }),

/***/ 9261:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toFileUrl = void 0;
const to_file_url_js_1 = __nccwpck_require__(7349);
const is_absolute_js_1 = __nccwpck_require__(1174);
/**
 * Converts a path string to a file URL.
 *
 * ```ts
 * import { toFileUrl } from "https://deno.land/std@$STD_VERSION/path/win32.ts";
 *
 * toFileUrl("\\home\\foo"); // new URL("file:///home/foo")
 * toFileUrl("C:\\Users\\foo"); // new URL("file:///C:/Users/foo")
 * toFileUrl("\\\\127.0.0.1\\home\\foo"); // new URL("file://127.0.0.1/home/foo")
 * ```
 * @param path to convert to file URL
 */
function toFileUrl(path) {
    if (!(0, is_absolute_js_1.isAbsolute)(path)) {
        throw new TypeError("Must be an absolute path.");
    }
    const [, hostname, pathname] = path.match(/^(?:[/\\]{2}([^/\\]+)(?=[/\\](?:[^/\\]|$)))?(.*)/);
    const url = new URL("file:///");
    url.pathname = (0, to_file_url_js_1.encodeWhitespace)(pathname.replace(/%/g, "%25"));
    if (hostname !== undefined && hostname !== "localhost") {
        url.hostname = hostname;
        if (!url.hostname) {
            throw new TypeError("Invalid hostname.");
        }
    }
    return url;
}
exports.toFileUrl = toFileUrl;


/***/ }),

/***/ 1910:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toNamespacedPath = void 0;
const constants_js_1 = __nccwpck_require__(6149);
const _util_js_1 = __nccwpck_require__(7065);
const resolve_js_1 = __nccwpck_require__(4713);
/**
 * Resolves path to a namespace path
 * @param path to resolve to namespace
 */
function toNamespacedPath(path) {
    // Note: this will *probably* throw somewhere.
    if (typeof path !== "string")
        return path;
    if (path.length === 0)
        return "";
    const resolvedPath = (0, resolve_js_1.resolve)(path);
    if (resolvedPath.length >= 3) {
        if (resolvedPath.charCodeAt(0) === constants_js_1.CHAR_BACKWARD_SLASH) {
            // Possible UNC root
            if (resolvedPath.charCodeAt(1) === constants_js_1.CHAR_BACKWARD_SLASH) {
                const code = resolvedPath.charCodeAt(2);
                if (code !== constants_js_1.CHAR_QUESTION_MARK && code !== constants_js_1.CHAR_DOT) {
                    // Matched non-long UNC root, convert the path to a long UNC path
                    return `\\\\?\\UNC\\${resolvedPath.slice(2)}`;
                }
            }
        }
        else if ((0, _util_js_1.isWindowsDeviceRoot)(resolvedPath.charCodeAt(0))) {
            // Possible device root
            if (resolvedPath.charCodeAt(1) === constants_js_1.CHAR_COLON &&
                resolvedPath.charCodeAt(2) === constants_js_1.CHAR_BACKWARD_SLASH) {
                // Matched device root, convert the path to a long UNC path
                return `\\\\?\\${resolvedPath}`;
            }
        }
    }
    return path;
}
exports.toNamespacedPath = toNamespacedPath;


/***/ }),

/***/ 7437:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.writeAllSync = exports.writeAll = void 0;
/**
 * @deprecated (will be removed after 1.0.0) Use WritableStream, ReadableStream.from, and pipeTo() instead.
 *
 * Write all the content of the array buffer (`arr`) to the writer (`w`).
 *
 * ```ts
 * import { Buffer } from "https://deno.land/std@$STD_VERSION/io/buffer.ts";
 * import { writeAll } from "https://deno.land/std@$STD_VERSION/streams/write_all.ts";

 * // Example writing to stdout
 * let contentBytes = new TextEncoder().encode("Hello World");
 * await writeAll(Deno.stdout, contentBytes);
 *
 * // Example writing to file
 * contentBytes = new TextEncoder().encode("Hello World");
 * const file = await Deno.open('test.file', {write: true});
 * await writeAll(file, contentBytes);
 * file.close();
 *
 * // Example writing to buffer
 * contentBytes = new TextEncoder().encode("Hello World");
 * const writer = new Buffer();
 * await writeAll(writer, contentBytes);
 * console.log(writer.bytes().length);  // 11
 * ```
 */
async function writeAll(w, arr) {
    let nwritten = 0;
    while (nwritten < arr.length) {
        nwritten += await w.write(arr.subarray(nwritten));
    }
}
exports.writeAll = writeAll;
/**
 * @deprecated (will be removed after 1.0.0) Use WritableStream, ReadableStream.from, and pipeTo() instead.
 *
 * Synchronously write all the content of the array buffer (`arr`) to the
 * writer (`w`).
 *
 * ```ts
 * import { Buffer } from "https://deno.land/std@$STD_VERSION/io/buffer.ts";
 * import { writeAllSync } from "https://deno.land/std@$STD_VERSION/streams/write_all.ts";
 *
 * // Example writing to stdout
 * let contentBytes = new TextEncoder().encode("Hello World");
 * writeAllSync(Deno.stdout, contentBytes);
 *
 * // Example writing to file
 * contentBytes = new TextEncoder().encode("Hello World");
 * const file = Deno.openSync('test.file', {write: true});
 * writeAllSync(file, contentBytes);
 * file.close();
 *
 * // Example writing to buffer
 * contentBytes = new TextEncoder().encode("Hello World");
 * const writer = new Buffer();
 * writeAllSync(writer, contentBytes);
 * console.log(writer.bytes().length);  // 11
 * ```
 */
function writeAllSync(w, arr) {
    let nwritten = 0;
    while (nwritten < arr.length) {
        nwritten += w.writeSync(arr.subarray(nwritten));
    }
}
exports.writeAllSync = writeAllSync;


/***/ }),

/***/ 5355:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.YAMLError = void 0;
class YAMLError extends Error {
    constructor(message = "(unknown reason)", mark = "") {
        super(`${message} ${mark}`);
        Object.defineProperty(this, "mark", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: mark
        });
        this.name = this.constructor.name;
    }
    toString(_compact) {
        return `${this.name}: ${this.message} ${this.mark}`;
    }
}
exports.YAMLError = YAMLError;


/***/ }),

/***/ 1232:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.load = exports.loadAll = void 0;
const _error_js_1 = __nccwpck_require__(5355);
const _mark_js_1 = __nccwpck_require__(1330);
const common = __importStar(__nccwpck_require__(2704));
const loader_state_js_1 = __nccwpck_require__(8837);
const { hasOwn } = Object;
const CONTEXT_FLOW_IN = 1;
const CONTEXT_FLOW_OUT = 2;
const CONTEXT_BLOCK_IN = 3;
const CONTEXT_BLOCK_OUT = 4;
const CHOMPING_CLIP = 1;
const CHOMPING_STRIP = 2;
const CHOMPING_KEEP = 3;
const PATTERN_NON_PRINTABLE = 
// deno-lint-ignore no-control-regex
/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;
const PATTERN_NON_ASCII_LINE_BREAKS = /[\x85\u2028\u2029]/;
const PATTERN_FLOW_INDICATORS = /[,\[\]\{\}]/;
const PATTERN_TAG_HANDLE = /^(?:!|!!|![a-z\-]+!)$/i;
const PATTERN_TAG_URI = /^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;
function _class(obj) {
    return Object.prototype.toString.call(obj);
}
function isEOL(c) {
    return c === 0x0a || /* LF */ c === 0x0d /* CR */;
}
function isWhiteSpace(c) {
    return c === 0x09 || /* Tab */ c === 0x20 /* Space */;
}
function isWsOrEol(c) {
    return (c === 0x09 /* Tab */ ||
        c === 0x20 /* Space */ ||
        c === 0x0a /* LF */ ||
        c === 0x0d /* CR */);
}
function isFlowIndicator(c) {
    return (c === 0x2c /* , */ ||
        c === 0x5b /* [ */ ||
        c === 0x5d /* ] */ ||
        c === 0x7b /* { */ ||
        c === 0x7d /* } */);
}
function fromHexCode(c) {
    if (0x30 <= /* 0 */ c && c <= 0x39 /* 9 */) {
        return c - 0x30;
    }
    const lc = c | 0x20;
    if (0x61 <= /* a */ lc && lc <= 0x66 /* f */) {
        return lc - 0x61 + 10;
    }
    return -1;
}
function escapedHexLen(c) {
    if (c === 0x78 /* x */) {
        return 2;
    }
    if (c === 0x75 /* u */) {
        return 4;
    }
    if (c === 0x55 /* U */) {
        return 8;
    }
    return 0;
}
function fromDecimalCode(c) {
    if (0x30 <= /* 0 */ c && c <= 0x39 /* 9 */) {
        return c - 0x30;
    }
    return -1;
}
function simpleEscapeSequence(c) {
    return c === 0x30 /* 0 */
        ? "\x00"
        : c === 0x61 /* a */
            ? "\x07"
            : c === 0x62 /* b */
                ? "\x08"
                : c === 0x74 /* t */
                    ? "\x09"
                    : c === 0x09 /* Tab */
                        ? "\x09"
                        : c === 0x6e /* n */
                            ? "\x0A"
                            : c === 0x76 /* v */
                                ? "\x0B"
                                : c === 0x66 /* f */
                                    ? "\x0C"
                                    : c === 0x72 /* r */
                                        ? "\x0D"
                                        : c === 0x65 /* e */
                                            ? "\x1B"
                                            : c === 0x20 /* Space */
                                                ? " "
                                                : c === 0x22 /* " */
                                                    ? "\x22"
                                                    : c === 0x2f /* / */
                                                        ? "/"
                                                        : c === 0x5c /* \ */
                                                            ? "\x5C"
                                                            : c === 0x4e /* N */
                                                                ? "\x85"
                                                                : c === 0x5f /* _ */
                                                                    ? "\xA0"
                                                                    : c === 0x4c /* L */
                                                                        ? "\u2028"
                                                                        : c === 0x50 /* P */
                                                                            ? "\u2029"
                                                                            : "";
}
function charFromCodepoint(c) {
    if (c <= 0xffff) {
        return String.fromCharCode(c);
    }
    // Encode UTF-16 surrogate pair
    // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF
    return String.fromCharCode(((c - 0x010000) >> 10) + 0xd800, ((c - 0x010000) & 0x03ff) + 0xdc00);
}
const simpleEscapeCheck = Array.from({ length: 256 }); // integer, for fast access
const simpleEscapeMap = Array.from({ length: 256 });
for (let i = 0; i < 256; i++) {
    simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;
    simpleEscapeMap[i] = simpleEscapeSequence(i);
}
function generateError(state, message) {
    return new _error_js_1.YAMLError(message, new _mark_js_1.Mark(state.filename, state.input, state.position, state.line, state.position - state.lineStart));
}
function throwError(state, message) {
    throw generateError(state, message);
}
function throwWarning(state, message) {
    if (state.onWarning) {
        state.onWarning.call(null, generateError(state, message));
    }
}
const directiveHandlers = {
    YAML(state, _name, ...args) {
        if (state.version !== null) {
            return throwError(state, "duplication of %YAML directive");
        }
        if (args.length !== 1) {
            return throwError(state, "YAML directive accepts exactly one argument");
        }
        const match = /^([0-9]+)\.([0-9]+)$/.exec(args[0]);
        if (match === null) {
            return throwError(state, "ill-formed argument of the YAML directive");
        }
        const major = parseInt(match[1], 10);
        const minor = parseInt(match[2], 10);
        if (major !== 1) {
            return throwError(state, "unacceptable YAML version of the document");
        }
        state.version = args[0];
        state.checkLineBreaks = minor < 2;
        if (minor !== 1 && minor !== 2) {
            return throwWarning(state, "unsupported YAML version of the document");
        }
    },
    TAG(state, _name, ...args) {
        if (args.length !== 2) {
            return throwError(state, "TAG directive accepts exactly two arguments");
        }
        const handle = args[0];
        const prefix = args[1];
        if (!PATTERN_TAG_HANDLE.test(handle)) {
            return throwError(state, "ill-formed tag handle (first argument) of the TAG directive");
        }
        if (state.tagMap && hasOwn(state.tagMap, handle)) {
            return throwError(state, `there is a previously declared suffix for "${handle}" tag handle`);
        }
        if (!PATTERN_TAG_URI.test(prefix)) {
            return throwError(state, "ill-formed tag prefix (second argument) of the TAG directive");
        }
        if (typeof state.tagMap === "undefined") {
            state.tagMap = Object.create(null);
        }
        state.tagMap[handle] = prefix;
    },
};
function captureSegment(state, start, end, checkJson) {
    let result;
    if (start < end) {
        result = state.input.slice(start, end);
        if (checkJson) {
            for (let position = 0, length = result.length; position < length; position++) {
                const character = result.charCodeAt(position);
                if (!(character === 0x09 || (0x20 <= character && character <= 0x10ffff))) {
                    return throwError(state, "expected valid JSON character");
                }
            }
        }
        else if (PATTERN_NON_PRINTABLE.test(result)) {
            return throwError(state, "the stream contains non-printable characters");
        }
        state.result += result;
    }
}
function mergeMappings(state, destination, source, overridableKeys) {
    if (!common.isObject(source)) {
        return throwError(state, "cannot merge mappings; the provided source object is unacceptable");
    }
    const keys = Object.keys(source);
    for (let i = 0, len = keys.length; i < len; i++) {
        const key = keys[i];
        if (!hasOwn(destination, key)) {
            Object.defineProperty(destination, key, {
                value: source[key],
                writable: true,
                enumerable: true,
                configurable: true,
            });
            overridableKeys[key] = true;
        }
    }
}
function storeMappingPair(state, result, overridableKeys, keyTag, keyNode, valueNode, startLine, startPos) {
    // The output is a plain object here, so keys can only be strings.
    // We need to convert keyNode to a string, but doing so can hang the process
    // (deeply nested arrays that explode exponentially using aliases).
    if (Array.isArray(keyNode)) {
        keyNode = Array.prototype.slice.call(keyNode);
        for (let index = 0, quantity = keyNode.length; index < quantity; index++) {
            if (Array.isArray(keyNode[index])) {
                return throwError(state, "nested arrays are not supported inside keys");
            }
            if (typeof keyNode === "object" &&
                _class(keyNode[index]) === "[object Object]") {
                keyNode[index] = "[object Object]";
            }
        }
    }
    // Avoid code execution in load() via toString property
    // (still use its own toString for arrays, timestamps,
    // and whatever user schema extensions happen to have @@toStringTag)
    if (typeof keyNode === "object" && _class(keyNode) === "[object Object]") {
        keyNode = "[object Object]";
    }
    keyNode = String(keyNode);
    if (result === null) {
        result = {};
    }
    if (keyTag === "tag:yaml.org,2002:merge") {
        if (Array.isArray(valueNode)) {
            for (let index = 0, quantity = valueNode.length; index < quantity; index++) {
                mergeMappings(state, result, valueNode[index], overridableKeys);
            }
        }
        else {
            mergeMappings(state, result, valueNode, overridableKeys);
        }
    }
    else {
        if (!state.json &&
            !hasOwn(overridableKeys, keyNode) &&
            hasOwn(result, keyNode)) {
            state.line = startLine || state.line;
            state.position = startPos || state.position;
            return throwError(state, "duplicated mapping key");
        }
        Object.defineProperty(result, keyNode, {
            value: valueNode,
            writable: true,
            enumerable: true,
            configurable: true,
        });
        delete overridableKeys[keyNode];
    }
    return result;
}
function readLineBreak(state) {
    const ch = state.input.charCodeAt(state.position);
    if (ch === 0x0a /* LF */) {
        state.position++;
    }
    else if (ch === 0x0d /* CR */) {
        state.position++;
        if (state.input.charCodeAt(state.position) === 0x0a /* LF */) {
            state.position++;
        }
    }
    else {
        return throwError(state, "a line break is expected");
    }
    state.line += 1;
    state.lineStart = state.position;
}
function skipSeparationSpace(state, allowComments, checkIndent) {
    let lineBreaks = 0, ch = state.input.charCodeAt(state.position);
    while (ch !== 0) {
        while (isWhiteSpace(ch)) {
            ch = state.input.charCodeAt(++state.position);
        }
        if (allowComments && ch === 0x23 /* # */) {
            do {
                ch = state.input.charCodeAt(++state.position);
            } while (ch !== 0x0a && /* LF */ ch !== 0x0d && /* CR */ ch !== 0);
        }
        if (isEOL(ch)) {
            readLineBreak(state);
            ch = state.input.charCodeAt(state.position);
            lineBreaks++;
            state.lineIndent = 0;
            while (ch === 0x20 /* Space */) {
                state.lineIndent++;
                ch = state.input.charCodeAt(++state.position);
            }
        }
        else {
            break;
        }
    }
    if (checkIndent !== -1 &&
        lineBreaks !== 0 &&
        state.lineIndent < checkIndent) {
        throwWarning(state, "deficient indentation");
    }
    return lineBreaks;
}
function testDocumentSeparator(state) {
    let _position = state.position;
    let ch = state.input.charCodeAt(_position);
    // Condition state.position === state.lineStart is tested
    // in parent on each call, for efficiency. No needs to test here again.
    if ((ch === 0x2d || /* - */ ch === 0x2e) /* . */ &&
        ch === state.input.charCodeAt(_position + 1) &&
        ch === state.input.charCodeAt(_position + 2)) {
        _position += 3;
        ch = state.input.charCodeAt(_position);
        if (ch === 0 || isWsOrEol(ch)) {
            return true;
        }
    }
    return false;
}
function writeFoldedLines(state, count) {
    if (count === 1) {
        state.result += " ";
    }
    else if (count > 1) {
        state.result += common.repeat("\n", count - 1);
    }
}
function readPlainScalar(state, nodeIndent, withinFlowCollection) {
    const kind = state.kind;
    const result = state.result;
    let ch = state.input.charCodeAt(state.position);
    if (isWsOrEol(ch) ||
        isFlowIndicator(ch) ||
        ch === 0x23 /* # */ ||
        ch === 0x26 /* & */ ||
        ch === 0x2a /* * */ ||
        ch === 0x21 /* ! */ ||
        ch === 0x7c /* | */ ||
        ch === 0x3e /* > */ ||
        ch === 0x27 /* ' */ ||
        ch === 0x22 /* " */ ||
        ch === 0x25 /* % */ ||
        ch === 0x40 /* @ */ ||
        ch === 0x60 /* ` */) {
        return false;
    }
    let following;
    if (ch === 0x3f || /* ? */ ch === 0x2d /* - */) {
        following = state.input.charCodeAt(state.position + 1);
        if (isWsOrEol(following) ||
            (withinFlowCollection && isFlowIndicator(following))) {
            return false;
        }
    }
    state.kind = "scalar";
    state.result = "";
    let captureEnd, captureStart = (captureEnd = state.position);
    let hasPendingContent = false;
    let line = 0;
    while (ch !== 0) {
        if (ch === 0x3a /* : */) {
            following = state.input.charCodeAt(state.position + 1);
            if (isWsOrEol(following) ||
                (withinFlowCollection && isFlowIndicator(following))) {
                break;
            }
        }
        else if (ch === 0x23 /* # */) {
            const preceding = state.input.charCodeAt(state.position - 1);
            if (isWsOrEol(preceding)) {
                break;
            }
        }
        else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||
            (withinFlowCollection && isFlowIndicator(ch))) {
            break;
        }
        else if (isEOL(ch)) {
            line = state.line;
            const lineStart = state.lineStart;
            const lineIndent = state.lineIndent;
            skipSeparationSpace(state, false, -1);
            if (state.lineIndent >= nodeIndent) {
                hasPendingContent = true;
                ch = state.input.charCodeAt(state.position);
                continue;
            }
            else {
                state.position = captureEnd;
                state.line = line;
                state.lineStart = lineStart;
                state.lineIndent = lineIndent;
                break;
            }
        }
        if (hasPendingContent) {
            captureSegment(state, captureStart, captureEnd, false);
            writeFoldedLines(state, state.line - line);
            captureStart = captureEnd = state.position;
            hasPendingContent = false;
        }
        if (!isWhiteSpace(ch)) {
            captureEnd = state.position + 1;
        }
        ch = state.input.charCodeAt(++state.position);
    }
    captureSegment(state, captureStart, captureEnd, false);
    if (state.result) {
        return true;
    }
    state.kind = kind;
    state.result = result;
    return false;
}
function readSingleQuotedScalar(state, nodeIndent) {
    let ch, captureStart, captureEnd;
    ch = state.input.charCodeAt(state.position);
    if (ch !== 0x27 /* ' */) {
        return false;
    }
    state.kind = "scalar";
    state.result = "";
    state.position++;
    captureStart = captureEnd = state.position;
    while ((ch = state.input.charCodeAt(state.position)) !== 0) {
        if (ch === 0x27 /* ' */) {
            captureSegment(state, captureStart, state.position, true);
            ch = state.input.charCodeAt(++state.position);
            if (ch === 0x27 /* ' */) {
                captureStart = state.position;
                state.position++;
                captureEnd = state.position;
            }
            else {
                return true;
            }
        }
        else if (isEOL(ch)) {
            captureSegment(state, captureStart, captureEnd, true);
            writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));
            captureStart = captureEnd = state.position;
        }
        else if (state.position === state.lineStart &&
            testDocumentSeparator(state)) {
            return throwError(state, "unexpected end of the document within a single quoted scalar");
        }
        else {
            state.position++;
            captureEnd = state.position;
        }
    }
    return throwError(state, "unexpected end of the stream within a single quoted scalar");
}
function readDoubleQuotedScalar(state, nodeIndent) {
    let ch = state.input.charCodeAt(state.position);
    if (ch !== 0x22 /* " */) {
        return false;
    }
    state.kind = "scalar";
    state.result = "";
    state.position++;
    let captureEnd, captureStart = (captureEnd = state.position);
    let tmp;
    while ((ch = state.input.charCodeAt(state.position)) !== 0) {
        if (ch === 0x22 /* " */) {
            captureSegment(state, captureStart, state.position, true);
            state.position++;
            return true;
        }
        if (ch === 0x5c /* \ */) {
            captureSegment(state, captureStart, state.position, true);
            ch = state.input.charCodeAt(++state.position);
            if (isEOL(ch)) {
                skipSeparationSpace(state, false, nodeIndent);
                // TODO(bartlomieju): rework to inline fn with no type cast?
            }
            else if (ch < 256 && simpleEscapeCheck[ch]) {
                state.result += simpleEscapeMap[ch];
                state.position++;
            }
            else if ((tmp = escapedHexLen(ch)) > 0) {
                let hexLength = tmp;
                let hexResult = 0;
                for (; hexLength > 0; hexLength--) {
                    ch = state.input.charCodeAt(++state.position);
                    if ((tmp = fromHexCode(ch)) >= 0) {
                        hexResult = (hexResult << 4) + tmp;
                    }
                    else {
                        return throwError(state, "expected hexadecimal character");
                    }
                }
                state.result += charFromCodepoint(hexResult);
                state.position++;
            }
            else {
                return throwError(state, "unknown escape sequence");
            }
            captureStart = captureEnd = state.position;
        }
        else if (isEOL(ch)) {
            captureSegment(state, captureStart, captureEnd, true);
            writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));
            captureStart = captureEnd = state.position;
        }
        else if (state.position === state.lineStart &&
            testDocumentSeparator(state)) {
            return throwError(state, "unexpected end of the document within a double quoted scalar");
        }
        else {
            state.position++;
            captureEnd = state.position;
        }
    }
    return throwError(state, "unexpected end of the stream within a double quoted scalar");
}
function readFlowCollection(state, nodeIndent) {
    let ch = state.input.charCodeAt(state.position);
    let terminator;
    let isMapping = true;
    let result = {};
    if (ch === 0x5b /* [ */) {
        terminator = 0x5d; /* ] */
        isMapping = false;
        result = [];
    }
    else if (ch === 0x7b /* { */) {
        terminator = 0x7d; /* } */
    }
    else {
        return false;
    }
    if (state.anchor !== null &&
        typeof state.anchor !== "undefined" &&
        typeof state.anchorMap !== "undefined") {
        state.anchorMap[state.anchor] = result;
    }
    ch = state.input.charCodeAt(++state.position);
    const tag = state.tag, anchor = state.anchor;
    let readNext = true;
    let valueNode, keyNode, keyTag = (keyNode = valueNode = null), isExplicitPair, isPair = (isExplicitPair = false);
    let following = 0, line = 0;
    const overridableKeys = Object.create(null);
    while (ch !== 0) {
        skipSeparationSpace(state, true, nodeIndent);
        ch = state.input.charCodeAt(state.position);
        if (ch === terminator) {
            state.position++;
            state.tag = tag;
            state.anchor = anchor;
            state.kind = isMapping ? "mapping" : "sequence";
            state.result = result;
            return true;
        }
        if (!readNext) {
            return throwError(state, "missed comma between flow collection entries");
        }
        keyTag = keyNode = valueNode = null;
        isPair = isExplicitPair = false;
        if (ch === 0x3f /* ? */) {
            following = state.input.charCodeAt(state.position + 1);
            if (isWsOrEol(following)) {
                isPair = isExplicitPair = true;
                state.position++;
                skipSeparationSpace(state, true, nodeIndent);
            }
        }
        line = state.line;
        composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);
        keyTag = state.tag || null;
        keyNode = state.result;
        skipSeparationSpace(state, true, nodeIndent);
        ch = state.input.charCodeAt(state.position);
        if ((isExplicitPair || state.line === line) && ch === 0x3a /* : */) {
            isPair = true;
            ch = state.input.charCodeAt(++state.position);
            skipSeparationSpace(state, true, nodeIndent);
            composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);
            valueNode = state.result;
        }
        if (isMapping) {
            storeMappingPair(state, result, overridableKeys, keyTag, keyNode, valueNode);
        }
        else if (isPair) {
            result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode));
        }
        else {
            result.push(keyNode);
        }
        skipSeparationSpace(state, true, nodeIndent);
        ch = state.input.charCodeAt(state.position);
        if (ch === 0x2c /* , */) {
            readNext = true;
            ch = state.input.charCodeAt(++state.position);
        }
        else {
            readNext = false;
        }
    }
    return throwError(state, "unexpected end of the stream within a flow collection");
}
function readBlockScalar(state, nodeIndent) {
    let chomping = CHOMPING_CLIP, didReadContent = false, detectedIndent = false, textIndent = nodeIndent, emptyLines = 0, atMoreIndented = false;
    let ch = state.input.charCodeAt(state.position);
    let folding = false;
    if (ch === 0x7c /* | */) {
        folding = false;
    }
    else if (ch === 0x3e /* > */) {
        folding = true;
    }
    else {
        return false;
    }
    state.kind = "scalar";
    state.result = "";
    let tmp = 0;
    while (ch !== 0) {
        ch = state.input.charCodeAt(++state.position);
        if (ch === 0x2b || /* + */ ch === 0x2d /* - */) {
            if (CHOMPING_CLIP === chomping) {
                chomping = ch === 0x2b /* + */ ? CHOMPING_KEEP : CHOMPING_STRIP;
            }
            else {
                return throwError(state, "repeat of a chomping mode identifier");
            }
        }
        else if ((tmp = fromDecimalCode(ch)) >= 0) {
            if (tmp === 0) {
                return throwError(state, "bad explicit indentation width of a block scalar; it cannot be less than one");
            }
            else if (!detectedIndent) {
                textIndent = nodeIndent + tmp - 1;
                detectedIndent = true;
            }
            else {
                return throwError(state, "repeat of an indentation width identifier");
            }
        }
        else {
            break;
        }
    }
    if (isWhiteSpace(ch)) {
        do {
            ch = state.input.charCodeAt(++state.position);
        } while (isWhiteSpace(ch));
        if (ch === 0x23 /* # */) {
            do {
                ch = state.input.charCodeAt(++state.position);
            } while (!isEOL(ch) && ch !== 0);
        }
    }
    while (ch !== 0) {
        readLineBreak(state);
        state.lineIndent = 0;
        ch = state.input.charCodeAt(state.position);
        while ((!detectedIndent || state.lineIndent < textIndent) &&
            ch === 0x20 /* Space */) {
            state.lineIndent++;
            ch = state.input.charCodeAt(++state.position);
        }
        if (!detectedIndent && state.lineIndent > textIndent) {
            textIndent = state.lineIndent;
        }
        if (isEOL(ch)) {
            emptyLines++;
            continue;
        }
        // End of the scalar.
        if (state.lineIndent < textIndent) {
            // Perform the chomping.
            if (chomping === CHOMPING_KEEP) {
                state.result += common.repeat("\n", didReadContent ? 1 + emptyLines : emptyLines);
            }
            else if (chomping === CHOMPING_CLIP) {
                if (didReadContent) {
                    // i.e. only if the scalar is not empty.
                    state.result += "\n";
                }
            }
            // Break this `while` cycle and go to the function's epilogue.
            break;
        }
        // Folded style: use fancy rules to handle line breaks.
        if (folding) {
            // Lines starting with white space characters (more-indented lines) are not folded.
            if (isWhiteSpace(ch)) {
                atMoreIndented = true;
                // except for the first content line (cf. Example 8.1)
                state.result += common.repeat("\n", didReadContent ? 1 + emptyLines : emptyLines);
                // End of more-indented block.
            }
            else if (atMoreIndented) {
                atMoreIndented = false;
                state.result += common.repeat("\n", emptyLines + 1);
                // Just one line break - perceive as the same line.
            }
            else if (emptyLines === 0) {
                if (didReadContent) {
                    // i.e. only if we have already read some scalar content.
                    state.result += " ";
                }
                // Several line breaks - perceive as different lines.
            }
            else {
                state.result += common.repeat("\n", emptyLines);
            }
            // Literal style: just add exact number of line breaks between content lines.
        }
        else {
            // Keep all line breaks except the header line break.
            state.result += common.repeat("\n", didReadContent ? 1 + emptyLines : emptyLines);
        }
        didReadContent = true;
        detectedIndent = true;
        emptyLines = 0;
        const captureStart = state.position;
        while (!isEOL(ch) && ch !== 0) {
            ch = state.input.charCodeAt(++state.position);
        }
        captureSegment(state, captureStart, state.position, false);
    }
    return true;
}
function readBlockSequence(state, nodeIndent) {
    let line, following, detected = false, ch;
    const tag = state.tag, anchor = state.anchor, result = [];
    if (state.anchor !== null &&
        typeof state.anchor !== "undefined" &&
        typeof state.anchorMap !== "undefined") {
        state.anchorMap[state.anchor] = result;
    }
    ch = state.input.charCodeAt(state.position);
    while (ch !== 0) {
        if (ch !== 0x2d /* - */) {
            break;
        }
        following = state.input.charCodeAt(state.position + 1);
        if (!isWsOrEol(following)) {
            break;
        }
        detected = true;
        state.position++;
        if (skipSeparationSpace(state, true, -1)) {
            if (state.lineIndent <= nodeIndent) {
                result.push(null);
                ch = state.input.charCodeAt(state.position);
                continue;
            }
        }
        line = state.line;
        composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);
        result.push(state.result);
        skipSeparationSpace(state, true, -1);
        ch = state.input.charCodeAt(state.position);
        if ((state.line === line || state.lineIndent > nodeIndent) && ch !== 0) {
            return throwError(state, "bad indentation of a sequence entry");
        }
        else if (state.lineIndent < nodeIndent) {
            break;
        }
    }
    if (detected) {
        state.tag = tag;
        state.anchor = anchor;
        state.kind = "sequence";
        state.result = result;
        return true;
    }
    return false;
}
function readBlockMapping(state, nodeIndent, flowIndent) {
    const tag = state.tag, anchor = state.anchor, result = {}, overridableKeys = Object.create(null);
    let following, allowCompact = false, line, pos, keyTag = null, keyNode = null, valueNode = null, atExplicitKey = false, detected = false, ch;
    if (state.anchor !== null &&
        typeof state.anchor !== "undefined" &&
        typeof state.anchorMap !== "undefined") {
        state.anchorMap[state.anchor] = result;
    }
    ch = state.input.charCodeAt(state.position);
    while (ch !== 0) {
        following = state.input.charCodeAt(state.position + 1);
        line = state.line; // Save the current line.
        pos = state.position;
        //
        // Explicit notation case. There are two separate blocks:
        // first for the key (denoted by "?") and second for the value (denoted by ":")
        //
        if ((ch === 0x3f || /* ? */ ch === 0x3a) && /* : */ isWsOrEol(following)) {
            if (ch === 0x3f /* ? */) {
                if (atExplicitKey) {
                    storeMappingPair(state, result, overridableKeys, keyTag, keyNode, null);
                    keyTag = keyNode = valueNode = null;
                }
                detected = true;
                atExplicitKey = true;
                allowCompact = true;
            }
            else if (atExplicitKey) {
                // i.e. 0x3A/* : */ === character after the explicit key.
                atExplicitKey = false;
                allowCompact = true;
            }
            else {
                return throwError(state, "incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line");
            }
            state.position += 1;
            ch = following;
            //
            // Implicit notation case. Flow-style node as the key first, then ":", and the value.
            //
        }
        else if (composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {
            if (state.line === line) {
                ch = state.input.charCodeAt(state.position);
                while (isWhiteSpace(ch)) {
                    ch = state.input.charCodeAt(++state.position);
                }
                if (ch === 0x3a /* : */) {
                    ch = state.input.charCodeAt(++state.position);
                    if (!isWsOrEol(ch)) {
                        return throwError(state, "a whitespace character is expected after the key-value separator within a block mapping");
                    }
                    if (atExplicitKey) {
                        storeMappingPair(state, result, overridableKeys, keyTag, keyNode, null);
                        keyTag = keyNode = valueNode = null;
                    }
                    detected = true;
                    atExplicitKey = false;
                    allowCompact = false;
                    keyTag = state.tag;
                    keyNode = state.result;
                }
                else if (detected) {
                    return throwError(state, "can not read an implicit mapping pair; a colon is missed");
                }
                else {
                    state.tag = tag;
                    state.anchor = anchor;
                    return true; // Keep the result of `composeNode`.
                }
            }
            else if (detected) {
                return throwError(state, "can not read a block mapping entry; a multiline key may not be an implicit key");
            }
            else {
                state.tag = tag;
                state.anchor = anchor;
                return true; // Keep the result of `composeNode`.
            }
        }
        else {
            break; // Reading is done. Go to the epilogue.
        }
        //
        // Common reading code for both explicit and implicit notations.
        //
        if (state.line === line || state.lineIndent > nodeIndent) {
            if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {
                if (atExplicitKey) {
                    keyNode = state.result;
                }
                else {
                    valueNode = state.result;
                }
            }
            if (!atExplicitKey) {
                storeMappingPair(state, result, overridableKeys, keyTag, keyNode, valueNode, line, pos);
                keyTag = keyNode = valueNode = null;
            }
            skipSeparationSpace(state, true, -1);
            ch = state.input.charCodeAt(state.position);
        }
        if (state.lineIndent > nodeIndent && ch !== 0) {
            return throwError(state, "bad indentation of a mapping entry");
        }
        else if (state.lineIndent < nodeIndent) {
            break;
        }
    }
    //
    // Epilogue.
    //
    // Special case: last mapping's node contains only the key in explicit notation.
    if (atExplicitKey) {
        storeMappingPair(state, result, overridableKeys, keyTag, keyNode, null);
    }
    // Expose the resulting mapping.
    if (detected) {
        state.tag = tag;
        state.anchor = anchor;
        state.kind = "mapping";
        state.result = result;
    }
    return detected;
}
function readTagProperty(state) {
    let position, isVerbatim = false, isNamed = false, tagHandle = "", tagName, ch;
    ch = state.input.charCodeAt(state.position);
    if (ch !== 0x21 /* ! */)
        return false;
    if (state.tag !== null) {
        return throwError(state, "duplication of a tag property");
    }
    ch = state.input.charCodeAt(++state.position);
    if (ch === 0x3c /* < */) {
        isVerbatim = true;
        ch = state.input.charCodeAt(++state.position);
    }
    else if (ch === 0x21 /* ! */) {
        isNamed = true;
        tagHandle = "!!";
        ch = state.input.charCodeAt(++state.position);
    }
    else {
        tagHandle = "!";
    }
    position = state.position;
    if (isVerbatim) {
        do {
            ch = state.input.charCodeAt(++state.position);
        } while (ch !== 0 && ch !== 0x3e /* > */);
        if (state.position < state.length) {
            tagName = state.input.slice(position, state.position);
            ch = state.input.charCodeAt(++state.position);
        }
        else {
            return throwError(state, "unexpected end of the stream within a verbatim tag");
        }
    }
    else {
        while (ch !== 0 && !isWsOrEol(ch)) {
            if (ch === 0x21 /* ! */) {
                if (!isNamed) {
                    tagHandle = state.input.slice(position - 1, state.position + 1);
                    if (!PATTERN_TAG_HANDLE.test(tagHandle)) {
                        return throwError(state, "named tag handle cannot contain such characters");
                    }
                    isNamed = true;
                    position = state.position + 1;
                }
                else {
                    return throwError(state, "tag suffix cannot contain exclamation marks");
                }
            }
            ch = state.input.charCodeAt(++state.position);
        }
        tagName = state.input.slice(position, state.position);
        if (PATTERN_FLOW_INDICATORS.test(tagName)) {
            return throwError(state, "tag suffix cannot contain flow indicator characters");
        }
    }
    if (tagName && !PATTERN_TAG_URI.test(tagName)) {
        return throwError(state, `tag name cannot contain such characters: ${tagName}`);
    }
    if (isVerbatim) {
        state.tag = tagName;
    }
    else if (typeof state.tagMap !== "undefined" &&
        hasOwn(state.tagMap, tagHandle)) {
        state.tag = state.tagMap[tagHandle] + tagName;
    }
    else if (tagHandle === "!") {
        state.tag = `!${tagName}`;
    }
    else if (tagHandle === "!!") {
        state.tag = `tag:yaml.org,2002:${tagName}`;
    }
    else {
        return throwError(state, `undeclared tag handle "${tagHandle}"`);
    }
    return true;
}
function readAnchorProperty(state) {
    let ch = state.input.charCodeAt(state.position);
    if (ch !== 0x26 /* & */)
        return false;
    if (state.anchor !== null) {
        return throwError(state, "duplication of an anchor property");
    }
    ch = state.input.charCodeAt(++state.position);
    const position = state.position;
    while (ch !== 0 && !isWsOrEol(ch) && !isFlowIndicator(ch)) {
        ch = state.input.charCodeAt(++state.position);
    }
    if (state.position === position) {
        return throwError(state, "name of an anchor node must contain at least one character");
    }
    state.anchor = state.input.slice(position, state.position);
    return true;
}
function readAlias(state) {
    let ch = state.input.charCodeAt(state.position);
    if (ch !== 0x2a /* * */)
        return false;
    ch = state.input.charCodeAt(++state.position);
    const _position = state.position;
    while (ch !== 0 && !isWsOrEol(ch) && !isFlowIndicator(ch)) {
        ch = state.input.charCodeAt(++state.position);
    }
    if (state.position === _position) {
        return throwError(state, "name of an alias node must contain at least one character");
    }
    const alias = state.input.slice(_position, state.position);
    if (typeof state.anchorMap !== "undefined" &&
        !hasOwn(state.anchorMap, alias)) {
        return throwError(state, `unidentified alias "${alias}"`);
    }
    if (typeof state.anchorMap !== "undefined") {
        state.result = state.anchorMap[alias];
    }
    skipSeparationSpace(state, true, -1);
    return true;
}
function composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {
    let allowBlockScalars, allowBlockCollections, indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent
    atNewLine = false, hasContent = false, type, flowIndent, blockIndent;
    if (state.listener && state.listener !== null) {
        state.listener("open", state);
    }
    state.tag = null;
    state.anchor = null;
    state.kind = null;
    state.result = null;
    const allowBlockStyles = (allowBlockScalars =
        allowBlockCollections =
            CONTEXT_BLOCK_OUT === nodeContext || CONTEXT_BLOCK_IN === nodeContext);
    if (allowToSeek) {
        if (skipSeparationSpace(state, true, -1)) {
            atNewLine = true;
            if (state.lineIndent > parentIndent) {
                indentStatus = 1;
            }
            else if (state.lineIndent === parentIndent) {
                indentStatus = 0;
            }
            else if (state.lineIndent < parentIndent) {
                indentStatus = -1;
            }
        }
    }
    if (indentStatus === 1) {
        while (readTagProperty(state) || readAnchorProperty(state)) {
            if (skipSeparationSpace(state, true, -1)) {
                atNewLine = true;
                allowBlockCollections = allowBlockStyles;
                if (state.lineIndent > parentIndent) {
                    indentStatus = 1;
                }
                else if (state.lineIndent === parentIndent) {
                    indentStatus = 0;
                }
                else if (state.lineIndent < parentIndent) {
                    indentStatus = -1;
                }
            }
            else {
                allowBlockCollections = false;
            }
        }
    }
    if (allowBlockCollections) {
        allowBlockCollections = atNewLine || allowCompact;
    }
    if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {
        const cond = CONTEXT_FLOW_IN === nodeContext ||
            CONTEXT_FLOW_OUT === nodeContext;
        flowIndent = cond ? parentIndent : parentIndent + 1;
        blockIndent = state.position - state.lineStart;
        if (indentStatus === 1) {
            if ((allowBlockCollections &&
                (readBlockSequence(state, blockIndent) ||
                    readBlockMapping(state, blockIndent, flowIndent))) ||
                readFlowCollection(state, flowIndent)) {
                hasContent = true;
            }
            else {
                if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||
                    readSingleQuotedScalar(state, flowIndent) ||
                    readDoubleQuotedScalar(state, flowIndent)) {
                    hasContent = true;
                }
                else if (readAlias(state)) {
                    hasContent = true;
                    if (state.tag !== null || state.anchor !== null) {
                        return throwError(state, "alias node should not have Any properties");
                    }
                }
                else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {
                    hasContent = true;
                    if (state.tag === null) {
                        state.tag = "?";
                    }
                }
                if (state.anchor !== null && typeof state.anchorMap !== "undefined") {
                    state.anchorMap[state.anchor] = state.result;
                }
            }
        }
        else if (indentStatus === 0) {
            // Special case: block sequences are allowed to have same indentation level as the parent.
            // http://www.yaml.org/spec/1.2/spec.html#id2799784
            hasContent = allowBlockCollections &&
                readBlockSequence(state, blockIndent);
        }
    }
    if (state.tag !== null && state.tag !== "!") {
        if (state.tag === "?") {
            for (let typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex++) {
                type = state.implicitTypes[typeIndex];
                // Implicit resolving is not allowed for non-scalar types, and '?'
                // non-specific tag is only assigned to plain scalars. So, it isn't
                // needed to check for 'kind' conformity.
                if (type.resolve(state.result)) {
                    // `state.result` updated in resolver if matched
                    state.result = type.construct(state.result);
                    state.tag = type.tag;
                    if (state.anchor !== null && typeof state.anchorMap !== "undefined") {
                        state.anchorMap[state.anchor] = state.result;
                    }
                    break;
                }
            }
        }
        else if (hasOwn(state.typeMap[state.kind || "fallback"], state.tag)) {
            type = state.typeMap[state.kind || "fallback"][state.tag];
            if (state.result !== null && type.kind !== state.kind) {
                return throwError(state, `unacceptable node kind for !<${state.tag}> tag; it should be "${type.kind}", not "${state.kind}"`);
            }
            if (!type.resolve(state.result)) {
                // `state.result` updated in resolver if matched
                return throwError(state, `cannot resolve a node with !<${state.tag}> explicit tag`);
            }
            else {
                state.result = type.construct(state.result);
                if (state.anchor !== null && typeof state.anchorMap !== "undefined") {
                    state.anchorMap[state.anchor] = state.result;
                }
            }
        }
        else {
            return throwError(state, `unknown tag !<${state.tag}>`);
        }
    }
    if (state.listener && state.listener !== null) {
        state.listener("close", state);
    }
    return state.tag !== null || state.anchor !== null || hasContent;
}
function readDocument(state) {
    const documentStart = state.position;
    let position, directiveName, directiveArgs, hasDirectives = false, ch;
    state.version = null;
    state.checkLineBreaks = state.legacy;
    state.tagMap = Object.create(null);
    state.anchorMap = Object.create(null);
    while ((ch = state.input.charCodeAt(state.position)) !== 0) {
        skipSeparationSpace(state, true, -1);
        ch = state.input.charCodeAt(state.position);
        if (state.lineIndent > 0 || ch !== 0x25 /* % */) {
            break;
        }
        hasDirectives = true;
        ch = state.input.charCodeAt(++state.position);
        position = state.position;
        while (ch !== 0 && !isWsOrEol(ch)) {
            ch = state.input.charCodeAt(++state.position);
        }
        directiveName = state.input.slice(position, state.position);
        directiveArgs = [];
        if (directiveName.length < 1) {
            return throwError(state, "directive name must not be less than one character in length");
        }
        while (ch !== 0) {
            while (isWhiteSpace(ch)) {
                ch = state.input.charCodeAt(++state.position);
            }
            if (ch === 0x23 /* # */) {
                do {
                    ch = state.input.charCodeAt(++state.position);
                } while (ch !== 0 && !isEOL(ch));
                break;
            }
            if (isEOL(ch))
                break;
            position = state.position;
            while (ch !== 0 && !isWsOrEol(ch)) {
                ch = state.input.charCodeAt(++state.position);
            }
            directiveArgs.push(state.input.slice(position, state.position));
        }
        if (ch !== 0)
            readLineBreak(state);
        if (hasOwn(directiveHandlers, directiveName)) {
            directiveHandlers[directiveName](state, directiveName, ...directiveArgs);
        }
        else {
            throwWarning(state, `unknown document directive "${directiveName}"`);
        }
    }
    skipSeparationSpace(state, true, -1);
    if (state.lineIndent === 0 &&
        state.input.charCodeAt(state.position) === 0x2d /* - */ &&
        state.input.charCodeAt(state.position + 1) === 0x2d /* - */ &&
        state.input.charCodeAt(state.position + 2) === 0x2d /* - */) {
        state.position += 3;
        skipSeparationSpace(state, true, -1);
    }
    else if (hasDirectives) {
        return throwError(state, "directives end mark is expected");
    }
    composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);
    skipSeparationSpace(state, true, -1);
    if (state.checkLineBreaks &&
        PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {
        throwWarning(state, "non-ASCII line breaks are interpreted as content");
    }
    state.documents.push(state.result);
    if (state.position === state.lineStart && testDocumentSeparator(state)) {
        if (state.input.charCodeAt(state.position) === 0x2e /* . */) {
            state.position += 3;
            skipSeparationSpace(state, true, -1);
        }
        return;
    }
    if (state.position < state.length - 1) {
        return throwError(state, "end of the stream or a document separator is expected");
    }
}
function loadDocuments(input, options) {
    input = String(input);
    options = options || {};
    if (input.length !== 0) {
        // Add tailing `\n` if not exists
        if (input.charCodeAt(input.length - 1) !== 0x0a /* LF */ &&
            input.charCodeAt(input.length - 1) !== 0x0d /* CR */) {
            input += "\n";
        }
        // Strip BOM
        if (input.charCodeAt(0) === 0xfeff) {
            input = input.slice(1);
        }
    }
    const state = new loader_state_js_1.LoaderState(input, options);
    // Use 0 as string terminator. That significantly simplifies bounds check.
    state.input += "\0";
    while (state.input.charCodeAt(state.position) === 0x20 /* Space */) {
        state.lineIndent += 1;
        state.position += 1;
    }
    while (state.position < state.length - 1) {
        readDocument(state);
    }
    return state.documents;
}
function isCbFunction(fn) {
    return typeof fn === "function";
}
function loadAll(input, iteratorOrOption, options) {
    if (!isCbFunction(iteratorOrOption)) {
        return loadDocuments(input, iteratorOrOption);
    }
    const documents = loadDocuments(input, options);
    const iterator = iteratorOrOption;
    for (let index = 0, length = documents.length; index < length; index++) {
        iterator(documents[index]);
    }
    return void 0;
}
exports.loadAll = loadAll;
function load(input, options) {
    const documents = loadDocuments(input, options);
    if (documents.length === 0) {
        return null;
    }
    if (documents.length === 1) {
        return documents[0];
    }
    throw new _error_js_1.YAMLError("expected a single document in the stream, but found more");
}
exports.load = load;


/***/ }),

/***/ 8837:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LoaderState = void 0;
const _state_js_1 = __nccwpck_require__(6519);
class LoaderState extends _state_js_1.State {
    constructor(input, { filename, schema, onWarning, legacy = false, json = false, listener = null, }) {
        super(schema);
        Object.defineProperty(this, "input", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: input
        });
        Object.defineProperty(this, "documents", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
        Object.defineProperty(this, "length", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "lineIndent", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "lineStart", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "position", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "line", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "filename", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "onWarning", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "legacy", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "json", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "listener", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "implicitTypes", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "typeMap", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "version", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "checkLineBreaks", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "tagMap", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "anchorMap", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "tag", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "anchor", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "kind", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "result", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ""
        });
        this.filename = filename;
        this.onWarning = onWarning;
        this.legacy = legacy;
        this.json = json;
        this.listener = listener;
        this.implicitTypes = this.schema.compiledImplicit;
        this.typeMap = this.schema.compiledTypeMap;
        this.length = input.length;
    }
}
exports.LoaderState = LoaderState;


/***/ }),

/***/ 1330:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Mark = void 0;
const _utils_js_1 = __nccwpck_require__(2704);
class Mark {
    constructor(name, buffer, position, line, column) {
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: name
        });
        Object.defineProperty(this, "buffer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: buffer
        });
        Object.defineProperty(this, "position", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: position
        });
        Object.defineProperty(this, "line", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: line
        });
        Object.defineProperty(this, "column", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: column
        });
    }
    getSnippet(indent = 4, maxLength = 75) {
        if (!this.buffer)
            return null;
        let head = "";
        let start = this.position;
        while (start > 0 &&
            "\x00\r\n\x85\u2028\u2029".indexOf(this.buffer.charAt(start - 1)) === -1) {
            start -= 1;
            if (this.position - start > maxLength / 2 - 1) {
                head = " ... ";
                start += 5;
                break;
            }
        }
        let tail = "";
        let end = this.position;
        while (end < this.buffer.length &&
            "\x00\r\n\x85\u2028\u2029".indexOf(this.buffer.charAt(end)) === -1) {
            end += 1;
            if (end - this.position > maxLength / 2 - 1) {
                tail = " ... ";
                end -= 5;
                break;
            }
        }
        const snippet = this.buffer.slice(start, end);
        return `${(0, _utils_js_1.repeat)(" ", indent)}${head}${snippet}${tail}\n${(0, _utils_js_1.repeat)(" ", indent + this.position - start + head.length)}^`;
    }
    toString(compact) {
        let snippet, where = "";
        if (this.name) {
            where += `in "${this.name}" `;
        }
        where += `at line ${this.line + 1}, column ${this.column + 1}`;
        if (!compact) {
            snippet = this.getSnippet();
            if (snippet) {
                where += `:\n${snippet}`;
            }
        }
        return where;
    }
}
exports.Mark = Mark;


/***/ }),

/***/ 6519:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.State = void 0;
const mod_js_1 = __nccwpck_require__(5712);
class State {
    constructor(schema = mod_js_1.DEFAULT_SCHEMA) {
        Object.defineProperty(this, "schema", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: schema
        });
    }
}
exports.State = State;


/***/ }),

/***/ 7777:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.binary = void 0;
// Ported from js-yaml v3.13.1:
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
const type_js_1 = __nccwpck_require__(4592);
// [ 64, 65, 66 ] -> [ padding, CR, LF ]
const BASE64_MAP = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r";
function resolveYamlBinary(data) {
    if (data === null)
        return false;
    let code;
    let bitlen = 0;
    const max = data.length;
    const map = BASE64_MAP;
    // Convert one by one.
    for (let idx = 0; idx < max; idx++) {
        code = map.indexOf(data.charAt(idx));
        // Skip CR/LF
        if (code > 64)
            continue;
        // Fail on illegal characters
        if (code < 0)
            return false;
        bitlen += 6;
    }
    // If there are any bits left, source was corrupted
    return bitlen % 8 === 0;
}
function constructYamlBinary(data) {
    // remove CR/LF & padding to simplify scan
    const input = data.replace(/[\r\n=]/g, "");
    const max = input.length;
    const map = BASE64_MAP;
    // Collect by 6*4 bits (3 bytes)
    const result = [];
    let bits = 0;
    for (let idx = 0; idx < max; idx++) {
        if (idx % 4 === 0 && idx) {
            result.push((bits >> 16) & 0xff);
            result.push((bits >> 8) & 0xff);
            result.push(bits & 0xff);
        }
        bits = (bits << 6) | map.indexOf(input.charAt(idx));
    }
    // Dump tail
    const tailbits = (max % 4) * 6;
    if (tailbits === 0) {
        result.push((bits >> 16) & 0xff);
        result.push((bits >> 8) & 0xff);
        result.push(bits & 0xff);
    }
    else if (tailbits === 18) {
        result.push((bits >> 10) & 0xff);
        result.push((bits >> 2) & 0xff);
    }
    else if (tailbits === 12) {
        result.push((bits >> 4) & 0xff);
    }
    return new Uint8Array(result);
}
function representYamlBinary(object) {
    const max = object.length;
    const map = BASE64_MAP;
    // Convert every three bytes to 4 ASCII characters.
    let result = "";
    let bits = 0;
    for (let idx = 0; idx < max; idx++) {
        if (idx % 3 === 0 && idx) {
            result += map[(bits >> 18) & 0x3f];
            result += map[(bits >> 12) & 0x3f];
            result += map[(bits >> 6) & 0x3f];
            result += map[bits & 0x3f];
        }
        bits = (bits << 8) + object[idx];
    }
    // Dump tail
    const tail = max % 3;
    if (tail === 0) {
        result += map[(bits >> 18) & 0x3f];
        result += map[(bits >> 12) & 0x3f];
        result += map[(bits >> 6) & 0x3f];
        result += map[bits & 0x3f];
    }
    else if (tail === 2) {
        result += map[(bits >> 10) & 0x3f];
        result += map[(bits >> 4) & 0x3f];
        result += map[(bits << 2) & 0x3f];
        result += map[64];
    }
    else if (tail === 1) {
        result += map[(bits >> 2) & 0x3f];
        result += map[(bits << 4) & 0x3f];
        result += map[64];
        result += map[64];
    }
    return result;
}
function isBinary(obj) {
    return obj instanceof Uint8Array;
}
exports.binary = new type_js_1.Type("tag:yaml.org,2002:binary", {
    construct: constructYamlBinary,
    kind: "scalar",
    predicate: isBinary,
    represent: representYamlBinary,
    resolve: resolveYamlBinary,
});


/***/ }),

/***/ 6955:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bool = void 0;
const type_js_1 = __nccwpck_require__(4592);
const _utils_js_1 = __nccwpck_require__(2704);
function resolveYamlBoolean(data) {
    const max = data.length;
    return ((max === 4 && (data === "true" || data === "True" || data === "TRUE")) ||
        (max === 5 && (data === "false" || data === "False" || data === "FALSE")));
}
function constructYamlBoolean(data) {
    return data === "true" || data === "True" || data === "TRUE";
}
exports.bool = new type_js_1.Type("tag:yaml.org,2002:bool", {
    construct: constructYamlBoolean,
    defaultStyle: "lowercase",
    kind: "scalar",
    predicate: _utils_js_1.isBoolean,
    represent: {
        lowercase(object) {
            return object ? "true" : "false";
        },
        uppercase(object) {
            return object ? "TRUE" : "FALSE";
        },
        camelcase(object) {
            return object ? "True" : "False";
        },
    },
    resolve: resolveYamlBoolean,
});


/***/ }),

/***/ 5701:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.float = void 0;
const type_js_1 = __nccwpck_require__(4592);
const _utils_js_1 = __nccwpck_require__(2704);
const YAML_FLOAT_PATTERN = new RegExp(
// 2.5e4, 2.5 and integers
"^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?" +
    // .2e4, .2
    // special case, seems not from spec
    "|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?" +
    // 20:59
    "|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*" +
    // .inf
    "|[-+]?\\.(?:inf|Inf|INF)" +
    // .nan
    "|\\.(?:nan|NaN|NAN))$");
function resolveYamlFloat(data) {
    if (!YAML_FLOAT_PATTERN.test(data) ||
        // Quick hack to not allow integers end with `_`
        // Probably should update regexp & check speed
        data[data.length - 1] === "_") {
        return false;
    }
    return true;
}
function constructYamlFloat(data) {
    let value = data.replace(/_/g, "").toLowerCase();
    const sign = value[0] === "-" ? -1 : 1;
    const digits = [];
    if ("+-".indexOf(value[0]) >= 0) {
        value = value.slice(1);
    }
    if (value === ".inf") {
        return sign === 1 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;
    }
    if (value === ".nan") {
        return NaN;
    }
    if (value.indexOf(":") >= 0) {
        value.split(":").forEach((v) => {
            digits.unshift(parseFloat(v));
        });
        let valueNb = 0.0;
        let base = 1;
        digits.forEach((d) => {
            valueNb += d * base;
            base *= 60;
        });
        return sign * valueNb;
    }
    return sign * parseFloat(value);
}
const SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;
function representYamlFloat(object, style) {
    if (isNaN(object)) {
        switch (style) {
            case "lowercase":
                return ".nan";
            case "uppercase":
                return ".NAN";
            case "camelcase":
                return ".NaN";
        }
    }
    else if (Number.POSITIVE_INFINITY === object) {
        switch (style) {
            case "lowercase":
                return ".inf";
            case "uppercase":
                return ".INF";
            case "camelcase":
                return ".Inf";
        }
    }
    else if (Number.NEGATIVE_INFINITY === object) {
        switch (style) {
            case "lowercase":
                return "-.inf";
            case "uppercase":
                return "-.INF";
            case "camelcase":
                return "-.Inf";
        }
    }
    else if ((0, _utils_js_1.isNegativeZero)(object)) {
        return "-0.0";
    }
    const res = object.toString(10);
    // JS stringifier can build scientific format without dots: 5e-100,
    // while YAML requires dot: 5.e-100. Fix it with simple hack
    return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace("e", ".e") : res;
}
function isFloat(object) {
    return (Object.prototype.toString.call(object) === "[object Number]" &&
        (object % 1 !== 0 || (0, _utils_js_1.isNegativeZero)(object)));
}
exports.float = new type_js_1.Type("tag:yaml.org,2002:float", {
    construct: constructYamlFloat,
    defaultStyle: "lowercase",
    kind: "scalar",
    predicate: isFloat,
    represent: representYamlFloat,
    resolve: resolveYamlFloat,
});


/***/ }),

/***/ 399:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported and adapted from js-yaml-js-types v1.0.0:
// https://github.com/nodeca/js-yaml-js-types/tree/ac537e7bbdd3c2cbbd9882ca3919c520c2dc022b
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.func = void 0;
const type_js_1 = __nccwpck_require__(4592);
// Note: original implementation used Esprima to handle functions
// To avoid dependencies, we'll just try to check if we can construct a function from given string
function reconstructFunction(code) {
    const func = new Function(`return ${code}`)();
    if (!(func instanceof Function)) {
        throw new TypeError(`Expected function but got ${typeof func}: ${code}`);
    }
    return func;
}
exports.func = new type_js_1.Type("tag:yaml.org,2002:js/function", {
    kind: "scalar",
    resolve(data) {
        if (data === null) {
            return false;
        }
        try {
            reconstructFunction(`${data}`);
            return true;
        }
        catch (_err) {
            return false;
        }
    },
    construct(data) {
        return reconstructFunction(data);
    },
    predicate(object) {
        return object instanceof Function;
    },
    represent(object) {
        return object.toString();
    },
});


/***/ }),

/***/ 2026:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.int = void 0;
const type_js_1 = __nccwpck_require__(4592);
const _utils_js_1 = __nccwpck_require__(2704);
function isHexCode(c) {
    return ((0x30 <= /* 0 */ c && c <= 0x39) /* 9 */ ||
        (0x41 <= /* A */ c && c <= 0x46) /* F */ ||
        (0x61 <= /* a */ c && c <= 0x66) /* f */);
}
function isOctCode(c) {
    return 0x30 <= /* 0 */ c && c <= 0x37 /* 7 */;
}
function isDecCode(c) {
    return 0x30 <= /* 0 */ c && c <= 0x39 /* 9 */;
}
function resolveYamlInteger(data) {
    const max = data.length;
    let index = 0;
    let hasDigits = false;
    if (!max)
        return false;
    let ch = data[index];
    // sign
    if (ch === "-" || ch === "+") {
        ch = data[++index];
    }
    if (ch === "0") {
        // 0
        if (index + 1 === max)
            return true;
        ch = data[++index];
        // base 2, base 8, base 16
        if (ch === "b") {
            // base 2
            index++;
            for (; index < max; index++) {
                ch = data[index];
                if (ch === "_")
                    continue;
                if (ch !== "0" && ch !== "1")
                    return false;
                hasDigits = true;
            }
            return hasDigits && ch !== "_";
        }
        if (ch === "x") {
            // base 16
            index++;
            for (; index < max; index++) {
                ch = data[index];
                if (ch === "_")
                    continue;
                if (!isHexCode(data.charCodeAt(index)))
                    return false;
                hasDigits = true;
            }
            return hasDigits && ch !== "_";
        }
        // base 8
        for (; index < max; index++) {
            ch = data[index];
            if (ch === "_")
                continue;
            if (!isOctCode(data.charCodeAt(index)))
                return false;
            hasDigits = true;
        }
        return hasDigits && ch !== "_";
    }
    // base 10 (except 0) or base 60
    // value should not start with `_`;
    if (ch === "_")
        return false;
    for (; index < max; index++) {
        ch = data[index];
        if (ch === "_")
            continue;
        if (ch === ":")
            break;
        if (!isDecCode(data.charCodeAt(index))) {
            return false;
        }
        hasDigits = true;
    }
    // Should have digits and should not end with `_`
    if (!hasDigits || ch === "_")
        return false;
    // if !base60 - done;
    if (ch !== ":")
        return true;
    // base60 almost not used, no needs to optimize
    return /^(:[0-5]?[0-9])+$/.test(data.slice(index));
}
function constructYamlInteger(data) {
    let value = data;
    const digits = [];
    if (value.indexOf("_") !== -1) {
        value = value.replace(/_/g, "");
    }
    let sign = 1;
    let ch = value[0];
    if (ch === "-" || ch === "+") {
        if (ch === "-")
            sign = -1;
        value = value.slice(1);
        ch = value[0];
    }
    if (value === "0")
        return 0;
    if (ch === "0") {
        if (value[1] === "b")
            return sign * parseInt(value.slice(2), 2);
        if (value[1] === "x")
            return sign * parseInt(value, 16);
        return sign * parseInt(value, 8);
    }
    if (value.indexOf(":") !== -1) {
        value.split(":").forEach((v) => {
            digits.unshift(parseInt(v, 10));
        });
        let valueInt = 0;
        let base = 1;
        digits.forEach((d) => {
            valueInt += d * base;
            base *= 60;
        });
        return sign * valueInt;
    }
    return sign * parseInt(value, 10);
}
function isInteger(object) {
    return (Object.prototype.toString.call(object) === "[object Number]" &&
        object % 1 === 0 &&
        !(0, _utils_js_1.isNegativeZero)(object));
}
exports.int = new type_js_1.Type("tag:yaml.org,2002:int", {
    construct: constructYamlInteger,
    defaultStyle: "decimal",
    kind: "scalar",
    predicate: isInteger,
    represent: {
        binary(obj) {
            return obj >= 0
                ? `0b${obj.toString(2)}`
                : `-0b${obj.toString(2).slice(1)}`;
        },
        octal(obj) {
            return obj >= 0 ? `0${obj.toString(8)}` : `-0${obj.toString(8).slice(1)}`;
        },
        decimal(obj) {
            return obj.toString(10);
        },
        hexadecimal(obj) {
            return obj >= 0
                ? `0x${obj.toString(16).toUpperCase()}`
                : `-0x${obj.toString(16).toUpperCase().slice(1)}`;
        },
    },
    resolve: resolveYamlInteger,
    styleAliases: {
        binary: [2, "bin"],
        decimal: [10, "dec"],
        hexadecimal: [16, "hex"],
        octal: [8, "oct"],
    },
});


/***/ }),

/***/ 7044:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.map = void 0;
const type_js_1 = __nccwpck_require__(4592);
exports.map = new type_js_1.Type("tag:yaml.org,2002:map", {
    construct(data) {
        return data !== null ? data : {};
    },
    kind: "mapping",
});


/***/ }),

/***/ 1033:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.merge = void 0;
const type_js_1 = __nccwpck_require__(4592);
function resolveYamlMerge(data) {
    return data === "<<" || data === null;
}
exports.merge = new type_js_1.Type("tag:yaml.org,2002:merge", {
    kind: "scalar",
    resolve: resolveYamlMerge,
});


/***/ }),

/***/ 1061:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.undefinedType = exports.timestamp = exports.str = exports.set = exports.seq = exports.regexp = exports.pairs = exports.omap = exports.nil = exports.merge = exports.map = exports.int = exports.func = exports.float = exports.bool = exports.binary = void 0;
var binary_js_1 = __nccwpck_require__(7777);
Object.defineProperty(exports, "binary", ({ enumerable: true, get: function () { return binary_js_1.binary; } }));
var bool_js_1 = __nccwpck_require__(6955);
Object.defineProperty(exports, "bool", ({ enumerable: true, get: function () { return bool_js_1.bool; } }));
var float_js_1 = __nccwpck_require__(5701);
Object.defineProperty(exports, "float", ({ enumerable: true, get: function () { return float_js_1.float; } }));
var function_js_1 = __nccwpck_require__(399);
Object.defineProperty(exports, "func", ({ enumerable: true, get: function () { return function_js_1.func; } }));
var int_js_1 = __nccwpck_require__(2026);
Object.defineProperty(exports, "int", ({ enumerable: true, get: function () { return int_js_1.int; } }));
var map_js_1 = __nccwpck_require__(7044);
Object.defineProperty(exports, "map", ({ enumerable: true, get: function () { return map_js_1.map; } }));
var merge_js_1 = __nccwpck_require__(1033);
Object.defineProperty(exports, "merge", ({ enumerable: true, get: function () { return merge_js_1.merge; } }));
var nil_js_1 = __nccwpck_require__(3092);
Object.defineProperty(exports, "nil", ({ enumerable: true, get: function () { return nil_js_1.nil; } }));
var omap_js_1 = __nccwpck_require__(1251);
Object.defineProperty(exports, "omap", ({ enumerable: true, get: function () { return omap_js_1.omap; } }));
var pairs_js_1 = __nccwpck_require__(8968);
Object.defineProperty(exports, "pairs", ({ enumerable: true, get: function () { return pairs_js_1.pairs; } }));
var regexp_js_1 = __nccwpck_require__(344);
Object.defineProperty(exports, "regexp", ({ enumerable: true, get: function () { return regexp_js_1.regexp; } }));
var seq_js_1 = __nccwpck_require__(271);
Object.defineProperty(exports, "seq", ({ enumerable: true, get: function () { return seq_js_1.seq; } }));
var set_js_1 = __nccwpck_require__(5268);
Object.defineProperty(exports, "set", ({ enumerable: true, get: function () { return set_js_1.set; } }));
var str_js_1 = __nccwpck_require__(9371);
Object.defineProperty(exports, "str", ({ enumerable: true, get: function () { return str_js_1.str; } }));
var timestamp_js_1 = __nccwpck_require__(3967);
Object.defineProperty(exports, "timestamp", ({ enumerable: true, get: function () { return timestamp_js_1.timestamp; } }));
var undefined_js_1 = __nccwpck_require__(3566);
Object.defineProperty(exports, "undefinedType", ({ enumerable: true, get: function () { return undefined_js_1.undefinedType; } }));


/***/ }),

/***/ 3092:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.nil = void 0;
const type_js_1 = __nccwpck_require__(4592);
function resolveYamlNull(data) {
    const max = data.length;
    return ((max === 1 && data === "~") ||
        (max === 4 && (data === "null" || data === "Null" || data === "NULL")));
}
function constructYamlNull() {
    return null;
}
function isNull(object) {
    return object === null;
}
exports.nil = new type_js_1.Type("tag:yaml.org,2002:null", {
    construct: constructYamlNull,
    defaultStyle: "lowercase",
    kind: "scalar",
    predicate: isNull,
    represent: {
        canonical() {
            return "~";
        },
        lowercase() {
            return "null";
        },
        uppercase() {
            return "NULL";
        },
        camelcase() {
            return "Null";
        },
    },
    resolve: resolveYamlNull,
});


/***/ }),

/***/ 1251:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.omap = void 0;
const type_js_1 = __nccwpck_require__(4592);
const { hasOwn } = Object;
const _toString = Object.prototype.toString;
function resolveYamlOmap(data) {
    const objectKeys = [];
    let pairKey = "";
    let pairHasKey = false;
    for (const pair of data) {
        pairHasKey = false;
        if (_toString.call(pair) !== "[object Object]")
            return false;
        for (pairKey in pair) {
            if (hasOwn(pair, pairKey)) {
                if (!pairHasKey)
                    pairHasKey = true;
                else
                    return false;
            }
        }
        if (!pairHasKey)
            return false;
        if (objectKeys.indexOf(pairKey) === -1)
            objectKeys.push(pairKey);
        else
            return false;
    }
    return true;
}
function constructYamlOmap(data) {
    return data !== null ? data : [];
}
exports.omap = new type_js_1.Type("tag:yaml.org,2002:omap", {
    construct: constructYamlOmap,
    kind: "sequence",
    resolve: resolveYamlOmap,
});


/***/ }),

/***/ 8968:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.pairs = void 0;
const type_js_1 = __nccwpck_require__(4592);
const _toString = Object.prototype.toString;
function resolveYamlPairs(data) {
    const result = Array.from({ length: data.length });
    for (let index = 0; index < data.length; index++) {
        const pair = data[index];
        if (_toString.call(pair) !== "[object Object]")
            return false;
        const keys = Object.keys(pair);
        if (keys.length !== 1)
            return false;
        result[index] = [keys[0], pair[keys[0]]];
    }
    return true;
}
function constructYamlPairs(data) {
    if (data === null)
        return [];
    const result = Array.from({ length: data.length });
    for (let index = 0; index < data.length; index += 1) {
        const pair = data[index];
        const keys = Object.keys(pair);
        result[index] = [keys[0], pair[keys[0]]];
    }
    return result;
}
exports.pairs = new type_js_1.Type("tag:yaml.org,2002:pairs", {
    construct: constructYamlPairs,
    kind: "sequence",
    resolve: resolveYamlPairs,
});


/***/ }),

/***/ 344:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported and adapted from js-yaml-js-types v1.0.0:
// https://github.com/nodeca/js-yaml-js-types/tree/ac537e7bbdd3c2cbbd9882ca3919c520c2dc022b
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.regexp = void 0;
const type_js_1 = __nccwpck_require__(4592);
const REGEXP = /^\/(?<regexp>[\s\S]+)\/(?<modifiers>[gismuy]*)$/;
exports.regexp = new type_js_1.Type("tag:yaml.org,2002:js/regexp", {
    kind: "scalar",
    resolve(data) {
        if ((data === null) || (!data.length)) {
            return false;
        }
        const regexp = `${data}`;
        if (regexp.charAt(0) === "/") {
            // Ensure regex is properly terminated
            if (!REGEXP.test(data)) {
                return false;
            }
            // Check no duplicate modifiers
            const modifiers = [...(regexp.match(REGEXP)?.groups?.modifiers ?? "")];
            if (new Set(modifiers).size < modifiers.length) {
                return false;
            }
        }
        return true;
    },
    construct(data) {
        const { regexp = `${data}`, modifiers = "" } = `${data}`.match(REGEXP)?.groups ?? {};
        return new RegExp(regexp, modifiers);
    },
    predicate(object) {
        return object instanceof RegExp;
    },
    represent(object) {
        return object.toString();
    },
});


/***/ }),

/***/ 271:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.seq = void 0;
const type_js_1 = __nccwpck_require__(4592);
exports.seq = new type_js_1.Type("tag:yaml.org,2002:seq", {
    construct(data) {
        return data !== null ? data : [];
    },
    kind: "sequence",
});


/***/ }),

/***/ 5268:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.set = void 0;
const type_js_1 = __nccwpck_require__(4592);
const { hasOwn } = Object;
function resolveYamlSet(data) {
    if (data === null)
        return true;
    for (const key in data) {
        if (hasOwn(data, key)) {
            if (data[key] !== null)
                return false;
        }
    }
    return true;
}
function constructYamlSet(data) {
    return data !== null ? data : {};
}
exports.set = new type_js_1.Type("tag:yaml.org,2002:set", {
    construct: constructYamlSet,
    kind: "mapping",
    resolve: resolveYamlSet,
});


/***/ }),

/***/ 9371:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.str = void 0;
const type_js_1 = __nccwpck_require__(4592);
exports.str = new type_js_1.Type("tag:yaml.org,2002:str", {
    construct(data) {
        return data !== null ? data : "";
    },
    kind: "scalar",
});


/***/ }),

/***/ 3967:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.timestamp = void 0;
const type_js_1 = __nccwpck_require__(4592);
const YAML_DATE_REGEXP = new RegExp("^([0-9][0-9][0-9][0-9])" + // [1] year
    "-([0-9][0-9])" + // [2] month
    "-([0-9][0-9])$");
const YAML_TIMESTAMP_REGEXP = new RegExp("^([0-9][0-9][0-9][0-9])" + // [1] year
    "-([0-9][0-9]?)" + // [2] month
    "-([0-9][0-9]?)" + // [3] day
    "(?:[Tt]|[ \\t]+)" + // ...
    "([0-9][0-9]?)" + // [4] hour
    ":([0-9][0-9])" + // [5] minute
    ":([0-9][0-9])" + // [6] second
    "(?:\\.([0-9]*))?" + // [7] fraction
    "(?:[ \\t]*(Z|([-+])([0-9][0-9]?)" + // [8] tz [9] tz_sign [10] tz_hour
    "(?::([0-9][0-9]))?))?$");
function resolveYamlTimestamp(data) {
    if (data === null)
        return false;
    if (YAML_DATE_REGEXP.exec(data) !== null)
        return true;
    if (YAML_TIMESTAMP_REGEXP.exec(data) !== null)
        return true;
    return false;
}
function constructYamlTimestamp(data) {
    let match = YAML_DATE_REGEXP.exec(data);
    if (match === null)
        match = YAML_TIMESTAMP_REGEXP.exec(data);
    if (match === null)
        throw new Error("Date resolve error");
    // match: [1] year [2] month [3] day
    const year = +match[1];
    const month = +match[2] - 1; // JS month starts with 0
    const day = +match[3];
    if (!match[4]) {
        // no hour
        return new Date(Date.UTC(year, month, day));
    }
    // match: [4] hour [5] minute [6] second [7] fraction
    const hour = +match[4];
    const minute = +match[5];
    const second = +match[6];
    let fraction = 0;
    if (match[7]) {
        let partFraction = match[7].slice(0, 3);
        while (partFraction.length < 3) {
            // milli-seconds
            partFraction += "0";
        }
        fraction = +partFraction;
    }
    // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute
    let delta = null;
    if (match[9]) {
        const tzHour = +match[10];
        const tzMinute = +(match[11] || 0);
        delta = (tzHour * 60 + tzMinute) * 60000; // delta in milli-seconds
        if (match[9] === "-")
            delta = -delta;
    }
    const date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));
    if (delta)
        date.setTime(date.getTime() - delta);
    return date;
}
function representYamlTimestamp(date) {
    return date.toISOString();
}
exports.timestamp = new type_js_1.Type("tag:yaml.org,2002:timestamp", {
    construct: constructYamlTimestamp,
    instanceOf: Date,
    kind: "scalar",
    represent: representYamlTimestamp,
    resolve: resolveYamlTimestamp,
});


/***/ }),

/***/ 3566:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported and adapted from js-yaml-js-types v1.0.0:
// https://github.com/nodeca/js-yaml-js-types/tree/ac537e7bbdd3c2cbbd9882ca3919c520c2dc022b
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.undefinedType = void 0;
const type_js_1 = __nccwpck_require__(4592);
exports.undefinedType = new type_js_1.Type("tag:yaml.org,2002:js/undefined", {
    kind: "scalar",
    resolve() {
        return true;
    },
    construct() {
        return undefined;
    },
    predicate(object) {
        return typeof object === "undefined";
    },
    represent() {
        return "";
    },
});


/***/ }),

/***/ 2704:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isNegativeZero = exports.repeat = exports.toArray = exports.isRegExp = exports.isFunction = exports.isError = exports.isObject = exports.isUndefined = exports.isSymbol = exports.isString = exports.isNumber = exports.isNull = exports.isBoolean = exports.isArray = exports.isNothing = void 0;
function isNothing(subject) {
    return typeof subject === "undefined" || subject === null;
}
exports.isNothing = isNothing;
function isArray(value) {
    return Array.isArray(value);
}
exports.isArray = isArray;
function isBoolean(value) {
    return typeof value === "boolean" || value instanceof Boolean;
}
exports.isBoolean = isBoolean;
function isNull(value) {
    return value === null;
}
exports.isNull = isNull;
function isNumber(value) {
    return typeof value === "number" || value instanceof Number;
}
exports.isNumber = isNumber;
function isString(value) {
    return typeof value === "string" || value instanceof String;
}
exports.isString = isString;
function isSymbol(value) {
    return typeof value === "symbol";
}
exports.isSymbol = isSymbol;
function isUndefined(value) {
    return value === undefined;
}
exports.isUndefined = isUndefined;
function isObject(value) {
    return value !== null && typeof value === "object";
}
exports.isObject = isObject;
function isError(e) {
    return e instanceof Error;
}
exports.isError = isError;
function isFunction(value) {
    return typeof value === "function";
}
exports.isFunction = isFunction;
function isRegExp(value) {
    return value instanceof RegExp;
}
exports.isRegExp = isRegExp;
function toArray(sequence) {
    if (isArray(sequence))
        return sequence;
    if (isNothing(sequence))
        return [];
    return [sequence];
}
exports.toArray = toArray;
function repeat(str, count) {
    let result = "";
    for (let cycle = 0; cycle < count; cycle++) {
        result += str;
    }
    return result;
}
exports.repeat = repeat;
function isNegativeZero(i) {
    return i === 0 && Number.NEGATIVE_INFINITY === 1 / i;
}
exports.isNegativeZero = isNegativeZero;


/***/ }),

/***/ 2636:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.parseAll = exports.parse = void 0;
const loader_js_1 = __nccwpck_require__(1232);
/**
 * Parses `content` as single YAML document.
 *
 * Returns a JavaScript object or throws `YAMLError` on error.
 * By default, does not support regexps, functions and undefined. This method is safe for untrusted data.
 */
function parse(content, options) {
    return (0, loader_js_1.load)(content, options);
}
exports.parse = parse;
function parseAll(content, iterator, options) {
    return (0, loader_js_1.loadAll)(content, iterator, options);
}
exports.parseAll = parseAll;


/***/ }),

/***/ 3322:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Schema = void 0;
const _error_js_1 = __nccwpck_require__(5355);
function compileList(schema, name, result) {
    const exclude = [];
    for (const includedSchema of schema.include) {
        result = compileList(includedSchema, name, result);
    }
    for (const currentType of schema[name]) {
        for (let previousIndex = 0; previousIndex < result.length; previousIndex++) {
            const previousType = result[previousIndex];
            if (previousType.tag === currentType.tag &&
                previousType.kind === currentType.kind) {
                exclude.push(previousIndex);
            }
        }
        result.push(currentType);
    }
    return result.filter((_type, index) => !exclude.includes(index));
}
function compileMap(...typesList) {
    const result = {
        fallback: {},
        mapping: {},
        scalar: {},
        sequence: {},
    };
    for (const types of typesList) {
        for (const type of types) {
            if (type.kind !== null) {
                result[type.kind][type.tag] = result["fallback"][type.tag] = type;
            }
        }
    }
    return result;
}
class Schema {
    constructor(definition) {
        Object.defineProperty(this, "implicit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "explicit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "include", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "compiledImplicit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "compiledExplicit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "compiledTypeMap", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.explicit = definition.explicit || [];
        this.implicit = definition.implicit || [];
        this.include = definition.include || [];
        for (const type of this.implicit) {
            if (type.loadKind && type.loadKind !== "scalar") {
                throw new _error_js_1.YAMLError("There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.");
            }
        }
        this.compiledImplicit = compileList(this, "implicit", []);
        this.compiledExplicit = compileList(this, "explicit", []);
        this.compiledTypeMap = compileMap(this.compiledImplicit, this.compiledExplicit);
    }
    /* Returns a new extended schema from current schema */
    extend(definition) {
        return new Schema({
            implicit: [
                ...new Set([...this.implicit, ...(definition?.implicit ?? [])]),
            ],
            explicit: [
                ...new Set([...this.explicit, ...(definition?.explicit ?? [])]),
            ],
            include: [...new Set([...this.include, ...(definition?.include ?? [])])],
        });
    }
    static create() { }
}
exports.Schema = Schema;


/***/ }),

/***/ 5098:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.core = void 0;
const schema_js_1 = __nccwpck_require__(3322);
const json_js_1 = __nccwpck_require__(9352);
// Standard YAML's Core schema.
// http://www.yaml.org/spec/1.2/spec.html#id2804923
exports.core = new schema_js_1.Schema({
    include: [json_js_1.json],
});


/***/ }),

/***/ 7796:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.def = void 0;
const schema_js_1 = __nccwpck_require__(3322);
const mod_js_1 = __nccwpck_require__(1061);
const core_js_1 = __nccwpck_require__(5098);
// JS-YAML's default schema for `safeLoad` function.
// It is not described in the YAML specification.
exports.def = new schema_js_1.Schema({
    explicit: [mod_js_1.binary, mod_js_1.omap, mod_js_1.pairs, mod_js_1.set],
    implicit: [mod_js_1.timestamp, mod_js_1.merge],
    include: [core_js_1.core],
});


/***/ }),

/***/ 136:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.extended = void 0;
const schema_js_1 = __nccwpck_require__(3322);
const mod_js_1 = __nccwpck_require__(1061);
const default_js_1 = __nccwpck_require__(7796);
/***
 * Extends JS-YAML default schema with additional JavaScript types
 * It is not described in the YAML specification.
 * Functions are no longer supported for security reasons.
 *
 * @example
 * ```ts
 * import {
 *   EXTENDED_SCHEMA,
 *   parse,
 * } from "https://deno.land/std@$STD_VERSION/yaml/mod.ts";
 *
 * const data = parse(
 *   `
 *   regexp:
 *     simple: !!js/regexp foobar
 *     modifiers: !!js/regexp /foobar/mi
 *   undefined: !!js/undefined ~
 * # Disabled, see: https://github.com/denoland/deno_std/pull/1275
 * #  function: !!js/function >
 * #    function foobar() {
 * #      return 'hello world!';
 * #    }
 * `,
 *   { schema: EXTENDED_SCHEMA },
 * );
 * ```
 */
exports.extended = new schema_js_1.Schema({
    explicit: [mod_js_1.regexp, mod_js_1.undefinedType],
    include: [default_js_1.def],
});


/***/ }),

/***/ 7051:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.failsafe = void 0;
const schema_js_1 = __nccwpck_require__(3322);
const mod_js_1 = __nccwpck_require__(1061);
// Standard YAML's Failsafe schema.
// http://www.yaml.org/spec/1.2/spec.html#id2802346
exports.failsafe = new schema_js_1.Schema({
    explicit: [mod_js_1.str, mod_js_1.seq, mod_js_1.map],
});


/***/ }),

/***/ 9352:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.json = void 0;
const schema_js_1 = __nccwpck_require__(3322);
const mod_js_1 = __nccwpck_require__(1061);
const failsafe_js_1 = __nccwpck_require__(7051);
// Standard YAML's JSON schema.
// http://www.yaml.org/spec/1.2/spec.html#id2803231
exports.json = new schema_js_1.Schema({
    implicit: [mod_js_1.nil, mod_js_1.bool, mod_js_1.int, mod_js_1.float],
    include: [failsafe_js_1.failsafe],
});


/***/ }),

/***/ 5712:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.JSON_SCHEMA = exports.FAILSAFE_SCHEMA = exports.EXTENDED_SCHEMA = exports.DEFAULT_SCHEMA = exports.CORE_SCHEMA = void 0;
var core_js_1 = __nccwpck_require__(5098);
Object.defineProperty(exports, "CORE_SCHEMA", ({ enumerable: true, get: function () { return core_js_1.core; } }));
var default_js_1 = __nccwpck_require__(7796);
Object.defineProperty(exports, "DEFAULT_SCHEMA", ({ enumerable: true, get: function () { return default_js_1.def; } }));
var extended_js_1 = __nccwpck_require__(136);
Object.defineProperty(exports, "EXTENDED_SCHEMA", ({ enumerable: true, get: function () { return extended_js_1.extended; } }));
var failsafe_js_1 = __nccwpck_require__(7051);
Object.defineProperty(exports, "FAILSAFE_SCHEMA", ({ enumerable: true, get: function () { return failsafe_js_1.failsafe; } }));
var json_js_1 = __nccwpck_require__(9352);
Object.defineProperty(exports, "JSON_SCHEMA", ({ enumerable: true, get: function () { return json_js_1.json; } }));


/***/ }),

/***/ 4592:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// Ported from js-yaml v3.13.1:
// https://github.com/nodeca/js-yaml/commit/665aadda42349dcae869f12040d9b10ef18d12da
// Copyright 2011-2015 by Vitaly Puzrin. All rights reserved. MIT license.
// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Type = void 0;
function checkTagFormat(tag) {
    return tag;
}
class Type {
    constructor(tag, options) {
        Object.defineProperty(this, "tag", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "kind", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: null
        });
        Object.defineProperty(this, "instanceOf", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "predicate", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "represent", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "defaultStyle", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "styleAliases", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "loadKind", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "resolve", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: () => true
        });
        Object.defineProperty(this, "construct", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: (data) => data
        });
        this.tag = checkTagFormat(tag);
        if (options) {
            this.kind = options.kind;
            this.resolve = options.resolve || (() => true);
            this.construct = options.construct || ((data) => data);
            this.instanceOf = options.instanceOf;
            this.predicate = options.predicate;
            this.represent = options.represent;
            this.defaultStyle = options.defaultStyle;
            this.styleAliases = options.styleAliases;
        }
    }
}
exports.Type = Type;


/***/ }),

/***/ 7995:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SemVer = exports.Path = exports.DownloadError = exports.InstallationNotFoundError = exports.PackageNotFoundError = exports.PantryNotFoundError = exports.PantryParseError = exports.PantryError = exports.ResolveError = exports.RunError = exports.PkgxError = exports.semver = exports.porcelain = exports.plumbing = exports.hooks = exports.utils = exports.types = void 0;
__nccwpck_require__(5190);
__nccwpck_require__(4174);
const misc_js_1 = __nccwpck_require__(4174);
const host_js_1 = __importDefault(__nccwpck_require__(5754));
const semver_js_1 = __importStar(__nccwpck_require__(8689)), semver = semver_js_1;
exports.SemVer = semver_js_1.default;
exports.semver = semver;
const Path_js_1 = __importDefault(__nccwpck_require__(6768));
exports.Path = Path_js_1.default;
exports.types = __importStar(__nccwpck_require__(6351));
const pkg = __importStar(__nccwpck_require__(7555));
const error_js_1 = __nccwpck_require__(3336);
Object.defineProperty(exports, "PkgxError", ({ enumerable: true, get: function () { return error_js_1.PkgxError; } }));
const useConfig_js_1 = __importDefault(__nccwpck_require__(3189));
const useOffLicense_js_1 = __importDefault(__nccwpck_require__(3101));
const useCache_js_1 = __importDefault(__nccwpck_require__(6671));
const useCellar_js_1 = __importStar(__nccwpck_require__(6532));
Object.defineProperty(exports, "InstallationNotFoundError", ({ enumerable: true, get: function () { return useCellar_js_1.InstallationNotFoundError; } }));
const useMoustaches_js_1 = __importDefault(__nccwpck_require__(2540));
const usePantry_js_1 = __importStar(__nccwpck_require__(6169));
Object.defineProperty(exports, "PantryError", ({ enumerable: true, get: function () { return usePantry_js_1.PantryError; } }));
Object.defineProperty(exports, "PantryParseError", ({ enumerable: true, get: function () { return usePantry_js_1.PantryParseError; } }));
Object.defineProperty(exports, "PantryNotFoundError", ({ enumerable: true, get: function () { return usePantry_js_1.PantryNotFoundError; } }));
Object.defineProperty(exports, "PackageNotFoundError", ({ enumerable: true, get: function () { return usePantry_js_1.PackageNotFoundError; } }));
const useFetch_js_1 = __importDefault(__nccwpck_require__(6733));
const useDownload_js_1 = __importStar(__nccwpck_require__(9797));
Object.defineProperty(exports, "DownloadError", ({ enumerable: true, get: function () { return useDownload_js_1.DownloadError; } }));
const useShellEnv_js_1 = __importDefault(__nccwpck_require__(8667));
const useInventory_js_1 = __importDefault(__nccwpck_require__(4204));
const hydrate_js_1 = __importDefault(__nccwpck_require__(6922));
const which_js_1 = __importDefault(__nccwpck_require__(7524));
const link_js_1 = __importDefault(__nccwpck_require__(3595));
const install_js_1 = __importStar(__nccwpck_require__(2754));
const resolve_js_1 = __importStar(__nccwpck_require__(5857));
Object.defineProperty(exports, "ResolveError", ({ enumerable: true, get: function () { return resolve_js_1.ResolveError; } }));
const useSync_js_1 = __importDefault(__nccwpck_require__(2859));
const run_js_1 = __importStar(__nccwpck_require__(7272));
Object.defineProperty(exports, "RunError", ({ enumerable: true, get: function () { return run_js_1.RunError; } }));
const install_js_2 = __importDefault(__nccwpck_require__(2346));
const utils = {
    pkg, host: host_js_1.default, flatmap: misc_js_1.flatmap, validate: misc_js_1.validate, panic: error_js_1.panic, ConsoleLogger: install_js_1.ConsoleLogger
};
exports.utils = utils;
const hooks = {
    useCache: useCache_js_1.default,
    useCellar: useCellar_js_1.default,
    useConfig: useConfig_js_1.default,
    useDownload: useDownload_js_1.default,
    useFetch: useFetch_js_1.default,
    useInventory: useInventory_js_1.default,
    useMoustaches: useMoustaches_js_1.default,
    useOffLicense: useOffLicense_js_1.default,
    usePantry: usePantry_js_1.default,
    useShellEnv: useShellEnv_js_1.default,
    useSync: useSync_js_1.default,
};
exports.hooks = hooks;
const plumbing = {
    hydrate: hydrate_js_1.default,
    link: link_js_1.default,
    install: install_js_1.default,
    resolve: resolve_js_1.default,
    which: which_js_1.default
};
exports.plumbing = plumbing;
const porcelain = {
    install: install_js_2.default,
    run: run_js_1.default
};
exports.porcelain = porcelain;
__exportStar(__nccwpck_require__(6351), exports);


/***/ }),

/***/ 5356:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.deno = exports.outdent = exports.is_what = void 0;
const is_what = __importStar(__nccwpck_require__(317));
exports.is_what = is_what;
const outdent = __importStar(__nccwpck_require__(2321));
exports.outdent = outdent;
// importing super specifically to reduce final npm bundle size
const crypto = __importStar(__nccwpck_require__(6499));
const move_js_1 = __nccwpck_require__(6141);
const read_lines_js_1 = __nccwpck_require__(9619);
const write_all_js_1 = __nccwpck_require__(7437);
const parse_js_1 = __nccwpck_require__(2636);
const mod_js_1 = __nccwpck_require__(960);
const from_file_url_js_1 = __nccwpck_require__(1704);
const streams = { writeAll: write_all_js_1.writeAll };
const io = { readLines: read_lines_js_1.readLines };
const fs = { moveSync: move_js_1.moveSync };
const deno = { readLines: read_lines_js_1.readLines, crypto, fs, io, streams, parseYaml: parse_js_1.parse, SEP: mod_js_1.SEP, fromFileUrl: from_file_url_js_1.fromFileUrl };
exports.deno = deno;


/***/ }),

/***/ 6671:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const useConfig_js_1 = __importDefault(__nccwpck_require__(3189));
const host_js_1 = __importDefault(__nccwpck_require__(5754));
function useCache() {
    return { path };
}
exports["default"] = useCache;
const path = (stowage) => {
    const { pkg, type } = stowage;
    const stem = pkg.project.replaceAll("/", "∕");
    let filename = `${stem}-${pkg.version}`;
    if (type == 'bottle') {
        const { platform, arch } = stowage.host ?? (0, host_js_1.default)();
        filename += `+${platform}+${arch}.tar.${stowage.compression}`;
    }
    else {
        filename += stowage.extname;
    }
    return (0, useConfig_js_1.default)().cache.join(filename);
};


/***/ }),

/***/ 6532:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.InstallationNotFoundError = void 0;
const error_js_1 = __nccwpck_require__(3336);
const pkgutils = __importStar(__nccwpck_require__(7555));
const semver_js_1 = __importDefault(__nccwpck_require__(8689));
const useConfig_js_1 = __importDefault(__nccwpck_require__(3189));
const Path_js_1 = __importDefault(__nccwpck_require__(6768));
class InstallationNotFoundError extends error_js_1.PkgxError {
    constructor(pkg) {
        super(`not found: ${pkgutils.str(pkg)}`);
        Object.defineProperty(this, "pkg", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.pkg = pkg;
    }
}
exports.InstallationNotFoundError = InstallationNotFoundError;
function useCellar() {
    const config = (0, useConfig_js_1.default)();
    /// eg. ~/.pkgx/deno.land
    const shelf = (project) => config.prefix.join(project);
    /// eg. ~/.pkgx/deno.land/v1.2.3
    const keg = (pkg) => shelf(pkg.project).join(`v${pkg.version}`);
    /// returns the `Installation` if the pkg is installed
    const has = (pkg) => resolve(pkg).swallow(InstallationNotFoundError);
    return {
        has,
        ls,
        keg,
        resolve,
        shelf,
    };
    /// returns a project’s installations (sorted by version)
    async function ls(project) {
        const d = shelf(project);
        if (!d.isDirectory())
            return [];
        const rv = [];
        for await (const [path, { name, isDirectory }] of d.ls()) {
            try {
                if (!isDirectory)
                    continue;
                if (!name.startsWith("v") || name == 'var')
                    continue;
                const version = new semver_js_1.default(name);
                if (await vacant(path))
                    continue; // failed build probs
                rv.push({ path, pkg: { project, version } });
            }
            catch {
                //noop: other directories can exist
            }
        }
        return rv.sort((a, b) => pkgutils.compare(a.pkg, b.pkg));
    }
    /// if package is installed, returns its installation
    async function resolve(pkg) {
        const installation = await (async () => {
            if ("pkg" in pkg) {
                return pkg;
            }
            // ^^ is `Installation`
            const { prefix } = config;
            if (pkg instanceof Path_js_1.default) {
                const path = pkg;
                const version = new semver_js_1.default(path.basename());
                const project = path.parent().relative({ to: prefix });
                return {
                    path, pkg: { project, version }
                };
            }
            else if ("version" in pkg) {
                const path = keg(pkg);
                return { path, pkg };
            }
            else {
                const installations = await ls(pkg.project);
                const versions = installations.map(({ pkg: { version } }) => version);
                const version = pkg.constraint.max(versions);
                if (version) {
                    const path = installations.find(({ pkg: { version: v } }) => v.eq(version)).path;
                    return { path, pkg: { project: pkg.project, version } };
                }
                else {
                    throw new InstallationNotFoundError(pkg);
                }
            }
        })();
        if (await vacant(installation.path)) {
            throw new InstallationNotFoundError(installation.pkg);
        }
        return installation;
    }
}
exports["default"] = useCellar;
/// if we ignore transient files, is there a package here?
async function vacant(path) {
    if (!path.isDirectory()) {
        return true;
    }
    else
        for await (const _ of path.ls()) {
            return false;
        }
    return true;
}


/***/ }),

/***/ 3189:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports._internals = exports.ConfigDefault = void 0;
const dntShim = __importStar(__nccwpck_require__(3072));
const misc_js_1 = __nccwpck_require__(4174);
const deps_js_1 = __nccwpck_require__(5356);
const host_js_1 = __importDefault(__nccwpck_require__(5754));
const Path_js_1 = __importDefault(__nccwpck_require__(6768));
function platform_cache_default() {
    if ((0, host_js_1.default)().platform == 'darwin') {
        return Path_js_1.default.home().join('Library/Caches');
    }
    else {
        return Path_js_1.default.home().join('.cache');
    }
}
const SEP = dntShim.Deno.build.os == 'windows' ? ';' : ':';
function ConfigDefault(env = dntShim.Deno.env.toObject()) {
    const prefix = (0, misc_js_1.flatmap)(env['PKGX_DIR']?.trim(), x => new Path_js_1.default(x)) ?? Path_js_1.default.home().join('.pkgx');
    const pantries = env['PKGX_PANTRY_PATH']?.split(SEP).compact(x => (0, misc_js_1.flatmap)(x.trim(), x => Path_js_1.default.abs(x) ?? Path_js_1.default.cwd().join(x))) ?? [];
    const cache = ((0, misc_js_1.flatmap)(env["XDG_CACHE_HOME"], x => new Path_js_1.default(x)) ?? platform_cache_default()).join("pkgx");
    const isCI = boolize(env['CI']) ?? false;
    const UserAgent = (0, misc_js_1.flatmap)(getv(), v => `libpkgx/${v}`) ?? 'libpkgx';
    const data = (() => {
        const xdg = env["XDG_DATA_HOME"];
        if (xdg) {
            return new Path_js_1.default(xdg);
        }
        else if ((0, host_js_1.default)().platform == "darwin") {
            return Path_js_1.default.home().join("Library/Application Support");
        }
        else {
            return Path_js_1.default.home().join(".local/share");
        }
    })().join("pkgx");
    //TODO prefer 'xz' on Linux (as well) if supported
    const compression = !isCI && (0, host_js_1.default)().platform == 'darwin' ? 'xz' : 'gz';
    return {
        prefix,
        pantries,
        cache,
        data,
        UserAgent,
        options: {
            compression,
        },
        git: git(prefix, env.PATH)
    };
}
exports.ConfigDefault = ConfigDefault;
function getv() {
    if (typeof dntShim.Deno === 'undefined') {
        const path = new Path_js_1.default(deps_js_1.deno.fromFileUrl((__nccwpck_require__(7310).pathToFileURL)(__filename).href)).parent().parent().parent().join("package.json");
        const blob = dntShim.Deno.readFileSync(path.string);
        const txt = new TextDecoder().decode(blob);
        const { version } = JSON.parse(txt);
        return typeof version == 'string' ? version : undefined;
    }
}
const gt = dntShim.dntGlobalThis;
function useConfig(input) {
    // storing on globalThis so our config is shared across
    // potentially multiple versions of libpkgx being loaded in the same process
    if (!gt.sh_pkgx_config || input) {
        gt.sh_pkgx_config = input ?? ConfigDefault();
    }
    return { ...gt.sh_pkgx_config }; // copy to prevent mutation
}
exports["default"] = useConfig;
function boolize(input) {
    switch (input?.trim()?.toLowerCase()) {
        case '0':
        case 'false':
        case 'no':
            return false;
        case '1':
        case 'true':
        case 'yes':
            return true;
    }
}
function initialized() {
    return gt.sh_pkgx_config !== undefined;
}
exports._internals = { initialized, boolize };
/// we support a pkgx installed or system installed git, nothing else
/// eg. `git` could be a symlink in `PATH` to pkgx, which would cause a fork bomb
/// on darwin if xcode or xcode/clt is not installed this will fail to our http fallback above
//TODO be able to use our own git if installed
//NOTE however we don’t want to have to fully hydrate its env when libpkgx is initialized only when needed so…
function git(_prefix, PATH) {
    return usr();
    function usr() {
        // only return /usr/bin if in the PATH so user can explicitly override this
        const rv = PATH?.split(":")?.includes("/usr/bin") ? new Path_js_1.default("/usr") : undefined;
        /// don’t cause macOS to abort and then prompt the user to install the XcodeCLT
        //FIXME test! but this is hard to test without docker images or something!
        if ((0, host_js_1.default)().platform == 'darwin') {
            if (new Path_js_1.default("/Library/Developer/CommandLineTools/usr/bin/git").isExecutableFile())
                return rv;
            if (new Path_js_1.default("/Applications/Xcode.app").isDirectory())
                return rv;
            return; // don’t use `git`
        }
        return rv?.join("bin/git");
    }
}


/***/ }),

/***/ 9797:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DownloadError = void 0;
const dntShim = __importStar(__nccwpck_require__(3072));
const deps_js_1 = __nccwpck_require__(5356);
const { crypto: crypto_, streams: { writeAll } } = deps_js_1.deno;
const { toHashString, crypto } = crypto_;
const error_js_1 = __nccwpck_require__(3336);
const useConfig_js_1 = __importDefault(__nccwpck_require__(3189));
const useFetch_js_1 = __importDefault(__nccwpck_require__(6733));
const Path_js_1 = __importDefault(__nccwpck_require__(6768));
const fs = __importStar(__nccwpck_require__(7147));
__nccwpck_require__(4174);
class DownloadError extends error_js_1.PkgxError {
    constructor(status, opts) {
        super(`http: ${status}: ${opts.src}`);
        Object.defineProperty(this, "status", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "src", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "headers", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.name = 'DownloadError';
        this.status = status;
        this.src = opts.src;
        this.headers = opts.headers;
    }
}
exports.DownloadError = DownloadError;
const tmpname = (dst) => dst.parent().join(dst.basename() + ".incomplete");
async function download(opts, chunk) {
    const [dst, stream] = await the_meat(opts);
    if (stream || chunk) {
        const reader = stream ?? fs.createReadStream(dst.string);
        const writer = await (() => {
            if (stream) {
                dst.parent().mkdir('p');
                return dntShim.Deno.open(tmpname(dst).string, { write: true, create: true, truncate: true });
            }
        })();
        for await (const blob of reader) {
            const pp = [];
            if (writer)
                pp.push(writeAll(writer, blob));
            if (chunk)
                pp.push(chunk(blob));
            await Promise.all(pp);
        }
        if (reader instanceof fs.ReadStream) {
            reader.close();
        }
        if (writer) {
            writer.close();
            tmpname(dst).mv({ to: dst, force: true });
        }
    }
    return dst;
}
function cache({ for: url }) {
    return (0, useConfig_js_1.default)().cache
        .join(url.protocol.slice(0, -1))
        .join(url.hostname)
        .join(hash())
        .mkdir('p');
    function hash() {
        let key = url.pathname;
        if (url.search)
            key += `?${url.search}`;
        const blob = new TextEncoder().encode(key);
        const hash = crypto.subtle.digestSync("SHA-256", blob);
        return toHashString(hash);
    }
}
function useDownload() {
    return {
        download,
        cache
    };
}
exports["default"] = useDownload;
/// internal
async function the_meat({ src, logger, headers, dst }) {
    const hash = cache({ for: src });
    const mtime_entry = hash.join("mtime");
    const etag_entry = hash.join("etag");
    dst ??= hash.join(new Path_js_1.default(src.pathname).basename());
    if (logger)
        logger({ src, dst });
    if (dst.isReadableFile()) {
        headers ??= {};
        if (etag_entry.isFile()) {
            headers["If-None-Match"] = await etag_entry.read();
        }
        // sending both if we have them is ChatGPT recommended
        // also this fixes getting the mysql.com sources, otherwise it redownloads 400MB every time!
        if (mtime_entry.isFile()) {
            headers["If-Modified-Since"] = await mtime_entry.read();
        }
    }
    const rsp = await (0, useFetch_js_1.default)(src, { headers });
    switch (rsp.status) {
        case 200: {
            const sz = parseInt(rsp.headers.get("Content-Length")).chuzzle();
            if (logger)
                logger({ src, dst, total: sz });
            const reader = rsp.body ?? (0, error_js_1.panic)();
            const text = rsp.headers.get("Last-Modified");
            if (text)
                mtime_entry.write({ text, force: true });
            const etag = rsp.headers.get("ETag");
            if (etag)
                etag_entry.write({ text: etag, force: true });
            if (!logger) {
                return [dst, reader, sz];
            }
            else {
                let n = 0;
                return [dst, reader.pipeThrough(new dntShim.TransformStream({
                        transform: (buf, controller) => {
                            n += buf.length;
                            logger({ src, dst: dst, rcvd: n, total: sz });
                            controller.enqueue(buf);
                        }
                    })), sz];
            }
        }
        case 304: {
            const sz = (await dntShim.Deno.stat(dst.string)).size;
            if (logger)
                logger({ src, dst, rcvd: sz, total: sz });
            return [dst, undefined, sz];
        }
        default:
            throw new DownloadError(rsp.status, { src, headers });
    }
}


/***/ }),

/***/ 6733:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports._internals = void 0;
const dntShim = __importStar(__nccwpck_require__(3072));
const useConfig_js_1 = __importDefault(__nccwpck_require__(3189));
// useFetch wraps the native Deno fetch api and inserts a User-Agent header
function useFetch(input, init) {
    const { UserAgent } = (0, useConfig_js_1.default)();
    const requestInit = init ?? {};
    if (UserAgent) {
        requestInit.headers = { ...requestInit.headers, "User-Agent": UserAgent };
    }
    return exports._internals.fetch(input, requestInit);
}
exports["default"] = useFetch;
// wrapped or DNT chokes on typechecking
function chew(input, init) {
    return dntShim.fetch(input, init);
}
exports._internals = {
    fetch: chew
};


/***/ }),

/***/ 4204:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports._internals = void 0;
const useDownload_js_1 = __nccwpck_require__(9797);
const semver_js_1 = __importDefault(__nccwpck_require__(8689));
const useFetch_js_1 = __importDefault(__nccwpck_require__(6733));
const host_js_1 = __importDefault(__nccwpck_require__(5754));
__nccwpck_require__(4174);
const select = async (rq) => {
    const versions = await exports._internals.get(rq);
    if ("constraint" in rq) {
        return rq.constraint.max(versions);
    }
    else if (versions.find(x => x.eq(rq.version))) {
        return rq.version;
    }
};
const get = async (rq) => {
    const { platform, arch } = (0, host_js_1.default)();
    const url = new URL(`https://dist.pkgx.dev/${rq.project}/${platform}/${arch}/versions.txt`);
    const rsp = await (0, useFetch_js_1.default)(url);
    if (!rsp.ok) {
        throw new useDownload_js_1.DownloadError(rsp.status, { src: url });
    }
    const releases = await rsp.text();
    let versions = releases ? releases.split("\n").compact(x => new semver_js_1.default(x)) : [];
    if (versions.length < 1)
        throw new Error(`No versions for ${rq.project}`);
    if (rq.project == 'openssl.org') {
        // workaround our previous sins
        const v = new semver_js_1.default("1.1.118");
        versions = versions.filter(x => x.neq(v));
    }
    return versions;
};
function useInventory() {
    return { select, get };
}
exports["default"] = useInventory;
exports._internals = { get };


/***/ }),

/***/ 2540:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const useConfig_js_1 = __importDefault(__nccwpck_require__(3189));
const useCellar_js_1 = __importDefault(__nccwpck_require__(6532));
const host_js_1 = __importDefault(__nccwpck_require__(5754));
const os = __importStar(__nccwpck_require__(2037));
function tokenizePackage(pkg) {
    return [{ from: "prefix", to: (0, useCellar_js_1.default)().keg(pkg).string }];
}
function tokenizeVersion(version, prefix = 'version') {
    const rv = [
        { from: prefix, to: `${version}` },
        { from: `${prefix}.major`, to: `${version.major}` },
        { from: `${prefix}.minor`, to: `${version.minor}` },
        { from: `${prefix}.patch`, to: `${version.patch}` },
        { from: `${prefix}.marketing`, to: `${version.major}.${version.minor}` },
        { from: `${prefix}.build`, to: version.build.join('+') },
        { from: `${prefix}.raw`, to: version.raw },
    ];
    if ('tag' in version) {
        rv.push({ from: `${prefix}.tag`, to: version.tag });
    }
    return rv;
}
//TODO replace `hw` with `host`
function tokenizeHost() {
    const { arch, target, platform } = (0, host_js_1.default)();
    return [
        { from: "hw.arch", to: arch },
        { from: "hw.target", to: target },
        { from: "hw.platform", to: platform },
        { from: "hw.concurrency", to: os.cpus().length.toString() }
    ];
}
function apply(input, map) {
    return map.reduce((acc, { from, to }) => acc.replace(new RegExp(`(^\\$)?{{\\s*${from}\\s*}}`, "g"), to), input);
}
function default_1() {
    const config = (0, useConfig_js_1.default)();
    const base = {
        apply,
        tokenize: {
            version: tokenizeVersion,
            host: tokenizeHost,
            pkg: tokenizePackage
        }
    };
    const deps = (deps) => {
        const map = [];
        for (const dep of deps ?? []) {
            map.push({ from: `deps.${dep.pkg.project}.prefix`, to: dep.path.string });
            map.push(...base.tokenize.version(dep.pkg.version, `deps.${dep.pkg.project}.version`));
        }
        return map;
    };
    const pkgx = () => [{ from: "pkgx.prefix", to: config.prefix.string }];
    const all = (pkg, deps_) => [
        ...deps(deps_),
        ...tokenizePackage(pkg),
        ...pkgx(),
        ...base.tokenize.version(pkg.version),
        ...base.tokenize.host(),
    ];
    return {
        apply: base.apply,
        tokenize: {
            ...base.tokenize,
            deps, pkgx, all
        }
    };
}
exports["default"] = default_1;


/***/ }),

/***/ 3101:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const host_js_1 = __importDefault(__nccwpck_require__(5754));
function useOffLicense(_type) {
    return { url, key };
}
exports["default"] = useOffLicense;
function key(stowage) {
    const rv = [stowage.pkg.project];
    if (stowage.type == 'bottle') {
        const { platform, arch } = stowage.host ?? (0, host_js_1.default)();
        rv.push(`${platform}/${arch}`);
    }
    let fn = `v${stowage.pkg.version}`;
    if (stowage.type == 'bottle') {
        fn += `.tar.${stowage.compression}`;
    }
    else {
        fn += stowage.extname;
    }
    rv.push(fn);
    return rv.join("/");
}
function url(stowage) {
    return new URL(`https://dist.pkgx.dev/${key(stowage)}`);
}


/***/ }),

/***/ 6169:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.expand_env_obj = exports.validatePackageRequirement = exports.parse_pkgs_node = exports.PantryNotFoundError = exports.PackageNotFoundError = exports.PantryParseError = exports.PantryError = void 0;
const dntShim = __importStar(__nccwpck_require__(3072));
const deps_js_1 = __nccwpck_require__(5356);
const { isNumber, isPlainObject, isString, isArray, isPrimitive, isBoolean } = deps_js_1.is_what;
const semver = __importStar(__nccwpck_require__(8689));
const useMoustaches_js_1 = __importDefault(__nccwpck_require__(2540));
const error_js_1 = __nccwpck_require__(3336);
const misc_js_1 = __nccwpck_require__(4174);
const useConfig_js_1 = __importDefault(__nccwpck_require__(3189));
const host_js_1 = __importDefault(__nccwpck_require__(5754));
const Path_js_1 = __importDefault(__nccwpck_require__(6768));
class PantryError extends error_js_1.PkgxError {
}
exports.PantryError = PantryError;
class PantryParseError extends PantryError {
    constructor(project, path, cause) {
        super(`package.yml parse error: ${path ?? project}`);
        Object.defineProperty(this, "project", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "path", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.project = project;
        this.path = path;
        this.cause = cause;
    }
}
exports.PantryParseError = PantryParseError;
class PackageNotFoundError extends PantryError {
    constructor(project) {
        super(`pkg not found: ${project}`);
        Object.defineProperty(this, "project", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.project = project;
    }
}
exports.PackageNotFoundError = PackageNotFoundError;
class PantryNotFoundError extends PantryError {
    constructor(path) {
        super(`pantry not found: ${path}`);
    }
}
exports.PantryNotFoundError = PantryNotFoundError;
function usePantry() {
    const prefix = (0, useConfig_js_1.default)().data.join("pantry/projects");
    async function* ls() {
        const seen = new Set();
        for (const prefix of pantry_paths()) {
            for await (const path of _ls_pantry(prefix)) {
                const project = path.parent().relative({ to: prefix });
                if (seen.insert(project).inserted) {
                    yield { project, path };
                }
            }
        }
    }
    const project = (input) => {
        const project = isString(input) ? input : input.project;
        const yaml = (() => {
            for (const prefix of pantry_paths()) {
                if (!prefix.exists())
                    throw new PantryNotFoundError(prefix.parent());
                const dir = prefix.join(project);
                const filename = dir.join("package.yml");
                if (!filename.exists())
                    continue;
                let memo;
                return () => memo ?? (memo = filename.readYAML()
                    .then(misc_js_1.validate.obj)
                    .catch(cause => { throw new PantryParseError(project, filename, cause); }));
            }
            throw new PackageNotFoundError(project);
        })();
        const companions = async () => parse_pkgs_node((await yaml())["companions"]);
        const runtime_env = async (version, deps) => {
            const yml = await yaml();
            const obj = misc_js_1.validate.obj(yml["runtime"]?.["env"] ?? {});
            return expand_env_obj(obj, { project, version }, deps);
        };
        const available = async () => {
            let { platforms } = await yaml();
            if (!platforms)
                return true;
            if (isString(platforms))
                platforms = [platforms];
            if (!isArray(platforms))
                throw new PantryParseError(project);
            return platforms.includes((0, host_js_1.default)().platform) || platforms.includes(`${(0, host_js_1.default)().platform}/${(0, host_js_1.default)().arch}`);
        };
        const drydeps = async () => parse_pkgs_node((await yaml()).dependencies);
        const provides = async () => {
            let node = (await yaml())["provides"];
            if (!node)
                return [];
            if (isPlainObject(node)) {
                node = node[(0, host_js_1.default)().platform];
            }
            if (!isArray(node))
                throw new PantryParseError(project);
            return node.compact(x => {
                if (isPlainObject(x)) {
                    x = x["executable"];
                }
                if (isString(x)) {
                    if (x.startsWith("bin/"))
                        return x.slice(4);
                    if (x.startsWith("sbin/"))
                        return x.slice(5);
                }
            });
        };
        const provider = async () => {
            for (const prefix of pantry_paths()) {
                if (!prefix.exists())
                    continue;
                const dir = prefix.join(project);
                const filename = dir.join("provider.yml");
                if (!filename.exists())
                    continue;
                const yaml = misc_js_1.validate.obj(await filename.readYAML());
                const cmds = misc_js_1.validate.arr(yaml.cmds);
                return (binname) => {
                    if (!cmds.includes(binname))
                        return;
                    const args = yaml['args'];
                    if (isPlainObject(args)) {
                        if (args[binname]) {
                            return get_args(args[binname]);
                        }
                        else {
                            return get_args(args['...']);
                        }
                    }
                    else {
                        return get_args(args);
                    }
                };
            }
            function get_args(input) {
                if (isString(input)) {
                    return input.split(/\s+/);
                }
                else {
                    return misc_js_1.validate.arr(input);
                }
            }
        };
        return {
            companions,
            runtime: {
                env: runtime_env,
                deps: drydeps
            },
            available,
            provides,
            provider,
            yaml
        };
    };
    /// finds a project that matches the input string on either name, display-name or FQD project name
    /// - Returns: Project[] since there may by multiple matches, if you want a single match you should use `project()`
    async function find(name) {
        name = name.toLowerCase();
        //TODO not very performant due to serial awaits
        const rv = [];
        for await (const pkg of ls()) {
            const proj = { ...project(pkg.project), ...pkg };
            if (pkg.project.toLowerCase() == name) {
                rv.push(proj);
                continue;
            }
            const yaml = await proj.yaml();
            if (yaml["display-name"]?.toLowerCase() == name) {
                rv.push(proj);
            }
            else if ((await proj.provides()).map(x => x.toLowerCase()).includes(name)) {
                rv.push(proj);
            }
        }
        return rv;
    }
    async function which({ interprets: extension }) {
        if (extension[0] == '.')
            extension = extension.slice(1);
        if (!extension)
            return;
        for await (const pkg of ls()) {
            const yml = await project(pkg).yaml();
            const node = yml["interprets"];
            if (!isPlainObject(node))
                continue;
            try {
                const { extensions, args } = yml["interprets"];
                if ((isString(extensions) && extensions === extension) ||
                    (isArray(extensions) && extensions.includes(extension))) {
                    return { project: pkg.project, args: isArray(args) ? args : [args] };
                }
            }
            catch {
                continue;
            }
        }
        return undefined;
    }
    const missing = () => {
        try {
            return !pantry_paths().some(x => x.exists());
        }
        catch (e) {
            if (e instanceof PantryNotFoundError) {
                return true;
            }
            else {
                throw e;
            }
        }
    };
    const neglected = () => {
        if (!prefix.exists())
            return true;
        const stat = dntShim.Deno.statSync(prefix.string);
        if (!stat.mtime)
            return true;
        return (Date.now() - stat.mtime.getTime()) > 24 * 60 * 60 * 1000;
    };
    return {
        prefix,
        which,
        ls,
        project,
        find,
        parse_pkgs_node,
        expand_env_obj,
        missing,
        neglected
    };
    function pantry_paths() {
        const rv = [];
        if (prefix.isDirectory()) {
            rv.push(prefix);
        }
        for (const path of (0, useConfig_js_1.default)().pantries.reverse()) {
            rv.unshift(path.join("projects"));
        }
        if (rv.length == 0) {
            throw new PantryNotFoundError(prefix);
        }
        return rv;
    }
}
exports["default"] = usePantry;
// deno-lint-ignore no-explicit-any
function parse_pkgs_node(node) {
    if (!node)
        return [];
    node = misc_js_1.validate.obj(node);
    platform_reduce(node);
    return Object.entries(node)
        .compact(([project, constraint]) => validatePackageRequirement(project, constraint));
}
exports.parse_pkgs_node = parse_pkgs_node;
function validatePackageRequirement(project, constraint) {
    if (isNumber(constraint)) {
        constraint = `^${constraint}`;
    }
    else if (!isString(constraint)) {
        throw new Error(`invalid constraint for ${project}: ${constraint}`);
    }
    constraint = semver.Range.parse(constraint);
    if (!constraint) {
        throw new error_js_1.PkgxError("invalid constraint for " + project + ": " + constraint);
    }
    return {
        project,
        constraint: constraint
    };
}
exports.validatePackageRequirement = validatePackageRequirement;
/// expands platform specific keys into the object
/// expands inplace because JS is nuts and you have to suck it up
function platform_reduce(env) {
    const sys = (0, host_js_1.default)();
    for (const [key, value] of Object.entries(env)) {
        const [os, arch] = (() => {
            let match = key.match(/^(darwin|linux)\/(aarch64|x86-64)$/);
            if (match)
                return [match[1], match[2]];
            if ((match = key.match(/^(darwin|linux)$/)))
                return [match[1]];
            if ((match = key.match(/^(aarch64|x86-64)$/)))
                return [, match[1]];
            return [];
        })();
        if (!os && !arch)
            continue;
        delete env[key];
        if (os && os != sys.platform)
            continue;
        if (arch && arch != sys.arch)
            continue;
        const dict = misc_js_1.validate.obj(value);
        for (const [key, value] of Object.entries(dict)) {
            // if user specifies an array then we assume we are supplementing
            // otherwise we are replacing. If this is too magical let us know
            if (isArray(value)) {
                if (!env[key])
                    env[key] = [];
                else if (!isArray(env[key]))
                    env[key] = [env[key]];
                //TODO if all-platforms version comes after the specific then order accordingly
                env[key].push(...value);
            }
            else {
                env[key] = value;
            }
        }
    }
}
function expand_env_obj(env_, pkg, deps) {
    const env = { ...env_ };
    platform_reduce(env);
    const rv = {};
    for (let [key, value] of Object.entries(env)) {
        if (isArray(value)) {
            value = value.map(x => transform(x)).join(" ");
        }
        else {
            value = transform(value);
        }
        if (dntShim.Deno.build.os == 'windows') {
            // we standardize on UNIX directory separators
            // NOTE hopefully this won’t break anything :/
            value = value.replaceAll('/', '\\');
        }
        rv[key] = value;
    }
    return rv;
    // deno-lint-ignore no-explicit-any
    function transform(value) {
        if (!isPrimitive(value))
            throw new PantryParseError(pkg.project, undefined, JSON.stringify(value));
        if (isBoolean(value)) {
            return value ? "1" : "0";
        }
        else if (value === undefined || value === null) {
            return "0";
        }
        else if (isString(value)) {
            const mm = (0, useMoustaches_js_1.default)();
            const home = Path_js_1.default.home().string;
            const obj = [
                { from: 'home', to: home } // remove, stick with just ~
            ];
            obj.push(...mm.tokenize.all(pkg, deps));
            return mm.apply(value, obj);
        }
        else if (isNumber(value)) {
            return value.toString();
        }
        const e = new Error("unexpected error");
        e.cause = value;
        throw e;
    }
}
exports.expand_env_obj = expand_env_obj;
async function* _ls_pantry(dir) {
    if (!dir.isDirectory())
        throw new PantryNotFoundError(dir);
    for await (const [path, { name, isDirectory }] of dir.ls()) {
        if (isDirectory) {
            for await (const x of _ls_pantry(path)) {
                yield x;
            }
        }
        else if (name === "package.yml" || name === "package.yaml") {
            yield path;
        }
    }
}


/***/ }),

/***/ 8667:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.flatten = exports.expand = exports.EnvKeys = void 0;
const dntShim = __importStar(__nccwpck_require__(3072));
const usePantry_js_1 = __importDefault(__nccwpck_require__(6169));
const host_js_1 = __importDefault(__nccwpck_require__(5754));
exports.EnvKeys = [
    'PATH',
    'MANPATH',
    'PKG_CONFIG_PATH',
    'LIBRARY_PATH',
    'LD_LIBRARY_PATH',
    'CPATH',
    'XDG_DATA_DIRS',
    'CMAKE_PREFIX_PATH',
    'DYLD_FALLBACK_LIBRARY_PATH',
    'SSL_CERT_FILE',
    'LDFLAGS',
    'PKGX_DIR',
    'ACLOCAL_PATH'
];
function default_1() {
    return {
        map,
        expand,
        flatten
    };
}
exports["default"] = default_1;
/// returns an environment that supports the provided packages
async function map({ installations }) {
    const vars = {};
    const isMac = (0, host_js_1.default)().platform == 'darwin';
    const projects = new Set(installations.map(x => x.pkg.project));
    const has_cmake = projects.has('cmake.org');
    const archaic = true;
    const rv = {};
    const seen = new Set();
    for (const installation of installations) {
        if (!seen.insert(installation.pkg.project).inserted) {
            console.warn("pkgx: env is being duped:", installation.pkg.project);
        }
        for (const key of exports.EnvKeys) {
            for (const suffix of suffixes(key)) {
                vars[key] = compact_add(vars[key], installation.path.join(suffix).chuzzle()?.string);
            }
        }
        if (archaic) {
            vars.LIBRARY_PATH = compact_add(vars.LIBRARY_PATH, installation.path.join("lib").chuzzle()?.string);
            vars.CPATH = compact_add(vars.CPATH, installation.path.join("include").chuzzle()?.string);
        }
        if (has_cmake) {
            vars.CMAKE_PREFIX_PATH = compact_add(vars.CMAKE_PREFIX_PATH, installation.path.string);
        }
        if (projects.has('gnu.org/autoconf')) {
            vars.ACLOCAL_PATH = compact_add(vars.ACLOCAL_PATH, installation.path.join("share/aclocal").chuzzle()?.string);
        }
        if (installation.pkg.project === 'openssl.org') {
            const certPath = installation.path.join("ssl/cert.pem").chuzzle()?.string;
            // this is a single file, so we assume a
            // valid entry is correct
            if (certPath) {
                vars.SSL_CERT_FILE = new OrderedSet();
                vars.SSL_CERT_FILE.add(certPath);
            }
        }
        // pantry configured runtime environment
        const runtime = await (0, usePantry_js_1.default)().project(installation.pkg).runtime.env(installation.pkg.version, installations);
        for (const key in runtime) {
            rv[key] ??= [];
            rv[key].push(runtime[key]);
        }
    }
    // this is how we use precise versions of libraries
    // for your virtual environment
    //FIXME SIP on macOS prevents DYLD_FALLBACK_LIBRARY_PATH from propagating to grandchild processes
    if (vars.LIBRARY_PATH) {
        vars.LD_LIBRARY_PATH = vars.LIBRARY_PATH;
        if (isMac) {
            // non FALLBACK variety causes strange issues in edge cases
            // where our symbols somehow override symbols from the macOS system
            vars.DYLD_FALLBACK_LIBRARY_PATH = vars.LIBRARY_PATH;
        }
    }
    for (const key of exports.EnvKeys) {
        //FIXME where is this `undefined` __happening__?
        if (vars[key] === undefined || vars[key].isEmpty())
            continue;
        rv[key] = vars[key].toArray();
    }
    // don’t break `man` lol
    rv["MANPATH"]?.push("/usr/share/man");
    return rv;
}
function suffixes(key) {
    switch (key) {
        case 'PATH':
            return ["bin", "sbin"];
        case 'MANPATH':
            return ["man", "share/man"];
        case 'PKG_CONFIG_PATH':
            return ['share/pkgconfig', 'lib/pkgconfig'];
        case 'XDG_DATA_DIRS':
            return ['share'];
        case 'LIBRARY_PATH':
        case 'LD_LIBRARY_PATH':
        case 'DYLD_FALLBACK_LIBRARY_PATH':
        case 'CPATH':
        case 'CMAKE_PREFIX_PATH':
        case 'SSL_CERT_FILE':
        case 'LDFLAGS':
        case 'PKGX_DIR':
        case 'ACLOCAL_PATH':
            return []; // we handle these specially
        default: {
            const exhaustiveness_check = key;
            throw new Error(`unhandled id: ${exhaustiveness_check}`);
        }
    }
}
function expand(env) {
    let rv = '';
    for (const [key, value] of Object.entries(env)) {
        if (value.length == 0)
            continue;
        rv += `export ${key}="${value.join(":")}"\n`;
    }
    return rv;
}
exports.expand = expand;
function flatten(env) {
    const SEP = dntShim.Deno.build.os == 'windows' ? ';' : ':';
    const rv = {};
    for (const [key, value] of Object.entries(env)) {
        rv[key] = value.join(SEP);
    }
    return rv;
}
exports.flatten = flatten;
function compact_add(set, item) {
    if (!set)
        set = new OrderedSet();
    if (item)
        set.add(item);
    return set;
}
class OrderedSet {
    constructor() {
        Object.defineProperty(this, "items", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "set", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.items = [];
        this.set = new Set();
    }
    add(item) {
        if (!this.set.has(item)) {
            this.items.push(item);
            this.set.add(item);
        }
    }
    toArray() {
        return [...this.items];
    }
    isEmpty() {
        return this.items.length == 0;
    }
}


/***/ }),

/***/ 2859:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
// deno-lint-ignore-file no-deprecated-deno-api
// ^^ Deno.Command is not implemented for dnt shims yet
const dntShim = __importStar(__nccwpck_require__(3072));
const deps_js_1 = __nccwpck_require__(5356);
const { streams: { writeAll } } = deps_js_1.deno;
const flock_node_js_1 = __nccwpck_require__(6032);
const useDownload_js_1 = __importDefault(__nccwpck_require__(9797));
const usePantry_js_1 = __importDefault(__nccwpck_require__(6169));
const useConfig_js_1 = __importDefault(__nccwpck_require__(3189));
async function default_1(logger) {
    const pantry_dir = (0, usePantry_js_1.default)().prefix.parent();
    logger?.syncing(pantry_dir);
    const unflock = await (0, flock_node_js_1.flock)(pantry_dir.mkdir('p'));
    try {
        //TODO if there was already a lock, just wait on it, don’t do the following stuff
        const git_dir = pantry_dir.parent().join("pantries/pkgxdev/pantry");
        if (git_dir.join("HEAD").isFile()) {
            await git("-C", git_dir, "fetch", "--quiet", "origin", "--force", "main:main");
        }
        else {
            await git("clone", "--quiet", "--bare", "--depth=1", "https://github.com/pkgxdev/pantry", git_dir);
        }
        await git("--git-dir", git_dir, "--work-tree", pantry_dir, "checkout", "--quiet", "--force");
    }
    catch {
        // git failure or no git installed
        // ∴ download the latest tarball and uncompress over the top
        //FIXME deleted packages will not be removed with this method
        const src = new URL(`https://github.com/pkgxdev/pantry/archive/refs/heads/main.tar.gz`);
        const proc = dntShim.Deno.run({
            cmd: ["tar", "xzf", "-", "--strip-components=1"],
            cwd: pantry_dir.string,
            stdin: "piped"
        });
        await (0, useDownload_js_1.default)().download({ src }, blob => writeAll(proc.stdin, blob));
        proc.stdin.close();
        if (!(await proc.status()).success) {
            throw new Error("untar failed");
        }
        proc.close();
    }
    finally {
        await unflock();
    }
    logger?.syncd(pantry_dir);
}
exports["default"] = default_1;
//////////////////////// utils
async function git(...args) {
    const { git } = (0, useConfig_js_1.default)();
    if (!git)
        throw new Error("no-git"); // caught above to trigger http download instead
    await run({ cmd: [git, ...args] });
}
async function run(opts) {
    const cmd = opts.cmd.map(x => `${x}`);
    const env = (({ HTTP_PROXY, HTTPS_PROXY }) => ({ HTTP_PROXY, HTTPS_PROXY }))(dntShim.Deno.env.toObject());
    const proc = dntShim.Deno.run({ ...opts, cmd, stdout: 'null', clearEnv: true, env });
    try {
        const exit = await proc.status();
        if (!exit.success)
            throw new Error(`run.exit(${exit.code})`);
    }
    catch (err) {
        err.cause = proc;
        throw err;
    }
    finally {
        proc.close();
    }
}


/***/ }),

/***/ 6922:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const semver = __importStar(__nccwpck_require__(8689));
const usePantry_js_1 = __importDefault(__nccwpck_require__(6169));
const deps_js_1 = __nccwpck_require__(5356);
const { isArray } = deps_js_1.is_what;
const get = (x) => (0, usePantry_js_1.default)().project(x).runtime.deps();
/// sorts a list of packages topologically based on their
/// dependencies. Throws if there is a cycle in the input.
/// ignores changes in dependencies based on versions
async function hydrate(input, get_deps = get) {
    if (!isArray(input))
        input = [input];
    const dry = condense(input.map(spec => {
        if ("version" in spec) {
            return { project: spec.project, constraint: new semver.Range(`=${spec.version}`) };
        }
        else {
            return spec;
        }
    }));
    const graph = {};
    const bootstrap = new Set();
    const initial_set = new Set(dry.map(x => x.project));
    const stack = [];
    // Starting the DFS loop for each package in the dry list
    for (const pkg of dry) {
        let new_node = graph[pkg.project];
        if (new_node) {
            // Intersect constraints for existing nodes
            new_node.pkg.constraint = semver.intersect(new_node.pkg.constraint, pkg.constraint);
        }
        else {
            new_node = new Node(pkg);
            graph[pkg.project] = new_node;
            stack.push(new_node);
        }
        while (stack.length > 0) {
            const current_node = stack.pop();
            const children = current_node.children;
            for (const dep of await get_deps(current_node.pkg, initial_set.has(current_node.project))) {
                if (children.has(dep.project)) {
                    if (!bootstrap.has(dep.project)) {
                        console.warn(`pkgx: cyclic dep: ${dep.project}: ${current_node.project}`);
                        bootstrap.add(dep.project);
                    }
                }
                else {
                    let child_node = graph[dep.project];
                    if (child_node) {
                        // Intersect constraints
                        child_node.pkg.constraint = semver.intersect(child_node.pkg.constraint, dep.constraint);
                    }
                    else {
                        child_node = new Node(dep, current_node);
                        graph[dep.project] = child_node;
                        stack.push(child_node);
                    }
                    current_node.children.add(dep.project);
                }
            }
        }
    }
    // Sorting and constructing the return value
    const pkgs = Object.values(graph)
        .sort((a, b) => b.count() - a.count())
        .map(({ pkg }) => pkg);
    //TODO strictly we need to record precisely the bootstrap version constraint
    const bootstrap_required = new Set(pkgs.compact(({ project }) => bootstrap.has(project) && project));
    return {
        pkgs,
        dry: pkgs.filter(({ project }) => initial_set.has(project)),
        wet: pkgs.filter(({ project }) => !initial_set.has(project) || bootstrap_required.has(project)),
        bootstrap_required
    };
}
exports["default"] = hydrate;
function condense(pkgs) {
    const out = [];
    for (const pkg of pkgs) {
        const found = out.find(x => x.project === pkg.project);
        if (found) {
            found.constraint = semver.intersect(found.constraint, pkg.constraint);
        }
        else {
            out.push(pkg);
        }
    }
    return out;
}
/////////////////////////////////////////////////////////////////////////// lib
class Node {
    constructor(pkg, parent) {
        Object.defineProperty(this, "parent", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "pkg", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "project", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "children", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Set()
        });
        this.parent = parent;
        this.pkg = pkg;
        this.project = pkg.project;
    }
    count() {
        let n = 0;
        // deno-lint-ignore no-this-alias
        let node = this;
        while ((node = node?.parent))
            n++;
        return n;
    }
}


/***/ }),

/***/ 2754:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ConsoleLogger = void 0;
// deno-lint-ignore-file no-deprecated-deno-api
// ^^ dnt doesn’t support Deno.Command yet so we’re stuck with the deprecated Deno.run for now
const dntShim = __importStar(__nccwpck_require__(3072));
const types_js_1 = __nccwpck_require__(6351);
const useOffLicense_js_1 = __importDefault(__nccwpck_require__(3101));
const useDownload_js_1 = __importDefault(__nccwpck_require__(9797));
const flock_node_js_1 = __nccwpck_require__(6032);
const useConfig_js_1 = __importDefault(__nccwpck_require__(3189));
const useCellar_js_1 = __importDefault(__nccwpck_require__(6532));
const useCache_js_1 = __importDefault(__nccwpck_require__(6671));
const useFetch_js_1 = __importDefault(__nccwpck_require__(6733));
const crypto_1 = __nccwpck_require__(6113);
const Path_js_1 = __importDefault(__nccwpck_require__(6768));
const deps_js_1 = __nccwpck_require__(5356);
const { streams: { writeAll } } = deps_js_1.deno;
async function install(pkg, logger) {
    const { project, version } = pkg;
    const cellar = (0, useCellar_js_1.default)();
    const { prefix: PKGX_DIR, options: { compression } } = (0, useConfig_js_1.default)();
    const stowage = (0, types_js_1.StowageNativeBottle)({ pkg: { project, version }, compression });
    const url = (0, useOffLicense_js_1.default)('s3').url(stowage);
    const tarball = (0, useCache_js_1.default)().path(stowage);
    const shelf = PKGX_DIR.join(pkg.project);
    logger?.locking?.(pkg);
    const unflock = await (0, flock_node_js_1.flock)(shelf.mkdir('p'));
    try {
        const already_installed = await cellar.has(pkg);
        if (already_installed) {
            // some other pkgx instance installed us while we were waiting for the lock
            // or potentially we were already installed and the caller is naughty
            logger?.installed?.(already_installed);
            return already_installed;
        }
        logger?.downloading?.({ pkg });
        const PATH = dntShim.Deno.build.os == 'windows' ? "C:\\windows\\system32" : "/usr/bin:/bin";
        const tmpdir = Path_js_1.default.mktemp({
            //TODO dir should not be here ofc
            dir: PKGX_DIR.join(".local/tmp").join(pkg.project),
            prefix: `v${pkg.version}.`
            //NOTE ^^ inside pkgx prefix to avoid TMPDIR is on a different volume problems
        });
        const tar_args = compression == 'xz' ? 'xJf' : 'xzf'; // laughably confusing
        const untar = dntShim.Deno.run({
            cmd: ["tar", tar_args, "-", "--strip-components", (pkg.project.split("/").length + 1).toString()],
            stdin: 'piped', stdout: "inherit", stderr: "inherit",
            cwd: tmpdir.string,
            /// hard coding path to ensure we don’t deadlock trying to use ourselves to untar ourselves
            env: { PATH }
        });
        const hasher = (0, crypto_1.createHash)("sha256");
        const remote_SHA_promise = remote_SHA(new URL(`${url}.sha256sum`));
        let total;
        let n = 0;
        await (0, useDownload_js_1.default)().download({
            src: url,
            dst: tarball,
            logger: info => {
                logger?.downloading?.({ pkg, ...info });
                total ??= info.total;
            }
        }, blob => {
            n += blob.length;
            hasher.update(blob);
            logger?.installing?.({ pkg, progress: total ? n / total : total });
            return writeAll(untar.stdin, blob);
        });
        untar.stdin.close();
        const untar_exit_status = await untar.status();
        if (!untar_exit_status.success) {
            throw new Error(`tar exited with status ${untar_exit_status.code}`);
        }
        else {
            untar.close(); //TODO should we do this for the error case too or what?
        }
        const computed_hash_value = hasher.digest("hex");
        const checksum = await remote_SHA_promise;
        if (computed_hash_value != checksum) {
            tarball.rm();
            console.error("pkgx: we deleted the invalid tarball. try again?");
            throw new Error(`sha: expected: ${checksum}, got: ${computed_hash_value}`);
        }
        const path = tmpdir.mv({ to: shelf.join(`v${pkg.version}`) }).chmod(0o755);
        const install = { pkg, path };
        logger?.installed?.(install);
        return install;
    }
    catch (err) {
        tarball.rm(); //FIXME resumable downloads!
        throw err;
    }
    finally {
        logger?.unlocking?.(pkg);
        await unflock();
    }
}
exports["default"] = install;
async function remote_SHA(url) {
    const rsp = await (0, useFetch_js_1.default)(url);
    if (!rsp.ok)
        throw rsp;
    const txt = await rsp.text();
    return txt.split(' ')[0];
}
// deno-lint-ignore no-explicit-any
function ConsoleLogger(prefix) {
    prefix = prefix ? `${prefix}: ` : "";
    return {
        locking: function () { console.error(`${prefix}locking`, ...arguments); },
        downloading: function () { console.error(`${prefix}downloading`, ...arguments); },
        installing: function () { console.error(`${prefix}installing`, ...arguments); },
        unlocking: function () { console.error(`${prefix}unlocking`, ...arguments); },
        installed: function () { console.error(`${prefix}installed`, ...arguments); }
    };
}
exports.ConsoleLogger = ConsoleLogger;


/***/ }),

/***/ 3595:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const dntShim = __importStar(__nccwpck_require__(3072));
const semver = __importStar(__nccwpck_require__(8689));
const useCellar_js_1 = __importDefault(__nccwpck_require__(6532));
const error_js_1 = __nccwpck_require__(3336);
const promises_1 = __importDefault(__nccwpck_require__(3292));
async function link(pkg) {
    const installation = await (0, useCellar_js_1.default)().resolve(pkg);
    pkg = installation.pkg;
    const versions = (await (0, useCellar_js_1.default)()
        .ls(installation.pkg.project))
        .map(({ pkg: { version }, path }) => [version, path])
        .sort(([a], [b]) => a.compare(b));
    if (versions.length <= 0) {
        const err = new Error('no versions');
        err.cause = pkg;
        throw err;
    }
    const shelf = installation.path.parent();
    const newest = versions.slice(-1)[0];
    const vMm = `${pkg.version.major}.${pkg.version.minor}`;
    const minorRange = new semver.Range(`^${vMm}`);
    const mostMinor = versions.filter(v => minorRange.satisfies(v[0])).at(-1) ?? (0, error_js_1.panic)();
    if (mostMinor[0].neq(pkg.version))
        return;
    // ^^ if we’re not the most minor we definitely not the most major
    await makeSymlink(`v${vMm}`);
    const majorRange = new semver.Range(`^${pkg.version.major.toString()}`);
    const mostMajor = versions.filter(v => majorRange.satisfies(v[0])).at(-1) ?? (0, error_js_1.panic)();
    if (mostMajor[0].neq(pkg.version))
        return;
    // ^^ if we’re not the most major we definitely aren’t the newest
    await makeSymlink(`v${pkg.version.major}`);
    if (pkg.version.eq(newest[0])) {
        await makeSymlink('v*');
    }
    async function makeSymlink(symname) {
        try {
            const what_we_make = shelf.join(symname);
            if (what_we_make.isSymlink()) {
                try {
                    // using this rather than rm due to bug in deno shims that
                    // tries to call rmdir on the symlink because the symlink points to a dir
                    await promises_1.default.unlink(what_we_make.string);
                }
                catch (err) {
                    // we were deleted by another thing linking simultaneously
                    //FIXME our flock should surround the link step too
                    if (err.code != 'ENOENT')
                        throw err;
                }
            }
            await dntShim.Deno.symlink(installation.path.basename(), // makes it relative
            shelf.join(symname).rm().string, { type: 'dir' });
        }
        catch (err) {
            if (err instanceof dntShim.Deno.errors.AlreadyExists || err.code === 'EEXIST') {
                //FIXME race condition for installing the same pkg simultaneously
                // real fix is to lock around the entire download/untar/link process
                return;
            }
            else {
                throw err;
            }
        }
    }
}
exports["default"] = link;


/***/ }),

/***/ 5857:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports._internals = exports.ResolveError = void 0;
const useInventory_js_1 = __importDefault(__nccwpck_require__(4204));
const pkg_js_1 = __nccwpck_require__(7555);
const useCellar_js_1 = __importDefault(__nccwpck_require__(6532));
const error_js_1 = __nccwpck_require__(3336);
class ResolveError extends error_js_1.PkgxError {
    constructor(pkg) {
        super(`not-found: pkg: ${(0, pkg_js_1.str)(pkg)}`);
        Object.defineProperty(this, "pkg", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.pkg = pkg;
    }
}
exports.ResolveError = ResolveError;
/// resolves a list of package specifications based on what is available in
/// bottle storage if `update` is false we will return already installed pkgs
/// that resolve so if we are resolving `node>=12`, node 13 is installed, but
/// node 19 is the latest we return node 13. if `update` is true we return node
/// 19 and *you will need to install it*.
async function resolve(reqs, { update } = { update: false }) {
    const inventory = exports._internals.useInventory();
    const cellar = exports._internals.useCellar();
    const rv = { pkgs: [], installed: [], pending: [] };
    let installation;
    const promises = [];
    for (const req of reqs) {
        const noup = !should_update(req.project);
        if (noup && (installation = await cellar.has(req))) {
            // if something is already installed that satisfies the constraint then use it
            rv.installed.push(installation);
            rv.pkgs.push(installation.pkg);
        }
        else {
            const promise = inventory.select(req).then(async (version) => {
                if (!version) {
                    throw new ResolveError(req);
                }
                const pkg = { version, project: req.project };
                rv.pkgs.push(pkg);
                if ((installation = await cellar.has(pkg))) {
                    // we were asked to update, but we already are at the latest version
                    rv.installed.push(installation);
                }
                else {
                    rv.pending.push(pkg);
                }
            });
            promises.push(promise);
        }
    }
    await Promise.all(promises);
    return rv;
    function should_update(project) {
        return update === true || (update instanceof Set && update.has(project));
    }
}
exports["default"] = resolve;
exports._internals = {
    useInventory: useInventory_js_1.default,
    useCellar: useCellar_js_1.default
};


/***/ }),

/***/ 7524:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const usePantry_js_1 = __importStar(__nccwpck_require__(6169));
const semver = __importStar(__nccwpck_require__(8689));
async function which(arg0, opts_) {
    const opts = { providers: opts_?.providers ?? true, all: opts_?.all ?? false };
    const rv = [];
    for await (const result of _which(arg0, opts)) {
        if (opts.all) {
            rv.push(result);
        }
        else {
            return result;
        }
    }
    if (!opts.all && rv.length == 0) {
        return;
    }
    else {
        return rv;
    }
}
exports["default"] = which;
async function* _which(arg0, opts) {
    arg0 = arg0.trim();
    /// sanitize and reject anything with path components
    if (!arg0 || arg0.includes("/"))
        return;
    const pantry = (0, usePantry_js_1.default)();
    let found = [];
    const promises = [];
    for await (const entry of pantry.ls()) {
        if (found.length) {
            for (const f of found)
                yield f;
            found = [];
        }
        const p = pantry.project(entry).provides().then(providers => {
            for (const provider of providers) {
                if (provider == arg0) {
                    const constraint = new semver.Range("*");
                    found.push({ ...entry, constraint, shebang: [provider] });
                }
                else if (arg0.startsWith(provider)) {
                    // eg. `node^16` symlink
                    try {
                        const constraint = new semver.Range(arg0.substring(provider.length));
                        found.push({ ...entry, constraint, shebang: [provider] });
                    }
                    catch {
                        // not a valid semver range; fallthrough
                    }
                }
                else {
                    //TODO more efficient to check the prefix fits arg0 first
                    // eg. if python3 then check if the provides starts with python before
                    // doing all the regex shit. Matters because there's a *lot* of YAMLs
                    let rx = /({{\s*version\.(marketing|major)\s*}})/;
                    let match = provider.match(rx);
                    if (!match?.index)
                        continue;
                    const regx = match[2] == 'major' ? '\\d+' : '\\d+\\.\\d+';
                    const foo = subst(match.index, match.index + match[1].length, provider, `(${regx})`);
                    rx = new RegExp(`^${foo}$`);
                    match = arg0.match(rx);
                    if (match) {
                        const constraint = new semver.Range(`~${match[1]}`);
                        found.push({ ...entry, constraint, shebang: [arg0] });
                    }
                }
            }
        }).swallow(usePantry_js_1.PantryError);
        promises.push(p);
        if (opts.providers) {
            const pp = pantry.project(entry).provider().then(f => {
                if (!f)
                    return;
                const rv = f(arg0);
                if (rv)
                    found.push({
                        ...entry,
                        constraint: new semver.Range('*'),
                        shebang: [...rv, arg0]
                    });
            });
            promises.push(pp);
        }
    }
    // if we didn’t find anything yet then we have to wait on the promises
    // otherwise we can ignore them
    await Promise.all(promises);
    for (const f of found) {
        yield f;
    }
}
const subst = function (start, end, input, what) {
    return input.substring(0, start) + what + input.substring(end);
};


/***/ }),

/***/ 2346:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports._internals = exports.ConsoleLogger = void 0;
const dntShim = __importStar(__nccwpck_require__(3072));
const install_js_1 = __importStar(__nccwpck_require__(2754));
const resolve_js_1 = __importDefault(__nccwpck_require__(5857));
const usePantry_js_1 = __importDefault(__nccwpck_require__(6169));
const hydrate_js_1 = __importDefault(__nccwpck_require__(6922));
const useSync_js_1 = __importDefault(__nccwpck_require__(2859));
const pkg_js_1 = __nccwpck_require__(7555);
const link_js_1 = __importDefault(__nccwpck_require__(3595));
const deps_js_1 = __nccwpck_require__(5356);
const { isString } = deps_js_1.is_what;
// deno-lint-ignore no-explicit-any
function ConsoleLogger(prefix) {
    prefix = prefix ? `${prefix}: ` : "";
    return {
        ...(0, install_js_1.ConsoleLogger)(prefix),
        progress: function () { console.error(`${prefix}progress`, ...arguments); },
    };
}
exports.ConsoleLogger = ConsoleLogger;
/// eg. install("python.org~3.10")
async function default_1(pkgs, logger) {
    const { hydrate, resolve, install, link, useSync } = exports._internals;
    if (isString(pkgs))
        pkgs = pkgs.split(/\s+/);
    pkgs = pkgs.map(pkg => isString(pkg) ? (0, pkg_js_1.parse)(pkg) : pkg);
    const pantry = (0, usePantry_js_1.default)();
    if (pantry.missing() || pantry.neglected()) {
        await useSync();
    }
    //TODO parallelize!
    pkgs = (await hydrate(pkgs)).pkgs;
    const resolution = await resolve(pkgs);
    logger?.resolved?.(resolution);
    const { pending, installed } = resolution;
    logger = WrapperLogger(pending, logger);
    const installers = pending
        .map(pkg => install(pkg, logger)
        .then(i => dntShim.Deno.build.os != 'windows'
        ? link(i).then(() => i)
        : i));
    installed.push(...await Promise.all(installers));
    return installed;
}
exports["default"] = default_1;
function WrapperLogger(pending, logger) {
    if (!logger?.progress)
        return logger;
    const projects = pending.map(pkg => pkg.project);
    const totals = {};
    const progresses = {};
    return {
        ...logger,
        downloading: args => {
            const { pkg: { project }, total } = args;
            if (total) {
                totals[project] = total;
                updateProgress();
            }
            if (logger?.downloading) {
                logger.downloading(args);
            }
        },
        installing: args => {
            const { pkg: { project }, progress } = args;
            if (progress) {
                progresses[project] = progress;
                updateProgress();
            }
            if (logger?.installing) {
                logger.installing(args);
            }
        }
    };
    function updateProgress() {
        let total_untard_bytes = 0;
        let grand_total = 0;
        for (const project of projects) {
            const total = totals[project];
            const bytes = progresses[project] * total;
            total_untard_bytes += bytes;
            grand_total += total;
        }
        const rv = total_untard_bytes / grand_total;
        if (!isNaN(rv)) {
            logger.progress(total_untard_bytes / grand_total);
        }
    }
}
exports._internals = {
    hydrate: hydrate_js_1.default,
    resolve: resolve_js_1.default,
    install: install_js_1.default,
    link: link_js_1.default,
    useSync: useSync_js_1.default
};


/***/ }),

/***/ 7272:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RunError = void 0;
const dntShim = __importStar(__nccwpck_require__(3072));
const install_js_1 = __importDefault(__nccwpck_require__(2754));
const useShellEnv_js_1 = __importDefault(__nccwpck_require__(8667));
const usePantry_js_1 = __importDefault(__nccwpck_require__(6169));
const hydrate_js_1 = __importDefault(__nccwpck_require__(6922));
const resolve_js_1 = __importDefault(__nccwpck_require__(5857));
const error_js_1 = __nccwpck_require__(3336);
const child_process_1 = __nccwpck_require__(2081);
const useSync_js_1 = __importDefault(__nccwpck_require__(2859));
const which_js_1 = __importDefault(__nccwpck_require__(7524));
const link_js_1 = __importDefault(__nccwpck_require__(3595));
const deps_js_1 = __nccwpck_require__(5356);
const { isArray } = deps_js_1.is_what;
async function run(cmd, opts) {
    const { usesh, arg0: whom } = (() => {
        if (!isArray(cmd)) {
            const s = cmd.trim();
            const i = s.indexOf(' ');
            if (i == -1) {
                cmd = [];
                return { usesh: false, arg0: s };
            }
            else if (dntShim.Deno.build.os == 'windows') {
                cmd = cmd.split(/\s+/);
                const arg0 = cmd.shift();
                return { usesh: false, arg0 };
            }
            else {
                const arg0 = s.slice(0, i);
                cmd = s.slice(i + 1);
                return { usesh: true, arg0 };
            }
        }
        else if (cmd.length == 0) {
            throw new RunError('EUSAGE', `\`cmd\` evaluated empty: ${cmd}`);
        }
        else {
            return {
                usesh: false,
                arg0: cmd.shift().toString().trim()
            };
        }
    })();
    const { env, shebang } = await setup(whom, opts?.env ?? dntShim.Deno.env.toObject(), opts?.logger);
    const arg0 = usesh ? '/bin/sh' : shebang.shift();
    const args = usesh
        ? ['-c', `${shebang.join(' ')} ${cmd}`]
        : [...shebang, ...cmd.map(x => x.toString())];
    return new Promise((resolve, reject) => {
        const proc = (0, child_process_1.spawn)(arg0, args, {
            env,
            stdio: [
                "pipe",
                opts?.stdout ? 'pipe' : 'inherit',
                opts?.stderr ? 'pipe' : 'inherit'
            ],
            /// on windows .bat files are not executable unless invoked via a shell
            /// our provides database deliberately excludes `.bat` so that the same
            /// filename is used for all platforms, this works since provided we use
            /// a shell to execute, we don’t need to know the extension
            shell: dntShim.Deno.build.os == 'windows'
        });
        let stdout = '', stderr = '';
        proc.stdout?.on('data', data => stdout += data);
        proc.stderr?.on('data', data => stderr += data);
        proc.on('close', status => {
            if (status && !opts?.status) {
                const err = new RunError('EIO', `${cmd} exited with: ${status}`);
                err.cause = status;
                reject(err);
            }
            else {
                const fulfill = resolve;
                fulfill({ stdout, stderr, status });
            }
        });
    });
}
exports["default"] = run;
async function setup(cmd, env, logger) {
    const pantry = (0, usePantry_js_1.default)();
    const sh = (0, useShellEnv_js_1.default)();
    const { install, link } = _internals;
    if (pantry.missing() || pantry.neglected()) {
        await (0, useSync_js_1.default)();
    }
    const wut = await (0, which_js_1.default)(cmd);
    if (!wut)
        throw new RunError('ENOENT', `No project in pantry provides ${cmd}`);
    const { pkgs } = await (0, hydrate_js_1.default)(wut);
    const { pending, installed } = await (0, resolve_js_1.default)(pkgs);
    for (const pkg of pending) {
        const installation = await install(pkg, logger);
        await link(installation);
        installed.push(installation);
    }
    const pkgenv = await sh.map({ installations: installed });
    for (const [key, value] of Object.entries(env)) {
        if (!value) {
            continue;
        }
        else if (pkgenv[key]) {
            pkgenv[key].push(value);
        }
        else {
            pkgenv[key] = [value];
        }
    }
    return { env: sh.flatten(pkgenv), shebang: wut.shebang };
}
class RunError extends error_js_1.PkgxError {
    constructor(code, message) {
        super(message);
        Object.defineProperty(this, "code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.code = code;
    }
}
exports.RunError = RunError;
const _internals = {
    install: install_js_1.default,
    link: link_js_1.default
};


/***/ }),

/***/ 6351:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StowageNativeBottle = void 0;
const host_js_1 = __importDefault(__nccwpck_require__(5754));
function StowageNativeBottle(opts) {
    return { ...opts, host: (0, host_js_1.default)(), type: 'bottle' };
}
exports.StowageNativeBottle = StowageNativeBottle;


/***/ }),

/***/ 6768:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const dntShim = __importStar(__nccwpck_require__(3072));
const deps_js_1 = __nccwpck_require__(5356);
const fs_1 = __nccwpck_require__(7147);
const sys = __importStar(__nccwpck_require__(1017));
const os = __importStar(__nccwpck_require__(2037));
const { io: { readLines }, fs, parseYaml, SEP } = deps_js_1.deno;
// modeled after https://github.com/mxcl/Path.swift
// everything is Sync because TypeScript will unfortunately not
// cascade `await`, meaning our chainable syntax would become:
//
//     await (await foo).bar
//
// however we use async versions for “terminators”, eg. `ls()`
//NOTE not considered good for general consumption on Windows at this time
// generally we try to workaround unix isms and there are some quirks
class Path {
    static cwd() {
        return new Path(dntShim.Deno.cwd());
    }
    static home() {
        return new Path((() => {
            switch (dntShim.Deno.build.os) {
                case "windows":
                    return dntShim.Deno.env.get("USERPROFILE");
                default:
                    return dntShim.Deno.env.get("HOME");
            }
        })());
    }
    /// normalizes the path
    /// throws if not an absolute path
    constructor(input) {
        /// the normalized string representation of the underlying filesystem path
        Object.defineProperty(this, "string", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        if (input instanceof Path) {
            this.string = input.string;
            return;
        }
        if (!input) {
            throw new Error(`invalid absolute path: ${input}`);
        }
        if (dntShim.Deno.build.os == 'windows') {
            if (!input.match(/^[a-zA-Z]:/)) {
                if (!input.startsWith("/") && !input.startsWith("\\")) {
                    throw new Error(`invalid absolute path: ${input}`);
                }
                if (!input.startsWith('\\\\')) {
                    // ^^ \\network\drive is valid path notation on windows
                    //TODO shouldn’t be C: necessarily
                    // should it be based on PWD or system default drive?
                    // NOTE also: maybe we shouldn't do this anyway?
                    input = `C:\\${input}`;
                }
            }
            input = input.replace(/\//g, '\\');
        }
        else if (input[0] != '/') {
            throw new Error(`invalid absolute path: ${input}`);
        }
        this.string = normalize(input);
        function normalize(path) {
            const segments = path.split(SEP);
            const result = [];
            const start = dntShim.Deno.build.os == 'windows' ? (segments.shift() || '\\') + '\\' : '/';
            for (const segment of segments) {
                if (segment === '..') {
                    result.pop();
                }
                else if (segment !== '.' && segment !== '') {
                    result.push(segment);
                }
            }
            return start + result.join(SEP);
        }
    }
    /// returns Path | undefined rather than throwing error if Path is not absolute
    static abs(input) {
        try {
            return new Path(input);
        }
        catch {
            return;
        }
    }
    /**
      If the path represents an actual entry that is a symlink, returns the symlink’s
      absolute destination.
  
      - Important: This is not exhaustive, the resulting path may still contain a symlink.
      - Important: The path will only be different if the last path component is a symlink, any symlinks in prior components are not resolved.
      - Note: If file exists but isn’t a symlink, returns `self`.
      - Note: If symlink destination does not exist, is **not** an error.
      */
    readlink() {
        try {
            const output = dntShim.Deno.readLinkSync(this.string);
            return this.parent().join(output);
        }
        catch (err) {
            const code = err.code;
            switch (code) {
                case 'EINVAL':
                    return this; // is file
                case 'ENOENT':
                    throw err; // there is no symlink at this path
            }
            throw err;
        }
    }
    /**
      Returns the parent directory for this path.
      Path is not aware of the nature of the underlying file, but this is
      irrlevant since the operation is the same irrespective of this fact.
      - Note: always returns a valid path, `Path.root.parent` *is* `Path.root`.
      */
    parent() {
        return new Path(sys.dirname(this.string));
    }
    /// returns normalized absolute path string
    toString() {
        return this.string;
    }
    /// joins this path with the provided component and normalizes it
    /// if you provide an absolute path that path is returned
    /// rationale: usually if you are trying to join an absolute path it is a bug in your code
    /// TODO should warn tho
    join(...components) {
        const joined = components.filter(x => x).join(SEP);
        if (isAbsolute(joined)) {
            return new Path(joined);
        }
        else if (joined) {
            return new Path(`${this.string}${SEP}${joined}`);
        }
        else {
            return this;
        }
        function isAbsolute(part) {
            if (dntShim.Deno.build.os == 'windows' && (part?.match(/^[a-zA-Z]:/) || part?.startsWith("\\\\"))) {
                return true;
            }
            else {
                return part.startsWith('/');
            }
        }
    }
    /// Returns true if the path represents an actual filesystem entry that is *not* a directory.
    /// NOTE we use `stat`, so if the file is a symlink it is resolved, usually this is what you want
    isFile() {
        try {
            return dntShim.Deno.statSync(this.string).isFile ? this : undefined;
        }
        catch {
            return; //FIXME
            // if (err instanceof Deno.errors.NotFound == false) {
            //   throw err
            // }
        }
    }
    isSymlink() {
        try {
            return dntShim.Deno.lstatSync(this.string).isSymlink ? this : undefined;
        }
        catch {
            return; //FIXME
            // if (err instanceof Deno.errors.NotFound) {
            //   return false
            // } else {
            //   throw err
            // }
        }
    }
    isExecutableFile() {
        try {
            if (!this.isFile())
                return;
            const info = dntShim.Deno.statSync(this.string);
            if (!info.mode)
                throw new Error();
            const is_exe = (info.mode & 0o111) > 0;
            if (is_exe)
                return this;
        }
        catch {
            return; //FIXME catch specific errors
        }
    }
    isReadableFile() {
        try {
            if (dntShim.Deno.build.os != 'windows') {
                const { mode, isFile } = dntShim.Deno.statSync(this.string);
                if (isFile && mode && mode & 0o400) {
                    return this;
                }
            }
            else {
                //FIXME not particularly efficient lol
                dntShim.Deno.openSync(this.string, { read: true }).close();
                return this;
            }
        }
        catch {
            return undefined;
        }
    }
    exists() {
        //FIXME can be more efficient
        try {
            dntShim.Deno.statSync(this.string);
            return this;
        }
        catch {
            return; //FIXME
            // if (err instanceof Deno.errors.NotFound) {
            //   return false
            // } else {
            //   throw err
            // }
        }
    }
    /// Returns true if the path represents an actual directory.
    /// NOTE we use `stat`, so if the file is a symlink it is resolved, usually this is what you want
    isDirectory() {
        try {
            return dntShim.Deno.statSync(this.string).isDirectory ? this : undefined;
        }
        catch {
            return; //FIXME catch specific errorrs
        }
    }
    async *ls() {
        for await (const entry of dntShim.Deno.readDir(this.string)) {
            yield [this.join(entry.name), entry];
        }
    }
    //FIXME probs can be infinite
    async *walk() {
        const stack = [this];
        while (stack.length > 0) {
            const dir = stack.pop();
            for await (const entry of dntShim.Deno.readDir(dir.string)) {
                const path = dir.join(entry.name);
                yield [path, entry];
                if (entry.isDirectory) {
                    stack.push(path);
                }
            }
        }
    }
    components() {
        return this.string.split(SEP);
    }
    static mktemp(opts) {
        let { prefix, dir } = opts ?? {};
        dir ??= new Path(os.tmpdir());
        prefix ??= "";
        if (!prefix.startsWith('/'))
            prefix = `/${prefix}`;
        // not using deno.makeTempDirSync because it's bugg’d and the node shim doesn’t handler `dir`
        const rv = (0, fs_1.mkdtempSync)(`${dir.mkdir('p')}${prefix}`);
        return new Path(rv);
    }
    split() {
        const d = this.parent();
        const b = this.basename();
        return [d, b];
    }
    /// the file extension with the leading period
    extname() {
        const match = this.string.match(/\.tar\.\w+$/);
        if (match) {
            return match[0];
        }
        else {
            return sys.extname(this.string);
        }
    }
    basename() {
        return sys.basename(this.string);
    }
    /**
      Moves a file.
  
          Path.root.join("bar").mv({to: Path.home.join("foo")})
          // => Path("/Users/mxcl/foo")
  
      - Parameter to: Destination filename.
      - Parameter into: Destination directory (you get `into/${this.basename()`)
      - Parameter overwrite: If true overwrites any entry that already exists at the destination.
      - Returns: `to` to allow chaining.
      - Note: `force` will still throw if `to` is a directory.
      - Note: Throws if `overwrite` is `false` yet `to` is *already* identical to
        `self` because even though *our policy* is to noop if the desired
        end result preexists, checking for this condition is too expensive a
        trade-off.
      */
    mv({ force, ...opts }) {
        if ("to" in opts) {
            fs.moveSync(this.string, opts.to.string, { overwrite: force });
            return opts.to;
        }
        else {
            const dst = opts.into.join(this.basename());
            fs.moveSync(this.string, dst.string, { overwrite: force });
            return dst;
        }
    }
    //FIXME operates in ”force” mode
    //TODO needs a recursive option
    cp(opts) {
        const dst = 'into' in opts ? opts.into.join(this.basename()) : opts.to;
        dntShim.Deno.copyFileSync(this.string, dst.string);
        return dst;
    }
    rm({ recursive } = { recursive: false }) {
        if (this.exists()) {
            try {
                dntShim.Deno.removeSync(this.string, { recursive });
            }
            catch (err) {
                if (this.exists()) {
                    throw err;
                }
                else {
                    // this is what we wanted, so noop
                }
            }
        }
        return this; // may seem weird but I've had cases where I wanted to chain
    }
    mkdir(opts) {
        if (!this.isDirectory()) {
            dntShim.Deno.mkdirSync(this.string, { recursive: opts == 'p' });
        }
        return this;
    }
    isEmpty() {
        for (const _ of dntShim.Deno.readDirSync(this.string)) {
            return;
        }
        return this;
    }
    eq(that) {
        return this.string == that.string;
    }
    neq(that) {
        return this.string != that.string;
    }
    /// `this` is the symlink that is created pointing at `target`
    /// in Path.ts we always create `this`, our consistency helps with the notoriously difficuly argument order of `ln -s`
    /// note symlink is full and absolute path
    ln(_, { target }) {
        dntShim.Deno.symlinkSync(target.string, this.string);
        return this;
    }
    read() {
        return dntShim.Deno.readTextFile(this.string);
    }
    async *readLines() {
        const fd = dntShim.Deno.openSync(this.string);
        try {
            for await (const line of readLines(fd))
                yield line;
        }
        finally {
            fd.close();
        }
    }
    //FIXME like, we don’t want a hard dependency in the published library
    //TODO would be nice to validate the output against a type
    //TODO shouldn't be part of this module since we want to publish it
    async readYAML() {
        try {
            const txt = await this.read();
            return parseYaml(txt, { filename: this.string /*improves err msgs*/ });
        }
        catch (err) {
            err.cause = this.string;
            throw err;
        }
    }
    readJSON() {
        return this.read().then(x => JSON.parse(x));
    }
    write({ force, ...content }) {
        if (this.exists()) {
            if (!force)
                throw new Error(`file-exists:${this}`);
            this.rm();
        }
        if ("text" in content) {
            dntShim.Deno.writeTextFileSync(this.string, content.text);
        }
        else {
            const text = JSON.stringify(content.json, null, content.space);
            dntShim.Deno.writeTextFileSync(this.string, text);
        }
        return this;
    }
    touch() {
        //FIXME work more as expected
        return this.write({ force: true, text: "" });
    }
    chmod(mode) {
        if (dntShim.Deno.build.os != 'windows') {
            dntShim.Deno.chmodSync(this.string, mode);
        }
        return this;
    }
    chuzzle() {
        if (this.exists())
            return this;
    }
    relative({ to: base }) {
        const pathComps = this.string.split(SEP);
        const baseComps = base.string.split(SEP);
        if (dntShim.Deno.build.os == "windows") {
            if (pathComps[0] != baseComps[0]) {
                throw new Error("can't compute relative path between paths on different drives");
            }
        }
        pathComps[0] = SEP;
        baseComps[0] = SEP;
        if (this.string.startsWith(base.string)) {
            return pathComps.slice(baseComps.length).join(SEP);
        }
        else {
            const newPathComps = [...pathComps];
            const newBaseComps = [...baseComps];
            while (newPathComps[0] == newBaseComps[0]) {
                newPathComps.shift();
                newBaseComps.shift();
            }
            const relComps = Array.from({ length: newBaseComps.length }, () => "..");
            relComps.push(...newPathComps);
            return relComps.join(SEP);
        }
    }
    realpath() {
        return new Path(dntShim.Deno.realPathSync(this.string));
    }
    prettyString() {
        const home = Path.home().string;
        if (this.string.startsWith(home)) {
            return '~' + this.string.slice(home.length);
        }
        else {
            return this.string;
        }
    }
    // if we’re inside the CWD we print that
    prettyLocalString() {
        const cwd = Path.cwd();
        return this.string.startsWith(cwd.string) ? `./${this.relative({ to: cwd })}` : this.prettyString();
    }
    [Symbol.for("Deno.customInspect")]() {
        return this.prettyString();
    }
}
/// the filesystem root
Object.defineProperty(Path, "root", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: new Path("/")
});
exports["default"] = Path;


/***/ }),

/***/ 3336:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// deno-lint-ignore-file no-explicit-any
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PkgxError = exports.panic = void 0;
function panic(message) {
    throw new Error(message);
}
exports.panic = panic;
Promise.prototype.swallow = function (errorClass) {
    return this.catch((err) => {
        if (errorClass && !(err instanceof errorClass)) {
            throw err;
        }
    });
};
class PkgxError extends Error {
    constructor(msg, ctx) {
        super(msg);
        Object.defineProperty(this, "ctx", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.ctx = ctx;
    }
}
exports.PkgxError = PkgxError;


/***/ }),

/***/ 6032:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.flock = void 0;
const dntShim = __importStar(__nccwpck_require__(3072));
const util = __importStar(__nccwpck_require__(3837));
const koffi_1 = __importDefault(__nccwpck_require__(9376));
const proper_lockfile_1 = __importDefault(__nccwpck_require__(4582));
// thank you ChatGPT
const filename = (platform => {
    switch (platform) {
        case 'darwin':
            return '/usr/lib/libSystem.dylib';
        case 'windows':
            return 'Kernel32.dll';
        default:
            return 'libc.so.6';
    }
})(dntShim.Deno.build.os);
const libc = koffi_1.default.load(filename);
async function flock(path) {
    if (dntShim.Deno.build.os != 'windows') {
        const LOCK_EX = 2;
        const LOCK_UN = 8;
        const cflock = libc.func('int flock(int, int)');
        const flockAsync = util.promisify(cflock.async);
        const { rid: fd } = await dntShim.Deno.open(path.string);
        const rv = await flockAsync(fd, LOCK_EX);
        if (rv === -1) {
            throw new Error("flock failed"); // TODO read errno
        }
        return () => flockAsync(fd, LOCK_UN);
    }
    else {
        //TODO use LockFileEx
        //NOTE this absolutely must be done before v1 since it means our npm pkg and deno pkgs are not lock compatible
        // NOTES I tried 😔 and couldn’t figure it out. Damn Win32 bests me again.
        // NOTE retries is arbituary, we just want it to wait for the lock to be released
        // but couldn’t figure out a cleaner way to do that
        return await proper_lockfile_1.default.lock(path.string, { retries: 100 });
    }
}
exports.flock = flock;


/***/ }),

/***/ 5754:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports._internals = exports.SupportedArchitectures = exports.SupportedPlatforms = void 0;
const dntShim = __importStar(__nccwpck_require__(3072));
const process_1 = __importDefault(__nccwpck_require__(7282));
// when we support more variants of these that require specification
// we will tuple a version in with each eg. 'darwin' | ['windows', 10 | 11 | '*']
exports.SupportedPlatforms = ["darwin", "linux", "windows"];
exports.SupportedArchitectures = ["x86-64", "aarch64"];
function host() {
    const platform = (() => {
        const platform = _internals.platform();
        switch (platform) {
            case "darwin":
            case "linux":
            case "windows":
                return platform;
            default:
                console.warn(`operating incognito as linux (${platform})`);
                return 'linux';
        }
    })();
    const arch = (() => {
        const arch = _internals.arch();
        switch (arch) {
            case "arm64":
                return "aarch64";
            case "x64":
                return "x86-64";
            default:
                throw new Error(`unsupported-arch: ${arch}`);
        }
    })();
    const { target } = dntShim.Deno.build;
    return {
        platform,
        arch,
        target,
        build_ids: [platform, arch]
    };
}
exports["default"] = host;
const _internals = {
    arch: () => process_1.default.arch,
    platform: () => dntShim.Deno.build.os
};
exports._internals = _internals;


/***/ }),

/***/ 4174:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

//CONTRACT you can’t use anything from hooks
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.flatmap = exports.validate = void 0;
const deps_js_1 = __nccwpck_require__(5356);
const { isPlainObject, isArray } = deps_js_1.is_what;
function validate_str(input) {
    if (typeof input == 'boolean')
        return input ? 'true' : 'false';
    if (typeof input == 'number')
        return input.toString();
    if (typeof input != 'string')
        throw new Error(`not-string: ${input}`);
    return input;
}
function validate_plain_obj(input) {
    if (!isPlainObject(input))
        throw new Error(`not-plain-obj: ${JSON.stringify(input)}`);
    return input;
}
function validate_arr(input) {
    if (!isArray(input))
        throw new Error(`not-array: ${JSON.stringify(input)}`);
    return input;
}
const validate = {
    str: validate_str,
    obj: validate_plain_obj,
    arr: validate_arr
};
exports.validate = validate;
Set.prototype.insert = function (t) {
    if (this.has(t)) {
        return { inserted: false };
    }
    else {
        this.add(t);
        return { inserted: true };
    }
};
Array.prototype.compact = function (body, opts) {
    const rv = [];
    for (const e of this) {
        try {
            const f = body ? body(e) : e;
            if (f)
                rv.push(f);
        }
        catch (err) {
            if (opts === undefined || opts.rescue === false)
                throw err;
        }
    }
    return rv;
};
function flatmap(t, body, opts) {
    try {
        if (t instanceof Promise) {
            const foo = t.then(t => {
                if (!t)
                    return;
                const s = body(t);
                if (!s)
                    return;
                const bar = s.then(body => body || undefined);
                if (opts?.rescue) {
                    return bar.catch(() => { return undefined; });
                }
                else {
                    return bar;
                }
            });
            return foo;
        }
        else {
            if (t)
                return body(t) || undefined;
        }
    }
    catch (err) {
        if (!opts?.rescue)
            throw err;
    }
}
exports.flatmap = flatmap;
String.prototype.chuzzle = function () {
    return this.trim() || undefined;
};
Number.prototype.chuzzle = function () {
    return Number.isNaN(this) ? undefined : this;
};


/***/ }),

/***/ 7555:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.str = exports.compare = exports.parse = void 0;
const semver = __importStar(__nccwpck_require__(8689));
/// allows inputs `nodejs.org@16` when `semver.parse` would reject
function parse(input) {
    const match = input.match(/^(.+?)([\^=~<>@].+)?$/);
    if (!match)
        throw new Error(`invalid pkgspec: ${input}`);
    if (!match[2])
        match[2] = "*";
    const project = match[1];
    const constraint = new semver.Range(match[2]);
    return { project, constraint };
}
exports.parse = parse;
function compare(a, b) {
    return a.project === b.project
        ? a.version.compare(b.version)
        : a.project.localeCompare(b.project);
}
exports.compare = compare;
function str(pkg) {
    if (!("constraint" in pkg)) {
        return `${pkg.project}=${pkg.version}`;
    }
    else if (pkg.constraint.set === "*") {
        return pkg.project;
    }
    else {
        return `${pkg.project}${pkg.constraint}`;
    }
}
exports.str = str;


/***/ }),

/***/ 8689:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.regex = exports.intersect = exports.compare = exports.Range = exports.isValid = exports.parse = void 0;
//HEY YOU! DO NOT CHANGE THIS TO USE deps.ts since it breaks pkgx/gui
const is_what_1 = __nccwpck_require__(317);
/**
 * we have our own implementation because open source is full of weird
 * but *almost* valid semver schemes, eg:
   * openssl 1.1.1q
   * ghc 5.64.3.2
 * it also allows us to implement semver_intersection without hating our lives
 */
class SemVer {
    constructor(input) {
        Object.defineProperty(this, "components", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "major", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "minor", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "patch", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        //FIXME parse these
        Object.defineProperty(this, "prerelease", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
        Object.defineProperty(this, "build", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
        Object.defineProperty(this, "raw", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "pretty", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        if (typeof input == 'string') {
            const vprefix = input.startsWith('v');
            const raw = vprefix ? input.slice(1) : input;
            const parts = raw.split('.');
            let pretty_is_raw = false;
            this.components = parts.flatMap((x, index) => {
                const match = x.match(/^(\d+)([a-z])$/);
                if (match) {
                    if (index != parts.length - 1)
                        throw new Error(`invalid version: ${input}`);
                    const n = parseInt(match[1]);
                    if (isNaN(n))
                        throw new Error(`invalid version: ${input}`);
                    pretty_is_raw = true;
                    return [n, char_to_num(match[2])];
                }
                else if (/^\d+$/.test(x)) {
                    const n = parseInt(x); // parseInt will parse eg. `5-start` to `5`
                    if (isNaN(n))
                        throw new Error(`invalid version: ${input}`);
                    return [n];
                }
                else {
                    throw new Error(`invalid version: ${input}`);
                }
            });
            this.raw = raw;
            if (pretty_is_raw)
                this.pretty = raw;
        }
        else if (input instanceof Range || input instanceof SemVer) {
            const v = input instanceof Range ? input.single() : input;
            if (!v)
                throw new Error(`range represents more than a single version: ${input}`);
            this.components = v.components;
            this.raw = v.raw;
            this.pretty = v.pretty;
        }
        else {
            this.components = [...input];
            this.raw = input.join('.');
        }
        this.major = this.components[0];
        this.minor = this.components[1] ?? 0;
        this.patch = this.components[2] ?? 0;
        function char_to_num(c) {
            return c.charCodeAt(0) - 'a'.charCodeAt(0) + 1;
        }
    }
    toString() {
        return this.pretty ??
            (this.components.length <= 3
                ? `${this.major}.${this.minor}.${this.patch}`
                : this.components.join('.'));
    }
    eq(that) {
        return this.compare(that) == 0;
    }
    neq(that) {
        return this.compare(that) != 0;
    }
    gt(that) {
        return this.compare(that) > 0;
    }
    gte(that) {
        return this.compare(that) >= 0;
    }
    lt(that) {
        return this.compare(that) < 0;
    }
    lte(that) {
        return this.compare(that) <= 0;
    }
    compare(that) {
        return _compare(this, that);
    }
    [Symbol.for("Deno.customInspect")]() {
        return this.toString();
    }
}
exports["default"] = SemVer;
/// the same as the constructor but swallows the error returning undefined instead
/// also slightly more tolerant parsing
function parse(input) {
    try {
        return new SemVer(input);
    }
    catch {
        return undefined;
    }
}
exports.parse = parse;
/// determines if the input is in fact a valid semantic version
function isValid(input) {
    return parse(input) !== undefined;
}
exports.isValid = isValid;
/// we don’t support as much as node-semver but we refuse to do so because it is badness
class Range {
    constructor(input) {
        // contract [0, 1] where 0 != 1 and 0 < 1
        Object.defineProperty(this, "set", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        if (input === "*") {
            this.set = '*';
        }
        else if (!(0, is_what_1.isString)(input)) {
            this.set = input;
        }
        else {
            input = input.trim();
            const err = () => new Error(`invalid semver range: ${input}`);
            this.set = input.split(/(?:,|\s*\|\|\s*)/).map(input => {
                let match = input.match(/^>=((\d+\.)*\d+)\s*(<((\d+\.)*\d+))?$/);
                if (match) {
                    const v1 = new SemVer(match[1]);
                    const v2 = match[3] ? new SemVer(match[4]) : new SemVer([Infinity, Infinity, Infinity]);
                    return [v1, v2];
                }
                else if ((match = input.match(/^([~=<^@])(.+)$/))) {
                    let v1, v2;
                    switch (match[1]) {
                        // deno-lint-ignore no-case-declarations
                        case "^":
                            v1 = new SemVer(match[2]);
                            const parts = [];
                            for (let i = 0; i < v1.components.length; i++) {
                                if (v1.components[i] === 0 && i < v1.components.length - 1) {
                                    parts.push(0);
                                }
                                else {
                                    parts.push(v1.components[i] + 1);
                                    break;
                                }
                            }
                            v2 = new SemVer(parts);
                            return [v1, v2];
                        case "~":
                            {
                                v1 = new SemVer(match[2]);
                                if (v1.components.length == 1) {
                                    // yep this is the official policy
                                    v2 = new SemVer([v1.major + 1]);
                                }
                                else {
                                    v2 = new SemVer([v1.major, v1.minor + 1]);
                                }
                            }
                            return [v1, v2];
                        case "<":
                            v1 = new SemVer([0]);
                            v2 = new SemVer(match[2]);
                            return [v1, v2];
                        case "=":
                            return new SemVer(match[2]);
                        case "@": {
                            // @ is not a valid semver operator, but people expect it to work like so:
                            // @5 => latest 5.x (ie ^5)
                            // @5.1 => latest 5.1.x (ie. ~5.1)
                            // @5.1.0 => latest 5.1.0 (usually 5.1.0 since most stuff hasn't got more digits)
                            const parts = match[2].split(".").map(x => parseInt(x));
                            v1 = new SemVer(parts);
                            const last = parts.pop();
                            v2 = new SemVer([...parts, last + 1]);
                            return [v1, v2];
                        }
                    }
                }
                throw err();
            });
            /// I think this is an impossible state but let’s be sure
            if (this.set.length == 0)
                throw err();
            for (const i of this.set) {
                if ((0, is_what_1.isArray)(i) && !i[0].lt(i[1]))
                    throw err();
            }
        }
    }
    toString() {
        if (this.set === '*') {
            return '*';
        }
        else {
            return this.set.map(v => {
                if (!(0, is_what_1.isArray)(v))
                    return `=${v.toString()}`;
                const [v1, v2] = v;
                if (v2.major == v1.major + 1 && v2.minor == 0 && v2.patch == 0) {
                    const v = chomp(v1);
                    if (v1.major == 0) {
                        if (v1.components.length == 1) {
                            return `^0`;
                        }
                        else {
                            return `>=${v}<1`;
                        }
                    }
                    else {
                        return `^${v}`;
                    }
                }
                else if (v2.major == v1.major && v2.minor == v1.minor + 1 && v2.patch == 0) {
                    const v = chomp(v1);
                    return `~${v}`;
                }
                else if (v2.major == Infinity) {
                    const v = chomp(v1);
                    return `>=${v}`;
                }
                else if (at(v1, v2)) {
                    return `@${v1}`;
                }
                else {
                    return `>=${chomp(v1)}<${chomp(v2)}`;
                }
            }).join(",");
        }
        function at(v1, { components: cc2 }) {
            const cc1 = [...v1.components];
            if (cc1.length > cc2.length) {
                return false;
            }
            // it's possible the components were short due to 0-truncation
            // add them back so our algo works
            while (cc1.length < cc2.length) {
                cc1.push(0);
            }
            if (last(cc1) != last(cc2) - 1) {
                return false;
            }
            for (let i = 0; i < (cc1.length - 1); i++) {
                if (cc1[i] != cc2[i])
                    return false;
            }
            return true;
        }
        function last(arr) {
            return arr[arr.length - 1];
        }
    }
    // eq(that: Range): boolean {
    //   if (this.set.length !== that.set.length) return false
    //   for (let i = 0; i < this.set.length; i++) {
    //     const [a,b] = [this.set[i], that.set[i]]
    //     if (typeof a !== 'string' && typeof b !== 'string') {
    //       if (a[0].neq(b[0])) return false
    //       if (a[1].neq(b[1])) return false
    //     } else if (a != b) {
    //       return false
    //     }
    //   }
    //   return true
    // }
    /// tolerant to stuff in the wild that hasn’t semver specifiers
    static parse(input) {
        if (!input)
            return;
        input = input.toString();
        try {
            return new Range(input);
        }
        catch {
            if (!/^(\d+\.)*\d+$/.test(input))
                return;
            // AFAICT this is what people expect
            // verified via https://jubianchi.github.io/semver-check/
            return new Range(`@${input}`);
        }
    }
    satisfies(version) {
        if (this.set === '*') {
            return true;
        }
        else {
            return this.set.some(v => {
                if ((0, is_what_1.isArray)(v)) {
                    const [v1, v2] = v;
                    return version.compare(v1) >= 0 && version.compare(v2) < 0;
                }
                else {
                    return version.eq(v);
                }
            });
        }
    }
    max(versions) {
        return versions.filter(x => this.satisfies(x)).sort((a, b) => a.compare(b)).pop();
    }
    single() {
        if (this.set === '*')
            return;
        if (this.set.length > 1)
            return;
        return (0, is_what_1.isArray)(this.set[0]) ? undefined : this.set[0];
    }
    [Symbol.for("Deno.customInspect")]() {
        return this.toString();
    }
}
exports.Range = Range;
function zip(a, b) {
    const N = Math.max(a.length, b.length);
    const rv = [];
    for (let i = 0; i < N; ++i) {
        rv.push([a[i], b[i]]);
    }
    return rv;
}
function _compare(a, b) {
    for (const [c, d] of zip(cmpcomponents(a), cmpcomponents(b))) {
        if (c != d)
            return (c ?? 0) - (d ?? 0);
    }
    return 0;
    /// we sort calver before semver, mainly because we label pre-releases with calver
    /// we worry that one day we will severely regret this but… it’s what we do for now
    function cmpcomponents(v) {
        if (v.major > 1996 && v.major != Infinity) {
            return [0, 0, 0, ...v.components];
        }
        else {
            return v.components;
        }
    }
}
exports.compare = _compare;
function intersect(a, b) {
    if (b.set === '*')
        return a;
    if (a.set === '*')
        return b;
    // calculate the intersection between two semver.Ranges
    const set = [];
    for (const aa of a.set) {
        for (const bb of b.set) {
            if (!(0, is_what_1.isArray)(aa) && !(0, is_what_1.isArray)(bb)) {
                if (aa.eq(bb))
                    set.push(aa);
            }
            else if (!(0, is_what_1.isArray)(aa)) {
                const bbb = bb;
                if (aa.compare(bbb[0]) >= 0 && aa.lt(bbb[1]))
                    set.push(aa);
            }
            else if (!(0, is_what_1.isArray)(bb)) {
                const aaa = aa;
                if (bb.compare(aaa[0]) >= 0 && bb.lt(aaa[1]))
                    set.push(bb);
            }
            else {
                const a1 = aa[0];
                const a2 = aa[1];
                const b1 = bb[0];
                const b2 = bb[1];
                if (a1.compare(b2) >= 0 || b1.compare(a2) >= 0) {
                    continue;
                }
                set.push([a1.compare(b1) > 0 ? a1 : b1, a2.compare(b2) < 0 ? a2 : b2]);
            }
        }
    }
    if (set.length <= 0)
        throw new Error(`cannot intersect: ${a} && ${b}`);
    return new Range(set);
}
exports.intersect = intersect;
//FIXME yes yes this is not sufficient
exports.regex = /\d+\.\d+\.\d+/;
function chomp(v) {
    return v.toString().replace(/(\.0)+$/g, '') || '0';
}


/***/ }),

/***/ 317:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


function getType(payload) {
  return Object.prototype.toString.call(payload).slice(8, -1);
}
function isUndefined(payload) {
  return getType(payload) === "Undefined";
}
function isNull(payload) {
  return getType(payload) === "Null";
}
function isPlainObject(payload) {
  if (getType(payload) !== "Object")
    return false;
  const prototype = Object.getPrototypeOf(payload);
  return !!prototype && prototype.constructor === Object && prototype === Object.prototype;
}
function isObject(payload) {
  return isPlainObject(payload);
}
function isEmptyObject(payload) {
  return isPlainObject(payload) && Object.keys(payload).length === 0;
}
function isFullObject(payload) {
  return isPlainObject(payload) && Object.keys(payload).length > 0;
}
function isAnyObject(payload) {
  return getType(payload) === "Object";
}
function isObjectLike(payload) {
  return isAnyObject(payload);
}
function isFunction(payload) {
  return typeof payload === "function";
}
function isArray(payload) {
  return getType(payload) === "Array";
}
function isFullArray(payload) {
  return isArray(payload) && payload.length > 0;
}
function isEmptyArray(payload) {
  return isArray(payload) && payload.length === 0;
}
function isString(payload) {
  return getType(payload) === "String";
}
function isFullString(payload) {
  return isString(payload) && payload !== "";
}
function isEmptyString(payload) {
  return payload === "";
}
function isNumber(payload) {
  return getType(payload) === "Number" && !isNaN(payload);
}
function isPositiveNumber(payload) {
  return isNumber(payload) && payload > 0;
}
function isNegativeNumber(payload) {
  return isNumber(payload) && payload < 0;
}
function isBoolean(payload) {
  return getType(payload) === "Boolean";
}
function isRegExp(payload) {
  return getType(payload) === "RegExp";
}
function isMap(payload) {
  return getType(payload) === "Map";
}
function isWeakMap(payload) {
  return getType(payload) === "WeakMap";
}
function isSet(payload) {
  return getType(payload) === "Set";
}
function isWeakSet(payload) {
  return getType(payload) === "WeakSet";
}
function isSymbol(payload) {
  return getType(payload) === "Symbol";
}
function isDate(payload) {
  return getType(payload) === "Date" && !isNaN(payload);
}
function isBlob(payload) {
  return getType(payload) === "Blob";
}
function isFile(payload) {
  return getType(payload) === "File";
}
function isPromise(payload) {
  return getType(payload) === "Promise";
}
function isError(payload) {
  return getType(payload) === "Error";
}
function isNaNValue(payload) {
  return getType(payload) === "Number" && isNaN(payload);
}
function isPrimitive(payload) {
  return isBoolean(payload) || isNull(payload) || isUndefined(payload) || isNumber(payload) || isString(payload) || isSymbol(payload);
}
const isNullOrUndefined = isOneOf(isNull, isUndefined);
function isOneOf(a, b, c, d, e) {
  return (value) => a(value) || b(value) || !!c && c(value) || !!d && d(value) || !!e && e(value);
}
function isType(payload, type) {
  if (!(type instanceof Function)) {
    throw new TypeError("Type must be a function");
  }
  if (!Object.prototype.hasOwnProperty.call(type, "prototype")) {
    throw new TypeError("Type is not a class");
  }
  const name = type.name;
  return getType(payload) === name || Boolean(payload && payload.constructor === type);
}
function isInstanceOf(value, classOrClassName) {
  if (typeof classOrClassName === "function") {
    for (let p = value; p; p = Object.getPrototypeOf(p)) {
      if (isType(p, classOrClassName)) {
        return true;
      }
    }
    return false;
  } else {
    for (let p = value; p; p = Object.getPrototypeOf(p)) {
      if (getType(p) === classOrClassName) {
        return true;
      }
    }
    return false;
  }
}

exports.getType = getType;
exports.isAnyObject = isAnyObject;
exports.isArray = isArray;
exports.isBlob = isBlob;
exports.isBoolean = isBoolean;
exports.isDate = isDate;
exports.isEmptyArray = isEmptyArray;
exports.isEmptyObject = isEmptyObject;
exports.isEmptyString = isEmptyString;
exports.isError = isError;
exports.isFile = isFile;
exports.isFullArray = isFullArray;
exports.isFullObject = isFullObject;
exports.isFullString = isFullString;
exports.isFunction = isFunction;
exports.isInstanceOf = isInstanceOf;
exports.isMap = isMap;
exports.isNaNValue = isNaNValue;
exports.isNegativeNumber = isNegativeNumber;
exports.isNull = isNull;
exports.isNullOrUndefined = isNullOrUndefined;
exports.isNumber = isNumber;
exports.isObject = isObject;
exports.isObjectLike = isObjectLike;
exports.isOneOf = isOneOf;
exports.isPlainObject = isPlainObject;
exports.isPositiveNumber = isPositiveNumber;
exports.isPrimitive = isPrimitive;
exports.isPromise = isPromise;
exports.isRegExp = isRegExp;
exports.isSet = isSet;
exports.isString = isString;
exports.isSymbol = isSymbol;
exports.isType = isType;
exports.isUndefined = isUndefined;
exports.isWeakMap = isWeakMap;
exports.isWeakSet = isWeakSet;


/***/ }),

/***/ 5324:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"koffi","version":"2.4.2","stable":"2.4.2","description":"Fast and simple C FFI (foreign function interface) for Node.js","keywords":["foreign","function","interface","ffi","binding","c","napi"],"repository":{"type":"git","url":"https://github.com/Koromix/rygel.git"},"homepage":"https://koffi.dev/","author":"Niels Martignène <niels.martignene@protonmail.com>","main":"src/index.js","types":"src/index.d.ts","scripts":{"install":"node src/cnoke/cnoke.js --prebuild -d src/koffi"},"license":"MIT","cnoke":{"napi":8,"require":"./src/index.js","output":"build/{{version}}/koffi_{{platform}}_{{arch}}"}}');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __nccwpck_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			__webpack_modules__[moduleId].call(module.exports, module, module.exports, __nccwpck_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete __webpack_module_cache__[moduleId];
/******/ 		}
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat */
/******/ 	
/******/ 	if (typeof __nccwpck_require__ !== 'undefined') __nccwpck_require__.ab = __dirname + "/";
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __nccwpck_require__(633);
/******/ 	module.exports = __webpack_exports__;
/******/ 	
/******/ })()
;